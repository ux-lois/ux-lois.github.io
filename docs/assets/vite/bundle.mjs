var nf = Object.defineProperty;
var rf = (t, e, n) => e in t ? nf(t, e, { enumerable: !0, configurable: !0, writable: !0, value: n }) : t[e] = n;
var Se = (t, e, n) => (rf(t, typeof e != "symbol" ? e + "" : e, n), n);
var af = { value: () => {
} };
function Xo() {
  for (var t = 0, e = arguments.length, n = {}, r; t < e; ++t) {
    if (!(r = arguments[t] + "") || r in n || /[\s.]/.test(r))
      throw new Error("illegal type: " + r);
    n[r] = [];
  }
  return new er(n);
}
function er(t) {
  this._ = t;
}
function of(t, e) {
  return t.trim().split(/^|\s+/).map(function(n) {
    var r = "", i = n.indexOf(".");
    if (i >= 0 && (r = n.slice(i + 1), n = n.slice(0, i)), n && !e.hasOwnProperty(n))
      throw new Error("unknown type: " + n);
    return { type: n, name: r };
  });
}
er.prototype = Xo.prototype = {
  constructor: er,
  on: function(t, e) {
    var n = this._, r = of(t + "", n), i, a = -1, o = r.length;
    if (arguments.length < 2) {
      for (; ++a < o; )
        if ((i = (t = r[a]).type) && (i = sf(n[i], t.name)))
          return i;
      return;
    }
    if (e != null && typeof e != "function")
      throw new Error("invalid callback: " + e);
    for (; ++a < o; )
      if (i = (t = r[a]).type)
        n[i] = Ma(n[i], t.name, e);
      else if (e == null)
        for (i in n)
          n[i] = Ma(n[i], t.name, null);
    return this;
  },
  copy: function() {
    var t = {}, e = this._;
    for (var n in e)
      t[n] = e[n].slice();
    return new er(t);
  },
  call: function(t, e) {
    if ((i = arguments.length - 2) > 0)
      for (var n = new Array(i), r = 0, i, a; r < i; ++r)
        n[r] = arguments[r + 2];
    if (!this._.hasOwnProperty(t))
      throw new Error("unknown type: " + t);
    for (a = this._[t], r = 0, i = a.length; r < i; ++r)
      a[r].value.apply(e, n);
  },
  apply: function(t, e, n) {
    if (!this._.hasOwnProperty(t))
      throw new Error("unknown type: " + t);
    for (var r = this._[t], i = 0, a = r.length; i < a; ++i)
      r[i].value.apply(e, n);
  }
};
function sf(t, e) {
  for (var n = 0, r = t.length, i; n < r; ++n)
    if ((i = t[n]).name === e)
      return i.value;
}
function Ma(t, e, n) {
  for (var r = 0, i = t.length; r < i; ++r)
    if (t[r].name === e) {
      t[r] = af, t = t.slice(0, r).concat(t.slice(r + 1));
      break;
    }
  return n != null && t.push({ name: e, value: n }), t;
}
var si = "http://www.w3.org/1999/xhtml";
const Ra = {
  svg: "http://www.w3.org/2000/svg",
  xhtml: si,
  xlink: "http://www.w3.org/1999/xlink",
  xml: "http://www.w3.org/XML/1998/namespace",
  xmlns: "http://www.w3.org/2000/xmlns/"
};
function Cr(t) {
  var e = t += "", n = e.indexOf(":");
  return n >= 0 && (e = t.slice(0, n)) !== "xmlns" && (t = t.slice(n + 1)), Ra.hasOwnProperty(e) ? { space: Ra[e], local: t } : t;
}
function lf(t) {
  return function() {
    var e = this.ownerDocument, n = this.namespaceURI;
    return n === si && e.documentElement.namespaceURI === si ? e.createElement(t) : e.createElementNS(n, t);
  };
}
function ff(t) {
  return function() {
    return this.ownerDocument.createElementNS(t.space, t.local);
  };
}
function Jo(t) {
  var e = Cr(t);
  return (e.local ? ff : lf)(e);
}
function cf() {
}
function Hi(t) {
  return t == null ? cf : function() {
    return this.querySelector(t);
  };
}
function uf(t) {
  typeof t != "function" && (t = Hi(t));
  for (var e = this._groups, n = e.length, r = new Array(n), i = 0; i < n; ++i)
    for (var a = e[i], o = a.length, s = r[i] = new Array(o), l, f, c = 0; c < o; ++c)
      (l = a[c]) && (f = t.call(l, l.__data__, c, a)) && ("__data__" in l && (f.__data__ = l.__data__), s[c] = f);
  return new gt(r, this._parents);
}
function df(t) {
  return t == null ? [] : Array.isArray(t) ? t : Array.from(t);
}
function hf() {
  return [];
}
function Zo(t) {
  return t == null ? hf : function() {
    return this.querySelectorAll(t);
  };
}
function mf(t) {
  return function() {
    return df(t.apply(this, arguments));
  };
}
function pf(t) {
  typeof t == "function" ? t = mf(t) : t = Zo(t);
  for (var e = this._groups, n = e.length, r = [], i = [], a = 0; a < n; ++a)
    for (var o = e[a], s = o.length, l, f = 0; f < s; ++f)
      (l = o[f]) && (r.push(t.call(l, l.__data__, f, o)), i.push(l));
  return new gt(r, i);
}
function Qo(t) {
  return function() {
    return this.matches(t);
  };
}
function ts(t) {
  return function(e) {
    return e.matches(t);
  };
}
var gf = Array.prototype.find;
function vf(t) {
  return function() {
    return gf.call(this.children, t);
  };
}
function yf() {
  return this.firstElementChild;
}
function bf(t) {
  return this.select(t == null ? yf : vf(typeof t == "function" ? t : ts(t)));
}
var xf = Array.prototype.filter;
function wf() {
  return Array.from(this.children);
}
function _f(t) {
  return function() {
    return xf.call(this.children, t);
  };
}
function kf(t) {
  return this.selectAll(t == null ? wf : _f(typeof t == "function" ? t : ts(t)));
}
function Af(t) {
  typeof t != "function" && (t = Qo(t));
  for (var e = this._groups, n = e.length, r = new Array(n), i = 0; i < n; ++i)
    for (var a = e[i], o = a.length, s = r[i] = [], l, f = 0; f < o; ++f)
      (l = a[f]) && t.call(l, l.__data__, f, a) && s.push(l);
  return new gt(r, this._parents);
}
function es(t) {
  return new Array(t.length);
}
function Ef() {
  return new gt(this._enter || this._groups.map(es), this._parents);
}
function ur(t, e) {
  this.ownerDocument = t.ownerDocument, this.namespaceURI = t.namespaceURI, this._next = null, this._parent = t, this.__data__ = e;
}
ur.prototype = {
  constructor: ur,
  appendChild: function(t) {
    return this._parent.insertBefore(t, this._next);
  },
  insertBefore: function(t, e) {
    return this._parent.insertBefore(t, e);
  },
  querySelector: function(t) {
    return this._parent.querySelector(t);
  },
  querySelectorAll: function(t) {
    return this._parent.querySelectorAll(t);
  }
};
function Cf(t) {
  return function() {
    return t;
  };
}
function Sf(t, e, n, r, i, a) {
  for (var o = 0, s, l = e.length, f = a.length; o < f; ++o)
    (s = e[o]) ? (s.__data__ = a[o], r[o] = s) : n[o] = new ur(t, a[o]);
  for (; o < l; ++o)
    (s = e[o]) && (i[o] = s);
}
function Of(t, e, n, r, i, a, o) {
  var s, l, f = /* @__PURE__ */ new Map(), c = e.length, d = a.length, m = new Array(c), g;
  for (s = 0; s < c; ++s)
    (l = e[s]) && (m[s] = g = o.call(l, l.__data__, s, e) + "", f.has(g) ? i[s] = l : f.set(g, l));
  for (s = 0; s < d; ++s)
    g = o.call(t, a[s], s, a) + "", (l = f.get(g)) ? (r[s] = l, l.__data__ = a[s], f.delete(g)) : n[s] = new ur(t, a[s]);
  for (s = 0; s < c; ++s)
    (l = e[s]) && f.get(m[s]) === l && (i[s] = l);
}
function Pf(t) {
  return t.__data__;
}
function Tf(t, e) {
  if (!arguments.length)
    return Array.from(this, Pf);
  var n = e ? Of : Sf, r = this._parents, i = this._groups;
  typeof t != "function" && (t = Cf(t));
  for (var a = i.length, o = new Array(a), s = new Array(a), l = new Array(a), f = 0; f < a; ++f) {
    var c = r[f], d = i[f], m = d.length, g = Nf(t.call(c, c && c.__data__, f, r)), P = g.length, O = s[f] = new Array(P), D = o[f] = new Array(P), _ = l[f] = new Array(m);
    n(c, d, O, D, _, g, e);
    for (var C = 0, E = 0, F, B; C < P; ++C)
      if (F = O[C]) {
        for (C >= E && (E = C + 1); !(B = D[E]) && ++E < P; )
          ;
        F._next = B || null;
      }
  }
  return o = new gt(o, r), o._enter = s, o._exit = l, o;
}
function Nf(t) {
  return typeof t == "object" && "length" in t ? t : Array.from(t);
}
function If() {
  return new gt(this._exit || this._groups.map(es), this._parents);
}
function Mf(t, e, n) {
  var r = this.enter(), i = this, a = this.exit();
  return typeof t == "function" ? (r = t(r), r && (r = r.selection())) : r = r.append(t + ""), e != null && (i = e(i), i && (i = i.selection())), n == null ? a.remove() : n(a), r && i ? r.merge(i).order() : i;
}
function Rf(t) {
  for (var e = t.selection ? t.selection() : t, n = this._groups, r = e._groups, i = n.length, a = r.length, o = Math.min(i, a), s = new Array(i), l = 0; l < o; ++l)
    for (var f = n[l], c = r[l], d = f.length, m = s[l] = new Array(d), g, P = 0; P < d; ++P)
      (g = f[P] || c[P]) && (m[P] = g);
  for (; l < i; ++l)
    s[l] = n[l];
  return new gt(s, this._parents);
}
function Ff() {
  for (var t = this._groups, e = -1, n = t.length; ++e < n; )
    for (var r = t[e], i = r.length - 1, a = r[i], o; --i >= 0; )
      (o = r[i]) && (a && o.compareDocumentPosition(a) ^ 4 && a.parentNode.insertBefore(o, a), a = o);
  return this;
}
function $f(t) {
  t || (t = Lf);
  function e(d, m) {
    return d && m ? t(d.__data__, m.__data__) : !d - !m;
  }
  for (var n = this._groups, r = n.length, i = new Array(r), a = 0; a < r; ++a) {
    for (var o = n[a], s = o.length, l = i[a] = new Array(s), f, c = 0; c < s; ++c)
      (f = o[c]) && (l[c] = f);
    l.sort(e);
  }
  return new gt(i, this._parents).order();
}
function Lf(t, e) {
  return t < e ? -1 : t > e ? 1 : t >= e ? 0 : NaN;
}
function Df() {
  var t = arguments[0];
  return arguments[0] = this, t.apply(null, arguments), this;
}
function zf() {
  return Array.from(this);
}
function Hf() {
  for (var t = this._groups, e = 0, n = t.length; e < n; ++e)
    for (var r = t[e], i = 0, a = r.length; i < a; ++i) {
      var o = r[i];
      if (o)
        return o;
    }
  return null;
}
function jf() {
  let t = 0;
  for (const e of this)
    ++t;
  return t;
}
function Bf() {
  return !this.node();
}
function Uf(t) {
  for (var e = this._groups, n = 0, r = e.length; n < r; ++n)
    for (var i = e[n], a = 0, o = i.length, s; a < o; ++a)
      (s = i[a]) && t.call(s, s.__data__, a, i);
  return this;
}
function Yf(t) {
  return function() {
    this.removeAttribute(t);
  };
}
function Gf(t) {
  return function() {
    this.removeAttributeNS(t.space, t.local);
  };
}
function Wf(t, e) {
  return function() {
    this.setAttribute(t, e);
  };
}
function Vf(t, e) {
  return function() {
    this.setAttributeNS(t.space, t.local, e);
  };
}
function Kf(t, e) {
  return function() {
    var n = e.apply(this, arguments);
    n == null ? this.removeAttribute(t) : this.setAttribute(t, n);
  };
}
function qf(t, e) {
  return function() {
    var n = e.apply(this, arguments);
    n == null ? this.removeAttributeNS(t.space, t.local) : this.setAttributeNS(t.space, t.local, n);
  };
}
function Xf(t, e) {
  var n = Cr(t);
  if (arguments.length < 2) {
    var r = this.node();
    return n.local ? r.getAttributeNS(n.space, n.local) : r.getAttribute(n);
  }
  return this.each((e == null ? n.local ? Gf : Yf : typeof e == "function" ? n.local ? qf : Kf : n.local ? Vf : Wf)(n, e));
}
function ns(t) {
  return t.ownerDocument && t.ownerDocument.defaultView || t.document && t || t.defaultView;
}
function Jf(t) {
  return function() {
    this.style.removeProperty(t);
  };
}
function Zf(t, e, n) {
  return function() {
    this.style.setProperty(t, e, n);
  };
}
function Qf(t, e, n) {
  return function() {
    var r = e.apply(this, arguments);
    r == null ? this.style.removeProperty(t) : this.style.setProperty(t, r, n);
  };
}
function tc(t, e, n) {
  return arguments.length > 1 ? this.each((e == null ? Jf : typeof e == "function" ? Qf : Zf)(t, e, n ?? "")) : Le(this.node(), t);
}
function Le(t, e) {
  return t.style.getPropertyValue(e) || ns(t).getComputedStyle(t, null).getPropertyValue(e);
}
function ec(t) {
  return function() {
    delete this[t];
  };
}
function nc(t, e) {
  return function() {
    this[t] = e;
  };
}
function rc(t, e) {
  return function() {
    var n = e.apply(this, arguments);
    n == null ? delete this[t] : this[t] = n;
  };
}
function ic(t, e) {
  return arguments.length > 1 ? this.each((e == null ? ec : typeof e == "function" ? rc : nc)(t, e)) : this.node()[t];
}
function rs(t) {
  return t.trim().split(/^|\s+/);
}
function ji(t) {
  return t.classList || new is(t);
}
function is(t) {
  this._node = t, this._names = rs(t.getAttribute("class") || "");
}
is.prototype = {
  add: function(t) {
    var e = this._names.indexOf(t);
    e < 0 && (this._names.push(t), this._node.setAttribute("class", this._names.join(" ")));
  },
  remove: function(t) {
    var e = this._names.indexOf(t);
    e >= 0 && (this._names.splice(e, 1), this._node.setAttribute("class", this._names.join(" ")));
  },
  contains: function(t) {
    return this._names.indexOf(t) >= 0;
  }
};
function as(t, e) {
  for (var n = ji(t), r = -1, i = e.length; ++r < i; )
    n.add(e[r]);
}
function os(t, e) {
  for (var n = ji(t), r = -1, i = e.length; ++r < i; )
    n.remove(e[r]);
}
function ac(t) {
  return function() {
    as(this, t);
  };
}
function oc(t) {
  return function() {
    os(this, t);
  };
}
function sc(t, e) {
  return function() {
    (e.apply(this, arguments) ? as : os)(this, t);
  };
}
function lc(t, e) {
  var n = rs(t + "");
  if (arguments.length < 2) {
    for (var r = ji(this.node()), i = -1, a = n.length; ++i < a; )
      if (!r.contains(n[i]))
        return !1;
    return !0;
  }
  return this.each((typeof e == "function" ? sc : e ? ac : oc)(n, e));
}
function fc() {
  this.textContent = "";
}
function cc(t) {
  return function() {
    this.textContent = t;
  };
}
function uc(t) {
  return function() {
    var e = t.apply(this, arguments);
    this.textContent = e ?? "";
  };
}
function dc(t) {
  return arguments.length ? this.each(t == null ? fc : (typeof t == "function" ? uc : cc)(t)) : this.node().textContent;
}
function hc() {
  this.innerHTML = "";
}
function mc(t) {
  return function() {
    this.innerHTML = t;
  };
}
function pc(t) {
  return function() {
    var e = t.apply(this, arguments);
    this.innerHTML = e ?? "";
  };
}
function gc(t) {
  return arguments.length ? this.each(t == null ? hc : (typeof t == "function" ? pc : mc)(t)) : this.node().innerHTML;
}
function vc() {
  this.nextSibling && this.parentNode.appendChild(this);
}
function yc() {
  return this.each(vc);
}
function bc() {
  this.previousSibling && this.parentNode.insertBefore(this, this.parentNode.firstChild);
}
function xc() {
  return this.each(bc);
}
function wc(t) {
  var e = typeof t == "function" ? t : Jo(t);
  return this.select(function() {
    return this.appendChild(e.apply(this, arguments));
  });
}
function _c() {
  return null;
}
function kc(t, e) {
  var n = typeof t == "function" ? t : Jo(t), r = e == null ? _c : typeof e == "function" ? e : Hi(e);
  return this.select(function() {
    return this.insertBefore(n.apply(this, arguments), r.apply(this, arguments) || null);
  });
}
function Ac() {
  var t = this.parentNode;
  t && t.removeChild(this);
}
function Ec() {
  return this.each(Ac);
}
function Cc() {
  var t = this.cloneNode(!1), e = this.parentNode;
  return e ? e.insertBefore(t, this.nextSibling) : t;
}
function Sc() {
  var t = this.cloneNode(!0), e = this.parentNode;
  return e ? e.insertBefore(t, this.nextSibling) : t;
}
function Oc(t) {
  return this.select(t ? Sc : Cc);
}
function Pc(t) {
  return arguments.length ? this.property("__data__", t) : this.node().__data__;
}
function Tc(t) {
  return function(e) {
    t.call(this, e, this.__data__);
  };
}
function Nc(t) {
  return t.trim().split(/^|\s+/).map(function(e) {
    var n = "", r = e.indexOf(".");
    return r >= 0 && (n = e.slice(r + 1), e = e.slice(0, r)), { type: e, name: n };
  });
}
function Ic(t) {
  return function() {
    var e = this.__on;
    if (e) {
      for (var n = 0, r = -1, i = e.length, a; n < i; ++n)
        a = e[n], (!t.type || a.type === t.type) && a.name === t.name ? this.removeEventListener(a.type, a.listener, a.options) : e[++r] = a;
      ++r ? e.length = r : delete this.__on;
    }
  };
}
function Mc(t, e, n) {
  return function() {
    var r = this.__on, i, a = Tc(e);
    if (r) {
      for (var o = 0, s = r.length; o < s; ++o)
        if ((i = r[o]).type === t.type && i.name === t.name) {
          this.removeEventListener(i.type, i.listener, i.options), this.addEventListener(i.type, i.listener = a, i.options = n), i.value = e;
          return;
        }
    }
    this.addEventListener(t.type, a, n), i = { type: t.type, name: t.name, value: e, listener: a, options: n }, r ? r.push(i) : this.__on = [i];
  };
}
function Rc(t, e, n) {
  var r = Nc(t + ""), i, a = r.length, o;
  if (arguments.length < 2) {
    var s = this.node().__on;
    if (s) {
      for (var l = 0, f = s.length, c; l < f; ++l)
        for (i = 0, c = s[l]; i < a; ++i)
          if ((o = r[i]).type === c.type && o.name === c.name)
            return c.value;
    }
    return;
  }
  for (s = e ? Mc : Ic, i = 0; i < a; ++i)
    this.each(s(r[i], e, n));
  return this;
}
function ss(t, e, n) {
  var r = ns(t), i = r.CustomEvent;
  typeof i == "function" ? i = new i(e, n) : (i = r.document.createEvent("Event"), n ? (i.initEvent(e, n.bubbles, n.cancelable), i.detail = n.detail) : i.initEvent(e, !1, !1)), t.dispatchEvent(i);
}
function Fc(t, e) {
  return function() {
    return ss(this, t, e);
  };
}
function $c(t, e) {
  return function() {
    return ss(this, t, e.apply(this, arguments));
  };
}
function Lc(t, e) {
  return this.each((typeof e == "function" ? $c : Fc)(t, e));
}
function* Dc() {
  for (var t = this._groups, e = 0, n = t.length; e < n; ++e)
    for (var r = t[e], i = 0, a = r.length, o; i < a; ++i)
      (o = r[i]) && (yield o);
}
var ls = [null];
function gt(t, e) {
  this._groups = t, this._parents = e;
}
function Sn() {
  return new gt([[document.documentElement]], ls);
}
function zc() {
  return this;
}
gt.prototype = Sn.prototype = {
  constructor: gt,
  select: uf,
  selectAll: pf,
  selectChild: bf,
  selectChildren: kf,
  filter: Af,
  data: Tf,
  enter: Ef,
  exit: If,
  join: Mf,
  merge: Rf,
  selection: zc,
  order: Ff,
  sort: $f,
  call: Df,
  nodes: zf,
  node: Hf,
  size: jf,
  empty: Bf,
  each: Uf,
  attr: Xf,
  style: tc,
  property: ic,
  classed: lc,
  text: dc,
  html: gc,
  raise: yc,
  lower: xc,
  append: wc,
  insert: kc,
  remove: Ec,
  clone: Oc,
  datum: Pc,
  on: Rc,
  dispatch: Lc,
  [Symbol.iterator]: Dc
};
function Hc(t) {
  return typeof t == "string" ? new gt([[document.querySelector(t)]], [document.documentElement]) : new gt([[t]], ls);
}
function Bi(t, e, n) {
  t.prototype = e.prototype = n, n.constructor = t;
}
function fs(t, e) {
  var n = Object.create(t.prototype);
  for (var r in e)
    n[r] = e[r];
  return n;
}
function On() {
}
var un = 0.7, dr = 1 / un, Ne = "\\s*([+-]?\\d+)\\s*", dn = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*", Dt = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*", jc = /^#([0-9a-f]{3,8})$/, Bc = new RegExp(`^rgb\\(${Ne},${Ne},${Ne}\\)$`), Uc = new RegExp(`^rgb\\(${Dt},${Dt},${Dt}\\)$`), Yc = new RegExp(`^rgba\\(${Ne},${Ne},${Ne},${dn}\\)$`), Gc = new RegExp(`^rgba\\(${Dt},${Dt},${Dt},${dn}\\)$`), Wc = new RegExp(`^hsl\\(${dn},${Dt},${Dt}\\)$`), Vc = new RegExp(`^hsla\\(${dn},${Dt},${Dt},${dn}\\)$`), Fa = {
  aliceblue: 15792383,
  antiquewhite: 16444375,
  aqua: 65535,
  aquamarine: 8388564,
  azure: 15794175,
  beige: 16119260,
  bisque: 16770244,
  black: 0,
  blanchedalmond: 16772045,
  blue: 255,
  blueviolet: 9055202,
  brown: 10824234,
  burlywood: 14596231,
  cadetblue: 6266528,
  chartreuse: 8388352,
  chocolate: 13789470,
  coral: 16744272,
  cornflowerblue: 6591981,
  cornsilk: 16775388,
  crimson: 14423100,
  cyan: 65535,
  darkblue: 139,
  darkcyan: 35723,
  darkgoldenrod: 12092939,
  darkgray: 11119017,
  darkgreen: 25600,
  darkgrey: 11119017,
  darkkhaki: 12433259,
  darkmagenta: 9109643,
  darkolivegreen: 5597999,
  darkorange: 16747520,
  darkorchid: 10040012,
  darkred: 9109504,
  darksalmon: 15308410,
  darkseagreen: 9419919,
  darkslateblue: 4734347,
  darkslategray: 3100495,
  darkslategrey: 3100495,
  darkturquoise: 52945,
  darkviolet: 9699539,
  deeppink: 16716947,
  deepskyblue: 49151,
  dimgray: 6908265,
  dimgrey: 6908265,
  dodgerblue: 2003199,
  firebrick: 11674146,
  floralwhite: 16775920,
  forestgreen: 2263842,
  fuchsia: 16711935,
  gainsboro: 14474460,
  ghostwhite: 16316671,
  gold: 16766720,
  goldenrod: 14329120,
  gray: 8421504,
  green: 32768,
  greenyellow: 11403055,
  grey: 8421504,
  honeydew: 15794160,
  hotpink: 16738740,
  indianred: 13458524,
  indigo: 4915330,
  ivory: 16777200,
  khaki: 15787660,
  lavender: 15132410,
  lavenderblush: 16773365,
  lawngreen: 8190976,
  lemonchiffon: 16775885,
  lightblue: 11393254,
  lightcoral: 15761536,
  lightcyan: 14745599,
  lightgoldenrodyellow: 16448210,
  lightgray: 13882323,
  lightgreen: 9498256,
  lightgrey: 13882323,
  lightpink: 16758465,
  lightsalmon: 16752762,
  lightseagreen: 2142890,
  lightskyblue: 8900346,
  lightslategray: 7833753,
  lightslategrey: 7833753,
  lightsteelblue: 11584734,
  lightyellow: 16777184,
  lime: 65280,
  limegreen: 3329330,
  linen: 16445670,
  magenta: 16711935,
  maroon: 8388608,
  mediumaquamarine: 6737322,
  mediumblue: 205,
  mediumorchid: 12211667,
  mediumpurple: 9662683,
  mediumseagreen: 3978097,
  mediumslateblue: 8087790,
  mediumspringgreen: 64154,
  mediumturquoise: 4772300,
  mediumvioletred: 13047173,
  midnightblue: 1644912,
  mintcream: 16121850,
  mistyrose: 16770273,
  moccasin: 16770229,
  navajowhite: 16768685,
  navy: 128,
  oldlace: 16643558,
  olive: 8421376,
  olivedrab: 7048739,
  orange: 16753920,
  orangered: 16729344,
  orchid: 14315734,
  palegoldenrod: 15657130,
  palegreen: 10025880,
  paleturquoise: 11529966,
  palevioletred: 14381203,
  papayawhip: 16773077,
  peachpuff: 16767673,
  peru: 13468991,
  pink: 16761035,
  plum: 14524637,
  powderblue: 11591910,
  purple: 8388736,
  rebeccapurple: 6697881,
  red: 16711680,
  rosybrown: 12357519,
  royalblue: 4286945,
  saddlebrown: 9127187,
  salmon: 16416882,
  sandybrown: 16032864,
  seagreen: 3050327,
  seashell: 16774638,
  sienna: 10506797,
  silver: 12632256,
  skyblue: 8900331,
  slateblue: 6970061,
  slategray: 7372944,
  slategrey: 7372944,
  snow: 16775930,
  springgreen: 65407,
  steelblue: 4620980,
  tan: 13808780,
  teal: 32896,
  thistle: 14204888,
  tomato: 16737095,
  turquoise: 4251856,
  violet: 15631086,
  wheat: 16113331,
  white: 16777215,
  whitesmoke: 16119285,
  yellow: 16776960,
  yellowgreen: 10145074
};
Bi(On, hn, {
  copy(t) {
    return Object.assign(new this.constructor(), this, t);
  },
  displayable() {
    return this.rgb().displayable();
  },
  hex: $a,
  // Deprecated! Use color.formatHex.
  formatHex: $a,
  formatHex8: Kc,
  formatHsl: qc,
  formatRgb: La,
  toString: La
});
function $a() {
  return this.rgb().formatHex();
}
function Kc() {
  return this.rgb().formatHex8();
}
function qc() {
  return cs(this).formatHsl();
}
function La() {
  return this.rgb().formatRgb();
}
function hn(t) {
  var e, n;
  return t = (t + "").trim().toLowerCase(), (e = jc.exec(t)) ? (n = e[1].length, e = parseInt(e[1], 16), n === 6 ? Da(e) : n === 3 ? new ht(e >> 8 & 15 | e >> 4 & 240, e >> 4 & 15 | e & 240, (e & 15) << 4 | e & 15, 1) : n === 8 ? $n(e >> 24 & 255, e >> 16 & 255, e >> 8 & 255, (e & 255) / 255) : n === 4 ? $n(e >> 12 & 15 | e >> 8 & 240, e >> 8 & 15 | e >> 4 & 240, e >> 4 & 15 | e & 240, ((e & 15) << 4 | e & 15) / 255) : null) : (e = Bc.exec(t)) ? new ht(e[1], e[2], e[3], 1) : (e = Uc.exec(t)) ? new ht(e[1] * 255 / 100, e[2] * 255 / 100, e[3] * 255 / 100, 1) : (e = Yc.exec(t)) ? $n(e[1], e[2], e[3], e[4]) : (e = Gc.exec(t)) ? $n(e[1] * 255 / 100, e[2] * 255 / 100, e[3] * 255 / 100, e[4]) : (e = Wc.exec(t)) ? ja(e[1], e[2] / 100, e[3] / 100, 1) : (e = Vc.exec(t)) ? ja(e[1], e[2] / 100, e[3] / 100, e[4]) : Fa.hasOwnProperty(t) ? Da(Fa[t]) : t === "transparent" ? new ht(NaN, NaN, NaN, 0) : null;
}
function Da(t) {
  return new ht(t >> 16 & 255, t >> 8 & 255, t & 255, 1);
}
function $n(t, e, n, r) {
  return r <= 0 && (t = e = n = NaN), new ht(t, e, n, r);
}
function Xc(t) {
  return t instanceof On || (t = hn(t)), t ? (t = t.rgb(), new ht(t.r, t.g, t.b, t.opacity)) : new ht();
}
function li(t, e, n, r) {
  return arguments.length === 1 ? Xc(t) : new ht(t, e, n, r ?? 1);
}
function ht(t, e, n, r) {
  this.r = +t, this.g = +e, this.b = +n, this.opacity = +r;
}
Bi(ht, li, fs(On, {
  brighter(t) {
    return t = t == null ? dr : Math.pow(dr, t), new ht(this.r * t, this.g * t, this.b * t, this.opacity);
  },
  darker(t) {
    return t = t == null ? un : Math.pow(un, t), new ht(this.r * t, this.g * t, this.b * t, this.opacity);
  },
  rgb() {
    return this;
  },
  clamp() {
    return new ht(be(this.r), be(this.g), be(this.b), hr(this.opacity));
  },
  displayable() {
    return -0.5 <= this.r && this.r < 255.5 && -0.5 <= this.g && this.g < 255.5 && -0.5 <= this.b && this.b < 255.5 && 0 <= this.opacity && this.opacity <= 1;
  },
  hex: za,
  // Deprecated! Use color.formatHex.
  formatHex: za,
  formatHex8: Jc,
  formatRgb: Ha,
  toString: Ha
}));
function za() {
  return `#${ge(this.r)}${ge(this.g)}${ge(this.b)}`;
}
function Jc() {
  return `#${ge(this.r)}${ge(this.g)}${ge(this.b)}${ge((isNaN(this.opacity) ? 1 : this.opacity) * 255)}`;
}
function Ha() {
  const t = hr(this.opacity);
  return `${t === 1 ? "rgb(" : "rgba("}${be(this.r)}, ${be(this.g)}, ${be(this.b)}${t === 1 ? ")" : `, ${t})`}`;
}
function hr(t) {
  return isNaN(t) ? 1 : Math.max(0, Math.min(1, t));
}
function be(t) {
  return Math.max(0, Math.min(255, Math.round(t) || 0));
}
function ge(t) {
  return t = be(t), (t < 16 ? "0" : "") + t.toString(16);
}
function ja(t, e, n, r) {
  return r <= 0 ? t = e = n = NaN : n <= 0 || n >= 1 ? t = e = NaN : e <= 0 && (t = NaN), new kt(t, e, n, r);
}
function cs(t) {
  if (t instanceof kt)
    return new kt(t.h, t.s, t.l, t.opacity);
  if (t instanceof On || (t = hn(t)), !t)
    return new kt();
  if (t instanceof kt)
    return t;
  t = t.rgb();
  var e = t.r / 255, n = t.g / 255, r = t.b / 255, i = Math.min(e, n, r), a = Math.max(e, n, r), o = NaN, s = a - i, l = (a + i) / 2;
  return s ? (e === a ? o = (n - r) / s + (n < r) * 6 : n === a ? o = (r - e) / s + 2 : o = (e - n) / s + 4, s /= l < 0.5 ? a + i : 2 - a - i, o *= 60) : s = l > 0 && l < 1 ? 0 : o, new kt(o, s, l, t.opacity);
}
function Zc(t, e, n, r) {
  return arguments.length === 1 ? cs(t) : new kt(t, e, n, r ?? 1);
}
function kt(t, e, n, r) {
  this.h = +t, this.s = +e, this.l = +n, this.opacity = +r;
}
Bi(kt, Zc, fs(On, {
  brighter(t) {
    return t = t == null ? dr : Math.pow(dr, t), new kt(this.h, this.s, this.l * t, this.opacity);
  },
  darker(t) {
    return t = t == null ? un : Math.pow(un, t), new kt(this.h, this.s, this.l * t, this.opacity);
  },
  rgb() {
    var t = this.h % 360 + (this.h < 0) * 360, e = isNaN(t) || isNaN(this.s) ? 0 : this.s, n = this.l, r = n + (n < 0.5 ? n : 1 - n) * e, i = 2 * n - r;
    return new ht(
      Wr(t >= 240 ? t - 240 : t + 120, i, r),
      Wr(t, i, r),
      Wr(t < 120 ? t + 240 : t - 120, i, r),
      this.opacity
    );
  },
  clamp() {
    return new kt(Ba(this.h), Ln(this.s), Ln(this.l), hr(this.opacity));
  },
  displayable() {
    return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1;
  },
  formatHsl() {
    const t = hr(this.opacity);
    return `${t === 1 ? "hsl(" : "hsla("}${Ba(this.h)}, ${Ln(this.s) * 100}%, ${Ln(this.l) * 100}%${t === 1 ? ")" : `, ${t})`}`;
  }
}));
function Ba(t) {
  return t = (t || 0) % 360, t < 0 ? t + 360 : t;
}
function Ln(t) {
  return Math.max(0, Math.min(1, t || 0));
}
function Wr(t, e, n) {
  return (t < 60 ? e + (n - e) * t / 60 : t < 180 ? n : t < 240 ? e + (n - e) * (240 - t) / 60 : e) * 255;
}
const us = (t) => () => t;
function Qc(t, e) {
  return function(n) {
    return t + n * e;
  };
}
function tu(t, e, n) {
  return t = Math.pow(t, n), e = Math.pow(e, n) - t, n = 1 / n, function(r) {
    return Math.pow(t + r * e, n);
  };
}
function eu(t) {
  return (t = +t) == 1 ? ds : function(e, n) {
    return n - e ? tu(e, n, t) : us(isNaN(e) ? n : e);
  };
}
function ds(t, e) {
  var n = e - t;
  return n ? Qc(t, n) : us(isNaN(t) ? e : t);
}
const Ua = function t(e) {
  var n = eu(e);
  function r(i, a) {
    var o = n((i = li(i)).r, (a = li(a)).r), s = n(i.g, a.g), l = n(i.b, a.b), f = ds(i.opacity, a.opacity);
    return function(c) {
      return i.r = o(c), i.g = s(c), i.b = l(c), i.opacity = f(c), i + "";
    };
  }
  return r.gamma = t, r;
}(1);
function te(t, e) {
  return t = +t, e = +e, function(n) {
    return t * (1 - n) + e * n;
  };
}
var fi = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g, Vr = new RegExp(fi.source, "g");
function nu(t) {
  return function() {
    return t;
  };
}
function ru(t) {
  return function(e) {
    return t(e) + "";
  };
}
function iu(t, e) {
  var n = fi.lastIndex = Vr.lastIndex = 0, r, i, a, o = -1, s = [], l = [];
  for (t = t + "", e = e + ""; (r = fi.exec(t)) && (i = Vr.exec(e)); )
    (a = i.index) > n && (a = e.slice(n, a), s[o] ? s[o] += a : s[++o] = a), (r = r[0]) === (i = i[0]) ? s[o] ? s[o] += i : s[++o] = i : (s[++o] = null, l.push({ i: o, x: te(r, i) })), n = Vr.lastIndex;
  return n < e.length && (a = e.slice(n), s[o] ? s[o] += a : s[++o] = a), s.length < 2 ? l[0] ? ru(l[0].x) : nu(e) : (e = l.length, function(f) {
    for (var c = 0, d; c < e; ++c)
      s[(d = l[c]).i] = d.x(f);
    return s.join("");
  });
}
var Ya = 180 / Math.PI, ci = {
  translateX: 0,
  translateY: 0,
  rotate: 0,
  skewX: 0,
  scaleX: 1,
  scaleY: 1
};
function hs(t, e, n, r, i, a) {
  var o, s, l;
  return (o = Math.sqrt(t * t + e * e)) && (t /= o, e /= o), (l = t * n + e * r) && (n -= t * l, r -= e * l), (s = Math.sqrt(n * n + r * r)) && (n /= s, r /= s, l /= s), t * r < e * n && (t = -t, e = -e, l = -l, o = -o), {
    translateX: i,
    translateY: a,
    rotate: Math.atan2(e, t) * Ya,
    skewX: Math.atan(l) * Ya,
    scaleX: o,
    scaleY: s
  };
}
var Dn;
function au(t) {
  const e = new (typeof DOMMatrix == "function" ? DOMMatrix : WebKitCSSMatrix)(t + "");
  return e.isIdentity ? ci : hs(e.a, e.b, e.c, e.d, e.e, e.f);
}
function ou(t) {
  return t == null || (Dn || (Dn = document.createElementNS("http://www.w3.org/2000/svg", "g")), Dn.setAttribute("transform", t), !(t = Dn.transform.baseVal.consolidate())) ? ci : (t = t.matrix, hs(t.a, t.b, t.c, t.d, t.e, t.f));
}
function ms(t, e, n, r) {
  function i(f) {
    return f.length ? f.pop() + " " : "";
  }
  function a(f, c, d, m, g, P) {
    if (f !== d || c !== m) {
      var O = g.push("translate(", null, e, null, n);
      P.push({ i: O - 4, x: te(f, d) }, { i: O - 2, x: te(c, m) });
    } else
      (d || m) && g.push("translate(" + d + e + m + n);
  }
  function o(f, c, d, m) {
    f !== c ? (f - c > 180 ? c += 360 : c - f > 180 && (f += 360), m.push({ i: d.push(i(d) + "rotate(", null, r) - 2, x: te(f, c) })) : c && d.push(i(d) + "rotate(" + c + r);
  }
  function s(f, c, d, m) {
    f !== c ? m.push({ i: d.push(i(d) + "skewX(", null, r) - 2, x: te(f, c) }) : c && d.push(i(d) + "skewX(" + c + r);
  }
  function l(f, c, d, m, g, P) {
    if (f !== d || c !== m) {
      var O = g.push(i(g) + "scale(", null, ",", null, ")");
      P.push({ i: O - 4, x: te(f, d) }, { i: O - 2, x: te(c, m) });
    } else
      (d !== 1 || m !== 1) && g.push(i(g) + "scale(" + d + "," + m + ")");
  }
  return function(f, c) {
    var d = [], m = [];
    return f = t(f), c = t(c), a(f.translateX, f.translateY, c.translateX, c.translateY, d, m), o(f.rotate, c.rotate, d, m), s(f.skewX, c.skewX, d, m), l(f.scaleX, f.scaleY, c.scaleX, c.scaleY, d, m), f = c = null, function(g) {
      for (var P = -1, O = m.length, D; ++P < O; )
        d[(D = m[P]).i] = D.x(g);
      return d.join("");
    };
  };
}
var su = ms(au, "px, ", "px)", "deg)"), lu = ms(ou, ", ", ")", ")"), De = 0, tn = 0, Xe = 0, ps = 1e3, mr, en, pr = 0, _e = 0, Sr = 0, mn = typeof performance == "object" && performance.now ? performance : Date, gs = typeof window == "object" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(t) {
  setTimeout(t, 17);
};
function Ui() {
  return _e || (gs(fu), _e = mn.now() + Sr);
}
function fu() {
  _e = 0;
}
function gr() {
  this._call = this._time = this._next = null;
}
gr.prototype = vs.prototype = {
  constructor: gr,
  restart: function(t, e, n) {
    if (typeof t != "function")
      throw new TypeError("callback is not a function");
    n = (n == null ? Ui() : +n) + (e == null ? 0 : +e), !this._next && en !== this && (en ? en._next = this : mr = this, en = this), this._call = t, this._time = n, ui();
  },
  stop: function() {
    this._call && (this._call = null, this._time = 1 / 0, ui());
  }
};
function vs(t, e, n) {
  var r = new gr();
  return r.restart(t, e, n), r;
}
function cu() {
  Ui(), ++De;
  for (var t = mr, e; t; )
    (e = _e - t._time) >= 0 && t._call.call(void 0, e), t = t._next;
  --De;
}
function Ga() {
  _e = (pr = mn.now()) + Sr, De = tn = 0;
  try {
    cu();
  } finally {
    De = 0, du(), _e = 0;
  }
}
function uu() {
  var t = mn.now(), e = t - pr;
  e > ps && (Sr -= e, pr = t);
}
function du() {
  for (var t, e = mr, n, r = 1 / 0; e; )
    e._call ? (r > e._time && (r = e._time), t = e, e = e._next) : (n = e._next, e._next = null, e = t ? t._next = n : mr = n);
  en = t, ui(r);
}
function ui(t) {
  if (!De) {
    tn && (tn = clearTimeout(tn));
    var e = t - _e;
    e > 24 ? (t < 1 / 0 && (tn = setTimeout(Ga, t - mn.now() - Sr)), Xe && (Xe = clearInterval(Xe))) : (Xe || (pr = mn.now(), Xe = setInterval(uu, ps)), De = 1, gs(Ga));
  }
}
function Wa(t, e, n) {
  var r = new gr();
  return e = e == null ? 0 : +e, r.restart((i) => {
    r.stop(), t(i + e);
  }, e, n), r;
}
var hu = Xo("start", "end", "cancel", "interrupt"), mu = [], ys = 0, Va = 1, di = 2, nr = 3, Ka = 4, hi = 5, rr = 6;
function Or(t, e, n, r, i, a) {
  var o = t.__transition;
  if (!o)
    t.__transition = {};
  else if (n in o)
    return;
  pu(t, n, {
    name: e,
    index: r,
    // For context during callback.
    group: i,
    // For context during callback.
    on: hu,
    tween: mu,
    time: a.time,
    delay: a.delay,
    duration: a.duration,
    ease: a.ease,
    timer: null,
    state: ys
  });
}
function Yi(t, e) {
  var n = Tt(t, e);
  if (n.state > ys)
    throw new Error("too late; already scheduled");
  return n;
}
function zt(t, e) {
  var n = Tt(t, e);
  if (n.state > nr)
    throw new Error("too late; already running");
  return n;
}
function Tt(t, e) {
  var n = t.__transition;
  if (!n || !(n = n[e]))
    throw new Error("transition not found");
  return n;
}
function pu(t, e, n) {
  var r = t.__transition, i;
  r[e] = n, n.timer = vs(a, 0, n.time);
  function a(f) {
    n.state = Va, n.timer.restart(o, n.delay, n.time), n.delay <= f && o(f - n.delay);
  }
  function o(f) {
    var c, d, m, g;
    if (n.state !== Va)
      return l();
    for (c in r)
      if (g = r[c], g.name === n.name) {
        if (g.state === nr)
          return Wa(o);
        g.state === Ka ? (g.state = rr, g.timer.stop(), g.on.call("interrupt", t, t.__data__, g.index, g.group), delete r[c]) : +c < e && (g.state = rr, g.timer.stop(), g.on.call("cancel", t, t.__data__, g.index, g.group), delete r[c]);
      }
    if (Wa(function() {
      n.state === nr && (n.state = Ka, n.timer.restart(s, n.delay, n.time), s(f));
    }), n.state = di, n.on.call("start", t, t.__data__, n.index, n.group), n.state === di) {
      for (n.state = nr, i = new Array(m = n.tween.length), c = 0, d = -1; c < m; ++c)
        (g = n.tween[c].value.call(t, t.__data__, n.index, n.group)) && (i[++d] = g);
      i.length = d + 1;
    }
  }
  function s(f) {
    for (var c = f < n.duration ? n.ease.call(null, f / n.duration) : (n.timer.restart(l), n.state = hi, 1), d = -1, m = i.length; ++d < m; )
      i[d].call(t, c);
    n.state === hi && (n.on.call("end", t, t.__data__, n.index, n.group), l());
  }
  function l() {
    n.state = rr, n.timer.stop(), delete r[e];
    for (var f in r)
      return;
    delete t.__transition;
  }
}
function gu(t, e) {
  var n = t.__transition, r, i, a = !0, o;
  if (n) {
    e = e == null ? null : e + "";
    for (o in n) {
      if ((r = n[o]).name !== e) {
        a = !1;
        continue;
      }
      i = r.state > di && r.state < hi, r.state = rr, r.timer.stop(), r.on.call(i ? "interrupt" : "cancel", t, t.__data__, r.index, r.group), delete n[o];
    }
    a && delete t.__transition;
  }
}
function vu(t) {
  return this.each(function() {
    gu(this, t);
  });
}
function yu(t, e) {
  var n, r;
  return function() {
    var i = zt(this, t), a = i.tween;
    if (a !== n) {
      r = n = a;
      for (var o = 0, s = r.length; o < s; ++o)
        if (r[o].name === e) {
          r = r.slice(), r.splice(o, 1);
          break;
        }
    }
    i.tween = r;
  };
}
function bu(t, e, n) {
  var r, i;
  if (typeof n != "function")
    throw new Error();
  return function() {
    var a = zt(this, t), o = a.tween;
    if (o !== r) {
      i = (r = o).slice();
      for (var s = { name: e, value: n }, l = 0, f = i.length; l < f; ++l)
        if (i[l].name === e) {
          i[l] = s;
          break;
        }
      l === f && i.push(s);
    }
    a.tween = i;
  };
}
function xu(t, e) {
  var n = this._id;
  if (t += "", arguments.length < 2) {
    for (var r = Tt(this.node(), n).tween, i = 0, a = r.length, o; i < a; ++i)
      if ((o = r[i]).name === t)
        return o.value;
    return null;
  }
  return this.each((e == null ? yu : bu)(n, t, e));
}
function Gi(t, e, n) {
  var r = t._id;
  return t.each(function() {
    var i = zt(this, r);
    (i.value || (i.value = {}))[e] = n.apply(this, arguments);
  }), function(i) {
    return Tt(i, r).value[e];
  };
}
function bs(t, e) {
  var n;
  return (typeof e == "number" ? te : e instanceof hn ? Ua : (n = hn(e)) ? (e = n, Ua) : iu)(t, e);
}
function wu(t) {
  return function() {
    this.removeAttribute(t);
  };
}
function _u(t) {
  return function() {
    this.removeAttributeNS(t.space, t.local);
  };
}
function ku(t, e, n) {
  var r, i = n + "", a;
  return function() {
    var o = this.getAttribute(t);
    return o === i ? null : o === r ? a : a = e(r = o, n);
  };
}
function Au(t, e, n) {
  var r, i = n + "", a;
  return function() {
    var o = this.getAttributeNS(t.space, t.local);
    return o === i ? null : o === r ? a : a = e(r = o, n);
  };
}
function Eu(t, e, n) {
  var r, i, a;
  return function() {
    var o, s = n(this), l;
    return s == null ? void this.removeAttribute(t) : (o = this.getAttribute(t), l = s + "", o === l ? null : o === r && l === i ? a : (i = l, a = e(r = o, s)));
  };
}
function Cu(t, e, n) {
  var r, i, a;
  return function() {
    var o, s = n(this), l;
    return s == null ? void this.removeAttributeNS(t.space, t.local) : (o = this.getAttributeNS(t.space, t.local), l = s + "", o === l ? null : o === r && l === i ? a : (i = l, a = e(r = o, s)));
  };
}
function Su(t, e) {
  var n = Cr(t), r = n === "transform" ? lu : bs;
  return this.attrTween(t, typeof e == "function" ? (n.local ? Cu : Eu)(n, r, Gi(this, "attr." + t, e)) : e == null ? (n.local ? _u : wu)(n) : (n.local ? Au : ku)(n, r, e));
}
function Ou(t, e) {
  return function(n) {
    this.setAttribute(t, e.call(this, n));
  };
}
function Pu(t, e) {
  return function(n) {
    this.setAttributeNS(t.space, t.local, e.call(this, n));
  };
}
function Tu(t, e) {
  var n, r;
  function i() {
    var a = e.apply(this, arguments);
    return a !== r && (n = (r = a) && Pu(t, a)), n;
  }
  return i._value = e, i;
}
function Nu(t, e) {
  var n, r;
  function i() {
    var a = e.apply(this, arguments);
    return a !== r && (n = (r = a) && Ou(t, a)), n;
  }
  return i._value = e, i;
}
function Iu(t, e) {
  var n = "attr." + t;
  if (arguments.length < 2)
    return (n = this.tween(n)) && n._value;
  if (e == null)
    return this.tween(n, null);
  if (typeof e != "function")
    throw new Error();
  var r = Cr(t);
  return this.tween(n, (r.local ? Tu : Nu)(r, e));
}
function Mu(t, e) {
  return function() {
    Yi(this, t).delay = +e.apply(this, arguments);
  };
}
function Ru(t, e) {
  return e = +e, function() {
    Yi(this, t).delay = e;
  };
}
function Fu(t) {
  var e = this._id;
  return arguments.length ? this.each((typeof t == "function" ? Mu : Ru)(e, t)) : Tt(this.node(), e).delay;
}
function $u(t, e) {
  return function() {
    zt(this, t).duration = +e.apply(this, arguments);
  };
}
function Lu(t, e) {
  return e = +e, function() {
    zt(this, t).duration = e;
  };
}
function Du(t) {
  var e = this._id;
  return arguments.length ? this.each((typeof t == "function" ? $u : Lu)(e, t)) : Tt(this.node(), e).duration;
}
function zu(t, e) {
  if (typeof e != "function")
    throw new Error();
  return function() {
    zt(this, t).ease = e;
  };
}
function Hu(t) {
  var e = this._id;
  return arguments.length ? this.each(zu(e, t)) : Tt(this.node(), e).ease;
}
function ju(t, e) {
  return function() {
    var n = e.apply(this, arguments);
    if (typeof n != "function")
      throw new Error();
    zt(this, t).ease = n;
  };
}
function Bu(t) {
  if (typeof t != "function")
    throw new Error();
  return this.each(ju(this._id, t));
}
function Uu(t) {
  typeof t != "function" && (t = Qo(t));
  for (var e = this._groups, n = e.length, r = new Array(n), i = 0; i < n; ++i)
    for (var a = e[i], o = a.length, s = r[i] = [], l, f = 0; f < o; ++f)
      (l = a[f]) && t.call(l, l.__data__, f, a) && s.push(l);
  return new Gt(r, this._parents, this._name, this._id);
}
function Yu(t) {
  if (t._id !== this._id)
    throw new Error();
  for (var e = this._groups, n = t._groups, r = e.length, i = n.length, a = Math.min(r, i), o = new Array(r), s = 0; s < a; ++s)
    for (var l = e[s], f = n[s], c = l.length, d = o[s] = new Array(c), m, g = 0; g < c; ++g)
      (m = l[g] || f[g]) && (d[g] = m);
  for (; s < r; ++s)
    o[s] = e[s];
  return new Gt(o, this._parents, this._name, this._id);
}
function Gu(t) {
  return (t + "").trim().split(/^|\s+/).every(function(e) {
    var n = e.indexOf(".");
    return n >= 0 && (e = e.slice(0, n)), !e || e === "start";
  });
}
function Wu(t, e, n) {
  var r, i, a = Gu(e) ? Yi : zt;
  return function() {
    var o = a(this, t), s = o.on;
    s !== r && (i = (r = s).copy()).on(e, n), o.on = i;
  };
}
function Vu(t, e) {
  var n = this._id;
  return arguments.length < 2 ? Tt(this.node(), n).on.on(t) : this.each(Wu(n, t, e));
}
function Ku(t) {
  return function() {
    var e = this.parentNode;
    for (var n in this.__transition)
      if (+n !== t)
        return;
    e && e.removeChild(this);
  };
}
function qu() {
  return this.on("end.remove", Ku(this._id));
}
function Xu(t) {
  var e = this._name, n = this._id;
  typeof t != "function" && (t = Hi(t));
  for (var r = this._groups, i = r.length, a = new Array(i), o = 0; o < i; ++o)
    for (var s = r[o], l = s.length, f = a[o] = new Array(l), c, d, m = 0; m < l; ++m)
      (c = s[m]) && (d = t.call(c, c.__data__, m, s)) && ("__data__" in c && (d.__data__ = c.__data__), f[m] = d, Or(f[m], e, n, m, f, Tt(c, n)));
  return new Gt(a, this._parents, e, n);
}
function Ju(t) {
  var e = this._name, n = this._id;
  typeof t != "function" && (t = Zo(t));
  for (var r = this._groups, i = r.length, a = [], o = [], s = 0; s < i; ++s)
    for (var l = r[s], f = l.length, c, d = 0; d < f; ++d)
      if (c = l[d]) {
        for (var m = t.call(c, c.__data__, d, l), g, P = Tt(c, n), O = 0, D = m.length; O < D; ++O)
          (g = m[O]) && Or(g, e, n, O, m, P);
        a.push(m), o.push(c);
      }
  return new Gt(a, o, e, n);
}
var Zu = Sn.prototype.constructor;
function Qu() {
  return new Zu(this._groups, this._parents);
}
function td(t, e) {
  var n, r, i;
  return function() {
    var a = Le(this, t), o = (this.style.removeProperty(t), Le(this, t));
    return a === o ? null : a === n && o === r ? i : i = e(n = a, r = o);
  };
}
function xs(t) {
  return function() {
    this.style.removeProperty(t);
  };
}
function ed(t, e, n) {
  var r, i = n + "", a;
  return function() {
    var o = Le(this, t);
    return o === i ? null : o === r ? a : a = e(r = o, n);
  };
}
function nd(t, e, n) {
  var r, i, a;
  return function() {
    var o = Le(this, t), s = n(this), l = s + "";
    return s == null && (l = s = (this.style.removeProperty(t), Le(this, t))), o === l ? null : o === r && l === i ? a : (i = l, a = e(r = o, s));
  };
}
function rd(t, e) {
  var n, r, i, a = "style." + e, o = "end." + a, s;
  return function() {
    var l = zt(this, t), f = l.on, c = l.value[a] == null ? s || (s = xs(e)) : void 0;
    (f !== n || i !== c) && (r = (n = f).copy()).on(o, i = c), l.on = r;
  };
}
function id(t, e, n) {
  var r = (t += "") == "transform" ? su : bs;
  return e == null ? this.styleTween(t, td(t, r)).on("end.style." + t, xs(t)) : typeof e == "function" ? this.styleTween(t, nd(t, r, Gi(this, "style." + t, e))).each(rd(this._id, t)) : this.styleTween(t, ed(t, r, e), n).on("end.style." + t, null);
}
function ad(t, e, n) {
  return function(r) {
    this.style.setProperty(t, e.call(this, r), n);
  };
}
function od(t, e, n) {
  var r, i;
  function a() {
    var o = e.apply(this, arguments);
    return o !== i && (r = (i = o) && ad(t, o, n)), r;
  }
  return a._value = e, a;
}
function sd(t, e, n) {
  var r = "style." + (t += "");
  if (arguments.length < 2)
    return (r = this.tween(r)) && r._value;
  if (e == null)
    return this.tween(r, null);
  if (typeof e != "function")
    throw new Error();
  return this.tween(r, od(t, e, n ?? ""));
}
function ld(t) {
  return function() {
    this.textContent = t;
  };
}
function fd(t) {
  return function() {
    var e = t(this);
    this.textContent = e ?? "";
  };
}
function cd(t) {
  return this.tween("text", typeof t == "function" ? fd(Gi(this, "text", t)) : ld(t == null ? "" : t + ""));
}
function ud(t) {
  return function(e) {
    this.textContent = t.call(this, e);
  };
}
function dd(t) {
  var e, n;
  function r() {
    var i = t.apply(this, arguments);
    return i !== n && (e = (n = i) && ud(i)), e;
  }
  return r._value = t, r;
}
function hd(t) {
  var e = "text";
  if (arguments.length < 1)
    return (e = this.tween(e)) && e._value;
  if (t == null)
    return this.tween(e, null);
  if (typeof t != "function")
    throw new Error();
  return this.tween(e, dd(t));
}
function md() {
  for (var t = this._name, e = this._id, n = ws(), r = this._groups, i = r.length, a = 0; a < i; ++a)
    for (var o = r[a], s = o.length, l, f = 0; f < s; ++f)
      if (l = o[f]) {
        var c = Tt(l, e);
        Or(l, t, n, f, o, {
          time: c.time + c.delay + c.duration,
          delay: 0,
          duration: c.duration,
          ease: c.ease
        });
      }
  return new Gt(r, this._parents, t, n);
}
function pd() {
  var t, e, n = this, r = n._id, i = n.size();
  return new Promise(function(a, o) {
    var s = { value: o }, l = { value: function() {
      --i === 0 && a();
    } };
    n.each(function() {
      var f = zt(this, r), c = f.on;
      c !== t && (e = (t = c).copy(), e._.cancel.push(s), e._.interrupt.push(s), e._.end.push(l)), f.on = e;
    }), i === 0 && a();
  });
}
var gd = 0;
function Gt(t, e, n, r) {
  this._groups = t, this._parents = e, this._name = n, this._id = r;
}
function ws() {
  return ++gd;
}
var Bt = Sn.prototype;
Gt.prototype = {
  constructor: Gt,
  select: Xu,
  selectAll: Ju,
  selectChild: Bt.selectChild,
  selectChildren: Bt.selectChildren,
  filter: Uu,
  merge: Yu,
  selection: Qu,
  transition: md,
  call: Bt.call,
  nodes: Bt.nodes,
  node: Bt.node,
  size: Bt.size,
  empty: Bt.empty,
  each: Bt.each,
  on: Vu,
  attr: Su,
  attrTween: Iu,
  style: id,
  styleTween: sd,
  text: cd,
  textTween: hd,
  remove: qu,
  tween: xu,
  delay: Fu,
  duration: Du,
  ease: Hu,
  easeVarying: Bu,
  end: pd,
  [Symbol.iterator]: Bt[Symbol.iterator]
};
const vd = (t) => +t;
function yd(t) {
  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;
}
var bd = {
  time: null,
  // Set on use.
  delay: 0,
  duration: 250,
  ease: yd
};
function xd(t, e) {
  for (var n; !(n = t.__transition) || !(n = n[e]); )
    if (!(t = t.parentNode))
      throw new Error(`transition ${e} not found`);
  return n;
}
function wd(t) {
  var e, n;
  t instanceof Gt ? (e = t._id, t = t._name) : (e = ws(), (n = bd).time = Ui(), t = t == null ? null : t + "");
  for (var r = this._groups, i = r.length, a = 0; a < i; ++a)
    for (var o = r[a], s = o.length, l, f = 0; f < s; ++f)
      (l = o[f]) && Or(l, t, e, f, o, n || xd(l, e));
  return new Gt(r, this._parents, t, e);
}
Sn.prototype.interrupt = vu;
Sn.prototype.transition = wd;
function nn(t, e, n) {
  this.k = t, this.x = e, this.y = n;
}
nn.prototype = {
  constructor: nn,
  scale: function(t) {
    return t === 1 ? this : new nn(this.k * t, this.x, this.y);
  },
  translate: function(t, e) {
    return t === 0 & e === 0 ? this : new nn(this.k, this.x + this.k * t, this.y + this.k * e);
  },
  apply: function(t) {
    return [t[0] * this.k + this.x, t[1] * this.k + this.y];
  },
  applyX: function(t) {
    return t * this.k + this.x;
  },
  applyY: function(t) {
    return t * this.k + this.y;
  },
  invert: function(t) {
    return [(t[0] - this.x) / this.k, (t[1] - this.y) / this.k];
  },
  invertX: function(t) {
    return (t - this.x) / this.k;
  },
  invertY: function(t) {
    return (t - this.y) / this.k;
  },
  rescaleX: function(t) {
    return t.copy().domain(t.range().map(this.invertX, this).map(t.invert, t));
  },
  rescaleY: function(t) {
    return t.copy().domain(t.range().map(this.invertY, this).map(t.invert, t));
  },
  toString: function() {
    return "translate(" + this.x + "," + this.y + ") scale(" + this.k + ")";
  }
};
nn.prototype;
const H = (t, e) => {
  const n = document.querySelector(t);
  if (n === null)
    throw new Error("Cannot find selector " + t);
  if (e !== void 0 && !(n instanceof e))
    throw new Error(`Selector ${t} not of type ${e}`);
  return n;
}, _d = (t) => new Promise((e) => setTimeout(e, t)), _s = () => window.uxLawState, kd = (t) => {
  const e = H("svg.fitts g.big-target1", SVGGElement);
  t.createCircle(e, 40, 50, 35), t.createCircle(e, 40, 50, 25), t.createCircle(e, 40, 50, 15), t.createCircle(e, 40, 50, 5);
  const n = H("svg.fitts g.big-target2", SVGGElement);
  t.createCircle(n, 40, 50, 35), t.createCircle(n, 40, 50, 25), t.createCircle(n, 40, 50, 15), t.createCircle(n, 40, 50, 5);
  const r = H("svg.fitts g.small-target", SVGGElement);
  t.createCircle(r, 40, 50, 5);
}, Ad = (t) => {
  const e = H("svg.purpose g.target", SVGGElement);
  t.createCircle(e, 150, 50, 40), t.createCircle(e, 150, 50, 30), t.createCircle(e, 150, 50, 20), t.createCircle(e, 150, 50, 10), t.createCircle(e, 150, 50, 1);
}, Ed = (t) => {
  const e = H("svg.hick g.choice-01", SVGGElement);
  t.createForm(
    e,
    "polygon",
    { points: "0,0 0,0 0,0 0,0" },
    { points: "0,0 0,40 40,40" },
    {
      duration: 300,
      delay: t.getDelay()
    }
  );
  const n = H("svg.hick g.choice-02", SVGGElement);
  t.createForm(
    n,
    "polygon",
    { points: "0,0 0,0 0,0 0,0" },
    { points: "0,0 0,40 40,40 40,0" },
    {
      duration: 300,
      delay: t.getDelay()
    }
  );
  const r = H("svg.hick g.choice-03", SVGGElement);
  t.createForm(
    r,
    "polygon",
    { points: "0,0 0,0 0,0 0,0" },
    { points: "0,40 40,40 40,0" },
    {
      duration: 300,
      delay: t.getDelay()
    }
  );
  const i = H("svg.hick g.choice-04", SVGGElement);
  t.createForm(
    i,
    "polygon",
    { points: "0,0 0,0 0,0 0,0" },
    { points: "0,0 20,40 40,0" },
    {
      duration: 300,
      delay: t.getDelay()
    }
  );
  const a = H("svg.hick g.choice-05", SVGGElement);
  t.createForm(
    a,
    "polygon",
    { points: "0,0 0,0 0,0 0,0" },
    { points: "0,0 0,40 40,20" },
    {
      duration: 300,
      delay: t.getDelay()
    }
  );
  const o = H("svg.hick g.choice-06", SVGGElement);
  t.createForm(
    o,
    "polygon",
    { points: "0,0 0,0 0,0 0,0" },
    { points: "0,40 40,40 20,0" },
    {
      duration: 300,
      delay: t.getDelay()
    }
  );
}, Cd = (t) => {
  const e = H("svg.jakob g.app-1", SVGGElement);
  t.createCircle(e, 40, 50, 35);
  const n = H("svg.jakob g.app-2", SVGGElement);
  t.createCircle(n, 40, 50, 35);
  const r = H("svg.jakob g.your-app", SVGGElement);
  t.createCircle(r, 40, 50, 35);
}, Sd = (t) => {
  const e = H("svg.gradient g", SVGGElement);
  t.createRect(e, 5, 30, 40, 40, 1), t.createRect(e, 50, 30, 40, 40, 2), t.createRect(e, 95, 30, 40, 40, 3), t.createRect(e, 140, 30, 40, 40, 4), t.createRect(e, 185, 30, 40, 40, 5), t.createRect(e, 230, 30, 40, 40, 6);
}, Od = (t) => {
  const e = H("svg.gestalt g", SVGGElement);
  for (let n = 0; n < 5; n++)
    for (let r = 0; r < 4; r++)
      t.createCircle(e, n * 20 + 100, r * 20 + 20, 5, {
        class: "full",
        delay: 0,
        duration: 300
      });
}, Pd = (t) => {
  const e = H("svg.proximity g", SVGGElement);
  for (let n = 0; n < 5; n++)
    for (let r = 0; r < 4; r++) {
      const i = n > 1 && r < 2 ? 8 : 0;
      t.createCircle(e, n * 20 + 100 + i, r * 20 + 20 - i, 5, {
        class: "full",
        delay: 0,
        duration: 300
      });
    }
}, Td = (t) => {
  const e = H("svg.similarity g", SVGGElement);
  for (let n = 0; n < 5; n++)
    for (let r = 0; r < 4; r++) {
      const i = n > 1 && r < 2 ? "xxx" : "full";
      t.createCircle(e, n * 20 + 100, r * 20 + 20, 5, {
        class: i,
        delay: 0,
        duration: 300
      });
    }
}, Nd = (t) => {
  const e = H("svg.commonRegion g", SVGGElement);
  t.createRect(e, 100 + 32, 12, 57, 37, 2);
  for (let n = 0; n < 5; n++)
    for (let r = 0; r < 4; r++)
      t.createCircle(e, n * 20 + 100, r * 20 + 20, 5, {
        class: "full",
        delay: 0,
        duration: 300
      });
}, Id = (t) => {
  const e = H("svg.simplicity g", SVGGElement);
  t.createRect(e, 100 + 32, 12, 57, 37, 2), t.createRect(e, 100 - 8, 12, 97, 77, 2);
}, Md = (t) => {
  const e = H("svg.miller g", SVGGElement);
  t.createCircle(e, 130, 20, 5, { class: "full" }), t.createCircle(e, 150, 20, 5, { class: "full" }), t.createCircle(e, 170, 20, 5, { class: "full" }), t.createCircle(e, 170, 40, 5, { class: "full" }), t.createCircle(e, 170, 60, 5, { class: "full" }), t.createCircle(e, 170, 80, 5, { class: "full" });
}, Rd = (t) => {
  const e = H("svg.tesler g", SVGGElement);
  for (let n = 0; n < 6; n++)
    t.createCircle(e, 100 + n * 20, 20, 5, {
      class: n >= 3 ? "empty" : "full"
    });
  for (let n = 0; n < 6; n++)
    t.createCircle(e, 100 + n * 20, 50, 5, { class: n % 2 ? "empty" : "full" });
  for (let n = 0; n < 6; n++)
    t.createCircle(e, 100 + n * 20, 80, 5, { class: n < 3 ? "empty" : "full" });
}, Fd = (t) => {
  const e = H("svg.postel g", SVGGElement);
  t.createCircle(e, 80, 50, 35, { class: "full" }), t.createCircle(e, 220, 50, 35, { class: "empty" });
}, $d = (t) => {
  const e = H("svg.zeigarnik g", SVGGElement);
  for (let n = 1; n < 5; n++)
    t.createRect(e, 50, n * 15, 200, 10, 6, "emptyrect");
  t.createRect(e, 50, 5 * 15, 150, 10, 6, "fullrect");
}, Ld = (t) => {
  const e = H("svg.vonRestorff g", SVGGElement);
  for (let n = 0; n < 5; n++)
    for (let r = 0; r < 4; r++) {
      const i = n === 2 && r === 2 ? "xxx" : "full";
      t.createCircle(e, n * 20 + 100, r * 20 + 20, 5, {
        class: i,
        delay: 0,
        duration: 300
      });
    }
}, zn = "20,10, 20,20 10,30, 20,40 20,50, 10,50 10,60 20,60 20,70 20,80 10,90", Dd = (t) => {
  const e = H(".symetrie svg g", SVGGElement);
  e.innerHTML = `
<g class="p1" transform="translate(60)"></g>
<g class="p2" transform="translate(80)"></g>
<g class="p3" transform="translate(180)"></g>
<g class="p4" transform="translate(230) scale(-1, 1)"></g>
`;
  const n = H(".symetrie svg g.p1", SVGGElement);
  t.createPolyline(n, zn, "empty");
  const r = H(".symetrie svg g.p2", SVGGElement);
  t.createPolyline(r, zn, "empty");
  const i = H(".symetrie svg g.p3", SVGGElement);
  t.createPolyline(i, zn, "empty");
  const a = H(".symetrie svg g.p4", SVGGElement);
  t.createPolyline(a, zn, "empty");
}, zd = (t) => {
  const e = H(".serialPosition svg g", SVGGElement);
  for (let n = 0; n < 7; n++) {
    const r = n === 0 || n === 6 ? "full" : "empty";
    t.createCircle(e, n * 40 + 30, 50, 20, {
      class: r,
      delay: 0,
      duration: 300
    });
  }
}, Hd = (t) => {
  const e = H(".pareto svg g", SVGGElement);
  t.createRect(e, 50, 40, 50, 20, 6, "empty"), t.createRect(e, 150, 10, 100, 80, 6, "empty");
}, jd = (t) => {
  const e = H(".peakEnd svg g", SVGGElement);
  for (let n = 0; n < 5; n++)
    for (let r = 0; r < 4; r++) {
      const i = n === 1 && r === 1 || n === 4 && r === 3 ? "empty" : "full";
      t.createCircle(e, n * 20 + 100, r * 20 + 20, 5, {
        class: i
      });
    }
}, Bd = (t) => {
  const e = H(".anchor svg g", SVGGElement);
  t.createCircle(e, 100, 50, 35), t.createPolyline(e, "60,10 140,90"), t.createPolyline(e, "140,10 60,90"), t.createCircle(e, 200, 50, 20);
}, ks = {
  fitts: [kd],
  purpose: [Ad],
  hick: [Ed],
  jakob: [Cd],
  gradient: [Sd],
  gestalt: [Od],
  proximity: [Pd],
  similarity: [Td],
  commonRegion: [Nd],
  simplicity: [Id],
  miller: [Md],
  tesler: [Rd],
  postel: [Fd],
  zeigarnik: [$d],
  vonRestorff: [Ld],
  symetrie: [Dd],
  serialPosition: [zd],
  pareto: [Hd],
  peakEnd: [jd],
  anchor: [Bd]
}, As = /* @__PURE__ */ new Set();
for (const t of Object.values(ks))
  for (const e of t)
    As.add(e);
const Ud = [...As];
class Yd {
  constructor() {
    Se(this, "delayCounter", 0);
    Se(this, "delayIncrement", 100);
    Se(this, "useTransition", !1);
    Se(this, "svgName");
    Se(this, "createForm", (e, n, r, i, a) => {
      const o = {
        duration: 2e3,
        delay: 1e3,
        class: "",
        ...a
      };
      this.useTransition || (o.delay = 0, o.duration = 0);
      const s = Hc(e).append(n);
      for (const [f, c] of Object.entries(r))
        s.attr(f, c);
      o.class && s.attr("class", o.class);
      const l = s.transition().duration(o.duration).delay(o.delay).ease(vd);
      for (const [f, c] of Object.entries(i))
        l.attr(f, c);
    });
    this.initSvgName();
  }
  initSvgName() {
    const e = _s();
    if (e === void 0) {
      this.useTransition = !1;
      return;
    }
    console.log("uxLawState: ", e);
    const n = e.page.image === "default" ? e.page.class : e.page.image;
    this.svgName = n, this.useTransition = !0;
  }
  initSvg() {
    const e = this.svgName ? ks[this.svgName] : Ud;
    if (e !== void 0)
      for (const n of e)
        n(this);
  }
  getDelay() {
    return this.delayCounter += this.delayIncrement, this.delayCounter;
  }
  createCircle(e, n, r, i, a) {
    const o = {
      duration: 300,
      delay: this.getDelay(),
      ...a
    };
    return this.createForm(
      e,
      "circle",
      {
        cx: n,
        cy: r,
        r: 0
      },
      { r: i },
      o
    );
  }
  createPolygon(e, n) {
    return this.createForm(
      e,
      "polygon",
      { points: "" },
      { points: n },
      {
        duration: 300,
        delay: this.getDelay()
      }
    );
  }
  createPolyline(e, n, r = "full") {
    return this.createForm(
      e,
      "polyline",
      { points: "" },
      { points: n },
      {
        duration: 300,
        delay: this.getDelay(),
        class: r
      }
    );
  }
  createRect(e, n, r, i, a, o = 6, s = "empty") {
    return this.createForm(
      e,
      "rect",
      { x: n, y: r, width: i, height: 0, opacity: o * (1 / 6) },
      { height: a },
      {
        duration: 300,
        delay: this.getDelay(),
        class: s
      }
    );
  }
}
const Gd = () => {
  Wd(), document.documentElement.style.setProperty(
    "--primary-color",
    "hsl(120, 100%, 25%)"
  ), document.documentElement.style.setProperty(
    "--fill-color",
    "hsla(120, 0%, 25%, 0.1)"
  ), Vd();
}, Wd = () => {
  const t = window.matchMedia && window.matchMedia("(prefers-color-scheme: dark)").matches, e = document.body.classList;
  t ? e.add("dark") : e.add("light"), window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change", (n) => {
    const r = n.matches ? "dark" : "light";
    console.log("colorScheme: ", r), e.remove("dark"), e.remove("light"), r === "dark" ? e.add("dark") : e.add("light");
  });
};
window.toggleUglyTheme = () => {
  let t = localStorage.getItem("theme");
  t = t !== "ugly" ? "ugly" : "default", localStorage.setItem("theme", t), console.log("update theme to " + t), document.body.classList.remove("ugly"), document.body.classList.remove("default"), document.body.classList.add(t), Es();
};
const Vd = () => {
  let t = localStorage.getItem("theme");
  t = t !== "ugly" ? "default" : "ugly", document.body.classList.add(t), Es();
}, Es = () => {
  let t = localStorage.getItem("theme");
  const e = t === "ugly" ? "Remettre l'esthétique" : "Enlever l'esthétique", n = document.querySelector("button.toggle-theme");
  n && (n.innerHTML = e);
  const r = H("header div.ugly-theme");
  r.innerHTML = t !== "ugly" ? "" : `
<button onClick="window.toggleUglyTheme()"> 
  Remettre l'esthétique
</button>
    `;
};
function Wi(t, e) {
  const n = /* @__PURE__ */ Object.create(null), r = t.split(",");
  for (let i = 0; i < r.length; i++)
    n[r[i]] = !0;
  return e ? (i) => !!n[i.toLowerCase()] : (i) => !!n[i];
}
function Vi(t) {
  if ($(t)) {
    const e = {};
    for (let n = 0; n < t.length; n++) {
      const r = t[n], i = nt(r) ? Jd(r) : Vi(r);
      if (i)
        for (const a in i)
          e[a] = i[a];
    }
    return e;
  } else {
    if (nt(t))
      return t;
    if (X(t))
      return t;
  }
}
const Kd = /;(?![^(]*\))/g, qd = /:([^]+)/, Xd = /\/\*.*?\*\//gs;
function Jd(t) {
  const e = {};
  return t.replace(Xd, "").split(Kd).forEach((n) => {
    if (n) {
      const r = n.split(qd);
      r.length > 1 && (e[r[0].trim()] = r[1].trim());
    }
  }), e;
}
function Ki(t) {
  let e = "";
  if (nt(t))
    e = t;
  else if ($(t))
    for (let n = 0; n < t.length; n++) {
      const r = Ki(t[n]);
      r && (e += r + " ");
    }
  else if (X(t))
    for (const n in t)
      t[n] && (e += n + " ");
  return e.trim();
}
const Zd = "itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly", Qd = /* @__PURE__ */ Wi(Zd);
function Cs(t) {
  return !!t || t === "";
}
const th = (t) => nt(t) ? t : t == null ? "" : $(t) || X(t) && (t.toString === Ts || !L(t.toString)) ? JSON.stringify(t, Ss, 2) : String(t), Ss = (t, e) => e && e.__v_isRef ? Ss(t, e.value) : Me(e) ? {
  [`Map(${e.size})`]: [...e.entries()].reduce((n, [r, i]) => (n[`${r} =>`] = i, n), {})
} : Os(e) ? {
  [`Set(${e.size})`]: [...e.values()]
} : X(e) && !$(e) && !Ns(e) ? String(e) : e, q = {}, Ie = [], Ot = () => {
}, eh = () => !1, nh = /^on[^a-z]/, Pr = (t) => nh.test(t), qi = (t) => t.startsWith("onUpdate:"), ft = Object.assign, Xi = (t, e) => {
  const n = t.indexOf(e);
  n > -1 && t.splice(n, 1);
}, rh = Object.prototype.hasOwnProperty, j = (t, e) => rh.call(t, e), $ = Array.isArray, Me = (t) => Tr(t) === "[object Map]", Os = (t) => Tr(t) === "[object Set]", L = (t) => typeof t == "function", nt = (t) => typeof t == "string", Ji = (t) => typeof t == "symbol", X = (t) => t !== null && typeof t == "object", Ps = (t) => X(t) && L(t.then) && L(t.catch), Ts = Object.prototype.toString, Tr = (t) => Ts.call(t), ih = (t) => Tr(t).slice(8, -1), Ns = (t) => Tr(t) === "[object Object]", Zi = (t) => nt(t) && t !== "NaN" && t[0] !== "-" && "" + parseInt(t, 10) === t, ir = /* @__PURE__ */ Wi(
  // the leading comma is intentional so empty string "" is also included
  ",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"
), Nr = (t) => {
  const e = /* @__PURE__ */ Object.create(null);
  return (n) => e[n] || (e[n] = t(n));
}, ah = /-(\w)/g, ze = Nr((t) => t.replace(ah, (e, n) => n ? n.toUpperCase() : "")), oh = /\B([A-Z])/g, Ye = Nr((t) => t.replace(oh, "-$1").toLowerCase()), Is = Nr((t) => t.charAt(0).toUpperCase() + t.slice(1)), Kr = Nr((t) => t ? `on${Is(t)}` : ""), pn = (t, e) => !Object.is(t, e), qr = (t, e) => {
  for (let n = 0; n < t.length; n++)
    t[n](e);
}, vr = (t, e, n) => {
  Object.defineProperty(t, e, {
    configurable: !0,
    enumerable: !1,
    value: n
  });
}, sh = (t) => {
  const e = parseFloat(t);
  return isNaN(e) ? t : e;
};
let qa;
const lh = () => qa || (qa = typeof globalThis < "u" ? globalThis : typeof self < "u" ? self : typeof window < "u" ? window : typeof global < "u" ? global : {});
let _t;
class fh {
  constructor(e = !1) {
    this.detached = e, this._active = !0, this.effects = [], this.cleanups = [], this.parent = _t, !e && _t && (this.index = (_t.scopes || (_t.scopes = [])).push(this) - 1);
  }
  get active() {
    return this._active;
  }
  run(e) {
    if (this._active) {
      const n = _t;
      try {
        return _t = this, e();
      } finally {
        _t = n;
      }
    }
  }
  /**
   * This should only be called on non-detached scopes
   * @internal
   */
  on() {
    _t = this;
  }
  /**
   * This should only be called on non-detached scopes
   * @internal
   */
  off() {
    _t = this.parent;
  }
  stop(e) {
    if (this._active) {
      let n, r;
      for (n = 0, r = this.effects.length; n < r; n++)
        this.effects[n].stop();
      for (n = 0, r = this.cleanups.length; n < r; n++)
        this.cleanups[n]();
      if (this.scopes)
        for (n = 0, r = this.scopes.length; n < r; n++)
          this.scopes[n].stop(!0);
      if (!this.detached && this.parent && !e) {
        const i = this.parent.scopes.pop();
        i && i !== this && (this.parent.scopes[this.index] = i, i.index = this.index);
      }
      this.parent = void 0, this._active = !1;
    }
  }
}
function ch(t, e = _t) {
  e && e.active && e.effects.push(t);
}
function uh() {
  return _t;
}
const Qi = (t) => {
  const e = new Set(t);
  return e.w = 0, e.n = 0, e;
}, Ms = (t) => (t.w & ie) > 0, Rs = (t) => (t.n & ie) > 0, dh = ({ deps: t }) => {
  if (t.length)
    for (let e = 0; e < t.length; e++)
      t[e].w |= ie;
}, hh = (t) => {
  const { deps: e } = t;
  if (e.length) {
    let n = 0;
    for (let r = 0; r < e.length; r++) {
      const i = e[r];
      Ms(i) && !Rs(i) ? i.delete(t) : e[n++] = i, i.w &= ~ie, i.n &= ~ie;
    }
    e.length = n;
  }
}, mi = /* @__PURE__ */ new WeakMap();
let rn = 0, ie = 1;
const pi = 30;
let At;
const xe = Symbol(""), gi = Symbol("");
class ta {
  constructor(e, n = null, r) {
    this.fn = e, this.scheduler = n, this.active = !0, this.deps = [], this.parent = void 0, ch(this, r);
  }
  run() {
    if (!this.active)
      return this.fn();
    let e = At, n = ne;
    for (; e; ) {
      if (e === this)
        return;
      e = e.parent;
    }
    try {
      return this.parent = At, At = this, ne = !0, ie = 1 << ++rn, rn <= pi ? dh(this) : Xa(this), this.fn();
    } finally {
      rn <= pi && hh(this), ie = 1 << --rn, At = this.parent, ne = n, this.parent = void 0, this.deferStop && this.stop();
    }
  }
  stop() {
    At === this ? this.deferStop = !0 : this.active && (Xa(this), this.onStop && this.onStop(), this.active = !1);
  }
}
function Xa(t) {
  const { deps: e } = t;
  if (e.length) {
    for (let n = 0; n < e.length; n++)
      e[n].delete(t);
    e.length = 0;
  }
}
let ne = !0;
const Fs = [];
function Ge() {
  Fs.push(ne), ne = !1;
}
function We() {
  const t = Fs.pop();
  ne = t === void 0 ? !0 : t;
}
function mt(t, e, n) {
  if (ne && At) {
    let r = mi.get(t);
    r || mi.set(t, r = /* @__PURE__ */ new Map());
    let i = r.get(n);
    i || r.set(n, i = Qi()), $s(i);
  }
}
function $s(t, e) {
  let n = !1;
  rn <= pi ? Rs(t) || (t.n |= ie, n = !Ms(t)) : n = !t.has(At), n && (t.add(At), At.deps.push(t));
}
function Wt(t, e, n, r, i, a) {
  const o = mi.get(t);
  if (!o)
    return;
  let s = [];
  if (e === "clear")
    s = [...o.values()];
  else if (n === "length" && $(t)) {
    const l = Number(r);
    o.forEach((f, c) => {
      (c === "length" || c >= l) && s.push(f);
    });
  } else
    switch (n !== void 0 && s.push(o.get(n)), e) {
      case "add":
        $(t) ? Zi(n) && s.push(o.get("length")) : (s.push(o.get(xe)), Me(t) && s.push(o.get(gi)));
        break;
      case "delete":
        $(t) || (s.push(o.get(xe)), Me(t) && s.push(o.get(gi)));
        break;
      case "set":
        Me(t) && s.push(o.get(xe));
        break;
    }
  if (s.length === 1)
    s[0] && vi(s[0]);
  else {
    const l = [];
    for (const f of s)
      f && l.push(...f);
    vi(Qi(l));
  }
}
function vi(t, e) {
  const n = $(t) ? t : [...t];
  for (const r of n)
    r.computed && Ja(r);
  for (const r of n)
    r.computed || Ja(r);
}
function Ja(t, e) {
  (t !== At || t.allowRecurse) && (t.scheduler ? t.scheduler() : t.run());
}
const mh = /* @__PURE__ */ Wi("__proto__,__v_isRef,__isVue"), Ls = new Set(
  /* @__PURE__ */ Object.getOwnPropertyNames(Symbol).filter((t) => t !== "arguments" && t !== "caller").map((t) => Symbol[t]).filter(Ji)
), ph = /* @__PURE__ */ ea(), gh = /* @__PURE__ */ ea(!1, !0), vh = /* @__PURE__ */ ea(!0), Za = /* @__PURE__ */ yh();
function yh() {
  const t = {};
  return ["includes", "indexOf", "lastIndexOf"].forEach((e) => {
    t[e] = function(...n) {
      const r = U(this);
      for (let a = 0, o = this.length; a < o; a++)
        mt(r, "get", a + "");
      const i = r[e](...n);
      return i === -1 || i === !1 ? r[e](...n.map(U)) : i;
    };
  }), ["push", "pop", "shift", "unshift", "splice"].forEach((e) => {
    t[e] = function(...n) {
      Ge();
      const r = U(this)[e].apply(this, n);
      return We(), r;
    };
  }), t;
}
function bh(t) {
  const e = U(this);
  return mt(e, "has", t), e.hasOwnProperty(t);
}
function ea(t = !1, e = !1) {
  return function(r, i, a) {
    if (i === "__v_isReactive")
      return !t;
    if (i === "__v_isReadonly")
      return t;
    if (i === "__v_isShallow")
      return e;
    if (i === "__v_raw" && a === (t ? e ? Fh : Bs : e ? js : Hs).get(r))
      return r;
    const o = $(r);
    if (!t) {
      if (o && j(Za, i))
        return Reflect.get(Za, i, a);
      if (i === "hasOwnProperty")
        return bh;
    }
    const s = Reflect.get(r, i, a);
    return (Ji(i) ? Ls.has(i) : mh(i)) || (t || mt(r, "get", i), e) ? s : at(s) ? o && Zi(i) ? s : s.value : X(s) ? t ? Us(s) : ia(s) : s;
  };
}
const xh = /* @__PURE__ */ Ds(), wh = /* @__PURE__ */ Ds(!0);
function Ds(t = !1) {
  return function(n, r, i, a) {
    let o = n[r];
    if (He(o) && at(o) && !at(i))
      return !1;
    if (!t && (!yr(i) && !He(i) && (o = U(o), i = U(i)), !$(n) && at(o) && !at(i)))
      return o.value = i, !0;
    const s = $(n) && Zi(r) ? Number(r) < n.length : j(n, r), l = Reflect.set(n, r, i, a);
    return n === U(a) && (s ? pn(i, o) && Wt(n, "set", r, i) : Wt(n, "add", r, i)), l;
  };
}
function _h(t, e) {
  const n = j(t, e);
  t[e];
  const r = Reflect.deleteProperty(t, e);
  return r && n && Wt(t, "delete", e, void 0), r;
}
function kh(t, e) {
  const n = Reflect.has(t, e);
  return (!Ji(e) || !Ls.has(e)) && mt(t, "has", e), n;
}
function Ah(t) {
  return mt(t, "iterate", $(t) ? "length" : xe), Reflect.ownKeys(t);
}
const zs = {
  get: ph,
  set: xh,
  deleteProperty: _h,
  has: kh,
  ownKeys: Ah
}, Eh = {
  get: vh,
  set(t, e) {
    return !0;
  },
  deleteProperty(t, e) {
    return !0;
  }
}, Ch = /* @__PURE__ */ ft({}, zs, {
  get: gh,
  set: wh
}), na = (t) => t, Ir = (t) => Reflect.getPrototypeOf(t);
function Hn(t, e, n = !1, r = !1) {
  t = t.__v_raw;
  const i = U(t), a = U(e);
  n || (e !== a && mt(i, "get", e), mt(i, "get", a));
  const { has: o } = Ir(i), s = r ? na : n ? oa : gn;
  if (o.call(i, e))
    return s(t.get(e));
  if (o.call(i, a))
    return s(t.get(a));
  t !== i && t.get(e);
}
function jn(t, e = !1) {
  const n = this.__v_raw, r = U(n), i = U(t);
  return e || (t !== i && mt(r, "has", t), mt(r, "has", i)), t === i ? n.has(t) : n.has(t) || n.has(i);
}
function Bn(t, e = !1) {
  return t = t.__v_raw, !e && mt(U(t), "iterate", xe), Reflect.get(t, "size", t);
}
function Qa(t) {
  t = U(t);
  const e = U(this);
  return Ir(e).has.call(e, t) || (e.add(t), Wt(e, "add", t, t)), this;
}
function to(t, e) {
  e = U(e);
  const n = U(this), { has: r, get: i } = Ir(n);
  let a = r.call(n, t);
  a || (t = U(t), a = r.call(n, t));
  const o = i.call(n, t);
  return n.set(t, e), a ? pn(e, o) && Wt(n, "set", t, e) : Wt(n, "add", t, e), this;
}
function eo(t) {
  const e = U(this), { has: n, get: r } = Ir(e);
  let i = n.call(e, t);
  i || (t = U(t), i = n.call(e, t)), r && r.call(e, t);
  const a = e.delete(t);
  return i && Wt(e, "delete", t, void 0), a;
}
function no() {
  const t = U(this), e = t.size !== 0, n = t.clear();
  return e && Wt(t, "clear", void 0, void 0), n;
}
function Un(t, e) {
  return function(r, i) {
    const a = this, o = a.__v_raw, s = U(o), l = e ? na : t ? oa : gn;
    return !t && mt(s, "iterate", xe), o.forEach((f, c) => r.call(i, l(f), l(c), a));
  };
}
function Yn(t, e, n) {
  return function(...r) {
    const i = this.__v_raw, a = U(i), o = Me(a), s = t === "entries" || t === Symbol.iterator && o, l = t === "keys" && o, f = i[t](...r), c = n ? na : e ? oa : gn;
    return !e && mt(a, "iterate", l ? gi : xe), {
      // iterator protocol
      next() {
        const { value: d, done: m } = f.next();
        return m ? { value: d, done: m } : {
          value: s ? [c(d[0]), c(d[1])] : c(d),
          done: m
        };
      },
      // iterable protocol
      [Symbol.iterator]() {
        return this;
      }
    };
  };
}
function Zt(t) {
  return function(...e) {
    return t === "delete" ? !1 : this;
  };
}
function Sh() {
  const t = {
    get(a) {
      return Hn(this, a);
    },
    get size() {
      return Bn(this);
    },
    has: jn,
    add: Qa,
    set: to,
    delete: eo,
    clear: no,
    forEach: Un(!1, !1)
  }, e = {
    get(a) {
      return Hn(this, a, !1, !0);
    },
    get size() {
      return Bn(this);
    },
    has: jn,
    add: Qa,
    set: to,
    delete: eo,
    clear: no,
    forEach: Un(!1, !0)
  }, n = {
    get(a) {
      return Hn(this, a, !0);
    },
    get size() {
      return Bn(this, !0);
    },
    has(a) {
      return jn.call(this, a, !0);
    },
    add: Zt(
      "add"
      /* TriggerOpTypes.ADD */
    ),
    set: Zt(
      "set"
      /* TriggerOpTypes.SET */
    ),
    delete: Zt(
      "delete"
      /* TriggerOpTypes.DELETE */
    ),
    clear: Zt(
      "clear"
      /* TriggerOpTypes.CLEAR */
    ),
    forEach: Un(!0, !1)
  }, r = {
    get(a) {
      return Hn(this, a, !0, !0);
    },
    get size() {
      return Bn(this, !0);
    },
    has(a) {
      return jn.call(this, a, !0);
    },
    add: Zt(
      "add"
      /* TriggerOpTypes.ADD */
    ),
    set: Zt(
      "set"
      /* TriggerOpTypes.SET */
    ),
    delete: Zt(
      "delete"
      /* TriggerOpTypes.DELETE */
    ),
    clear: Zt(
      "clear"
      /* TriggerOpTypes.CLEAR */
    ),
    forEach: Un(!0, !0)
  };
  return ["keys", "values", "entries", Symbol.iterator].forEach((a) => {
    t[a] = Yn(a, !1, !1), n[a] = Yn(a, !0, !1), e[a] = Yn(a, !1, !0), r[a] = Yn(a, !0, !0);
  }), [
    t,
    n,
    e,
    r
  ];
}
const [Oh, Ph, Th, Nh] = /* @__PURE__ */ Sh();
function ra(t, e) {
  const n = e ? t ? Nh : Th : t ? Ph : Oh;
  return (r, i, a) => i === "__v_isReactive" ? !t : i === "__v_isReadonly" ? t : i === "__v_raw" ? r : Reflect.get(j(n, i) && i in r ? n : r, i, a);
}
const Ih = {
  get: /* @__PURE__ */ ra(!1, !1)
}, Mh = {
  get: /* @__PURE__ */ ra(!1, !0)
}, Rh = {
  get: /* @__PURE__ */ ra(!0, !1)
}, Hs = /* @__PURE__ */ new WeakMap(), js = /* @__PURE__ */ new WeakMap(), Bs = /* @__PURE__ */ new WeakMap(), Fh = /* @__PURE__ */ new WeakMap();
function $h(t) {
  switch (t) {
    case "Object":
    case "Array":
      return 1;
    case "Map":
    case "Set":
    case "WeakMap":
    case "WeakSet":
      return 2;
    default:
      return 0;
  }
}
function Lh(t) {
  return t.__v_skip || !Object.isExtensible(t) ? 0 : $h(ih(t));
}
function ia(t) {
  return He(t) ? t : aa(t, !1, zs, Ih, Hs);
}
function Dh(t) {
  return aa(t, !1, Ch, Mh, js);
}
function Us(t) {
  return aa(t, !0, Eh, Rh, Bs);
}
function aa(t, e, n, r, i) {
  if (!X(t) || t.__v_raw && !(e && t.__v_isReactive))
    return t;
  const a = i.get(t);
  if (a)
    return a;
  const o = Lh(t);
  if (o === 0)
    return t;
  const s = new Proxy(t, o === 2 ? r : n);
  return i.set(t, s), s;
}
function Re(t) {
  return He(t) ? Re(t.__v_raw) : !!(t && t.__v_isReactive);
}
function He(t) {
  return !!(t && t.__v_isReadonly);
}
function yr(t) {
  return !!(t && t.__v_isShallow);
}
function Ys(t) {
  return Re(t) || He(t);
}
function U(t) {
  const e = t && t.__v_raw;
  return e ? U(e) : t;
}
function Gs(t) {
  return vr(t, "__v_skip", !0), t;
}
const gn = (t) => X(t) ? ia(t) : t, oa = (t) => X(t) ? Us(t) : t;
function Ws(t) {
  ne && At && (t = U(t), $s(t.dep || (t.dep = Qi())));
}
function Vs(t, e) {
  t = U(t);
  const n = t.dep;
  n && vi(n);
}
function at(t) {
  return !!(t && t.__v_isRef === !0);
}
function Xr(t) {
  return zh(t, !1);
}
function zh(t, e) {
  return at(t) ? t : new Hh(t, e);
}
class Hh {
  constructor(e, n) {
    this.__v_isShallow = n, this.dep = void 0, this.__v_isRef = !0, this._rawValue = n ? e : U(e), this._value = n ? e : gn(e);
  }
  get value() {
    return Ws(this), this._value;
  }
  set value(e) {
    const n = this.__v_isShallow || yr(e) || He(e);
    e = n ? e : U(e), pn(e, this._rawValue) && (this._rawValue = e, this._value = n ? e : gn(e), Vs(this));
  }
}
function yi(t) {
  return at(t) ? t.value : t;
}
const jh = {
  get: (t, e, n) => yi(Reflect.get(t, e, n)),
  set: (t, e, n, r) => {
    const i = t[e];
    return at(i) && !at(n) ? (i.value = n, !0) : Reflect.set(t, e, n, r);
  }
};
function Ks(t) {
  return Re(t) ? t : new Proxy(t, jh);
}
var qs;
class Bh {
  constructor(e, n, r, i) {
    this._setter = n, this.dep = void 0, this.__v_isRef = !0, this[qs] = !1, this._dirty = !0, this.effect = new ta(e, () => {
      this._dirty || (this._dirty = !0, Vs(this));
    }), this.effect.computed = this, this.effect.active = this._cacheable = !i, this.__v_isReadonly = r;
  }
  get value() {
    const e = U(this);
    return Ws(e), (e._dirty || !e._cacheable) && (e._dirty = !1, e._value = e.effect.run()), e._value;
  }
  set value(e) {
    this._setter(e);
  }
}
qs = "__v_isReadonly";
function Uh(t, e, n = !1) {
  let r, i;
  const a = L(t);
  return a ? (r = t, i = Ot) : (r = t.get, i = t.set), new Bh(r, i, a || !i, n);
}
function re(t, e, n, r) {
  let i;
  try {
    i = r ? t(...r) : t();
  } catch (a) {
    Mr(a, e, n);
  }
  return i;
}
function Pt(t, e, n, r) {
  if (L(t)) {
    const a = re(t, e, n, r);
    return a && Ps(a) && a.catch((o) => {
      Mr(o, e, n);
    }), a;
  }
  const i = [];
  for (let a = 0; a < t.length; a++)
    i.push(Pt(t[a], e, n, r));
  return i;
}
function Mr(t, e, n, r = !0) {
  const i = e ? e.vnode : null;
  if (e) {
    let a = e.parent;
    const o = e.proxy, s = n;
    for (; a; ) {
      const f = a.ec;
      if (f) {
        for (let c = 0; c < f.length; c++)
          if (f[c](t, o, s) === !1)
            return;
      }
      a = a.parent;
    }
    const l = e.appContext.config.errorHandler;
    if (l) {
      re(l, null, 10, [t, o, s]);
      return;
    }
  }
  Yh(t, n, i, r);
}
function Yh(t, e, n, r = !0) {
  console.error(t);
}
let vn = !1, bi = !1;
const it = [];
let Ft = 0;
const Fe = [];
let Ut = null, he = 0;
const Xs = /* @__PURE__ */ Promise.resolve();
let sa = null;
function Gh(t) {
  const e = sa || Xs;
  return t ? e.then(this ? t.bind(this) : t) : e;
}
function Wh(t) {
  let e = Ft + 1, n = it.length;
  for (; e < n; ) {
    const r = e + n >>> 1;
    yn(it[r]) < t ? e = r + 1 : n = r;
  }
  return e;
}
function la(t) {
  (!it.length || !it.includes(t, vn && t.allowRecurse ? Ft + 1 : Ft)) && (t.id == null ? it.push(t) : it.splice(Wh(t.id), 0, t), Js());
}
function Js() {
  !vn && !bi && (bi = !0, sa = Xs.then(Qs));
}
function Vh(t) {
  const e = it.indexOf(t);
  e > Ft && it.splice(e, 1);
}
function Kh(t) {
  $(t) ? Fe.push(...t) : (!Ut || !Ut.includes(t, t.allowRecurse ? he + 1 : he)) && Fe.push(t), Js();
}
function ro(t, e = vn ? Ft + 1 : 0) {
  for (; e < it.length; e++) {
    const n = it[e];
    n && n.pre && (it.splice(e, 1), e--, n());
  }
}
function Zs(t) {
  if (Fe.length) {
    const e = [...new Set(Fe)];
    if (Fe.length = 0, Ut) {
      Ut.push(...e);
      return;
    }
    for (Ut = e, Ut.sort((n, r) => yn(n) - yn(r)), he = 0; he < Ut.length; he++)
      Ut[he]();
    Ut = null, he = 0;
  }
}
const yn = (t) => t.id == null ? 1 / 0 : t.id, qh = (t, e) => {
  const n = yn(t) - yn(e);
  if (n === 0) {
    if (t.pre && !e.pre)
      return -1;
    if (e.pre && !t.pre)
      return 1;
  }
  return n;
};
function Qs(t) {
  bi = !1, vn = !0, it.sort(qh);
  const e = Ot;
  try {
    for (Ft = 0; Ft < it.length; Ft++) {
      const n = it[Ft];
      n && n.active !== !1 && re(
        n,
        null,
        14
        /* ErrorCodes.SCHEDULER */
      );
    }
  } finally {
    Ft = 0, it.length = 0, Zs(), vn = !1, sa = null, (it.length || Fe.length) && Qs();
  }
}
function Xh(t, e, ...n) {
  if (t.isUnmounted)
    return;
  const r = t.vnode.props || q;
  let i = n;
  const a = e.startsWith("update:"), o = a && e.slice(7);
  if (o && o in r) {
    const c = `${o === "modelValue" ? "model" : o}Modifiers`, { number: d, trim: m } = r[c] || q;
    m && (i = n.map((g) => nt(g) ? g.trim() : g)), d && (i = n.map(sh));
  }
  let s, l = r[s = Kr(e)] || // also try camelCase event handler (#2249)
  r[s = Kr(ze(e))];
  !l && a && (l = r[s = Kr(Ye(e))]), l && Pt(l, t, 6, i);
  const f = r[s + "Once"];
  if (f) {
    if (!t.emitted)
      t.emitted = {};
    else if (t.emitted[s])
      return;
    t.emitted[s] = !0, Pt(f, t, 6, i);
  }
}
function tl(t, e, n = !1) {
  const r = e.emitsCache, i = r.get(t);
  if (i !== void 0)
    return i;
  const a = t.emits;
  let o = {}, s = !1;
  if (!L(t)) {
    const l = (f) => {
      const c = tl(f, e, !0);
      c && (s = !0, ft(o, c));
    };
    !n && e.mixins.length && e.mixins.forEach(l), t.extends && l(t.extends), t.mixins && t.mixins.forEach(l);
  }
  return !a && !s ? (X(t) && r.set(t, null), null) : ($(a) ? a.forEach((l) => o[l] = null) : ft(o, a), X(t) && r.set(t, o), o);
}
function Rr(t, e) {
  return !t || !Pr(e) ? !1 : (e = e.slice(2).replace(/Once$/, ""), j(t, e[0].toLowerCase() + e.slice(1)) || j(t, Ye(e)) || j(t, e));
}
let $t = null, el = null;
function br(t) {
  const e = $t;
  return $t = t, el = t && t.type.__scopeId || null, e;
}
function Jh(t, e = $t, n) {
  if (!e || t._n)
    return t;
  const r = (...i) => {
    r._d && uo(-1);
    const a = br(e);
    let o;
    try {
      o = t(...i);
    } finally {
      br(a), r._d && uo(1);
    }
    return o;
  };
  return r._n = !0, r._c = !0, r._d = !0, r;
}
function Jr(t) {
  const { type: e, vnode: n, proxy: r, withProxy: i, props: a, propsOptions: [o], slots: s, attrs: l, emit: f, render: c, renderCache: d, data: m, setupState: g, ctx: P, inheritAttrs: O } = t;
  let D, _;
  const C = br(t);
  try {
    if (n.shapeFlag & 4) {
      const F = i || r;
      D = Rt(c.call(F, F, d, a, g, m, P)), _ = l;
    } else {
      const F = e;
      D = Rt(F.length > 1 ? F(a, { attrs: l, slots: s, emit: f }) : F(
        a,
        null
        /* we know it doesn't need it */
      )), _ = e.props ? l : Zh(l);
    }
  } catch (F) {
    sn.length = 0, Mr(
      F,
      t,
      1
      /* ErrorCodes.RENDER_FUNCTION */
    ), D = ot(bn);
  }
  let E = D;
  if (_ && O !== !1) {
    const F = Object.keys(_), { shapeFlag: B } = E;
    F.length && B & 7 && (o && F.some(qi) && (_ = Qh(_, o)), E = je(E, _));
  }
  return n.dirs && (E = je(E), E.dirs = E.dirs ? E.dirs.concat(n.dirs) : n.dirs), n.transition && (E.transition = n.transition), D = E, br(C), D;
}
const Zh = (t) => {
  let e;
  for (const n in t)
    (n === "class" || n === "style" || Pr(n)) && ((e || (e = {}))[n] = t[n]);
  return e;
}, Qh = (t, e) => {
  const n = {};
  for (const r in t)
    (!qi(r) || !(r.slice(9) in e)) && (n[r] = t[r]);
  return n;
};
function tm(t, e, n) {
  const { props: r, children: i, component: a } = t, { props: o, children: s, patchFlag: l } = e, f = a.emitsOptions;
  if (e.dirs || e.transition)
    return !0;
  if (n && l >= 0) {
    if (l & 1024)
      return !0;
    if (l & 16)
      return r ? io(r, o, f) : !!o;
    if (l & 8) {
      const c = e.dynamicProps;
      for (let d = 0; d < c.length; d++) {
        const m = c[d];
        if (o[m] !== r[m] && !Rr(f, m))
          return !0;
      }
    }
  } else
    return (i || s) && (!s || !s.$stable) ? !0 : r === o ? !1 : r ? o ? io(r, o, f) : !0 : !!o;
  return !1;
}
function io(t, e, n) {
  const r = Object.keys(e);
  if (r.length !== Object.keys(t).length)
    return !0;
  for (let i = 0; i < r.length; i++) {
    const a = r[i];
    if (e[a] !== t[a] && !Rr(n, a))
      return !0;
  }
  return !1;
}
function em({ vnode: t, parent: e }, n) {
  for (; e && e.subTree === t; )
    (t = e.vnode).el = n, e = e.parent;
}
const nm = (t) => t.__isSuspense;
function rm(t, e) {
  e && e.pendingBranch ? $(t) ? e.effects.push(...t) : e.effects.push(t) : Kh(t);
}
function im(t, e) {
  if (tt) {
    let n = tt.provides;
    const r = tt.parent && tt.parent.provides;
    r === n && (n = tt.provides = Object.create(r)), n[t] = e;
  }
}
function ar(t, e, n = !1) {
  const r = tt || $t;
  if (r) {
    const i = r.parent == null ? r.vnode.appContext && r.vnode.appContext.provides : r.parent.provides;
    if (i && t in i)
      return i[t];
    if (arguments.length > 1)
      return n && L(e) ? e.call(r.proxy) : e;
  }
}
const Gn = {};
function or(t, e, n) {
  return nl(t, e, n);
}
function nl(t, e, { immediate: n, deep: r, flush: i, onTrack: a, onTrigger: o } = q) {
  const s = uh() === (tt == null ? void 0 : tt.scope) ? tt : null;
  let l, f = !1, c = !1;
  if (at(t) ? (l = () => t.value, f = yr(t)) : Re(t) ? (l = () => t, r = !0) : $(t) ? (c = !0, f = t.some((E) => Re(E) || yr(E)), l = () => t.map((E) => {
    if (at(E))
      return E.value;
    if (Re(E))
      return Oe(E);
    if (L(E))
      return re(
        E,
        s,
        2
        /* ErrorCodes.WATCH_GETTER */
      );
  })) : L(t) ? e ? l = () => re(
    t,
    s,
    2
    /* ErrorCodes.WATCH_GETTER */
  ) : l = () => {
    if (!(s && s.isUnmounted))
      return d && d(), Pt(t, s, 3, [m]);
  } : l = Ot, e && r) {
    const E = l;
    l = () => Oe(E());
  }
  let d, m = (E) => {
    d = _.onStop = () => {
      re(
        E,
        s,
        4
        /* ErrorCodes.WATCH_CLEANUP */
      );
    };
  }, g;
  if (wn)
    if (m = Ot, e ? n && Pt(e, s, 3, [
      l(),
      c ? [] : void 0,
      m
    ]) : l(), i === "sync") {
      const E = qm();
      g = E.__watcherHandles || (E.__watcherHandles = []);
    } else
      return Ot;
  let P = c ? new Array(t.length).fill(Gn) : Gn;
  const O = () => {
    if (_.active)
      if (e) {
        const E = _.run();
        (r || f || (c ? E.some((F, B) => pn(F, P[B])) : pn(E, P))) && (d && d(), Pt(e, s, 3, [
          E,
          // pass undefined as the old value when it's changed for the first time
          P === Gn ? void 0 : c && P[0] === Gn ? [] : P,
          m
        ]), P = E);
      } else
        _.run();
  };
  O.allowRecurse = !!e;
  let D;
  i === "sync" ? D = O : i === "post" ? D = () => dt(O, s && s.suspense) : (O.pre = !0, s && (O.id = s.uid), D = () => la(O));
  const _ = new ta(l, D);
  e ? n ? O() : P = _.run() : i === "post" ? dt(_.run.bind(_), s && s.suspense) : _.run();
  const C = () => {
    _.stop(), s && s.scope && Xi(s.scope.effects, _);
  };
  return g && g.push(C), C;
}
function am(t, e, n) {
  const r = this.proxy, i = nt(t) ? t.includes(".") ? rl(r, t) : () => r[t] : t.bind(r, r);
  let a;
  L(e) ? a = e : (a = e.handler, n = e);
  const o = tt;
  Be(this);
  const s = nl(i, a.bind(r), n);
  return o ? Be(o) : we(), s;
}
function rl(t, e) {
  const n = e.split(".");
  return () => {
    let r = t;
    for (let i = 0; i < n.length && r; i++)
      r = r[n[i]];
    return r;
  };
}
function Oe(t, e) {
  if (!X(t) || t.__v_skip || (e = e || /* @__PURE__ */ new Set(), e.has(t)))
    return t;
  if (e.add(t), at(t))
    Oe(t.value, e);
  else if ($(t))
    for (let n = 0; n < t.length; n++)
      Oe(t[n], e);
  else if (Os(t) || Me(t))
    t.forEach((n) => {
      Oe(n, e);
    });
  else if (Ns(t))
    for (const n in t)
      Oe(t[n], e);
  return t;
}
function Fr(t) {
  return L(t) ? { setup: t, name: t.name } : t;
}
const sr = (t) => !!t.type.__asyncLoader, il = (t) => t.type.__isKeepAlive;
function om(t, e) {
  al(t, "a", e);
}
function sm(t, e) {
  al(t, "da", e);
}
function al(t, e, n = tt) {
  const r = t.__wdc || (t.__wdc = () => {
    let i = n;
    for (; i; ) {
      if (i.isDeactivated)
        return;
      i = i.parent;
    }
    return t();
  });
  if ($r(e, r, n), n) {
    let i = n.parent;
    for (; i && i.parent; )
      il(i.parent.vnode) && lm(r, e, n, i), i = i.parent;
  }
}
function lm(t, e, n, r) {
  const i = $r(
    e,
    t,
    r,
    !0
    /* prepend */
  );
  sl(() => {
    Xi(r[e], i);
  }, n);
}
function $r(t, e, n = tt, r = !1) {
  if (n) {
    const i = n[t] || (n[t] = []), a = e.__weh || (e.__weh = (...o) => {
      if (n.isUnmounted)
        return;
      Ge(), Be(n);
      const s = Pt(e, n, t, o);
      return we(), We(), s;
    });
    return r ? i.unshift(a) : i.push(a), a;
  }
}
const Xt = (t) => (e, n = tt) => (
  // post-create lifecycle registrations are noops during SSR (except for serverPrefetch)
  (!wn || t === "sp") && $r(t, (...r) => e(...r), n)
), fm = Xt(
  "bm"
  /* LifecycleHooks.BEFORE_MOUNT */
), ol = Xt(
  "m"
  /* LifecycleHooks.MOUNTED */
), cm = Xt(
  "bu"
  /* LifecycleHooks.BEFORE_UPDATE */
), um = Xt(
  "u"
  /* LifecycleHooks.UPDATED */
), dm = Xt(
  "bum"
  /* LifecycleHooks.BEFORE_UNMOUNT */
), sl = Xt(
  "um"
  /* LifecycleHooks.UNMOUNTED */
), hm = Xt(
  "sp"
  /* LifecycleHooks.SERVER_PREFETCH */
), mm = Xt(
  "rtg"
  /* LifecycleHooks.RENDER_TRIGGERED */
), pm = Xt(
  "rtc"
  /* LifecycleHooks.RENDER_TRACKED */
);
function gm(t, e = tt) {
  $r("ec", t, e);
}
function ce(t, e, n, r) {
  const i = t.dirs, a = e && e.dirs;
  for (let o = 0; o < i.length; o++) {
    const s = i[o];
    a && (s.oldValue = a[o].value);
    let l = s.dir[r];
    l && (Ge(), Pt(l, n, 8, [
      t.el,
      s,
      t,
      e
    ]), We());
  }
}
const vm = Symbol(), xi = (t) => t ? xl(t) ? da(t) || t.proxy : xi(t.parent) : null, on = (
  // Move PURE marker to new line to workaround compiler discarding it
  // due to type annotation
  /* @__PURE__ */ ft(/* @__PURE__ */ Object.create(null), {
    $: (t) => t,
    $el: (t) => t.vnode.el,
    $data: (t) => t.data,
    $props: (t) => t.props,
    $attrs: (t) => t.attrs,
    $slots: (t) => t.slots,
    $refs: (t) => t.refs,
    $parent: (t) => xi(t.parent),
    $root: (t) => xi(t.root),
    $emit: (t) => t.emit,
    $options: (t) => fa(t),
    $forceUpdate: (t) => t.f || (t.f = () => la(t.update)),
    $nextTick: (t) => t.n || (t.n = Gh.bind(t.proxy)),
    $watch: (t) => am.bind(t)
  })
), Zr = (t, e) => t !== q && !t.__isScriptSetup && j(t, e), ym = {
  get({ _: t }, e) {
    const { ctx: n, setupState: r, data: i, props: a, accessCache: o, type: s, appContext: l } = t;
    let f;
    if (e[0] !== "$") {
      const g = o[e];
      if (g !== void 0)
        switch (g) {
          case 1:
            return r[e];
          case 2:
            return i[e];
          case 4:
            return n[e];
          case 3:
            return a[e];
        }
      else {
        if (Zr(r, e))
          return o[e] = 1, r[e];
        if (i !== q && j(i, e))
          return o[e] = 2, i[e];
        if (
          // only cache other properties when instance has declared (thus stable)
          // props
          (f = t.propsOptions[0]) && j(f, e)
        )
          return o[e] = 3, a[e];
        if (n !== q && j(n, e))
          return o[e] = 4, n[e];
        wi && (o[e] = 0);
      }
    }
    const c = on[e];
    let d, m;
    if (c)
      return e === "$attrs" && mt(t, "get", e), c(t);
    if (
      // css module (injected by vue-loader)
      (d = s.__cssModules) && (d = d[e])
    )
      return d;
    if (n !== q && j(n, e))
      return o[e] = 4, n[e];
    if (
      // global properties
      m = l.config.globalProperties, j(m, e)
    )
      return m[e];
  },
  set({ _: t }, e, n) {
    const { data: r, setupState: i, ctx: a } = t;
    return Zr(i, e) ? (i[e] = n, !0) : r !== q && j(r, e) ? (r[e] = n, !0) : j(t.props, e) || e[0] === "$" && e.slice(1) in t ? !1 : (a[e] = n, !0);
  },
  has({ _: { data: t, setupState: e, accessCache: n, ctx: r, appContext: i, propsOptions: a } }, o) {
    let s;
    return !!n[o] || t !== q && j(t, o) || Zr(e, o) || (s = a[0]) && j(s, o) || j(r, o) || j(on, o) || j(i.config.globalProperties, o);
  },
  defineProperty(t, e, n) {
    return n.get != null ? t._.accessCache[e] = 0 : j(n, "value") && this.set(t, e, n.value, null), Reflect.defineProperty(t, e, n);
  }
};
let wi = !0;
function bm(t) {
  const e = fa(t), n = t.proxy, r = t.ctx;
  wi = !1, e.beforeCreate && ao(
    e.beforeCreate,
    t,
    "bc"
    /* LifecycleHooks.BEFORE_CREATE */
  );
  const {
    // state
    data: i,
    computed: a,
    methods: o,
    watch: s,
    provide: l,
    inject: f,
    // lifecycle
    created: c,
    beforeMount: d,
    mounted: m,
    beforeUpdate: g,
    updated: P,
    activated: O,
    deactivated: D,
    beforeDestroy: _,
    beforeUnmount: C,
    destroyed: E,
    unmounted: F,
    render: B,
    renderTracked: ct,
    renderTriggered: rt,
    errorCaptured: xt,
    serverPrefetch: yt,
    // public API
    expose: Ht,
    inheritAttrs: Ke,
    // assets
    components: In,
    directives: Mn,
    filters: Ur
  } = e;
  if (f && xm(f, r, null, t.appContext.config.unwrapInjectedRef), o)
    for (const J in o) {
      const G = o[J];
      L(G) && (r[J] = G.bind(n));
    }
  if (i) {
    const J = i.call(n, n);
    X(J) && (t.data = ia(J));
  }
  if (wi = !0, a)
    for (const J in a) {
      const G = a[J], le = L(G) ? G.bind(n, n) : L(G.get) ? G.get.bind(n, n) : Ot, Rn = !L(G) && L(G.set) ? G.set.bind(n) : Ot, fe = bt({
        get: le,
        set: Rn
      });
      Object.defineProperty(r, J, {
        enumerable: !0,
        configurable: !0,
        get: () => fe.value,
        set: (Nt) => fe.value = Nt
      });
    }
  if (s)
    for (const J in s)
      ll(s[J], r, n, J);
  if (l) {
    const J = L(l) ? l.call(n) : l;
    Reflect.ownKeys(J).forEach((G) => {
      im(G, J[G]);
    });
  }
  c && ao(
    c,
    t,
    "c"
    /* LifecycleHooks.CREATED */
  );
  function st(J, G) {
    $(G) ? G.forEach((le) => J(le.bind(n))) : G && J(G.bind(n));
  }
  if (st(fm, d), st(ol, m), st(cm, g), st(um, P), st(om, O), st(sm, D), st(gm, xt), st(pm, ct), st(mm, rt), st(dm, C), st(sl, F), st(hm, yt), $(Ht))
    if (Ht.length) {
      const J = t.exposed || (t.exposed = {});
      Ht.forEach((G) => {
        Object.defineProperty(J, G, {
          get: () => n[G],
          set: (le) => n[G] = le
        });
      });
    } else
      t.exposed || (t.exposed = {});
  B && t.render === Ot && (t.render = B), Ke != null && (t.inheritAttrs = Ke), In && (t.components = In), Mn && (t.directives = Mn);
}
function xm(t, e, n = Ot, r = !1) {
  $(t) && (t = _i(t));
  for (const i in t) {
    const a = t[i];
    let o;
    X(a) ? "default" in a ? o = ar(
      a.from || i,
      a.default,
      !0
      /* treat default function as factory */
    ) : o = ar(a.from || i) : o = ar(a), at(o) && r ? Object.defineProperty(e, i, {
      enumerable: !0,
      configurable: !0,
      get: () => o.value,
      set: (s) => o.value = s
    }) : e[i] = o;
  }
}
function ao(t, e, n) {
  Pt($(t) ? t.map((r) => r.bind(e.proxy)) : t.bind(e.proxy), e, n);
}
function ll(t, e, n, r) {
  const i = r.includes(".") ? rl(n, r) : () => n[r];
  if (nt(t)) {
    const a = e[t];
    L(a) && or(i, a);
  } else if (L(t))
    or(i, t.bind(n));
  else if (X(t))
    if ($(t))
      t.forEach((a) => ll(a, e, n, r));
    else {
      const a = L(t.handler) ? t.handler.bind(n) : e[t.handler];
      L(a) && or(i, a, t);
    }
}
function fa(t) {
  const e = t.type, { mixins: n, extends: r } = e, { mixins: i, optionsCache: a, config: { optionMergeStrategies: o } } = t.appContext, s = a.get(e);
  let l;
  return s ? l = s : !i.length && !n && !r ? l = e : (l = {}, i.length && i.forEach((f) => xr(l, f, o, !0)), xr(l, e, o)), X(e) && a.set(e, l), l;
}
function xr(t, e, n, r = !1) {
  const { mixins: i, extends: a } = e;
  a && xr(t, a, n, !0), i && i.forEach((o) => xr(t, o, n, !0));
  for (const o in e)
    if (!(r && o === "expose")) {
      const s = wm[o] || n && n[o];
      t[o] = s ? s(t[o], e[o]) : e[o];
    }
  return t;
}
const wm = {
  data: oo,
  props: de,
  emits: de,
  // objects
  methods: de,
  computed: de,
  // lifecycle
  beforeCreate: lt,
  created: lt,
  beforeMount: lt,
  mounted: lt,
  beforeUpdate: lt,
  updated: lt,
  beforeDestroy: lt,
  beforeUnmount: lt,
  destroyed: lt,
  unmounted: lt,
  activated: lt,
  deactivated: lt,
  errorCaptured: lt,
  serverPrefetch: lt,
  // assets
  components: de,
  directives: de,
  // watch
  watch: km,
  // provide / inject
  provide: oo,
  inject: _m
};
function oo(t, e) {
  return e ? t ? function() {
    return ft(L(t) ? t.call(this, this) : t, L(e) ? e.call(this, this) : e);
  } : e : t;
}
function _m(t, e) {
  return de(_i(t), _i(e));
}
function _i(t) {
  if ($(t)) {
    const e = {};
    for (let n = 0; n < t.length; n++)
      e[t[n]] = t[n];
    return e;
  }
  return t;
}
function lt(t, e) {
  return t ? [...new Set([].concat(t, e))] : e;
}
function de(t, e) {
  return t ? ft(ft(/* @__PURE__ */ Object.create(null), t), e) : e;
}
function km(t, e) {
  if (!t)
    return e;
  if (!e)
    return t;
  const n = ft(/* @__PURE__ */ Object.create(null), t);
  for (const r in e)
    n[r] = lt(t[r], e[r]);
  return n;
}
function Am(t, e, n, r = !1) {
  const i = {}, a = {};
  vr(a, Dr, 1), t.propsDefaults = /* @__PURE__ */ Object.create(null), fl(t, e, i, a);
  for (const o in t.propsOptions[0])
    o in i || (i[o] = void 0);
  n ? t.props = r ? i : Dh(i) : t.type.props ? t.props = i : t.props = a, t.attrs = a;
}
function Em(t, e, n, r) {
  const { props: i, attrs: a, vnode: { patchFlag: o } } = t, s = U(i), [l] = t.propsOptions;
  let f = !1;
  if (
    // always force full diff in dev
    // - #1942 if hmr is enabled with sfc component
    // - vite#872 non-sfc component used by sfc component
    (r || o > 0) && !(o & 16)
  ) {
    if (o & 8) {
      const c = t.vnode.dynamicProps;
      for (let d = 0; d < c.length; d++) {
        let m = c[d];
        if (Rr(t.emitsOptions, m))
          continue;
        const g = e[m];
        if (l)
          if (j(a, m))
            g !== a[m] && (a[m] = g, f = !0);
          else {
            const P = ze(m);
            i[P] = ki(
              l,
              s,
              P,
              g,
              t,
              !1
              /* isAbsent */
            );
          }
        else
          g !== a[m] && (a[m] = g, f = !0);
      }
    }
  } else {
    fl(t, e, i, a) && (f = !0);
    let c;
    for (const d in s)
      (!e || // for camelCase
      !j(e, d) && // it's possible the original props was passed in as kebab-case
      // and converted to camelCase (#955)
      ((c = Ye(d)) === d || !j(e, c))) && (l ? n && // for camelCase
      (n[d] !== void 0 || // for kebab-case
      n[c] !== void 0) && (i[d] = ki(
        l,
        s,
        d,
        void 0,
        t,
        !0
        /* isAbsent */
      )) : delete i[d]);
    if (a !== s)
      for (const d in a)
        (!e || !j(e, d)) && (delete a[d], f = !0);
  }
  f && Wt(t, "set", "$attrs");
}
function fl(t, e, n, r) {
  const [i, a] = t.propsOptions;
  let o = !1, s;
  if (e)
    for (let l in e) {
      if (ir(l))
        continue;
      const f = e[l];
      let c;
      i && j(i, c = ze(l)) ? !a || !a.includes(c) ? n[c] = f : (s || (s = {}))[c] = f : Rr(t.emitsOptions, l) || (!(l in r) || f !== r[l]) && (r[l] = f, o = !0);
    }
  if (a) {
    const l = U(n), f = s || q;
    for (let c = 0; c < a.length; c++) {
      const d = a[c];
      n[d] = ki(i, l, d, f[d], t, !j(f, d));
    }
  }
  return o;
}
function ki(t, e, n, r, i, a) {
  const o = t[n];
  if (o != null) {
    const s = j(o, "default");
    if (s && r === void 0) {
      const l = o.default;
      if (o.type !== Function && L(l)) {
        const { propsDefaults: f } = i;
        n in f ? r = f[n] : (Be(i), r = f[n] = l.call(null, e), we());
      } else
        r = l;
    }
    o[
      0
      /* BooleanFlags.shouldCast */
    ] && (a && !s ? r = !1 : o[
      1
      /* BooleanFlags.shouldCastTrue */
    ] && (r === "" || r === Ye(n)) && (r = !0));
  }
  return r;
}
function cl(t, e, n = !1) {
  const r = e.propsCache, i = r.get(t);
  if (i)
    return i;
  const a = t.props, o = {}, s = [];
  let l = !1;
  if (!L(t)) {
    const c = (d) => {
      l = !0;
      const [m, g] = cl(d, e, !0);
      ft(o, m), g && s.push(...g);
    };
    !n && e.mixins.length && e.mixins.forEach(c), t.extends && c(t.extends), t.mixins && t.mixins.forEach(c);
  }
  if (!a && !l)
    return X(t) && r.set(t, Ie), Ie;
  if ($(a))
    for (let c = 0; c < a.length; c++) {
      const d = ze(a[c]);
      so(d) && (o[d] = q);
    }
  else if (a)
    for (const c in a) {
      const d = ze(c);
      if (so(d)) {
        const m = a[c], g = o[d] = $(m) || L(m) ? { type: m } : Object.assign({}, m);
        if (g) {
          const P = co(Boolean, g.type), O = co(String, g.type);
          g[
            0
            /* BooleanFlags.shouldCast */
          ] = P > -1, g[
            1
            /* BooleanFlags.shouldCastTrue */
          ] = O < 0 || P < O, (P > -1 || j(g, "default")) && s.push(d);
        }
      }
    }
  const f = [o, s];
  return X(t) && r.set(t, f), f;
}
function so(t) {
  return t[0] !== "$";
}
function lo(t) {
  const e = t && t.toString().match(/^\s*(function|class) (\w+)/);
  return e ? e[2] : t === null ? "null" : "";
}
function fo(t, e) {
  return lo(t) === lo(e);
}
function co(t, e) {
  return $(e) ? e.findIndex((n) => fo(n, t)) : L(e) && fo(e, t) ? 0 : -1;
}
const ul = (t) => t[0] === "_" || t === "$stable", ca = (t) => $(t) ? t.map(Rt) : [Rt(t)], Cm = (t, e, n) => {
  if (e._n)
    return e;
  const r = Jh((...i) => ca(e(...i)), n);
  return r._c = !1, r;
}, dl = (t, e, n) => {
  const r = t._ctx;
  for (const i in t) {
    if (ul(i))
      continue;
    const a = t[i];
    if (L(a))
      e[i] = Cm(i, a, r);
    else if (a != null) {
      const o = ca(a);
      e[i] = () => o;
    }
  }
}, hl = (t, e) => {
  const n = ca(e);
  t.slots.default = () => n;
}, Sm = (t, e) => {
  if (t.vnode.shapeFlag & 32) {
    const n = e._;
    n ? (t.slots = U(e), vr(e, "_", n)) : dl(e, t.slots = {});
  } else
    t.slots = {}, e && hl(t, e);
  vr(t.slots, Dr, 1);
}, Om = (t, e, n) => {
  const { vnode: r, slots: i } = t;
  let a = !0, o = q;
  if (r.shapeFlag & 32) {
    const s = e._;
    s ? n && s === 1 ? a = !1 : (ft(i, e), !n && s === 1 && delete i._) : (a = !e.$stable, dl(e, i)), o = e;
  } else
    e && (hl(t, e), o = { default: 1 });
  if (a)
    for (const s in i)
      !ul(s) && !(s in o) && delete i[s];
};
function ml() {
  return {
    app: null,
    config: {
      isNativeTag: eh,
      performance: !1,
      globalProperties: {},
      optionMergeStrategies: {},
      errorHandler: void 0,
      warnHandler: void 0,
      compilerOptions: {}
    },
    mixins: [],
    components: {},
    directives: {},
    provides: /* @__PURE__ */ Object.create(null),
    optionsCache: /* @__PURE__ */ new WeakMap(),
    propsCache: /* @__PURE__ */ new WeakMap(),
    emitsCache: /* @__PURE__ */ new WeakMap()
  };
}
let Pm = 0;
function Tm(t, e) {
  return function(r, i = null) {
    L(r) || (r = Object.assign({}, r)), i != null && !X(i) && (i = null);
    const a = ml(), o = /* @__PURE__ */ new Set();
    let s = !1;
    const l = a.app = {
      _uid: Pm++,
      _component: r,
      _props: i,
      _container: null,
      _context: a,
      _instance: null,
      version: Xm,
      get config() {
        return a.config;
      },
      set config(f) {
      },
      use(f, ...c) {
        return o.has(f) || (f && L(f.install) ? (o.add(f), f.install(l, ...c)) : L(f) && (o.add(f), f(l, ...c))), l;
      },
      mixin(f) {
        return a.mixins.includes(f) || a.mixins.push(f), l;
      },
      component(f, c) {
        return c ? (a.components[f] = c, l) : a.components[f];
      },
      directive(f, c) {
        return c ? (a.directives[f] = c, l) : a.directives[f];
      },
      mount(f, c, d) {
        if (!s) {
          const m = ot(r, i);
          return m.appContext = a, c && e ? e(m, f) : t(m, f, d), s = !0, l._container = f, f.__vue_app__ = l, da(m.component) || m.component.proxy;
        }
      },
      unmount() {
        s && (t(null, l._container), delete l._container.__vue_app__);
      },
      provide(f, c) {
        return a.provides[f] = c, l;
      }
    };
    return l;
  };
}
function Ai(t, e, n, r, i = !1) {
  if ($(t)) {
    t.forEach((m, g) => Ai(m, e && ($(e) ? e[g] : e), n, r, i));
    return;
  }
  if (sr(r) && !i)
    return;
  const a = r.shapeFlag & 4 ? da(r.component) || r.component.proxy : r.el, o = i ? null : a, { i: s, r: l } = t, f = e && e.r, c = s.refs === q ? s.refs = {} : s.refs, d = s.setupState;
  if (f != null && f !== l && (nt(f) ? (c[f] = null, j(d, f) && (d[f] = null)) : at(f) && (f.value = null)), L(l))
    re(l, s, 12, [o, c]);
  else {
    const m = nt(l), g = at(l);
    if (m || g) {
      const P = () => {
        if (t.f) {
          const O = m ? j(d, l) ? d[l] : c[l] : l.value;
          i ? $(O) && Xi(O, a) : $(O) ? O.includes(a) || O.push(a) : m ? (c[l] = [a], j(d, l) && (d[l] = c[l])) : (l.value = [a], t.k && (c[t.k] = l.value));
        } else
          m ? (c[l] = o, j(d, l) && (d[l] = o)) : g && (l.value = o, t.k && (c[t.k] = o));
      };
      o ? (P.id = -1, dt(P, n)) : P();
    }
  }
}
const dt = rm;
function Nm(t) {
  return Im(t);
}
function Im(t, e) {
  const n = lh();
  n.__VUE__ = !0;
  const { insert: r, remove: i, patchProp: a, createElement: o, createText: s, createComment: l, setText: f, setElementText: c, parentNode: d, nextSibling: m, setScopeId: g = Ot, insertStaticContent: P } = t, O = (u, h, p, y = null, v = null, w = null, A = !1, x = null, k = !!h.dynamicChildren) => {
    if (u === h)
      return;
    u && !Je(u, h) && (y = Fn(u), Nt(u, v, w, !0), u = null), h.patchFlag === -2 && (k = !1, h.dynamicChildren = null);
    const { type: b, ref: I, shapeFlag: T } = h;
    switch (b) {
      case Lr:
        D(u, h, p, y);
        break;
      case bn:
        _(u, h, p, y);
        break;
      case Qr:
        u == null && C(h, p, y, A);
        break;
      case Yt:
        In(u, h, p, y, v, w, A, x, k);
        break;
      default:
        T & 1 ? B(u, h, p, y, v, w, A, x, k) : T & 6 ? Mn(u, h, p, y, v, w, A, x, k) : (T & 64 || T & 128) && b.process(u, h, p, y, v, w, A, x, k, Ee);
    }
    I != null && v && Ai(I, u && u.ref, w, h || u, !h);
  }, D = (u, h, p, y) => {
    if (u == null)
      r(h.el = s(h.children), p, y);
    else {
      const v = h.el = u.el;
      h.children !== u.children && f(v, h.children);
    }
  }, _ = (u, h, p, y) => {
    u == null ? r(h.el = l(h.children || ""), p, y) : h.el = u.el;
  }, C = (u, h, p, y) => {
    [u.el, u.anchor] = P(u.children, h, p, y, u.el, u.anchor);
  }, E = ({ el: u, anchor: h }, p, y) => {
    let v;
    for (; u && u !== h; )
      v = m(u), r(u, p, y), u = v;
    r(h, p, y);
  }, F = ({ el: u, anchor: h }) => {
    let p;
    for (; u && u !== h; )
      p = m(u), i(u), u = p;
    i(h);
  }, B = (u, h, p, y, v, w, A, x, k) => {
    A = A || h.type === "svg", u == null ? ct(h, p, y, v, w, A, x, k) : yt(u, h, v, w, A, x, k);
  }, ct = (u, h, p, y, v, w, A, x) => {
    let k, b;
    const { type: I, props: T, shapeFlag: M, transition: R, dirs: z } = u;
    if (k = u.el = o(u.type, w, T && T.is, T), M & 8 ? c(k, u.children) : M & 16 && xt(u.children, k, null, y, v, w && I !== "foreignObject", A, x), z && ce(u, null, y, "created"), rt(k, u, u.scopeId, A, y), T) {
      for (const Y in T)
        Y !== "value" && !ir(Y) && a(k, Y, null, T[Y], w, u.children, y, v, jt);
      "value" in T && a(k, "value", null, T.value), (b = T.onVnodeBeforeMount) && Mt(b, y, u);
    }
    z && ce(u, null, y, "beforeMount");
    const W = (!v || v && !v.pendingBranch) && R && !R.persisted;
    W && R.beforeEnter(k), r(k, h, p), ((b = T && T.onVnodeMounted) || W || z) && dt(() => {
      b && Mt(b, y, u), W && R.enter(k), z && ce(u, null, y, "mounted");
    }, v);
  }, rt = (u, h, p, y, v) => {
    if (p && g(u, p), y)
      for (let w = 0; w < y.length; w++)
        g(u, y[w]);
    if (v) {
      let w = v.subTree;
      if (h === w) {
        const A = v.vnode;
        rt(u, A, A.scopeId, A.slotScopeIds, v.parent);
      }
    }
  }, xt = (u, h, p, y, v, w, A, x, k = 0) => {
    for (let b = k; b < u.length; b++) {
      const I = u[b] = x ? ee(u[b]) : Rt(u[b]);
      O(null, I, h, p, y, v, w, A, x);
    }
  }, yt = (u, h, p, y, v, w, A) => {
    const x = h.el = u.el;
    let { patchFlag: k, dynamicChildren: b, dirs: I } = h;
    k |= u.patchFlag & 16;
    const T = u.props || q, M = h.props || q;
    let R;
    p && ue(p, !1), (R = M.onVnodeBeforeUpdate) && Mt(R, p, h, u), I && ce(h, u, p, "beforeUpdate"), p && ue(p, !0);
    const z = v && h.type !== "foreignObject";
    if (b ? Ht(u.dynamicChildren, b, x, p, y, z, w) : A || G(u, h, x, null, p, y, z, w, !1), k > 0) {
      if (k & 16)
        Ke(x, h, T, M, p, y, v);
      else if (k & 2 && T.class !== M.class && a(x, "class", null, M.class, v), k & 4 && a(x, "style", T.style, M.style, v), k & 8) {
        const W = h.dynamicProps;
        for (let Y = 0; Y < W.length; Y++) {
          const Q = W[Y], wt = T[Q], Ce = M[Q];
          (Ce !== wt || Q === "value") && a(x, Q, wt, Ce, v, u.children, p, y, jt);
        }
      }
      k & 1 && u.children !== h.children && c(x, h.children);
    } else
      !A && b == null && Ke(x, h, T, M, p, y, v);
    ((R = M.onVnodeUpdated) || I) && dt(() => {
      R && Mt(R, p, h, u), I && ce(h, u, p, "updated");
    }, y);
  }, Ht = (u, h, p, y, v, w, A) => {
    for (let x = 0; x < h.length; x++) {
      const k = u[x], b = h[x], I = (
        // oldVNode may be an errored async setup() component inside Suspense
        // which will not have a mounted element
        k.el && // - In the case of a Fragment, we need to provide the actual parent
        // of the Fragment itself so it can move its children.
        (k.type === Yt || // - In the case of different nodes, there is going to be a replacement
        // which also requires the correct parent container
        !Je(k, b) || // - In the case of a component, it could contain anything.
        k.shapeFlag & 70) ? d(k.el) : (
          // In other cases, the parent container is not actually used so we
          // just pass the block element here to avoid a DOM parentNode call.
          p
        )
      );
      O(k, b, I, null, y, v, w, A, !0);
    }
  }, Ke = (u, h, p, y, v, w, A) => {
    if (p !== y) {
      if (p !== q)
        for (const x in p)
          !ir(x) && !(x in y) && a(u, x, p[x], null, A, h.children, v, w, jt);
      for (const x in y) {
        if (ir(x))
          continue;
        const k = y[x], b = p[x];
        k !== b && x !== "value" && a(u, x, b, k, A, h.children, v, w, jt);
      }
      "value" in y && a(u, "value", p.value, y.value);
    }
  }, In = (u, h, p, y, v, w, A, x, k) => {
    const b = h.el = u ? u.el : s(""), I = h.anchor = u ? u.anchor : s("");
    let { patchFlag: T, dynamicChildren: M, slotScopeIds: R } = h;
    R && (x = x ? x.concat(R) : R), u == null ? (r(b, p, y), r(I, p, y), xt(h.children, p, I, v, w, A, x, k)) : T > 0 && T & 64 && M && // #2715 the previous fragment could've been a BAILed one as a result
    // of renderSlot() with no valid children
    u.dynamicChildren ? (Ht(u.dynamicChildren, M, p, v, w, A, x), // #2080 if the stable fragment has a key, it's a <template v-for> that may
    //  get moved around. Make sure all root level vnodes inherit el.
    // #2134 or if it's a component root, it may also get moved around
    // as the component is being moved.
    (h.key != null || v && h === v.subTree) && pl(
      u,
      h,
      !0
      /* shallow */
    )) : G(u, h, p, I, v, w, A, x, k);
  }, Mn = (u, h, p, y, v, w, A, x, k) => {
    h.slotScopeIds = x, u == null ? h.shapeFlag & 512 ? v.ctx.activate(h, p, y, A, k) : Ur(h, p, y, v, w, A, k) : Sa(u, h, k);
  }, Ur = (u, h, p, y, v, w, A) => {
    const x = u.component = Bm(u, y, v);
    if (il(u) && (x.ctx.renderer = Ee), Um(x), x.asyncDep) {
      if (v && v.registerDep(x, st), !u.el) {
        const k = x.subTree = ot(bn);
        _(null, k, h, p);
      }
      return;
    }
    st(x, u, h, p, v, w, A);
  }, Sa = (u, h, p) => {
    const y = h.component = u.component;
    if (tm(u, h, p))
      if (y.asyncDep && !y.asyncResolved) {
        J(y, h, p);
        return;
      } else
        y.next = h, Vh(y.update), y.update();
    else
      h.el = u.el, y.vnode = h;
  }, st = (u, h, p, y, v, w, A) => {
    const x = () => {
      if (u.isMounted) {
        let { next: I, bu: T, u: M, parent: R, vnode: z } = u, W = I, Y;
        ue(u, !1), I ? (I.el = z.el, J(u, I, A)) : I = z, T && qr(T), (Y = I.props && I.props.onVnodeBeforeUpdate) && Mt(Y, R, I, z), ue(u, !0);
        const Q = Jr(u), wt = u.subTree;
        u.subTree = Q, O(
          wt,
          Q,
          // parent may have changed if it's in a teleport
          d(wt.el),
          // anchor may have changed if it's in a fragment
          Fn(wt),
          u,
          v,
          w
        ), I.el = Q.el, W === null && em(u, Q.el), M && dt(M, v), (Y = I.props && I.props.onVnodeUpdated) && dt(() => Mt(Y, R, I, z), v);
      } else {
        let I;
        const { el: T, props: M } = h, { bm: R, m: z, parent: W } = u, Y = sr(h);
        if (ue(u, !1), R && qr(R), !Y && (I = M && M.onVnodeBeforeMount) && Mt(I, W, h), ue(u, !0), T && Gr) {
          const Q = () => {
            u.subTree = Jr(u), Gr(T, u.subTree, u, v, null);
          };
          Y ? h.type.__asyncLoader().then(
            // note: we are moving the render call into an async callback,
            // which means it won't track dependencies - but it's ok because
            // a server-rendered async wrapper is already in resolved state
            // and it will never need to change.
            () => !u.isUnmounted && Q()
          ) : Q();
        } else {
          const Q = u.subTree = Jr(u);
          O(null, Q, p, y, u, v, w), h.el = Q.el;
        }
        if (z && dt(z, v), !Y && (I = M && M.onVnodeMounted)) {
          const Q = h;
          dt(() => Mt(I, W, Q), v);
        }
        (h.shapeFlag & 256 || W && sr(W.vnode) && W.vnode.shapeFlag & 256) && u.a && dt(u.a, v), u.isMounted = !0, h = p = y = null;
      }
    }, k = u.effect = new ta(
      x,
      () => la(b),
      u.scope
      // track it in component's effect scope
    ), b = u.update = () => k.run();
    b.id = u.uid, ue(u, !0), b();
  }, J = (u, h, p) => {
    h.component = u;
    const y = u.vnode.props;
    u.vnode = h, u.next = null, Em(u, h.props, y, p), Om(u, h.children, p), Ge(), ro(), We();
  }, G = (u, h, p, y, v, w, A, x, k = !1) => {
    const b = u && u.children, I = u ? u.shapeFlag : 0, T = h.children, { patchFlag: M, shapeFlag: R } = h;
    if (M > 0) {
      if (M & 128) {
        Rn(b, T, p, y, v, w, A, x, k);
        return;
      } else if (M & 256) {
        le(b, T, p, y, v, w, A, x, k);
        return;
      }
    }
    R & 8 ? (I & 16 && jt(b, v, w), T !== b && c(p, T)) : I & 16 ? R & 16 ? Rn(b, T, p, y, v, w, A, x, k) : jt(b, v, w, !0) : (I & 8 && c(p, ""), R & 16 && xt(T, p, y, v, w, A, x, k));
  }, le = (u, h, p, y, v, w, A, x, k) => {
    u = u || Ie, h = h || Ie;
    const b = u.length, I = h.length, T = Math.min(b, I);
    let M;
    for (M = 0; M < T; M++) {
      const R = h[M] = k ? ee(h[M]) : Rt(h[M]);
      O(u[M], R, p, null, v, w, A, x, k);
    }
    b > I ? jt(u, v, w, !0, !1, T) : xt(h, p, y, v, w, A, x, k, T);
  }, Rn = (u, h, p, y, v, w, A, x, k) => {
    let b = 0;
    const I = h.length;
    let T = u.length - 1, M = I - 1;
    for (; b <= T && b <= M; ) {
      const R = u[b], z = h[b] = k ? ee(h[b]) : Rt(h[b]);
      if (Je(R, z))
        O(R, z, p, null, v, w, A, x, k);
      else
        break;
      b++;
    }
    for (; b <= T && b <= M; ) {
      const R = u[T], z = h[M] = k ? ee(h[M]) : Rt(h[M]);
      if (Je(R, z))
        O(R, z, p, null, v, w, A, x, k);
      else
        break;
      T--, M--;
    }
    if (b > T) {
      if (b <= M) {
        const R = M + 1, z = R < I ? h[R].el : y;
        for (; b <= M; )
          O(null, h[b] = k ? ee(h[b]) : Rt(h[b]), p, z, v, w, A, x, k), b++;
      }
    } else if (b > M)
      for (; b <= T; )
        Nt(u[b], v, w, !0), b++;
    else {
      const R = b, z = b, W = /* @__PURE__ */ new Map();
      for (b = z; b <= M; b++) {
        const pt = h[b] = k ? ee(h[b]) : Rt(h[b]);
        pt.key != null && W.set(pt.key, b);
      }
      let Y, Q = 0;
      const wt = M - z + 1;
      let Ce = !1, Ta = 0;
      const qe = new Array(wt);
      for (b = 0; b < wt; b++)
        qe[b] = 0;
      for (b = R; b <= T; b++) {
        const pt = u[b];
        if (Q >= wt) {
          Nt(pt, v, w, !0);
          continue;
        }
        let It;
        if (pt.key != null)
          It = W.get(pt.key);
        else
          for (Y = z; Y <= M; Y++)
            if (qe[Y - z] === 0 && Je(pt, h[Y])) {
              It = Y;
              break;
            }
        It === void 0 ? Nt(pt, v, w, !0) : (qe[It - z] = b + 1, It >= Ta ? Ta = It : Ce = !0, O(pt, h[It], p, null, v, w, A, x, k), Q++);
      }
      const Na = Ce ? Mm(qe) : Ie;
      for (Y = Na.length - 1, b = wt - 1; b >= 0; b--) {
        const pt = z + b, It = h[pt], Ia = pt + 1 < I ? h[pt + 1].el : y;
        qe[b] === 0 ? O(null, It, p, Ia, v, w, A, x, k) : Ce && (Y < 0 || b !== Na[Y] ? fe(
          It,
          p,
          Ia,
          2
          /* MoveType.REORDER */
        ) : Y--);
      }
    }
  }, fe = (u, h, p, y, v = null) => {
    const { el: w, type: A, transition: x, children: k, shapeFlag: b } = u;
    if (b & 6) {
      fe(u.component.subTree, h, p, y);
      return;
    }
    if (b & 128) {
      u.suspense.move(h, p, y);
      return;
    }
    if (b & 64) {
      A.move(u, h, p, Ee);
      return;
    }
    if (A === Yt) {
      r(w, h, p);
      for (let T = 0; T < k.length; T++)
        fe(k[T], h, p, y);
      r(u.anchor, h, p);
      return;
    }
    if (A === Qr) {
      E(u, h, p);
      return;
    }
    if (y !== 2 && b & 1 && x)
      if (y === 0)
        x.beforeEnter(w), r(w, h, p), dt(() => x.enter(w), v);
      else {
        const { leave: T, delayLeave: M, afterLeave: R } = x, z = () => r(w, h, p), W = () => {
          T(w, () => {
            z(), R && R();
          });
        };
        M ? M(w, z, W) : W();
      }
    else
      r(w, h, p);
  }, Nt = (u, h, p, y = !1, v = !1) => {
    const { type: w, props: A, ref: x, children: k, dynamicChildren: b, shapeFlag: I, patchFlag: T, dirs: M } = u;
    if (x != null && Ai(x, null, p, u, !0), I & 256) {
      h.ctx.deactivate(u);
      return;
    }
    const R = I & 1 && M, z = !sr(u);
    let W;
    if (z && (W = A && A.onVnodeBeforeUnmount) && Mt(W, h, u), I & 6)
      ef(u.component, p, y);
    else {
      if (I & 128) {
        u.suspense.unmount(p, y);
        return;
      }
      R && ce(u, null, h, "beforeUnmount"), I & 64 ? u.type.remove(u, h, p, v, Ee, y) : b && // #1153: fast path should not be taken for non-stable (v-for) fragments
      (w !== Yt || T > 0 && T & 64) ? jt(b, h, p, !1, !0) : (w === Yt && T & 384 || !v && I & 16) && jt(k, h, p), y && Oa(u);
    }
    (z && (W = A && A.onVnodeUnmounted) || R) && dt(() => {
      W && Mt(W, h, u), R && ce(u, null, h, "unmounted");
    }, p);
  }, Oa = (u) => {
    const { type: h, el: p, anchor: y, transition: v } = u;
    if (h === Yt) {
      tf(p, y);
      return;
    }
    if (h === Qr) {
      F(u);
      return;
    }
    const w = () => {
      i(p), v && !v.persisted && v.afterLeave && v.afterLeave();
    };
    if (u.shapeFlag & 1 && v && !v.persisted) {
      const { leave: A, delayLeave: x } = v, k = () => A(p, w);
      x ? x(u.el, w, k) : k();
    } else
      w();
  }, tf = (u, h) => {
    let p;
    for (; u !== h; )
      p = m(u), i(u), u = p;
    i(h);
  }, ef = (u, h, p) => {
    const { bum: y, scope: v, update: w, subTree: A, um: x } = u;
    y && qr(y), v.stop(), w && (w.active = !1, Nt(A, u, h, p)), x && dt(x, h), dt(() => {
      u.isUnmounted = !0;
    }, h), h && h.pendingBranch && !h.isUnmounted && u.asyncDep && !u.asyncResolved && u.suspenseId === h.pendingId && (h.deps--, h.deps === 0 && h.resolve());
  }, jt = (u, h, p, y = !1, v = !1, w = 0) => {
    for (let A = w; A < u.length; A++)
      Nt(u[A], h, p, y, v);
  }, Fn = (u) => u.shapeFlag & 6 ? Fn(u.component.subTree) : u.shapeFlag & 128 ? u.suspense.next() : m(u.anchor || u.el), Pa = (u, h, p) => {
    u == null ? h._vnode && Nt(h._vnode, null, null, !0) : O(h._vnode || null, u, h, null, null, null, p), ro(), Zs(), h._vnode = u;
  }, Ee = {
    p: O,
    um: Nt,
    m: fe,
    r: Oa,
    mt: Ur,
    mc: xt,
    pc: G,
    pbc: Ht,
    n: Fn,
    o: t
  };
  let Yr, Gr;
  return e && ([Yr, Gr] = e(Ee)), {
    render: Pa,
    hydrate: Yr,
    createApp: Tm(Pa, Yr)
  };
}
function ue({ effect: t, update: e }, n) {
  t.allowRecurse = e.allowRecurse = n;
}
function pl(t, e, n = !1) {
  const r = t.children, i = e.children;
  if ($(r) && $(i))
    for (let a = 0; a < r.length; a++) {
      const o = r[a];
      let s = i[a];
      s.shapeFlag & 1 && !s.dynamicChildren && ((s.patchFlag <= 0 || s.patchFlag === 32) && (s = i[a] = ee(i[a]), s.el = o.el), n || pl(o, s)), s.type === Lr && (s.el = o.el);
    }
}
function Mm(t) {
  const e = t.slice(), n = [0];
  let r, i, a, o, s;
  const l = t.length;
  for (r = 0; r < l; r++) {
    const f = t[r];
    if (f !== 0) {
      if (i = n[n.length - 1], t[i] < f) {
        e[r] = i, n.push(r);
        continue;
      }
      for (a = 0, o = n.length - 1; a < o; )
        s = a + o >> 1, t[n[s]] < f ? a = s + 1 : o = s;
      f < t[n[a]] && (a > 0 && (e[r] = n[a - 1]), n[a] = r);
    }
  }
  for (a = n.length, o = n[a - 1]; a-- > 0; )
    n[a] = o, o = e[o];
  return n;
}
const Rm = (t) => t.__isTeleport, Yt = Symbol(void 0), Lr = Symbol(void 0), bn = Symbol(void 0), Qr = Symbol(void 0), sn = [];
let Ct = null;
function ti(t = !1) {
  sn.push(Ct = t ? null : []);
}
function Fm() {
  sn.pop(), Ct = sn[sn.length - 1] || null;
}
let xn = 1;
function uo(t) {
  xn += t;
}
function gl(t) {
  return t.dynamicChildren = xn > 0 ? Ct || Ie : null, Fm(), xn > 0 && Ct && Ct.push(t), t;
}
function $m(t, e, n, r, i, a) {
  return gl(yl(
    t,
    e,
    n,
    r,
    i,
    a,
    !0
    /* isBlock */
  ));
}
function ho(t, e, n, r, i) {
  return gl(ot(
    t,
    e,
    n,
    r,
    i,
    !0
    /* isBlock: prevent a block from tracking itself */
  ));
}
function Ei(t) {
  return t ? t.__v_isVNode === !0 : !1;
}
function Je(t, e) {
  return t.type === e.type && t.key === e.key;
}
const Dr = "__vInternal", vl = ({ key: t }) => t ?? null, lr = ({ ref: t, ref_key: e, ref_for: n }) => t != null ? nt(t) || at(t) || L(t) ? { i: $t, r: t, k: e, f: !!n } : t : null;
function yl(t, e = null, n = null, r = 0, i = null, a = t === Yt ? 0 : 1, o = !1, s = !1) {
  const l = {
    __v_isVNode: !0,
    __v_skip: !0,
    type: t,
    props: e,
    key: e && vl(e),
    ref: e && lr(e),
    scopeId: el,
    slotScopeIds: null,
    children: n,
    component: null,
    suspense: null,
    ssContent: null,
    ssFallback: null,
    dirs: null,
    transition: null,
    el: null,
    anchor: null,
    target: null,
    targetAnchor: null,
    staticCount: 0,
    shapeFlag: a,
    patchFlag: r,
    dynamicProps: i,
    dynamicChildren: null,
    appContext: null,
    ctx: $t
  };
  return s ? (ua(l, n), a & 128 && t.normalize(l)) : n && (l.shapeFlag |= nt(n) ? 8 : 16), xn > 0 && // avoid a block node from tracking itself
  !o && // has current parent block
  Ct && // presence of a patch flag indicates this node needs patching on updates.
  // component nodes also should always be patched, because even if the
  // component doesn't need to update, it needs to persist the instance on to
  // the next vnode so that it can be properly unmounted later.
  (l.patchFlag > 0 || a & 6) && // the EVENTS flag is only for hydration and if it is the only flag, the
  // vnode should not be considered dynamic due to handler caching.
  l.patchFlag !== 32 && Ct.push(l), l;
}
const ot = Lm;
function Lm(t, e = null, n = null, r = 0, i = null, a = !1) {
  if ((!t || t === vm) && (t = bn), Ei(t)) {
    const s = je(
      t,
      e,
      !0
      /* mergeRef: true */
    );
    return n && ua(s, n), xn > 0 && !a && Ct && (s.shapeFlag & 6 ? Ct[Ct.indexOf(t)] = s : Ct.push(s)), s.patchFlag |= -2, s;
  }
  if (Vm(t) && (t = t.__vccOpts), e) {
    e = Dm(e);
    let { class: s, style: l } = e;
    s && !nt(s) && (e.class = Ki(s)), X(l) && (Ys(l) && !$(l) && (l = ft({}, l)), e.style = Vi(l));
  }
  const o = nt(t) ? 1 : nm(t) ? 128 : Rm(t) ? 64 : X(t) ? 4 : L(t) ? 2 : 0;
  return yl(t, e, n, r, i, o, a, !0);
}
function Dm(t) {
  return t ? Ys(t) || Dr in t ? ft({}, t) : t : null;
}
function je(t, e, n = !1) {
  const { props: r, ref: i, patchFlag: a, children: o } = t, s = e ? zm(r || {}, e) : r;
  return {
    __v_isVNode: !0,
    __v_skip: !0,
    type: t.type,
    props: s,
    key: s && vl(s),
    ref: e && e.ref ? (
      // #2078 in the case of <component :is="vnode" ref="extra"/>
      // if the vnode itself already has a ref, cloneVNode will need to merge
      // the refs so the single vnode can be set on multiple refs
      n && i ? $(i) ? i.concat(lr(e)) : [i, lr(e)] : lr(e)
    ) : i,
    scopeId: t.scopeId,
    slotScopeIds: t.slotScopeIds,
    children: o,
    target: t.target,
    targetAnchor: t.targetAnchor,
    staticCount: t.staticCount,
    shapeFlag: t.shapeFlag,
    // if the vnode is cloned with extra props, we can no longer assume its
    // existing patch flag to be reliable and need to add the FULL_PROPS flag.
    // note: preserve flag for fragments since they use the flag for children
    // fast paths only.
    patchFlag: e && t.type !== Yt ? a === -1 ? 16 : a | 16 : a,
    dynamicProps: t.dynamicProps,
    dynamicChildren: t.dynamicChildren,
    appContext: t.appContext,
    dirs: t.dirs,
    transition: t.transition,
    // These should technically only be non-null on mounted VNodes. However,
    // they *should* be copied for kept-alive vnodes. So we just always copy
    // them since them being non-null during a mount doesn't affect the logic as
    // they will simply be overwritten.
    component: t.component,
    suspense: t.suspense,
    ssContent: t.ssContent && je(t.ssContent),
    ssFallback: t.ssFallback && je(t.ssFallback),
    el: t.el,
    anchor: t.anchor,
    ctx: t.ctx,
    ce: t.ce
  };
}
function bl(t = " ", e = 0) {
  return ot(Lr, null, t, e);
}
function Rt(t) {
  return t == null || typeof t == "boolean" ? ot(bn) : $(t) ? ot(
    Yt,
    null,
    // #3666, avoid reference pollution when reusing vnode
    t.slice()
  ) : typeof t == "object" ? ee(t) : ot(Lr, null, String(t));
}
function ee(t) {
  return t.el === null && t.patchFlag !== -1 || t.memo ? t : je(t);
}
function ua(t, e) {
  let n = 0;
  const { shapeFlag: r } = t;
  if (e == null)
    e = null;
  else if ($(e))
    n = 16;
  else if (typeof e == "object")
    if (r & 65) {
      const i = e.default;
      i && (i._c && (i._d = !1), ua(t, i()), i._c && (i._d = !0));
      return;
    } else {
      n = 32;
      const i = e._;
      !i && !(Dr in e) ? e._ctx = $t : i === 3 && $t && ($t.slots._ === 1 ? e._ = 1 : (e._ = 2, t.patchFlag |= 1024));
    }
  else
    L(e) ? (e = { default: e, _ctx: $t }, n = 32) : (e = String(e), r & 64 ? (n = 16, e = [bl(e)]) : n = 8);
  t.children = e, t.shapeFlag |= n;
}
function zm(...t) {
  const e = {};
  for (let n = 0; n < t.length; n++) {
    const r = t[n];
    for (const i in r)
      if (i === "class")
        e.class !== r.class && (e.class = Ki([e.class, r.class]));
      else if (i === "style")
        e.style = Vi([e.style, r.style]);
      else if (Pr(i)) {
        const a = e[i], o = r[i];
        o && a !== o && !($(a) && a.includes(o)) && (e[i] = a ? [].concat(a, o) : o);
      } else
        i !== "" && (e[i] = r[i]);
  }
  return e;
}
function Mt(t, e, n, r = null) {
  Pt(t, e, 7, [
    n,
    r
  ]);
}
const Hm = ml();
let jm = 0;
function Bm(t, e, n) {
  const r = t.type, i = (e ? e.appContext : t.appContext) || Hm, a = {
    uid: jm++,
    vnode: t,
    type: r,
    parent: e,
    appContext: i,
    root: null,
    next: null,
    subTree: null,
    effect: null,
    update: null,
    scope: new fh(
      !0
      /* detached */
    ),
    render: null,
    proxy: null,
    exposed: null,
    exposeProxy: null,
    withProxy: null,
    provides: e ? e.provides : Object.create(i.provides),
    accessCache: null,
    renderCache: [],
    // local resolved assets
    components: null,
    directives: null,
    // resolved props and emits options
    propsOptions: cl(r, i),
    emitsOptions: tl(r, i),
    // emit
    emit: null,
    emitted: null,
    // props default value
    propsDefaults: q,
    // inheritAttrs
    inheritAttrs: r.inheritAttrs,
    // state
    ctx: q,
    data: q,
    props: q,
    attrs: q,
    slots: q,
    refs: q,
    setupState: q,
    setupContext: null,
    // suspense related
    suspense: n,
    suspenseId: n ? n.pendingId : 0,
    asyncDep: null,
    asyncResolved: !1,
    // lifecycle hooks
    // not using enums here because it results in computed properties
    isMounted: !1,
    isUnmounted: !1,
    isDeactivated: !1,
    bc: null,
    c: null,
    bm: null,
    m: null,
    bu: null,
    u: null,
    um: null,
    bum: null,
    da: null,
    a: null,
    rtg: null,
    rtc: null,
    ec: null,
    sp: null
  };
  return a.ctx = { _: a }, a.root = e ? e.root : a, a.emit = Xh.bind(null, a), t.ce && t.ce(a), a;
}
let tt = null;
const Be = (t) => {
  tt = t, t.scope.on();
}, we = () => {
  tt && tt.scope.off(), tt = null;
};
function xl(t) {
  return t.vnode.shapeFlag & 4;
}
let wn = !1;
function Um(t, e = !1) {
  wn = e;
  const { props: n, children: r } = t.vnode, i = xl(t);
  Am(t, n, i, e), Sm(t, r);
  const a = i ? Ym(t, e) : void 0;
  return wn = !1, a;
}
function Ym(t, e) {
  const n = t.type;
  t.accessCache = /* @__PURE__ */ Object.create(null), t.proxy = Gs(new Proxy(t.ctx, ym));
  const { setup: r } = n;
  if (r) {
    const i = t.setupContext = r.length > 1 ? Wm(t) : null;
    Be(t), Ge();
    const a = re(r, t, 0, [t.props, i]);
    if (We(), we(), Ps(a)) {
      if (a.then(we, we), e)
        return a.then((o) => {
          mo(t, o, e);
        }).catch((o) => {
          Mr(
            o,
            t,
            0
            /* ErrorCodes.SETUP_FUNCTION */
          );
        });
      t.asyncDep = a;
    } else
      mo(t, a, e);
  } else
    wl(t, e);
}
function mo(t, e, n) {
  L(e) ? t.type.__ssrInlineRender ? t.ssrRender = e : t.render = e : X(e) && (t.setupState = Ks(e)), wl(t, n);
}
let po;
function wl(t, e, n) {
  const r = t.type;
  if (!t.render) {
    if (!e && po && !r.render) {
      const i = r.template || fa(t).template;
      if (i) {
        const { isCustomElement: a, compilerOptions: o } = t.appContext.config, { delimiters: s, compilerOptions: l } = r, f = ft(ft({
          isCustomElement: a,
          delimiters: s
        }, o), l);
        r.render = po(i, f);
      }
    }
    t.render = r.render || Ot;
  }
  Be(t), Ge(), bm(t), We(), we();
}
function Gm(t) {
  return new Proxy(t.attrs, {
    get(e, n) {
      return mt(t, "get", "$attrs"), e[n];
    }
  });
}
function Wm(t) {
  const e = (r) => {
    t.exposed = r || {};
  };
  let n;
  return {
    get attrs() {
      return n || (n = Gm(t));
    },
    slots: t.slots,
    emit: t.emit,
    expose: e
  };
}
function da(t) {
  if (t.exposed)
    return t.exposeProxy || (t.exposeProxy = new Proxy(Ks(Gs(t.exposed)), {
      get(e, n) {
        if (n in e)
          return e[n];
        if (n in on)
          return on[n](t);
      },
      has(e, n) {
        return n in e || n in on;
      }
    }));
}
function Vm(t) {
  return L(t) && "__vccOpts" in t;
}
const bt = (t, e) => Uh(t, e, wn);
function _l(t, e, n) {
  const r = arguments.length;
  return r === 2 ? X(e) && !$(e) ? Ei(e) ? ot(t, null, [e]) : ot(t, e) : ot(t, null, e) : (r > 3 ? n = Array.prototype.slice.call(arguments, 2) : r === 3 && Ei(n) && (n = [n]), ot(t, e, n));
}
const Km = Symbol(""), qm = () => ar(Km), Xm = "3.2.47", Jm = "http://www.w3.org/2000/svg", me = typeof document < "u" ? document : null, go = me && /* @__PURE__ */ me.createElement("template"), Zm = {
  insert: (t, e, n) => {
    e.insertBefore(t, n || null);
  },
  remove: (t) => {
    const e = t.parentNode;
    e && e.removeChild(t);
  },
  createElement: (t, e, n, r) => {
    const i = e ? me.createElementNS(Jm, t) : me.createElement(t, n ? { is: n } : void 0);
    return t === "select" && r && r.multiple != null && i.setAttribute("multiple", r.multiple), i;
  },
  createText: (t) => me.createTextNode(t),
  createComment: (t) => me.createComment(t),
  setText: (t, e) => {
    t.nodeValue = e;
  },
  setElementText: (t, e) => {
    t.textContent = e;
  },
  parentNode: (t) => t.parentNode,
  nextSibling: (t) => t.nextSibling,
  querySelector: (t) => me.querySelector(t),
  setScopeId(t, e) {
    t.setAttribute(e, "");
  },
  // __UNSAFE__
  // Reason: innerHTML.
  // Static content here can only come from compiled templates.
  // As long as the user only uses trusted templates, this is safe.
  insertStaticContent(t, e, n, r, i, a) {
    const o = n ? n.previousSibling : e.lastChild;
    if (i && (i === a || i.nextSibling))
      for (; e.insertBefore(i.cloneNode(!0), n), !(i === a || !(i = i.nextSibling)); )
        ;
    else {
      go.innerHTML = r ? `<svg>${t}</svg>` : t;
      const s = go.content;
      if (r) {
        const l = s.firstChild;
        for (; l.firstChild; )
          s.appendChild(l.firstChild);
        s.removeChild(l);
      }
      e.insertBefore(s, n);
    }
    return [
      // first
      o ? o.nextSibling : e.firstChild,
      // last
      n ? n.previousSibling : e.lastChild
    ];
  }
};
function Qm(t, e, n) {
  const r = t._vtc;
  r && (e = (e ? [e, ...r] : [...r]).join(" ")), e == null ? t.removeAttribute("class") : n ? t.setAttribute("class", e) : t.className = e;
}
function tp(t, e, n) {
  const r = t.style, i = nt(n);
  if (n && !i) {
    if (e && !nt(e))
      for (const a in e)
        n[a] == null && Ci(r, a, "");
    for (const a in n)
      Ci(r, a, n[a]);
  } else {
    const a = r.display;
    i ? e !== n && (r.cssText = n) : e && t.removeAttribute("style"), "_vod" in t && (r.display = a);
  }
}
const vo = /\s*!important$/;
function Ci(t, e, n) {
  if ($(n))
    n.forEach((r) => Ci(t, e, r));
  else if (n == null && (n = ""), e.startsWith("--"))
    t.setProperty(e, n);
  else {
    const r = ep(t, e);
    vo.test(n) ? t.setProperty(Ye(r), n.replace(vo, ""), "important") : t[r] = n;
  }
}
const yo = ["Webkit", "Moz", "ms"], ei = {};
function ep(t, e) {
  const n = ei[e];
  if (n)
    return n;
  let r = ze(e);
  if (r !== "filter" && r in t)
    return ei[e] = r;
  r = Is(r);
  for (let i = 0; i < yo.length; i++) {
    const a = yo[i] + r;
    if (a in t)
      return ei[e] = a;
  }
  return e;
}
const bo = "http://www.w3.org/1999/xlink";
function np(t, e, n, r, i) {
  if (r && e.startsWith("xlink:"))
    n == null ? t.removeAttributeNS(bo, e.slice(6, e.length)) : t.setAttributeNS(bo, e, n);
  else {
    const a = Qd(e);
    n == null || a && !Cs(n) ? t.removeAttribute(e) : t.setAttribute(e, a ? "" : n);
  }
}
function rp(t, e, n, r, i, a, o) {
  if (e === "innerHTML" || e === "textContent") {
    r && o(r, i, a), t[e] = n ?? "";
    return;
  }
  if (e === "value" && t.tagName !== "PROGRESS" && // custom elements may use _value internally
  !t.tagName.includes("-")) {
    t._value = n;
    const l = n ?? "";
    (t.value !== l || // #4956: always set for OPTION elements because its value falls back to
    // textContent if no value attribute is present. And setting .value for
    // OPTION has no side effect
    t.tagName === "OPTION") && (t.value = l), n == null && t.removeAttribute(e);
    return;
  }
  let s = !1;
  if (n === "" || n == null) {
    const l = typeof t[e];
    l === "boolean" ? n = Cs(n) : n == null && l === "string" ? (n = "", s = !0) : l === "number" && (n = 0, s = !0);
  }
  try {
    t[e] = n;
  } catch {
  }
  s && t.removeAttribute(e);
}
function ip(t, e, n, r) {
  t.addEventListener(e, n, r);
}
function ap(t, e, n, r) {
  t.removeEventListener(e, n, r);
}
function op(t, e, n, r, i = null) {
  const a = t._vei || (t._vei = {}), o = a[e];
  if (r && o)
    o.value = r;
  else {
    const [s, l] = sp(e);
    if (r) {
      const f = a[e] = cp(r, i);
      ip(t, s, f, l);
    } else
      o && (ap(t, s, o, l), a[e] = void 0);
  }
}
const xo = /(?:Once|Passive|Capture)$/;
function sp(t) {
  let e;
  if (xo.test(t)) {
    e = {};
    let r;
    for (; r = t.match(xo); )
      t = t.slice(0, t.length - r[0].length), e[r[0].toLowerCase()] = !0;
  }
  return [t[2] === ":" ? t.slice(3) : Ye(t.slice(2)), e];
}
let ni = 0;
const lp = /* @__PURE__ */ Promise.resolve(), fp = () => ni || (lp.then(() => ni = 0), ni = Date.now());
function cp(t, e) {
  const n = (r) => {
    if (!r._vts)
      r._vts = Date.now();
    else if (r._vts <= n.attached)
      return;
    Pt(up(r, n.value), e, 5, [r]);
  };
  return n.value = t, n.attached = fp(), n;
}
function up(t, e) {
  if ($(e)) {
    const n = t.stopImmediatePropagation;
    return t.stopImmediatePropagation = () => {
      n.call(t), t._stopped = !0;
    }, e.map((r) => (i) => !i._stopped && r && r(i));
  } else
    return e;
}
const wo = /^on[a-z]/, dp = (t, e, n, r, i = !1, a, o, s, l) => {
  e === "class" ? Qm(t, r, i) : e === "style" ? tp(t, n, r) : Pr(e) ? qi(e) || op(t, e, n, r, o) : (e[0] === "." ? (e = e.slice(1), !0) : e[0] === "^" ? (e = e.slice(1), !1) : hp(t, e, r, i)) ? rp(t, e, r, a, o, s, l) : (e === "true-value" ? t._trueValue = r : e === "false-value" && (t._falseValue = r), np(t, e, r, i));
};
function hp(t, e, n, r) {
  return r ? !!(e === "innerHTML" || e === "textContent" || e in t && wo.test(e) && L(n)) : e === "spellcheck" || e === "draggable" || e === "translate" || e === "form" || e === "list" && t.tagName === "INPUT" || e === "type" && t.tagName === "TEXTAREA" || wo.test(e) && nt(n) ? !1 : e in t;
}
const mp = /* @__PURE__ */ ft({ patchProp: dp }, Zm);
let _o;
function pp() {
  return _o || (_o = Nm(mp));
}
const Ze = (...t) => {
  const e = pp().createApp(...t), { mount: n } = e;
  return e.mount = (r) => {
    const i = gp(r);
    if (!i)
      return;
    const a = e._component;
    !L(a) && !a.render && !a.template && (a.template = i.innerHTML), i.innerHTML = "";
    const o = n(i, !1, i instanceof SVGElement);
    return i instanceof Element && (i.removeAttribute("v-cloak"), i.setAttribute("data-v-app", "")), o;
  }, e;
};
function gp(t) {
  return nt(t) ? document.querySelector(t) : t;
}
function ko(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(t);
    e && (r = r.filter(function(i) {
      return Object.getOwnPropertyDescriptor(t, i).enumerable;
    })), n.push.apply(n, r);
  }
  return n;
}
function S(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2 ? ko(Object(n), !0).forEach(function(r) {
      et(t, r, n[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : ko(Object(n)).forEach(function(r) {
      Object.defineProperty(t, r, Object.getOwnPropertyDescriptor(n, r));
    });
  }
  return t;
}
function wr(t) {
  return wr = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, wr(t);
}
function vp(t, e) {
  if (!(t instanceof e))
    throw new TypeError("Cannot call a class as a function");
}
function Ao(t, e) {
  for (var n = 0; n < e.length; n++) {
    var r = e[n];
    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r);
  }
}
function yp(t, e, n) {
  return e && Ao(t.prototype, e), n && Ao(t, n), Object.defineProperty(t, "prototype", {
    writable: !1
  }), t;
}
function et(t, e, n) {
  return e in t ? Object.defineProperty(t, e, {
    value: n,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : t[e] = n, t;
}
function ha(t, e) {
  return xp(t) || _p(t, e) || kl(t, e) || Ap();
}
function Pn(t) {
  return bp(t) || wp(t) || kl(t) || kp();
}
function bp(t) {
  if (Array.isArray(t))
    return Si(t);
}
function xp(t) {
  if (Array.isArray(t))
    return t;
}
function wp(t) {
  if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null)
    return Array.from(t);
}
function _p(t, e) {
  var n = t == null ? null : typeof Symbol < "u" && t[Symbol.iterator] || t["@@iterator"];
  if (n != null) {
    var r = [], i = !0, a = !1, o, s;
    try {
      for (n = n.call(t); !(i = (o = n.next()).done) && (r.push(o.value), !(e && r.length === e)); i = !0)
        ;
    } catch (l) {
      a = !0, s = l;
    } finally {
      try {
        !i && n.return != null && n.return();
      } finally {
        if (a)
          throw s;
      }
    }
    return r;
  }
}
function kl(t, e) {
  if (t) {
    if (typeof t == "string")
      return Si(t, e);
    var n = Object.prototype.toString.call(t).slice(8, -1);
    if (n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set")
      return Array.from(t);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return Si(t, e);
  }
}
function Si(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, r = new Array(e); n < e; n++)
    r[n] = t[n];
  return r;
}
function kp() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function Ap() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
var Eo = function() {
}, ma = {}, Al = {}, El = null, Cl = {
  mark: Eo,
  measure: Eo
};
try {
  typeof window < "u" && (ma = window), typeof document < "u" && (Al = document), typeof MutationObserver < "u" && (El = MutationObserver), typeof performance < "u" && (Cl = performance);
} catch {
}
var Ep = ma.navigator || {}, Co = Ep.userAgent, So = Co === void 0 ? "" : Co, ae = ma, K = Al, Oo = El, Wn = Cl;
ae.document;
var Jt = !!K.documentElement && !!K.head && typeof K.addEventListener == "function" && typeof K.createElement == "function", Sl = ~So.indexOf("MSIE") || ~So.indexOf("Trident/"), Vn, Kn, qn, Xn, Jn, Vt = "___FONT_AWESOME___", Oi = 16, Ol = "fa", Pl = "svg-inline--fa", ke = "data-fa-i2svg", Pi = "data-fa-pseudo-element", Cp = "data-fa-pseudo-element-pending", pa = "data-prefix", ga = "data-icon", Po = "fontawesome-i2svg", Sp = "async", Op = ["HTML", "HEAD", "STYLE", "SCRIPT"], Tl = function() {
  try {
    return !0;
  } catch {
    return !1;
  }
}(), V = "classic", Z = "sharp", va = [V, Z];
function Tn(t) {
  return new Proxy(t, {
    get: function(n, r) {
      return r in n ? n[r] : n[V];
    }
  });
}
var _n = Tn((Vn = {}, et(Vn, V, {
  fa: "solid",
  fas: "solid",
  "fa-solid": "solid",
  far: "regular",
  "fa-regular": "regular",
  fal: "light",
  "fa-light": "light",
  fat: "thin",
  "fa-thin": "thin",
  fad: "duotone",
  "fa-duotone": "duotone",
  fab: "brands",
  "fa-brands": "brands",
  fak: "kit",
  "fa-kit": "kit"
}), et(Vn, Z, {
  fa: "solid",
  fass: "solid",
  "fa-solid": "solid",
  fasr: "regular",
  "fa-regular": "regular"
}), Vn)), kn = Tn((Kn = {}, et(Kn, V, {
  solid: "fas",
  regular: "far",
  light: "fal",
  thin: "fat",
  duotone: "fad",
  brands: "fab",
  kit: "fak"
}), et(Kn, Z, {
  solid: "fass",
  regular: "fasr"
}), Kn)), An = Tn((qn = {}, et(qn, V, {
  fab: "fa-brands",
  fad: "fa-duotone",
  fak: "fa-kit",
  fal: "fa-light",
  far: "fa-regular",
  fas: "fa-solid",
  fat: "fa-thin"
}), et(qn, Z, {
  fass: "fa-solid",
  fasr: "fa-regular"
}), qn)), Pp = Tn((Xn = {}, et(Xn, V, {
  "fa-brands": "fab",
  "fa-duotone": "fad",
  "fa-kit": "fak",
  "fa-light": "fal",
  "fa-regular": "far",
  "fa-solid": "fas",
  "fa-thin": "fat"
}), et(Xn, Z, {
  "fa-solid": "fass",
  "fa-regular": "fasr"
}), Xn)), Tp = /fa(s|r|l|t|d|b|k|ss|sr)?[\-\ ]/, Nl = "fa-layers-text", Np = /Font ?Awesome ?([56 ]*)(Solid|Regular|Light|Thin|Duotone|Brands|Free|Pro|Sharp|Kit)?.*/i, Ip = Tn((Jn = {}, et(Jn, V, {
  900: "fas",
  400: "far",
  normal: "far",
  300: "fal",
  100: "fat"
}), et(Jn, Z, {
  900: "fass",
  400: "fasr"
}), Jn)), Il = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], Mp = Il.concat([11, 12, 13, 14, 15, 16, 17, 18, 19, 20]), Rp = ["class", "data-prefix", "data-icon", "data-fa-transform", "data-fa-mask"], ve = {
  GROUP: "duotone-group",
  SWAP_OPACITY: "swap-opacity",
  PRIMARY: "primary",
  SECONDARY: "secondary"
}, En = /* @__PURE__ */ new Set();
Object.keys(kn[V]).map(En.add.bind(En));
Object.keys(kn[Z]).map(En.add.bind(En));
var Fp = [].concat(va, Pn(En), ["2xs", "xs", "sm", "lg", "xl", "2xl", "beat", "border", "fade", "beat-fade", "bounce", "flip-both", "flip-horizontal", "flip-vertical", "flip", "fw", "inverse", "layers-counter", "layers-text", "layers", "li", "pull-left", "pull-right", "pulse", "rotate-180", "rotate-270", "rotate-90", "rotate-by", "shake", "spin-pulse", "spin-reverse", "spin", "stack-1x", "stack-2x", "stack", "ul", ve.GROUP, ve.SWAP_OPACITY, ve.PRIMARY, ve.SECONDARY]).concat(Il.map(function(t) {
  return "".concat(t, "x");
})).concat(Mp.map(function(t) {
  return "w-".concat(t);
})), ln = ae.FontAwesomeConfig || {};
function $p(t) {
  var e = K.querySelector("script[" + t + "]");
  if (e)
    return e.getAttribute(t);
}
function Lp(t) {
  return t === "" ? !0 : t === "false" ? !1 : t === "true" ? !0 : t;
}
if (K && typeof K.querySelector == "function") {
  var Dp = [["data-family-prefix", "familyPrefix"], ["data-css-prefix", "cssPrefix"], ["data-family-default", "familyDefault"], ["data-style-default", "styleDefault"], ["data-replacement-class", "replacementClass"], ["data-auto-replace-svg", "autoReplaceSvg"], ["data-auto-add-css", "autoAddCss"], ["data-auto-a11y", "autoA11y"], ["data-search-pseudo-elements", "searchPseudoElements"], ["data-observe-mutations", "observeMutations"], ["data-mutate-approach", "mutateApproach"], ["data-keep-original-source", "keepOriginalSource"], ["data-measure-performance", "measurePerformance"], ["data-show-missing-icons", "showMissingIcons"]];
  Dp.forEach(function(t) {
    var e = ha(t, 2), n = e[0], r = e[1], i = Lp($p(n));
    i != null && (ln[r] = i);
  });
}
var Ml = {
  styleDefault: "solid",
  familyDefault: "classic",
  cssPrefix: Ol,
  replacementClass: Pl,
  autoReplaceSvg: !0,
  autoAddCss: !0,
  autoA11y: !0,
  searchPseudoElements: !1,
  observeMutations: !0,
  mutateApproach: "async",
  keepOriginalSource: !0,
  measurePerformance: !1,
  showMissingIcons: !0
};
ln.familyPrefix && (ln.cssPrefix = ln.familyPrefix);
var Ue = S(S({}, Ml), ln);
Ue.autoReplaceSvg || (Ue.observeMutations = !1);
var N = {};
Object.keys(Ml).forEach(function(t) {
  Object.defineProperty(N, t, {
    enumerable: !0,
    set: function(n) {
      Ue[t] = n, fn.forEach(function(r) {
        return r(N);
      });
    },
    get: function() {
      return Ue[t];
    }
  });
});
Object.defineProperty(N, "familyPrefix", {
  enumerable: !0,
  set: function(e) {
    Ue.cssPrefix = e, fn.forEach(function(n) {
      return n(N);
    });
  },
  get: function() {
    return Ue.cssPrefix;
  }
});
ae.FontAwesomeConfig = N;
var fn = [];
function zp(t) {
  return fn.push(t), function() {
    fn.splice(fn.indexOf(t), 1);
  };
}
var Qt = Oi, Lt = {
  size: 16,
  x: 0,
  y: 0,
  rotate: 0,
  flipX: !1,
  flipY: !1
};
function Hp(t) {
  if (!(!t || !Jt)) {
    var e = K.createElement("style");
    e.setAttribute("type", "text/css"), e.innerHTML = t;
    for (var n = K.head.childNodes, r = null, i = n.length - 1; i > -1; i--) {
      var a = n[i], o = (a.tagName || "").toUpperCase();
      ["STYLE", "LINK"].indexOf(o) > -1 && (r = a);
    }
    return K.head.insertBefore(e, r), t;
  }
}
var jp = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
function Cn() {
  for (var t = 12, e = ""; t-- > 0; )
    e += jp[Math.random() * 62 | 0];
  return e;
}
function Ve(t) {
  for (var e = [], n = (t || []).length >>> 0; n--; )
    e[n] = t[n];
  return e;
}
function ya(t) {
  return t.classList ? Ve(t.classList) : (t.getAttribute("class") || "").split(" ").filter(function(e) {
    return e;
  });
}
function Rl(t) {
  return "".concat(t).replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/'/g, "&#39;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
}
function Bp(t) {
  return Object.keys(t || {}).reduce(function(e, n) {
    return e + "".concat(n, '="').concat(Rl(t[n]), '" ');
  }, "").trim();
}
function zr(t) {
  return Object.keys(t || {}).reduce(function(e, n) {
    return e + "".concat(n, ": ").concat(t[n].trim(), ";");
  }, "");
}
function ba(t) {
  return t.size !== Lt.size || t.x !== Lt.x || t.y !== Lt.y || t.rotate !== Lt.rotate || t.flipX || t.flipY;
}
function Up(t) {
  var e = t.transform, n = t.containerWidth, r = t.iconWidth, i = {
    transform: "translate(".concat(n / 2, " 256)")
  }, a = "translate(".concat(e.x * 32, ", ").concat(e.y * 32, ") "), o = "scale(".concat(e.size / 16 * (e.flipX ? -1 : 1), ", ").concat(e.size / 16 * (e.flipY ? -1 : 1), ") "), s = "rotate(".concat(e.rotate, " 0 0)"), l = {
    transform: "".concat(a, " ").concat(o, " ").concat(s)
  }, f = {
    transform: "translate(".concat(r / 2 * -1, " -256)")
  };
  return {
    outer: i,
    inner: l,
    path: f
  };
}
function Yp(t) {
  var e = t.transform, n = t.width, r = n === void 0 ? Oi : n, i = t.height, a = i === void 0 ? Oi : i, o = t.startCentered, s = o === void 0 ? !1 : o, l = "";
  return s && Sl ? l += "translate(".concat(e.x / Qt - r / 2, "em, ").concat(e.y / Qt - a / 2, "em) ") : s ? l += "translate(calc(-50% + ".concat(e.x / Qt, "em), calc(-50% + ").concat(e.y / Qt, "em)) ") : l += "translate(".concat(e.x / Qt, "em, ").concat(e.y / Qt, "em) "), l += "scale(".concat(e.size / Qt * (e.flipX ? -1 : 1), ", ").concat(e.size / Qt * (e.flipY ? -1 : 1), ") "), l += "rotate(".concat(e.rotate, "deg) "), l;
}
var Gp = `:root, :host {
  --fa-font-solid: normal 900 1em/1 "Font Awesome 6 Solid";
  --fa-font-regular: normal 400 1em/1 "Font Awesome 6 Regular";
  --fa-font-light: normal 300 1em/1 "Font Awesome 6 Light";
  --fa-font-thin: normal 100 1em/1 "Font Awesome 6 Thin";
  --fa-font-duotone: normal 900 1em/1 "Font Awesome 6 Duotone";
  --fa-font-sharp-solid: normal 900 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-regular: normal 400 1em/1 "Font Awesome 6 Sharp";
  --fa-font-brands: normal 400 1em/1 "Font Awesome 6 Brands";
}

svg:not(:root).svg-inline--fa, svg:not(:host).svg-inline--fa {
  overflow: visible;
  box-sizing: content-box;
}

.svg-inline--fa {
  display: var(--fa-display, inline-block);
  height: 1em;
  overflow: visible;
  vertical-align: -0.125em;
}
.svg-inline--fa.fa-2xs {
  vertical-align: 0.1em;
}
.svg-inline--fa.fa-xs {
  vertical-align: 0em;
}
.svg-inline--fa.fa-sm {
  vertical-align: -0.0714285705em;
}
.svg-inline--fa.fa-lg {
  vertical-align: -0.2em;
}
.svg-inline--fa.fa-xl {
  vertical-align: -0.25em;
}
.svg-inline--fa.fa-2xl {
  vertical-align: -0.3125em;
}
.svg-inline--fa.fa-pull-left {
  margin-right: var(--fa-pull-margin, 0.3em);
  width: auto;
}
.svg-inline--fa.fa-pull-right {
  margin-left: var(--fa-pull-margin, 0.3em);
  width: auto;
}
.svg-inline--fa.fa-li {
  width: var(--fa-li-width, 2em);
  top: 0.25em;
}
.svg-inline--fa.fa-fw {
  width: var(--fa-fw-width, 1.25em);
}

.fa-layers svg.svg-inline--fa {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
}

.fa-layers-counter, .fa-layers-text {
  display: inline-block;
  position: absolute;
  text-align: center;
}

.fa-layers {
  display: inline-block;
  height: 1em;
  position: relative;
  text-align: center;
  vertical-align: -0.125em;
  width: 1em;
}
.fa-layers svg.svg-inline--fa {
  -webkit-transform-origin: center center;
          transform-origin: center center;
}

.fa-layers-text {
  left: 50%;
  top: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  -webkit-transform-origin: center center;
          transform-origin: center center;
}

.fa-layers-counter {
  background-color: var(--fa-counter-background-color, #ff253a);
  border-radius: var(--fa-counter-border-radius, 1em);
  box-sizing: border-box;
  color: var(--fa-inverse, #fff);
  line-height: var(--fa-counter-line-height, 1);
  max-width: var(--fa-counter-max-width, 5em);
  min-width: var(--fa-counter-min-width, 1.5em);
  overflow: hidden;
  padding: var(--fa-counter-padding, 0.25em 0.5em);
  right: var(--fa-right, 0);
  text-overflow: ellipsis;
  top: var(--fa-top, 0);
  -webkit-transform: scale(var(--fa-counter-scale, 0.25));
          transform: scale(var(--fa-counter-scale, 0.25));
  -webkit-transform-origin: top right;
          transform-origin: top right;
}

.fa-layers-bottom-right {
  bottom: var(--fa-bottom, 0);
  right: var(--fa-right, 0);
  top: auto;
  -webkit-transform: scale(var(--fa-layers-scale, 0.25));
          transform: scale(var(--fa-layers-scale, 0.25));
  -webkit-transform-origin: bottom right;
          transform-origin: bottom right;
}

.fa-layers-bottom-left {
  bottom: var(--fa-bottom, 0);
  left: var(--fa-left, 0);
  right: auto;
  top: auto;
  -webkit-transform: scale(var(--fa-layers-scale, 0.25));
          transform: scale(var(--fa-layers-scale, 0.25));
  -webkit-transform-origin: bottom left;
          transform-origin: bottom left;
}

.fa-layers-top-right {
  top: var(--fa-top, 0);
  right: var(--fa-right, 0);
  -webkit-transform: scale(var(--fa-layers-scale, 0.25));
          transform: scale(var(--fa-layers-scale, 0.25));
  -webkit-transform-origin: top right;
          transform-origin: top right;
}

.fa-layers-top-left {
  left: var(--fa-left, 0);
  right: auto;
  top: var(--fa-top, 0);
  -webkit-transform: scale(var(--fa-layers-scale, 0.25));
          transform: scale(var(--fa-layers-scale, 0.25));
  -webkit-transform-origin: top left;
          transform-origin: top left;
}

.fa-1x {
  font-size: 1em;
}

.fa-2x {
  font-size: 2em;
}

.fa-3x {
  font-size: 3em;
}

.fa-4x {
  font-size: 4em;
}

.fa-5x {
  font-size: 5em;
}

.fa-6x {
  font-size: 6em;
}

.fa-7x {
  font-size: 7em;
}

.fa-8x {
  font-size: 8em;
}

.fa-9x {
  font-size: 9em;
}

.fa-10x {
  font-size: 10em;
}

.fa-2xs {
  font-size: 0.625em;
  line-height: 0.1em;
  vertical-align: 0.225em;
}

.fa-xs {
  font-size: 0.75em;
  line-height: 0.0833333337em;
  vertical-align: 0.125em;
}

.fa-sm {
  font-size: 0.875em;
  line-height: 0.0714285718em;
  vertical-align: 0.0535714295em;
}

.fa-lg {
  font-size: 1.25em;
  line-height: 0.05em;
  vertical-align: -0.075em;
}

.fa-xl {
  font-size: 1.5em;
  line-height: 0.0416666682em;
  vertical-align: -0.125em;
}

.fa-2xl {
  font-size: 2em;
  line-height: 0.03125em;
  vertical-align: -0.1875em;
}

.fa-fw {
  text-align: center;
  width: 1.25em;
}

.fa-ul {
  list-style-type: none;
  margin-left: var(--fa-li-margin, 2.5em);
  padding-left: 0;
}
.fa-ul > li {
  position: relative;
}

.fa-li {
  left: calc(var(--fa-li-width, 2em) * -1);
  position: absolute;
  text-align: center;
  width: var(--fa-li-width, 2em);
  line-height: inherit;
}

.fa-border {
  border-color: var(--fa-border-color, #eee);
  border-radius: var(--fa-border-radius, 0.1em);
  border-style: var(--fa-border-style, solid);
  border-width: var(--fa-border-width, 0.08em);
  padding: var(--fa-border-padding, 0.2em 0.25em 0.15em);
}

.fa-pull-left {
  float: left;
  margin-right: var(--fa-pull-margin, 0.3em);
}

.fa-pull-right {
  float: right;
  margin-left: var(--fa-pull-margin, 0.3em);
}

.fa-beat {
  -webkit-animation-name: fa-beat;
          animation-name: fa-beat;
  -webkit-animation-delay: var(--fa-animation-delay, 0s);
          animation-delay: var(--fa-animation-delay, 0s);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, ease-in-out);
          animation-timing-function: var(--fa-animation-timing, ease-in-out);
}

.fa-bounce {
  -webkit-animation-name: fa-bounce;
          animation-name: fa-bounce;
  -webkit-animation-delay: var(--fa-animation-delay, 0s);
          animation-delay: var(--fa-animation-delay, 0s);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.28, 0.84, 0.42, 1));
          animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.28, 0.84, 0.42, 1));
}

.fa-fade {
  -webkit-animation-name: fa-fade;
          animation-name: fa-fade;
  -webkit-animation-delay: var(--fa-animation-delay, 0s);
          animation-delay: var(--fa-animation-delay, 0s);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
          animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
}

.fa-beat-fade {
  -webkit-animation-name: fa-beat-fade;
          animation-name: fa-beat-fade;
  -webkit-animation-delay: var(--fa-animation-delay, 0s);
          animation-delay: var(--fa-animation-delay, 0s);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
          animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
}

.fa-flip {
  -webkit-animation-name: fa-flip;
          animation-name: fa-flip;
  -webkit-animation-delay: var(--fa-animation-delay, 0s);
          animation-delay: var(--fa-animation-delay, 0s);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, ease-in-out);
          animation-timing-function: var(--fa-animation-timing, ease-in-out);
}

.fa-shake {
  -webkit-animation-name: fa-shake;
          animation-name: fa-shake;
  -webkit-animation-delay: var(--fa-animation-delay, 0s);
          animation-delay: var(--fa-animation-delay, 0s);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, linear);
          animation-timing-function: var(--fa-animation-timing, linear);
}

.fa-spin {
  -webkit-animation-name: fa-spin;
          animation-name: fa-spin;
  -webkit-animation-delay: var(--fa-animation-delay, 0s);
          animation-delay: var(--fa-animation-delay, 0s);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 2s);
          animation-duration: var(--fa-animation-duration, 2s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, linear);
          animation-timing-function: var(--fa-animation-timing, linear);
}

.fa-spin-reverse {
  --fa-animation-direction: reverse;
}

.fa-pulse,
.fa-spin-pulse {
  -webkit-animation-name: fa-spin;
          animation-name: fa-spin;
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, steps(8));
          animation-timing-function: var(--fa-animation-timing, steps(8));
}

@media (prefers-reduced-motion: reduce) {
  .fa-beat,
.fa-bounce,
.fa-fade,
.fa-beat-fade,
.fa-flip,
.fa-pulse,
.fa-shake,
.fa-spin,
.fa-spin-pulse {
    -webkit-animation-delay: -1ms;
            animation-delay: -1ms;
    -webkit-animation-duration: 1ms;
            animation-duration: 1ms;
    -webkit-animation-iteration-count: 1;
            animation-iteration-count: 1;
    -webkit-transition-delay: 0s;
            transition-delay: 0s;
    -webkit-transition-duration: 0s;
            transition-duration: 0s;
  }
}
@-webkit-keyframes fa-beat {
  0%, 90% {
    -webkit-transform: scale(1);
            transform: scale(1);
  }
  45% {
    -webkit-transform: scale(var(--fa-beat-scale, 1.25));
            transform: scale(var(--fa-beat-scale, 1.25));
  }
}
@keyframes fa-beat {
  0%, 90% {
    -webkit-transform: scale(1);
            transform: scale(1);
  }
  45% {
    -webkit-transform: scale(var(--fa-beat-scale, 1.25));
            transform: scale(var(--fa-beat-scale, 1.25));
  }
}
@-webkit-keyframes fa-bounce {
  0% {
    -webkit-transform: scale(1, 1) translateY(0);
            transform: scale(1, 1) translateY(0);
  }
  10% {
    -webkit-transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);
            transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);
  }
  30% {
    -webkit-transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));
            transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));
  }
  50% {
    -webkit-transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);
            transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);
  }
  57% {
    -webkit-transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));
            transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));
  }
  64% {
    -webkit-transform: scale(1, 1) translateY(0);
            transform: scale(1, 1) translateY(0);
  }
  100% {
    -webkit-transform: scale(1, 1) translateY(0);
            transform: scale(1, 1) translateY(0);
  }
}
@keyframes fa-bounce {
  0% {
    -webkit-transform: scale(1, 1) translateY(0);
            transform: scale(1, 1) translateY(0);
  }
  10% {
    -webkit-transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);
            transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);
  }
  30% {
    -webkit-transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));
            transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));
  }
  50% {
    -webkit-transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);
            transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);
  }
  57% {
    -webkit-transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));
            transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));
  }
  64% {
    -webkit-transform: scale(1, 1) translateY(0);
            transform: scale(1, 1) translateY(0);
  }
  100% {
    -webkit-transform: scale(1, 1) translateY(0);
            transform: scale(1, 1) translateY(0);
  }
}
@-webkit-keyframes fa-fade {
  50% {
    opacity: var(--fa-fade-opacity, 0.4);
  }
}
@keyframes fa-fade {
  50% {
    opacity: var(--fa-fade-opacity, 0.4);
  }
}
@-webkit-keyframes fa-beat-fade {
  0%, 100% {
    opacity: var(--fa-beat-fade-opacity, 0.4);
    -webkit-transform: scale(1);
            transform: scale(1);
  }
  50% {
    opacity: 1;
    -webkit-transform: scale(var(--fa-beat-fade-scale, 1.125));
            transform: scale(var(--fa-beat-fade-scale, 1.125));
  }
}
@keyframes fa-beat-fade {
  0%, 100% {
    opacity: var(--fa-beat-fade-opacity, 0.4);
    -webkit-transform: scale(1);
            transform: scale(1);
  }
  50% {
    opacity: 1;
    -webkit-transform: scale(var(--fa-beat-fade-scale, 1.125));
            transform: scale(var(--fa-beat-fade-scale, 1.125));
  }
}
@-webkit-keyframes fa-flip {
  50% {
    -webkit-transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));
            transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));
  }
}
@keyframes fa-flip {
  50% {
    -webkit-transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));
            transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));
  }
}
@-webkit-keyframes fa-shake {
  0% {
    -webkit-transform: rotate(-15deg);
            transform: rotate(-15deg);
  }
  4% {
    -webkit-transform: rotate(15deg);
            transform: rotate(15deg);
  }
  8%, 24% {
    -webkit-transform: rotate(-18deg);
            transform: rotate(-18deg);
  }
  12%, 28% {
    -webkit-transform: rotate(18deg);
            transform: rotate(18deg);
  }
  16% {
    -webkit-transform: rotate(-22deg);
            transform: rotate(-22deg);
  }
  20% {
    -webkit-transform: rotate(22deg);
            transform: rotate(22deg);
  }
  32% {
    -webkit-transform: rotate(-12deg);
            transform: rotate(-12deg);
  }
  36% {
    -webkit-transform: rotate(12deg);
            transform: rotate(12deg);
  }
  40%, 100% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
  }
}
@keyframes fa-shake {
  0% {
    -webkit-transform: rotate(-15deg);
            transform: rotate(-15deg);
  }
  4% {
    -webkit-transform: rotate(15deg);
            transform: rotate(15deg);
  }
  8%, 24% {
    -webkit-transform: rotate(-18deg);
            transform: rotate(-18deg);
  }
  12%, 28% {
    -webkit-transform: rotate(18deg);
            transform: rotate(18deg);
  }
  16% {
    -webkit-transform: rotate(-22deg);
            transform: rotate(-22deg);
  }
  20% {
    -webkit-transform: rotate(22deg);
            transform: rotate(22deg);
  }
  32% {
    -webkit-transform: rotate(-12deg);
            transform: rotate(-12deg);
  }
  36% {
    -webkit-transform: rotate(12deg);
            transform: rotate(12deg);
  }
  40%, 100% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
  }
}
@-webkit-keyframes fa-spin {
  0% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
  }
}
@keyframes fa-spin {
  0% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
  }
}
.fa-rotate-90 {
  -webkit-transform: rotate(90deg);
          transform: rotate(90deg);
}

.fa-rotate-180 {
  -webkit-transform: rotate(180deg);
          transform: rotate(180deg);
}

.fa-rotate-270 {
  -webkit-transform: rotate(270deg);
          transform: rotate(270deg);
}

.fa-flip-horizontal {
  -webkit-transform: scale(-1, 1);
          transform: scale(-1, 1);
}

.fa-flip-vertical {
  -webkit-transform: scale(1, -1);
          transform: scale(1, -1);
}

.fa-flip-both,
.fa-flip-horizontal.fa-flip-vertical {
  -webkit-transform: scale(-1, -1);
          transform: scale(-1, -1);
}

.fa-rotate-by {
  -webkit-transform: rotate(var(--fa-rotate-angle, none));
          transform: rotate(var(--fa-rotate-angle, none));
}

.fa-stack {
  display: inline-block;
  vertical-align: middle;
  height: 2em;
  position: relative;
  width: 2.5em;
}

.fa-stack-1x,
.fa-stack-2x {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
  z-index: var(--fa-stack-z-index, auto);
}

.svg-inline--fa.fa-stack-1x {
  height: 1em;
  width: 1.25em;
}
.svg-inline--fa.fa-stack-2x {
  height: 2em;
  width: 2.5em;
}

.fa-inverse {
  color: var(--fa-inverse, #fff);
}

.sr-only,
.fa-sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.sr-only-focusable:not(:focus),
.fa-sr-only-focusable:not(:focus) {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.svg-inline--fa .fa-primary {
  fill: var(--fa-primary-color, currentColor);
  opacity: var(--fa-primary-opacity, 1);
}

.svg-inline--fa .fa-secondary {
  fill: var(--fa-secondary-color, currentColor);
  opacity: var(--fa-secondary-opacity, 0.4);
}

.svg-inline--fa.fa-swap-opacity .fa-primary {
  opacity: var(--fa-secondary-opacity, 0.4);
}

.svg-inline--fa.fa-swap-opacity .fa-secondary {
  opacity: var(--fa-primary-opacity, 1);
}

.svg-inline--fa mask .fa-primary,
.svg-inline--fa mask .fa-secondary {
  fill: black;
}

.fad.fa-inverse,
.fa-duotone.fa-inverse {
  color: var(--fa-inverse, #fff);
}`;
function Fl() {
  var t = Ol, e = Pl, n = N.cssPrefix, r = N.replacementClass, i = Gp;
  if (n !== t || r !== e) {
    var a = new RegExp("\\.".concat(t, "\\-"), "g"), o = new RegExp("\\--".concat(t, "\\-"), "g"), s = new RegExp("\\.".concat(e), "g");
    i = i.replace(a, ".".concat(n, "-")).replace(o, "--".concat(n, "-")).replace(s, ".".concat(r));
  }
  return i;
}
var To = !1;
function ri() {
  N.autoAddCss && !To && (Hp(Fl()), To = !0);
}
var Wp = {
  mixout: function() {
    return {
      dom: {
        css: Fl,
        insertCss: ri
      }
    };
  },
  hooks: function() {
    return {
      beforeDOMElementCreation: function() {
        ri();
      },
      beforeI2svg: function() {
        ri();
      }
    };
  }
}, Kt = ae || {};
Kt[Vt] || (Kt[Vt] = {});
Kt[Vt].styles || (Kt[Vt].styles = {});
Kt[Vt].hooks || (Kt[Vt].hooks = {});
Kt[Vt].shims || (Kt[Vt].shims = []);
var St = Kt[Vt], $l = [], Vp = function t() {
  K.removeEventListener("DOMContentLoaded", t), _r = 1, $l.map(function(e) {
    return e();
  });
}, _r = !1;
Jt && (_r = (K.documentElement.doScroll ? /^loaded|^c/ : /^loaded|^i|^c/).test(K.readyState), _r || K.addEventListener("DOMContentLoaded", Vp));
function Kp(t) {
  Jt && (_r ? setTimeout(t, 0) : $l.push(t));
}
function Nn(t) {
  var e = t.tag, n = t.attributes, r = n === void 0 ? {} : n, i = t.children, a = i === void 0 ? [] : i;
  return typeof t == "string" ? Rl(t) : "<".concat(e, " ").concat(Bp(r), ">").concat(a.map(Nn).join(""), "</").concat(e, ">");
}
function No(t, e, n) {
  if (t && t[e] && t[e][n])
    return {
      prefix: e,
      iconName: n,
      icon: t[e][n]
    };
}
var qp = function(e, n) {
  return function(r, i, a, o) {
    return e.call(n, r, i, a, o);
  };
}, ii = function(e, n, r, i) {
  var a = Object.keys(e), o = a.length, s = i !== void 0 ? qp(n, i) : n, l, f, c;
  for (r === void 0 ? (l = 1, c = e[a[0]]) : (l = 0, c = r); l < o; l++)
    f = a[l], c = s(c, e[f], f, e);
  return c;
};
function Xp(t) {
  for (var e = [], n = 0, r = t.length; n < r; ) {
    var i = t.charCodeAt(n++);
    if (i >= 55296 && i <= 56319 && n < r) {
      var a = t.charCodeAt(n++);
      (a & 64512) == 56320 ? e.push(((i & 1023) << 10) + (a & 1023) + 65536) : (e.push(i), n--);
    } else
      e.push(i);
  }
  return e;
}
function Ti(t) {
  var e = Xp(t);
  return e.length === 1 ? e[0].toString(16) : null;
}
function Jp(t, e) {
  var n = t.length, r = t.charCodeAt(e), i;
  return r >= 55296 && r <= 56319 && n > e + 1 && (i = t.charCodeAt(e + 1), i >= 56320 && i <= 57343) ? (r - 55296) * 1024 + i - 56320 + 65536 : r;
}
function Io(t) {
  return Object.keys(t).reduce(function(e, n) {
    var r = t[n], i = !!r.icon;
    return i ? e[r.iconName] = r.icon : e[n] = r, e;
  }, {});
}
function Ni(t, e) {
  var n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, r = n.skipHooks, i = r === void 0 ? !1 : r, a = Io(e);
  typeof St.hooks.addPack == "function" && !i ? St.hooks.addPack(t, Io(e)) : St.styles[t] = S(S({}, St.styles[t] || {}), a), t === "fas" && Ni("fa", e);
}
var Zn, Qn, tr, Pe = St.styles, Zp = St.shims, Qp = (Zn = {}, et(Zn, V, Object.values(An[V])), et(Zn, Z, Object.values(An[Z])), Zn), xa = null, Ll = {}, Dl = {}, zl = {}, Hl = {}, jl = {}, t0 = (Qn = {}, et(Qn, V, Object.keys(_n[V])), et(Qn, Z, Object.keys(_n[Z])), Qn);
function e0(t) {
  return ~Fp.indexOf(t);
}
function n0(t, e) {
  var n = e.split("-"), r = n[0], i = n.slice(1).join("-");
  return r === t && i !== "" && !e0(i) ? i : null;
}
var Bl = function() {
  var e = function(a) {
    return ii(Pe, function(o, s, l) {
      return o[l] = ii(s, a, {}), o;
    }, {});
  };
  Ll = e(function(i, a, o) {
    if (a[3] && (i[a[3]] = o), a[2]) {
      var s = a[2].filter(function(l) {
        return typeof l == "number";
      });
      s.forEach(function(l) {
        i[l.toString(16)] = o;
      });
    }
    return i;
  }), Dl = e(function(i, a, o) {
    if (i[o] = o, a[2]) {
      var s = a[2].filter(function(l) {
        return typeof l == "string";
      });
      s.forEach(function(l) {
        i[l] = o;
      });
    }
    return i;
  }), jl = e(function(i, a, o) {
    var s = a[2];
    return i[o] = o, s.forEach(function(l) {
      i[l] = o;
    }), i;
  });
  var n = "far" in Pe || N.autoFetchSvg, r = ii(Zp, function(i, a) {
    var o = a[0], s = a[1], l = a[2];
    return s === "far" && !n && (s = "fas"), typeof o == "string" && (i.names[o] = {
      prefix: s,
      iconName: l
    }), typeof o == "number" && (i.unicodes[o.toString(16)] = {
      prefix: s,
      iconName: l
    }), i;
  }, {
    names: {},
    unicodes: {}
  });
  zl = r.names, Hl = r.unicodes, xa = Hr(N.styleDefault, {
    family: N.familyDefault
  });
};
zp(function(t) {
  xa = Hr(t.styleDefault, {
    family: N.familyDefault
  });
});
Bl();
function wa(t, e) {
  return (Ll[t] || {})[e];
}
function r0(t, e) {
  return (Dl[t] || {})[e];
}
function ye(t, e) {
  return (jl[t] || {})[e];
}
function Ul(t) {
  return zl[t] || {
    prefix: null,
    iconName: null
  };
}
function i0(t) {
  var e = Hl[t], n = wa("fas", t);
  return e || (n ? {
    prefix: "fas",
    iconName: n
  } : null) || {
    prefix: null,
    iconName: null
  };
}
function oe() {
  return xa;
}
var _a = function() {
  return {
    prefix: null,
    iconName: null,
    rest: []
  };
};
function Hr(t) {
  var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, n = e.family, r = n === void 0 ? V : n, i = _n[r][t], a = kn[r][t] || kn[r][i], o = t in St.styles ? t : null;
  return a || o || null;
}
var Mo = (tr = {}, et(tr, V, Object.keys(An[V])), et(tr, Z, Object.keys(An[Z])), tr);
function jr(t) {
  var e, n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, r = n.skipLookups, i = r === void 0 ? !1 : r, a = (e = {}, et(e, V, "".concat(N.cssPrefix, "-").concat(V)), et(e, Z, "".concat(N.cssPrefix, "-").concat(Z)), e), o = null, s = V;
  (t.includes(a[V]) || t.some(function(f) {
    return Mo[V].includes(f);
  })) && (s = V), (t.includes(a[Z]) || t.some(function(f) {
    return Mo[Z].includes(f);
  })) && (s = Z);
  var l = t.reduce(function(f, c) {
    var d = n0(N.cssPrefix, c);
    if (Pe[c] ? (c = Qp[s].includes(c) ? Pp[s][c] : c, o = c, f.prefix = c) : t0[s].indexOf(c) > -1 ? (o = c, f.prefix = Hr(c, {
      family: s
    })) : d ? f.iconName = d : c !== N.replacementClass && c !== a[V] && c !== a[Z] && f.rest.push(c), !i && f.prefix && f.iconName) {
      var m = o === "fa" ? Ul(f.iconName) : {}, g = ye(f.prefix, f.iconName);
      m.prefix && (o = null), f.iconName = m.iconName || g || f.iconName, f.prefix = m.prefix || f.prefix, f.prefix === "far" && !Pe.far && Pe.fas && !N.autoFetchSvg && (f.prefix = "fas");
    }
    return f;
  }, _a());
  return (t.includes("fa-brands") || t.includes("fab")) && (l.prefix = "fab"), (t.includes("fa-duotone") || t.includes("fad")) && (l.prefix = "fad"), !l.prefix && s === Z && (Pe.fass || N.autoFetchSvg) && (l.prefix = "fass", l.iconName = ye(l.prefix, l.iconName) || l.iconName), (l.prefix === "fa" || o === "fa") && (l.prefix = oe() || "fas"), l;
}
var a0 = /* @__PURE__ */ function() {
  function t() {
    vp(this, t), this.definitions = {};
  }
  return yp(t, [{
    key: "add",
    value: function() {
      for (var n = this, r = arguments.length, i = new Array(r), a = 0; a < r; a++)
        i[a] = arguments[a];
      var o = i.reduce(this._pullDefinitions, {});
      Object.keys(o).forEach(function(s) {
        n.definitions[s] = S(S({}, n.definitions[s] || {}), o[s]), Ni(s, o[s]);
        var l = An[V][s];
        l && Ni(l, o[s]), Bl();
      });
    }
  }, {
    key: "reset",
    value: function() {
      this.definitions = {};
    }
  }, {
    key: "_pullDefinitions",
    value: function(n, r) {
      var i = r.prefix && r.iconName && r.icon ? {
        0: r
      } : r;
      return Object.keys(i).map(function(a) {
        var o = i[a], s = o.prefix, l = o.iconName, f = o.icon, c = f[2];
        n[s] || (n[s] = {}), c.length > 0 && c.forEach(function(d) {
          typeof d == "string" && (n[s][d] = f);
        }), n[s][l] = f;
      }), n;
    }
  }]), t;
}(), Ro = [], Te = {}, $e = {}, o0 = Object.keys($e);
function s0(t, e) {
  var n = e.mixoutsTo;
  return Ro = t, Te = {}, Object.keys($e).forEach(function(r) {
    o0.indexOf(r) === -1 && delete $e[r];
  }), Ro.forEach(function(r) {
    var i = r.mixout ? r.mixout() : {};
    if (Object.keys(i).forEach(function(o) {
      typeof i[o] == "function" && (n[o] = i[o]), wr(i[o]) === "object" && Object.keys(i[o]).forEach(function(s) {
        n[o] || (n[o] = {}), n[o][s] = i[o][s];
      });
    }), r.hooks) {
      var a = r.hooks();
      Object.keys(a).forEach(function(o) {
        Te[o] || (Te[o] = []), Te[o].push(a[o]);
      });
    }
    r.provides && r.provides($e);
  }), n;
}
function Ii(t, e) {
  for (var n = arguments.length, r = new Array(n > 2 ? n - 2 : 0), i = 2; i < n; i++)
    r[i - 2] = arguments[i];
  var a = Te[t] || [];
  return a.forEach(function(o) {
    e = o.apply(null, [e].concat(r));
  }), e;
}
function Ae(t) {
  for (var e = arguments.length, n = new Array(e > 1 ? e - 1 : 0), r = 1; r < e; r++)
    n[r - 1] = arguments[r];
  var i = Te[t] || [];
  i.forEach(function(a) {
    a.apply(null, n);
  });
}
function qt() {
  var t = arguments[0], e = Array.prototype.slice.call(arguments, 1);
  return $e[t] ? $e[t].apply(null, e) : void 0;
}
function Mi(t) {
  t.prefix === "fa" && (t.prefix = "fas");
  var e = t.iconName, n = t.prefix || oe();
  if (e)
    return e = ye(n, e) || e, No(Yl.definitions, n, e) || No(St.styles, n, e);
}
var Yl = new a0(), l0 = function() {
  N.autoReplaceSvg = !1, N.observeMutations = !1, Ae("noAuto");
}, f0 = {
  i2svg: function() {
    var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return Jt ? (Ae("beforeI2svg", e), qt("pseudoElements2svg", e), qt("i2svg", e)) : Promise.reject("Operation requires a DOM of some kind.");
  },
  watch: function() {
    var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, n = e.autoReplaceSvgRoot;
    N.autoReplaceSvg === !1 && (N.autoReplaceSvg = !0), N.observeMutations = !0, Kp(function() {
      u0({
        autoReplaceSvgRoot: n
      }), Ae("watch", e);
    });
  }
}, c0 = {
  icon: function(e) {
    if (e === null)
      return null;
    if (wr(e) === "object" && e.prefix && e.iconName)
      return {
        prefix: e.prefix,
        iconName: ye(e.prefix, e.iconName) || e.iconName
      };
    if (Array.isArray(e) && e.length === 2) {
      var n = e[1].indexOf("fa-") === 0 ? e[1].slice(3) : e[1], r = Hr(e[0]);
      return {
        prefix: r,
        iconName: ye(r, n) || n
      };
    }
    if (typeof e == "string" && (e.indexOf("".concat(N.cssPrefix, "-")) > -1 || e.match(Tp))) {
      var i = jr(e.split(" "), {
        skipLookups: !0
      });
      return {
        prefix: i.prefix || oe(),
        iconName: ye(i.prefix, i.iconName) || i.iconName
      };
    }
    if (typeof e == "string") {
      var a = oe();
      return {
        prefix: a,
        iconName: ye(a, e) || e
      };
    }
  }
}, vt = {
  noAuto: l0,
  config: N,
  dom: f0,
  parse: c0,
  library: Yl,
  findIconDefinition: Mi,
  toHtml: Nn
}, u0 = function() {
  var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, n = e.autoReplaceSvgRoot, r = n === void 0 ? K : n;
  (Object.keys(St.styles).length > 0 || N.autoFetchSvg) && Jt && N.autoReplaceSvg && vt.dom.i2svg({
    node: r
  });
};
function Br(t, e) {
  return Object.defineProperty(t, "abstract", {
    get: e
  }), Object.defineProperty(t, "html", {
    get: function() {
      return t.abstract.map(function(r) {
        return Nn(r);
      });
    }
  }), Object.defineProperty(t, "node", {
    get: function() {
      if (Jt) {
        var r = K.createElement("div");
        return r.innerHTML = t.html, r.children;
      }
    }
  }), t;
}
function d0(t) {
  var e = t.children, n = t.main, r = t.mask, i = t.attributes, a = t.styles, o = t.transform;
  if (ba(o) && n.found && !r.found) {
    var s = n.width, l = n.height, f = {
      x: s / l / 2,
      y: 0.5
    };
    i.style = zr(S(S({}, a), {}, {
      "transform-origin": "".concat(f.x + o.x / 16, "em ").concat(f.y + o.y / 16, "em")
    }));
  }
  return [{
    tag: "svg",
    attributes: i,
    children: e
  }];
}
function h0(t) {
  var e = t.prefix, n = t.iconName, r = t.children, i = t.attributes, a = t.symbol, o = a === !0 ? "".concat(e, "-").concat(N.cssPrefix, "-").concat(n) : a;
  return [{
    tag: "svg",
    attributes: {
      style: "display: none;"
    },
    children: [{
      tag: "symbol",
      attributes: S(S({}, i), {}, {
        id: o
      }),
      children: r
    }]
  }];
}
function ka(t) {
  var e = t.icons, n = e.main, r = e.mask, i = t.prefix, a = t.iconName, o = t.transform, s = t.symbol, l = t.title, f = t.maskId, c = t.titleId, d = t.extra, m = t.watchable, g = m === void 0 ? !1 : m, P = r.found ? r : n, O = P.width, D = P.height, _ = i === "fak", C = [N.replacementClass, a ? "".concat(N.cssPrefix, "-").concat(a) : ""].filter(function(yt) {
    return d.classes.indexOf(yt) === -1;
  }).filter(function(yt) {
    return yt !== "" || !!yt;
  }).concat(d.classes).join(" "), E = {
    children: [],
    attributes: S(S({}, d.attributes), {}, {
      "data-prefix": i,
      "data-icon": a,
      class: C,
      role: d.attributes.role || "img",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 ".concat(O, " ").concat(D)
    })
  }, F = _ && !~d.classes.indexOf("fa-fw") ? {
    width: "".concat(O / D * 16 * 0.0625, "em")
  } : {};
  g && (E.attributes[ke] = ""), l && (E.children.push({
    tag: "title",
    attributes: {
      id: E.attributes["aria-labelledby"] || "title-".concat(c || Cn())
    },
    children: [l]
  }), delete E.attributes.title);
  var B = S(S({}, E), {}, {
    prefix: i,
    iconName: a,
    main: n,
    mask: r,
    maskId: f,
    transform: o,
    symbol: s,
    styles: S(S({}, F), d.styles)
  }), ct = r.found && n.found ? qt("generateAbstractMask", B) || {
    children: [],
    attributes: {}
  } : qt("generateAbstractIcon", B) || {
    children: [],
    attributes: {}
  }, rt = ct.children, xt = ct.attributes;
  return B.children = rt, B.attributes = xt, s ? h0(B) : d0(B);
}
function Fo(t) {
  var e = t.content, n = t.width, r = t.height, i = t.transform, a = t.title, o = t.extra, s = t.watchable, l = s === void 0 ? !1 : s, f = S(S(S({}, o.attributes), a ? {
    title: a
  } : {}), {}, {
    class: o.classes.join(" ")
  });
  l && (f[ke] = "");
  var c = S({}, o.styles);
  ba(i) && (c.transform = Yp({
    transform: i,
    startCentered: !0,
    width: n,
    height: r
  }), c["-webkit-transform"] = c.transform);
  var d = zr(c);
  d.length > 0 && (f.style = d);
  var m = [];
  return m.push({
    tag: "span",
    attributes: f,
    children: [e]
  }), a && m.push({
    tag: "span",
    attributes: {
      class: "sr-only"
    },
    children: [a]
  }), m;
}
function m0(t) {
  var e = t.content, n = t.title, r = t.extra, i = S(S(S({}, r.attributes), n ? {
    title: n
  } : {}), {}, {
    class: r.classes.join(" ")
  }), a = zr(r.styles);
  a.length > 0 && (i.style = a);
  var o = [];
  return o.push({
    tag: "span",
    attributes: i,
    children: [e]
  }), n && o.push({
    tag: "span",
    attributes: {
      class: "sr-only"
    },
    children: [n]
  }), o;
}
var ai = St.styles;
function Ri(t) {
  var e = t[0], n = t[1], r = t.slice(4), i = ha(r, 1), a = i[0], o = null;
  return Array.isArray(a) ? o = {
    tag: "g",
    attributes: {
      class: "".concat(N.cssPrefix, "-").concat(ve.GROUP)
    },
    children: [{
      tag: "path",
      attributes: {
        class: "".concat(N.cssPrefix, "-").concat(ve.SECONDARY),
        fill: "currentColor",
        d: a[0]
      }
    }, {
      tag: "path",
      attributes: {
        class: "".concat(N.cssPrefix, "-").concat(ve.PRIMARY),
        fill: "currentColor",
        d: a[1]
      }
    }]
  } : o = {
    tag: "path",
    attributes: {
      fill: "currentColor",
      d: a
    }
  }, {
    found: !0,
    width: e,
    height: n,
    icon: o
  };
}
var p0 = {
  found: !1,
  width: 512,
  height: 512
};
function g0(t, e) {
  !Tl && !N.showMissingIcons && t && console.error('Icon with name "'.concat(t, '" and prefix "').concat(e, '" is missing.'));
}
function Fi(t, e) {
  var n = e;
  return e === "fa" && N.styleDefault !== null && (e = oe()), new Promise(function(r, i) {
    if (qt("missingIconAbstract"), n === "fa") {
      var a = Ul(t) || {};
      t = a.iconName || t, e = a.prefix || e;
    }
    if (t && e && ai[e] && ai[e][t]) {
      var o = ai[e][t];
      return r(Ri(o));
    }
    g0(t, e), r(S(S({}, p0), {}, {
      icon: N.showMissingIcons && t ? qt("missingIconAbstract") || {} : {}
    }));
  });
}
var $o = function() {
}, $i = N.measurePerformance && Wn && Wn.mark && Wn.measure ? Wn : {
  mark: $o,
  measure: $o
}, an = 'FA "6.3.0"', v0 = function(e) {
  return $i.mark("".concat(an, " ").concat(e, " begins")), function() {
    return Gl(e);
  };
}, Gl = function(e) {
  $i.mark("".concat(an, " ").concat(e, " ends")), $i.measure("".concat(an, " ").concat(e), "".concat(an, " ").concat(e, " begins"), "".concat(an, " ").concat(e, " ends"));
}, Aa = {
  begin: v0,
  end: Gl
}, fr = function() {
};
function Lo(t) {
  var e = t.getAttribute ? t.getAttribute(ke) : null;
  return typeof e == "string";
}
function y0(t) {
  var e = t.getAttribute ? t.getAttribute(pa) : null, n = t.getAttribute ? t.getAttribute(ga) : null;
  return e && n;
}
function b0(t) {
  return t && t.classList && t.classList.contains && t.classList.contains(N.replacementClass);
}
function x0() {
  if (N.autoReplaceSvg === !0)
    return cr.replace;
  var t = cr[N.autoReplaceSvg];
  return t || cr.replace;
}
function w0(t) {
  return K.createElementNS("http://www.w3.org/2000/svg", t);
}
function _0(t) {
  return K.createElement(t);
}
function Wl(t) {
  var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, n = e.ceFn, r = n === void 0 ? t.tag === "svg" ? w0 : _0 : n;
  if (typeof t == "string")
    return K.createTextNode(t);
  var i = r(t.tag);
  Object.keys(t.attributes || []).forEach(function(o) {
    i.setAttribute(o, t.attributes[o]);
  });
  var a = t.children || [];
  return a.forEach(function(o) {
    i.appendChild(Wl(o, {
      ceFn: r
    }));
  }), i;
}
function k0(t) {
  var e = " ".concat(t.outerHTML, " ");
  return e = "".concat(e, "Font Awesome fontawesome.com "), e;
}
var cr = {
  replace: function(e) {
    var n = e[0];
    if (n.parentNode)
      if (e[1].forEach(function(i) {
        n.parentNode.insertBefore(Wl(i), n);
      }), n.getAttribute(ke) === null && N.keepOriginalSource) {
        var r = K.createComment(k0(n));
        n.parentNode.replaceChild(r, n);
      } else
        n.remove();
  },
  nest: function(e) {
    var n = e[0], r = e[1];
    if (~ya(n).indexOf(N.replacementClass))
      return cr.replace(e);
    var i = new RegExp("".concat(N.cssPrefix, "-.*"));
    if (delete r[0].attributes.id, r[0].attributes.class) {
      var a = r[0].attributes.class.split(" ").reduce(function(s, l) {
        return l === N.replacementClass || l.match(i) ? s.toSvg.push(l) : s.toNode.push(l), s;
      }, {
        toNode: [],
        toSvg: []
      });
      r[0].attributes.class = a.toSvg.join(" "), a.toNode.length === 0 ? n.removeAttribute("class") : n.setAttribute("class", a.toNode.join(" "));
    }
    var o = r.map(function(s) {
      return Nn(s);
    }).join(`
`);
    n.setAttribute(ke, ""), n.innerHTML = o;
  }
};
function Do(t) {
  t();
}
function Vl(t, e) {
  var n = typeof e == "function" ? e : fr;
  if (t.length === 0)
    n();
  else {
    var r = Do;
    N.mutateApproach === Sp && (r = ae.requestAnimationFrame || Do), r(function() {
      var i = x0(), a = Aa.begin("mutate");
      t.map(i), a(), n();
    });
  }
}
var Ea = !1;
function Kl() {
  Ea = !0;
}
function Li() {
  Ea = !1;
}
var kr = null;
function zo(t) {
  if (Oo && N.observeMutations) {
    var e = t.treeCallback, n = e === void 0 ? fr : e, r = t.nodeCallback, i = r === void 0 ? fr : r, a = t.pseudoElementsCallback, o = a === void 0 ? fr : a, s = t.observeMutationsRoot, l = s === void 0 ? K : s;
    kr = new Oo(function(f) {
      if (!Ea) {
        var c = oe();
        Ve(f).forEach(function(d) {
          if (d.type === "childList" && d.addedNodes.length > 0 && !Lo(d.addedNodes[0]) && (N.searchPseudoElements && o(d.target), n(d.target)), d.type === "attributes" && d.target.parentNode && N.searchPseudoElements && o(d.target.parentNode), d.type === "attributes" && Lo(d.target) && ~Rp.indexOf(d.attributeName))
            if (d.attributeName === "class" && y0(d.target)) {
              var m = jr(ya(d.target)), g = m.prefix, P = m.iconName;
              d.target.setAttribute(pa, g || c), P && d.target.setAttribute(ga, P);
            } else
              b0(d.target) && i(d.target);
        });
      }
    }), Jt && kr.observe(l, {
      childList: !0,
      attributes: !0,
      characterData: !0,
      subtree: !0
    });
  }
}
function A0() {
  kr && kr.disconnect();
}
function E0(t) {
  var e = t.getAttribute("style"), n = [];
  return e && (n = e.split(";").reduce(function(r, i) {
    var a = i.split(":"), o = a[0], s = a.slice(1);
    return o && s.length > 0 && (r[o] = s.join(":").trim()), r;
  }, {})), n;
}
function C0(t) {
  var e = t.getAttribute("data-prefix"), n = t.getAttribute("data-icon"), r = t.innerText !== void 0 ? t.innerText.trim() : "", i = jr(ya(t));
  return i.prefix || (i.prefix = oe()), e && n && (i.prefix = e, i.iconName = n), i.iconName && i.prefix || (i.prefix && r.length > 0 && (i.iconName = r0(i.prefix, t.innerText) || wa(i.prefix, Ti(t.innerText))), !i.iconName && N.autoFetchSvg && t.firstChild && t.firstChild.nodeType === Node.TEXT_NODE && (i.iconName = t.firstChild.data)), i;
}
function S0(t) {
  var e = Ve(t.attributes).reduce(function(i, a) {
    return i.name !== "class" && i.name !== "style" && (i[a.name] = a.value), i;
  }, {}), n = t.getAttribute("title"), r = t.getAttribute("data-fa-title-id");
  return N.autoA11y && (n ? e["aria-labelledby"] = "".concat(N.replacementClass, "-title-").concat(r || Cn()) : (e["aria-hidden"] = "true", e.focusable = "false")), e;
}
function O0() {
  return {
    iconName: null,
    title: null,
    titleId: null,
    prefix: null,
    transform: Lt,
    symbol: !1,
    mask: {
      iconName: null,
      prefix: null,
      rest: []
    },
    maskId: null,
    extra: {
      classes: [],
      styles: {},
      attributes: {}
    }
  };
}
function Ho(t) {
  var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
    styleParser: !0
  }, n = C0(t), r = n.iconName, i = n.prefix, a = n.rest, o = S0(t), s = Ii("parseNodeAttributes", {}, t), l = e.styleParser ? E0(t) : [];
  return S({
    iconName: r,
    title: t.getAttribute("title"),
    titleId: t.getAttribute("data-fa-title-id"),
    prefix: i,
    transform: Lt,
    mask: {
      iconName: null,
      prefix: null,
      rest: []
    },
    maskId: null,
    symbol: !1,
    extra: {
      classes: a,
      styles: l,
      attributes: o
    }
  }, s);
}
var P0 = St.styles;
function ql(t) {
  var e = N.autoReplaceSvg === "nest" ? Ho(t, {
    styleParser: !1
  }) : Ho(t);
  return ~e.extra.classes.indexOf(Nl) ? qt("generateLayersText", t, e) : qt("generateSvgReplacementMutation", t, e);
}
var se = /* @__PURE__ */ new Set();
va.map(function(t) {
  se.add("fa-".concat(t));
});
Object.keys(_n[V]).map(se.add.bind(se));
Object.keys(_n[Z]).map(se.add.bind(se));
se = Pn(se);
function jo(t) {
  var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
  if (!Jt)
    return Promise.resolve();
  var n = K.documentElement.classList, r = function(d) {
    return n.add("".concat(Po, "-").concat(d));
  }, i = function(d) {
    return n.remove("".concat(Po, "-").concat(d));
  }, a = N.autoFetchSvg ? se : va.map(function(c) {
    return "fa-".concat(c);
  }).concat(Object.keys(P0));
  a.includes("fa") || a.push("fa");
  var o = [".".concat(Nl, ":not([").concat(ke, "])")].concat(a.map(function(c) {
    return ".".concat(c, ":not([").concat(ke, "])");
  })).join(", ");
  if (o.length === 0)
    return Promise.resolve();
  var s = [];
  try {
    s = Ve(t.querySelectorAll(o));
  } catch {
  }
  if (s.length > 0)
    r("pending"), i("complete");
  else
    return Promise.resolve();
  var l = Aa.begin("onTree"), f = s.reduce(function(c, d) {
    try {
      var m = ql(d);
      m && c.push(m);
    } catch (g) {
      Tl || g.name === "MissingIcon" && console.error(g);
    }
    return c;
  }, []);
  return new Promise(function(c, d) {
    Promise.all(f).then(function(m) {
      Vl(m, function() {
        r("active"), r("complete"), i("pending"), typeof e == "function" && e(), l(), c();
      });
    }).catch(function(m) {
      l(), d(m);
    });
  });
}
function T0(t) {
  var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
  ql(t).then(function(n) {
    n && Vl([n], e);
  });
}
function N0(t) {
  return function(e) {
    var n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, r = (e || {}).icon ? e : Mi(e || {}), i = n.mask;
    return i && (i = (i || {}).icon ? i : Mi(i || {})), t(r, S(S({}, n), {}, {
      mask: i
    }));
  };
}
var I0 = function(e) {
  var n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, r = n.transform, i = r === void 0 ? Lt : r, a = n.symbol, o = a === void 0 ? !1 : a, s = n.mask, l = s === void 0 ? null : s, f = n.maskId, c = f === void 0 ? null : f, d = n.title, m = d === void 0 ? null : d, g = n.titleId, P = g === void 0 ? null : g, O = n.classes, D = O === void 0 ? [] : O, _ = n.attributes, C = _ === void 0 ? {} : _, E = n.styles, F = E === void 0 ? {} : E;
  if (e) {
    var B = e.prefix, ct = e.iconName, rt = e.icon;
    return Br(S({
      type: "icon"
    }, e), function() {
      return Ae("beforeDOMElementCreation", {
        iconDefinition: e,
        params: n
      }), N.autoA11y && (m ? C["aria-labelledby"] = "".concat(N.replacementClass, "-title-").concat(P || Cn()) : (C["aria-hidden"] = "true", C.focusable = "false")), ka({
        icons: {
          main: Ri(rt),
          mask: l ? Ri(l.icon) : {
            found: !1,
            width: null,
            height: null,
            icon: {}
          }
        },
        prefix: B,
        iconName: ct,
        transform: S(S({}, Lt), i),
        symbol: o,
        title: m,
        maskId: c,
        titleId: P,
        extra: {
          attributes: C,
          styles: F,
          classes: D
        }
      });
    });
  }
}, M0 = {
  mixout: function() {
    return {
      icon: N0(I0)
    };
  },
  hooks: function() {
    return {
      mutationObserverCallbacks: function(n) {
        return n.treeCallback = jo, n.nodeCallback = T0, n;
      }
    };
  },
  provides: function(e) {
    e.i2svg = function(n) {
      var r = n.node, i = r === void 0 ? K : r, a = n.callback, o = a === void 0 ? function() {
      } : a;
      return jo(i, o);
    }, e.generateSvgReplacementMutation = function(n, r) {
      var i = r.iconName, a = r.title, o = r.titleId, s = r.prefix, l = r.transform, f = r.symbol, c = r.mask, d = r.maskId, m = r.extra;
      return new Promise(function(g, P) {
        Promise.all([Fi(i, s), c.iconName ? Fi(c.iconName, c.prefix) : Promise.resolve({
          found: !1,
          width: 512,
          height: 512,
          icon: {}
        })]).then(function(O) {
          var D = ha(O, 2), _ = D[0], C = D[1];
          g([n, ka({
            icons: {
              main: _,
              mask: C
            },
            prefix: s,
            iconName: i,
            transform: l,
            symbol: f,
            maskId: d,
            title: a,
            titleId: o,
            extra: m,
            watchable: !0
          })]);
        }).catch(P);
      });
    }, e.generateAbstractIcon = function(n) {
      var r = n.children, i = n.attributes, a = n.main, o = n.transform, s = n.styles, l = zr(s);
      l.length > 0 && (i.style = l);
      var f;
      return ba(o) && (f = qt("generateAbstractTransformGrouping", {
        main: a,
        transform: o,
        containerWidth: a.width,
        iconWidth: a.width
      })), r.push(f || a.icon), {
        children: r,
        attributes: i
      };
    };
  }
}, R0 = {
  mixout: function() {
    return {
      layer: function(n) {
        var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, i = r.classes, a = i === void 0 ? [] : i;
        return Br({
          type: "layer"
        }, function() {
          Ae("beforeDOMElementCreation", {
            assembler: n,
            params: r
          });
          var o = [];
          return n(function(s) {
            Array.isArray(s) ? s.map(function(l) {
              o = o.concat(l.abstract);
            }) : o = o.concat(s.abstract);
          }), [{
            tag: "span",
            attributes: {
              class: ["".concat(N.cssPrefix, "-layers")].concat(Pn(a)).join(" ")
            },
            children: o
          }];
        });
      }
    };
  }
}, F0 = {
  mixout: function() {
    return {
      counter: function(n) {
        var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, i = r.title, a = i === void 0 ? null : i, o = r.classes, s = o === void 0 ? [] : o, l = r.attributes, f = l === void 0 ? {} : l, c = r.styles, d = c === void 0 ? {} : c;
        return Br({
          type: "counter",
          content: n
        }, function() {
          return Ae("beforeDOMElementCreation", {
            content: n,
            params: r
          }), m0({
            content: n.toString(),
            title: a,
            extra: {
              attributes: f,
              styles: d,
              classes: ["".concat(N.cssPrefix, "-layers-counter")].concat(Pn(s))
            }
          });
        });
      }
    };
  }
}, $0 = {
  mixout: function() {
    return {
      text: function(n) {
        var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, i = r.transform, a = i === void 0 ? Lt : i, o = r.title, s = o === void 0 ? null : o, l = r.classes, f = l === void 0 ? [] : l, c = r.attributes, d = c === void 0 ? {} : c, m = r.styles, g = m === void 0 ? {} : m;
        return Br({
          type: "text",
          content: n
        }, function() {
          return Ae("beforeDOMElementCreation", {
            content: n,
            params: r
          }), Fo({
            content: n,
            transform: S(S({}, Lt), a),
            title: s,
            extra: {
              attributes: d,
              styles: g,
              classes: ["".concat(N.cssPrefix, "-layers-text")].concat(Pn(f))
            }
          });
        });
      }
    };
  },
  provides: function(e) {
    e.generateLayersText = function(n, r) {
      var i = r.title, a = r.transform, o = r.extra, s = null, l = null;
      if (Sl) {
        var f = parseInt(getComputedStyle(n).fontSize, 10), c = n.getBoundingClientRect();
        s = c.width / f, l = c.height / f;
      }
      return N.autoA11y && !i && (o.attributes["aria-hidden"] = "true"), Promise.resolve([n, Fo({
        content: n.innerHTML,
        width: s,
        height: l,
        transform: a,
        title: i,
        extra: o,
        watchable: !0
      })]);
    };
  }
}, L0 = new RegExp('"', "ug"), Bo = [1105920, 1112319];
function D0(t) {
  var e = t.replace(L0, ""), n = Jp(e, 0), r = n >= Bo[0] && n <= Bo[1], i = e.length === 2 ? e[0] === e[1] : !1;
  return {
    value: Ti(i ? e[0] : e),
    isSecondary: r || i
  };
}
function Uo(t, e) {
  var n = "".concat(Cp).concat(e.replace(":", "-"));
  return new Promise(function(r, i) {
    if (t.getAttribute(n) !== null)
      return r();
    var a = Ve(t.children), o = a.filter(function(rt) {
      return rt.getAttribute(Pi) === e;
    })[0], s = ae.getComputedStyle(t, e), l = s.getPropertyValue("font-family").match(Np), f = s.getPropertyValue("font-weight"), c = s.getPropertyValue("content");
    if (o && !l)
      return t.removeChild(o), r();
    if (l && c !== "none" && c !== "") {
      var d = s.getPropertyValue("content"), m = ~["Sharp"].indexOf(l[2]) ? Z : V, g = ~["Solid", "Regular", "Light", "Thin", "Duotone", "Brands", "Kit"].indexOf(l[2]) ? kn[m][l[2].toLowerCase()] : Ip[m][f], P = D0(d), O = P.value, D = P.isSecondary, _ = l[0].startsWith("FontAwesome"), C = wa(g, O), E = C;
      if (_) {
        var F = i0(O);
        F.iconName && F.prefix && (C = F.iconName, g = F.prefix);
      }
      if (C && !D && (!o || o.getAttribute(pa) !== g || o.getAttribute(ga) !== E)) {
        t.setAttribute(n, E), o && t.removeChild(o);
        var B = O0(), ct = B.extra;
        ct.attributes[Pi] = e, Fi(C, g).then(function(rt) {
          var xt = ka(S(S({}, B), {}, {
            icons: {
              main: rt,
              mask: _a()
            },
            prefix: g,
            iconName: E,
            extra: ct,
            watchable: !0
          })), yt = K.createElement("svg");
          e === "::before" ? t.insertBefore(yt, t.firstChild) : t.appendChild(yt), yt.outerHTML = xt.map(function(Ht) {
            return Nn(Ht);
          }).join(`
`), t.removeAttribute(n), r();
        }).catch(i);
      } else
        r();
    } else
      r();
  });
}
function z0(t) {
  return Promise.all([Uo(t, "::before"), Uo(t, "::after")]);
}
function H0(t) {
  return t.parentNode !== document.head && !~Op.indexOf(t.tagName.toUpperCase()) && !t.getAttribute(Pi) && (!t.parentNode || t.parentNode.tagName !== "svg");
}
function Yo(t) {
  if (Jt)
    return new Promise(function(e, n) {
      var r = Ve(t.querySelectorAll("*")).filter(H0).map(z0), i = Aa.begin("searchPseudoElements");
      Kl(), Promise.all(r).then(function() {
        i(), Li(), e();
      }).catch(function() {
        i(), Li(), n();
      });
    });
}
var j0 = {
  hooks: function() {
    return {
      mutationObserverCallbacks: function(n) {
        return n.pseudoElementsCallback = Yo, n;
      }
    };
  },
  provides: function(e) {
    e.pseudoElements2svg = function(n) {
      var r = n.node, i = r === void 0 ? K : r;
      N.searchPseudoElements && Yo(i);
    };
  }
}, Go = !1, B0 = {
  mixout: function() {
    return {
      dom: {
        unwatch: function() {
          Kl(), Go = !0;
        }
      }
    };
  },
  hooks: function() {
    return {
      bootstrap: function() {
        zo(Ii("mutationObserverCallbacks", {}));
      },
      noAuto: function() {
        A0();
      },
      watch: function(n) {
        var r = n.observeMutationsRoot;
        Go ? Li() : zo(Ii("mutationObserverCallbacks", {
          observeMutationsRoot: r
        }));
      }
    };
  }
}, Wo = function(e) {
  var n = {
    size: 16,
    x: 0,
    y: 0,
    flipX: !1,
    flipY: !1,
    rotate: 0
  };
  return e.toLowerCase().split(" ").reduce(function(r, i) {
    var a = i.toLowerCase().split("-"), o = a[0], s = a.slice(1).join("-");
    if (o && s === "h")
      return r.flipX = !0, r;
    if (o && s === "v")
      return r.flipY = !0, r;
    if (s = parseFloat(s), isNaN(s))
      return r;
    switch (o) {
      case "grow":
        r.size = r.size + s;
        break;
      case "shrink":
        r.size = r.size - s;
        break;
      case "left":
        r.x = r.x - s;
        break;
      case "right":
        r.x = r.x + s;
        break;
      case "up":
        r.y = r.y - s;
        break;
      case "down":
        r.y = r.y + s;
        break;
      case "rotate":
        r.rotate = r.rotate + s;
        break;
    }
    return r;
  }, n);
}, U0 = {
  mixout: function() {
    return {
      parse: {
        transform: function(n) {
          return Wo(n);
        }
      }
    };
  },
  hooks: function() {
    return {
      parseNodeAttributes: function(n, r) {
        var i = r.getAttribute("data-fa-transform");
        return i && (n.transform = Wo(i)), n;
      }
    };
  },
  provides: function(e) {
    e.generateAbstractTransformGrouping = function(n) {
      var r = n.main, i = n.transform, a = n.containerWidth, o = n.iconWidth, s = {
        transform: "translate(".concat(a / 2, " 256)")
      }, l = "translate(".concat(i.x * 32, ", ").concat(i.y * 32, ") "), f = "scale(".concat(i.size / 16 * (i.flipX ? -1 : 1), ", ").concat(i.size / 16 * (i.flipY ? -1 : 1), ") "), c = "rotate(".concat(i.rotate, " 0 0)"), d = {
        transform: "".concat(l, " ").concat(f, " ").concat(c)
      }, m = {
        transform: "translate(".concat(o / 2 * -1, " -256)")
      }, g = {
        outer: s,
        inner: d,
        path: m
      };
      return {
        tag: "g",
        attributes: S({}, g.outer),
        children: [{
          tag: "g",
          attributes: S({}, g.inner),
          children: [{
            tag: r.icon.tag,
            children: r.icon.children,
            attributes: S(S({}, r.icon.attributes), g.path)
          }]
        }]
      };
    };
  }
}, oi = {
  x: 0,
  y: 0,
  width: "100%",
  height: "100%"
};
function Vo(t) {
  var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
  return t.attributes && (t.attributes.fill || e) && (t.attributes.fill = "black"), t;
}
function Y0(t) {
  return t.tag === "g" ? t.children : [t];
}
var G0 = {
  hooks: function() {
    return {
      parseNodeAttributes: function(n, r) {
        var i = r.getAttribute("data-fa-mask"), a = i ? jr(i.split(" ").map(function(o) {
          return o.trim();
        })) : _a();
        return a.prefix || (a.prefix = oe()), n.mask = a, n.maskId = r.getAttribute("data-fa-mask-id"), n;
      }
    };
  },
  provides: function(e) {
    e.generateAbstractMask = function(n) {
      var r = n.children, i = n.attributes, a = n.main, o = n.mask, s = n.maskId, l = n.transform, f = a.width, c = a.icon, d = o.width, m = o.icon, g = Up({
        transform: l,
        containerWidth: d,
        iconWidth: f
      }), P = {
        tag: "rect",
        attributes: S(S({}, oi), {}, {
          fill: "white"
        })
      }, O = c.children ? {
        children: c.children.map(Vo)
      } : {}, D = {
        tag: "g",
        attributes: S({}, g.inner),
        children: [Vo(S({
          tag: c.tag,
          attributes: S(S({}, c.attributes), g.path)
        }, O))]
      }, _ = {
        tag: "g",
        attributes: S({}, g.outer),
        children: [D]
      }, C = "mask-".concat(s || Cn()), E = "clip-".concat(s || Cn()), F = {
        tag: "mask",
        attributes: S(S({}, oi), {}, {
          id: C,
          maskUnits: "userSpaceOnUse",
          maskContentUnits: "userSpaceOnUse"
        }),
        children: [P, _]
      }, B = {
        tag: "defs",
        children: [{
          tag: "clipPath",
          attributes: {
            id: E
          },
          children: Y0(m)
        }, F]
      };
      return r.push(B, {
        tag: "rect",
        attributes: S({
          fill: "currentColor",
          "clip-path": "url(#".concat(E, ")"),
          mask: "url(#".concat(C, ")")
        }, oi)
      }), {
        children: r,
        attributes: i
      };
    };
  }
}, W0 = {
  provides: function(e) {
    var n = !1;
    ae.matchMedia && (n = ae.matchMedia("(prefers-reduced-motion: reduce)").matches), e.missingIconAbstract = function() {
      var r = [], i = {
        fill: "currentColor"
      }, a = {
        attributeType: "XML",
        repeatCount: "indefinite",
        dur: "2s"
      };
      r.push({
        tag: "path",
        attributes: S(S({}, i), {}, {
          d: "M156.5,447.7l-12.6,29.5c-18.7-9.5-35.9-21.2-51.5-34.9l22.7-22.7C127.6,430.5,141.5,440,156.5,447.7z M40.6,272H8.5 c1.4,21.2,5.4,41.7,11.7,61.1L50,321.2C45.1,305.5,41.8,289,40.6,272z M40.6,240c1.4-18.8,5.2-37,11.1-54.1l-29.5-12.6 C14.7,194.3,10,216.7,8.5,240H40.6z M64.3,156.5c7.8-14.9,17.2-28.8,28.1-41.5L69.7,92.3c-13.7,15.6-25.5,32.8-34.9,51.5 L64.3,156.5z M397,419.6c-13.9,12-29.4,22.3-46.1,30.4l11.9,29.8c20.7-9.9,39.8-22.6,56.9-37.6L397,419.6z M115,92.4 c13.9-12,29.4-22.3,46.1-30.4l-11.9-29.8c-20.7,9.9-39.8,22.6-56.8,37.6L115,92.4z M447.7,355.5c-7.8,14.9-17.2,28.8-28.1,41.5 l22.7,22.7c13.7-15.6,25.5-32.9,34.9-51.5L447.7,355.5z M471.4,272c-1.4,18.8-5.2,37-11.1,54.1l29.5,12.6 c7.5-21.1,12.2-43.5,13.6-66.8H471.4z M321.2,462c-15.7,5-32.2,8.2-49.2,9.4v32.1c21.2-1.4,41.7-5.4,61.1-11.7L321.2,462z M240,471.4c-18.8-1.4-37-5.2-54.1-11.1l-12.6,29.5c21.1,7.5,43.5,12.2,66.8,13.6V471.4z M462,190.8c5,15.7,8.2,32.2,9.4,49.2h32.1 c-1.4-21.2-5.4-41.7-11.7-61.1L462,190.8z M92.4,397c-12-13.9-22.3-29.4-30.4-46.1l-29.8,11.9c9.9,20.7,22.6,39.8,37.6,56.9 L92.4,397z M272,40.6c18.8,1.4,36.9,5.2,54.1,11.1l12.6-29.5C317.7,14.7,295.3,10,272,8.5V40.6z M190.8,50 c15.7-5,32.2-8.2,49.2-9.4V8.5c-21.2,1.4-41.7,5.4-61.1,11.7L190.8,50z M442.3,92.3L419.6,115c12,13.9,22.3,29.4,30.5,46.1 l29.8-11.9C470,128.5,457.3,109.4,442.3,92.3z M397,92.4l22.7-22.7c-15.6-13.7-32.8-25.5-51.5-34.9l-12.6,29.5 C370.4,72.1,384.4,81.5,397,92.4z"
        })
      });
      var o = S(S({}, a), {}, {
        attributeName: "opacity"
      }), s = {
        tag: "circle",
        attributes: S(S({}, i), {}, {
          cx: "256",
          cy: "364",
          r: "28"
        }),
        children: []
      };
      return n || s.children.push({
        tag: "animate",
        attributes: S(S({}, a), {}, {
          attributeName: "r",
          values: "28;14;28;28;14;28;"
        })
      }, {
        tag: "animate",
        attributes: S(S({}, o), {}, {
          values: "1;0;1;1;0;1;"
        })
      }), r.push(s), r.push({
        tag: "path",
        attributes: S(S({}, i), {}, {
          opacity: "1",
          d: "M263.7,312h-16c-6.6,0-12-5.4-12-12c0-71,77.4-63.9,77.4-107.8c0-20-17.8-40.2-57.4-40.2c-29.1,0-44.3,9.6-59.2,28.7 c-3.9,5-11.1,6-16.2,2.4l-13.1-9.2c-5.6-3.9-6.9-11.8-2.6-17.2c21.2-27.2,46.4-44.7,91.2-44.7c52.3,0,97.4,29.8,97.4,80.2 c0,67.6-77.4,63.5-77.4,107.8C275.7,306.6,270.3,312,263.7,312z"
        }),
        children: n ? [] : [{
          tag: "animate",
          attributes: S(S({}, o), {}, {
            values: "1;0;0;0;0;1;"
          })
        }]
      }), n || r.push({
        tag: "path",
        attributes: S(S({}, i), {}, {
          opacity: "0",
          d: "M232.5,134.5l7,168c0.3,6.4,5.6,11.5,12,11.5h9c6.4,0,11.7-5.1,12-11.5l7-168c0.3-6.8-5.2-12.5-12-12.5h-23 C237.7,122,232.2,127.7,232.5,134.5z"
        }),
        children: [{
          tag: "animate",
          attributes: S(S({}, o), {}, {
            values: "0;0;1;1;0;0;"
          })
        }]
      }), {
        tag: "g",
        attributes: {
          class: "missing"
        },
        children: r
      };
    };
  }
}, V0 = {
  hooks: function() {
    return {
      parseNodeAttributes: function(n, r) {
        var i = r.getAttribute("data-fa-symbol"), a = i === null ? !1 : i === "" ? !0 : i;
        return n.symbol = a, n;
      }
    };
  }
}, K0 = [Wp, M0, R0, F0, $0, j0, B0, U0, G0, W0, V0];
s0(K0, {
  mixoutsTo: vt
});
vt.noAuto;
var Xl = vt.config, Jl = vt.library;
vt.dom;
var Ar = vt.parse;
vt.findIconDefinition;
vt.toHtml;
var q0 = vt.icon;
vt.layer;
var X0 = vt.text;
vt.counter;
function Ko(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(t);
    e && (r = r.filter(function(i) {
      return Object.getOwnPropertyDescriptor(t, i).enumerable;
    })), n.push.apply(n, r);
  }
  return n;
}
function Et(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2 ? Ko(Object(n), !0).forEach(function(r) {
      ut(t, r, n[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : Ko(Object(n)).forEach(function(r) {
      Object.defineProperty(t, r, Object.getOwnPropertyDescriptor(n, r));
    });
  }
  return t;
}
function Er(t) {
  return Er = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, Er(t);
}
function ut(t, e, n) {
  return e in t ? Object.defineProperty(t, e, {
    value: n,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : t[e] = n, t;
}
function J0(t, e) {
  if (t == null)
    return {};
  var n = {}, r = Object.keys(t), i, a;
  for (a = 0; a < r.length; a++)
    i = r[a], !(e.indexOf(i) >= 0) && (n[i] = t[i]);
  return n;
}
function Z0(t, e) {
  if (t == null)
    return {};
  var n = J0(t, e), r, i;
  if (Object.getOwnPropertySymbols) {
    var a = Object.getOwnPropertySymbols(t);
    for (i = 0; i < a.length; i++)
      r = a[i], !(e.indexOf(r) >= 0) && Object.prototype.propertyIsEnumerable.call(t, r) && (n[r] = t[r]);
  }
  return n;
}
function Di(t) {
  return Q0(t) || tg(t) || eg(t) || ng();
}
function Q0(t) {
  if (Array.isArray(t))
    return zi(t);
}
function tg(t) {
  if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null)
    return Array.from(t);
}
function eg(t, e) {
  if (t) {
    if (typeof t == "string")
      return zi(t, e);
    var n = Object.prototype.toString.call(t).slice(8, -1);
    if (n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set")
      return Array.from(t);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return zi(t, e);
  }
}
function zi(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, r = new Array(e); n < e; n++)
    r[n] = t[n];
  return r;
}
function ng() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
var rg = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {}, Zl = { exports: {} };
(function(t) {
  (function(e) {
    var n = function(_, C, E) {
      if (!f(C) || d(C) || m(C) || g(C) || l(C))
        return C;
      var F, B = 0, ct = 0;
      if (c(C))
        for (F = [], ct = C.length; B < ct; B++)
          F.push(n(_, C[B], E));
      else {
        F = {};
        for (var rt in C)
          Object.prototype.hasOwnProperty.call(C, rt) && (F[_(rt, E)] = n(_, C[rt], E));
      }
      return F;
    }, r = function(_, C) {
      C = C || {};
      var E = C.separator || "_", F = C.split || /(?=[A-Z])/;
      return _.split(F).join(E);
    }, i = function(_) {
      return P(_) ? _ : (_ = _.replace(/[\-_\s]+(.)?/g, function(C, E) {
        return E ? E.toUpperCase() : "";
      }), _.substr(0, 1).toLowerCase() + _.substr(1));
    }, a = function(_) {
      var C = i(_);
      return C.substr(0, 1).toUpperCase() + C.substr(1);
    }, o = function(_, C) {
      return r(_, C).toLowerCase();
    }, s = Object.prototype.toString, l = function(_) {
      return typeof _ == "function";
    }, f = function(_) {
      return _ === Object(_);
    }, c = function(_) {
      return s.call(_) == "[object Array]";
    }, d = function(_) {
      return s.call(_) == "[object Date]";
    }, m = function(_) {
      return s.call(_) == "[object RegExp]";
    }, g = function(_) {
      return s.call(_) == "[object Boolean]";
    }, P = function(_) {
      return _ = _ - 0, _ === _;
    }, O = function(_, C) {
      var E = C && "process" in C ? C.process : C;
      return typeof E != "function" ? _ : function(F, B) {
        return E(F, _, B);
      };
    }, D = {
      camelize: i,
      decamelize: o,
      pascalize: a,
      depascalize: o,
      camelizeKeys: function(_, C) {
        return n(O(i, C), _);
      },
      decamelizeKeys: function(_, C) {
        return n(O(o, C), _, C);
      },
      pascalizeKeys: function(_, C) {
        return n(O(a, C), _);
      },
      depascalizeKeys: function() {
        return this.decamelizeKeys.apply(this, arguments);
      }
    };
    t.exports ? t.exports = D : e.humps = D;
  })(rg);
})(Zl);
var ig = Zl.exports, ag = ["class", "style"];
function og(t) {
  return t.split(";").map(function(e) {
    return e.trim();
  }).filter(function(e) {
    return e;
  }).reduce(function(e, n) {
    var r = n.indexOf(":"), i = ig.camelize(n.slice(0, r)), a = n.slice(r + 1).trim();
    return e[i] = a, e;
  }, {});
}
function sg(t) {
  return t.split(/\s+/).reduce(function(e, n) {
    return e[n] = !0, e;
  }, {});
}
function Ca(t) {
  var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  if (typeof t == "string")
    return t;
  var r = (t.children || []).map(function(l) {
    return Ca(l);
  }), i = Object.keys(t.attributes || {}).reduce(function(l, f) {
    var c = t.attributes[f];
    switch (f) {
      case "class":
        l.class = sg(c);
        break;
      case "style":
        l.style = og(c);
        break;
      default:
        l.attrs[f] = c;
    }
    return l;
  }, {
    attrs: {},
    class: {},
    style: {}
  });
  n.class;
  var a = n.style, o = a === void 0 ? {} : a, s = Z0(n, ag);
  return _l(t.tag, Et(Et(Et({}, e), {}, {
    class: i.class,
    style: Et(Et({}, i.style), o)
  }, i.attrs), s), r);
}
var Ql = !1;
try {
  Ql = !0;
} catch {
}
function lg() {
  if (!Ql && console && typeof console.error == "function") {
    var t;
    (t = console).error.apply(t, arguments);
  }
}
function cn(t, e) {
  return Array.isArray(e) && e.length > 0 || !Array.isArray(e) && e ? ut({}, t, e) : {};
}
function fg(t) {
  var e, n = (e = {
    "fa-spin": t.spin,
    "fa-pulse": t.pulse,
    "fa-fw": t.fixedWidth,
    "fa-border": t.border,
    "fa-li": t.listItem,
    "fa-inverse": t.inverse,
    "fa-flip": t.flip === !0,
    "fa-flip-horizontal": t.flip === "horizontal" || t.flip === "both",
    "fa-flip-vertical": t.flip === "vertical" || t.flip === "both"
  }, ut(e, "fa-".concat(t.size), t.size !== null), ut(e, "fa-rotate-".concat(t.rotation), t.rotation !== null), ut(e, "fa-pull-".concat(t.pull), t.pull !== null), ut(e, "fa-swap-opacity", t.swapOpacity), ut(e, "fa-bounce", t.bounce), ut(e, "fa-shake", t.shake), ut(e, "fa-beat", t.beat), ut(e, "fa-fade", t.fade), ut(e, "fa-beat-fade", t.beatFade), ut(e, "fa-flash", t.flash), ut(e, "fa-spin-pulse", t.spinPulse), ut(e, "fa-spin-reverse", t.spinReverse), e);
  return Object.keys(n).map(function(r) {
    return n[r] ? r : null;
  }).filter(function(r) {
    return r;
  });
}
function qo(t) {
  if (t && Er(t) === "object" && t.prefix && t.iconName && t.icon)
    return t;
  if (Ar.icon)
    return Ar.icon(t);
  if (t === null)
    return null;
  if (Er(t) === "object" && t.prefix && t.iconName)
    return t;
  if (Array.isArray(t) && t.length === 2)
    return {
      prefix: t[0],
      iconName: t[1]
    };
  if (typeof t == "string")
    return {
      prefix: "fas",
      iconName: t
    };
}
var pe = Fr({
  name: "FontAwesomeIcon",
  props: {
    border: {
      type: Boolean,
      default: !1
    },
    fixedWidth: {
      type: Boolean,
      default: !1
    },
    flip: {
      type: [Boolean, String],
      default: !1,
      validator: function(e) {
        return [!0, !1, "horizontal", "vertical", "both"].indexOf(e) > -1;
      }
    },
    icon: {
      type: [Object, Array, String],
      required: !0
    },
    mask: {
      type: [Object, Array, String],
      default: null
    },
    listItem: {
      type: Boolean,
      default: !1
    },
    pull: {
      type: String,
      default: null,
      validator: function(e) {
        return ["right", "left"].indexOf(e) > -1;
      }
    },
    pulse: {
      type: Boolean,
      default: !1
    },
    rotation: {
      type: [String, Number],
      default: null,
      validator: function(e) {
        return [90, 180, 270].indexOf(Number.parseInt(e, 10)) > -1;
      }
    },
    swapOpacity: {
      type: Boolean,
      default: !1
    },
    size: {
      type: String,
      default: null,
      validator: function(e) {
        return ["2xs", "xs", "sm", "lg", "xl", "2xl", "1x", "2x", "3x", "4x", "5x", "6x", "7x", "8x", "9x", "10x"].indexOf(e) > -1;
      }
    },
    spin: {
      type: Boolean,
      default: !1
    },
    transform: {
      type: [String, Object],
      default: null
    },
    symbol: {
      type: [Boolean, String],
      default: !1
    },
    title: {
      type: String,
      default: null
    },
    inverse: {
      type: Boolean,
      default: !1
    },
    bounce: {
      type: Boolean,
      default: !1
    },
    shake: {
      type: Boolean,
      default: !1
    },
    beat: {
      type: Boolean,
      default: !1
    },
    fade: {
      type: Boolean,
      default: !1
    },
    beatFade: {
      type: Boolean,
      default: !1
    },
    flash: {
      type: Boolean,
      default: !1
    },
    spinPulse: {
      type: Boolean,
      default: !1
    },
    spinReverse: {
      type: Boolean,
      default: !1
    }
  },
  setup: function(e, n) {
    var r = n.attrs, i = bt(function() {
      return qo(e.icon);
    }), a = bt(function() {
      return cn("classes", fg(e));
    }), o = bt(function() {
      return cn("transform", typeof e.transform == "string" ? Ar.transform(e.transform) : e.transform);
    }), s = bt(function() {
      return cn("mask", qo(e.mask));
    }), l = bt(function() {
      return q0(i.value, Et(Et(Et(Et({}, a.value), o.value), s.value), {}, {
        symbol: e.symbol,
        title: e.title
      }));
    });
    or(l, function(c) {
      if (!c)
        return lg("Could not find one or more icon(s)", i.value, s.value);
    }, {
      immediate: !0
    });
    var f = bt(function() {
      return l.value ? Ca(l.value.abstract[0], {}, r) : null;
    });
    return function() {
      return f.value;
    };
  }
});
Fr({
  name: "FontAwesomeLayers",
  props: {
    fixedWidth: {
      type: Boolean,
      default: !1
    }
  },
  setup: function(e, n) {
    var r = n.slots, i = Xl.familyPrefix, a = bt(function() {
      return ["".concat(i, "-layers")].concat(Di(e.fixedWidth ? ["".concat(i, "-fw")] : []));
    });
    return function() {
      return _l("div", {
        class: a.value
      }, r.default ? r.default() : []);
    };
  }
});
Fr({
  name: "FontAwesomeLayersText",
  props: {
    value: {
      type: [String, Number],
      default: ""
    },
    transform: {
      type: [String, Object],
      default: null
    },
    counter: {
      type: Boolean,
      default: !1
    },
    position: {
      type: String,
      default: null,
      validator: function(e) {
        return ["bottom-left", "bottom-right", "top-left", "top-right"].indexOf(e) > -1;
      }
    }
  },
  setup: function(e, n) {
    var r = n.attrs, i = Xl.familyPrefix, a = bt(function() {
      return cn("classes", [].concat(Di(e.counter ? ["".concat(i, "-layers-counter")] : []), Di(e.position ? ["".concat(i, "-layers-").concat(e.position)] : [])));
    }), o = bt(function() {
      return cn("transform", typeof e.transform == "string" ? Ar.transform(e.transform) : e.transform);
    }), s = bt(function() {
      var f = X0(e.value.toString(), Et(Et({}, o.value), a.value)), c = f.abstract;
      return e.counter && (c[0].attributes.class = c[0].attributes.class.replace("fa-layers-text", "")), c[0];
    }), l = bt(function() {
      return Ca(s.value, {}, r);
    });
    return function() {
      return l.value;
    };
  }
});
const cg = ["disabled"], Qe = /* @__PURE__ */ Fr({
  __name: "Counter",
  props: {
    canDisable: {
      type: Boolean,
      default: !1
    },
    showSpinner: {
      type: Boolean,
      default: !1
    },
    showProgress: {
      type: Boolean,
      default: !1
    },
    goalGradientEffect: {
      type: Boolean,
      default: !1
    }
  },
  setup(t) {
    const e = t, n = (s) => -Math.pow(s - 1, 6) + 1, r = Xr(), i = Xr(0), a = Xr(!1), o = async () => {
      if (!r.value || a.value)
        return;
      console.log("start"), a.value = !0;
      const s = 5e3, l = 15, f = s / l;
      for (let c = 0; c < f; c++) {
        const d = e.goalGradientEffect ? (100 * n(c / f)).toFixed(2) : (100 * c / f).toFixed(2);
        console.log("percent: ", d), e.showProgress && (r.value.style.background = `linear-gradient(90deg, rgba(0,0,0,0.3) ${d}%, rgba(255,255,255,1) ${d}%)`), await _d(l);
      }
      r.value.style.background = "", console.log("increment"), i.value++, a.value = !1;
    };
    return ol(() => {
      console.log(`The initial count is ${i.value}.`);
    }), (s, l) => (ti(), $m("button", {
      ref_key: "button",
      ref: r,
      onClick: o,
      disabled: t.canDisable && a.value
    }, [
      t.showSpinner && a.value ? (ti(), ho(yi(pe), {
        key: 0,
        icon: "fa-solid fa-circle-notch",
        spin: !0
      })) : (ti(), ho(yi(pe), {
        key: 1,
        icon: "fa-solid fa-plus"
      })),
      bl(" Ma valeur est : " + th(i.value), 1)
    ], 8, cg));
  }
});
var ug = {
  prefix: "fas",
  iconName: "circle-notch",
  icon: [512, 512, [], "f1ce", "M222.7 32.1c5 16.9-4.6 34.8-21.5 39.8C121.8 95.6 64 169.1 64 256c0 106 86 192 192 192s192-86 192-192c0-86.9-57.8-160.4-137.1-184.1c-16.9-5-26.6-22.9-21.5-39.8s22.9-26.6 39.8-21.5C434.9 42.1 512 140 512 256c0 141.4-114.6 256-256 256S0 397.4 0 256C0 140 77.1 42.1 182.9 10.6c16.9-5 34.8 4.6 39.8 21.5z"]
}, dg = {
  prefix: "fas",
  iconName: "plus",
  icon: [448, 512, [10133, 61543, "add"], "2b", "M240 80c0-17.7-14.3-32-32-32s-32 14.3-32 32V224H32c-17.7 0-32 14.3-32 32s14.3 32 32 32H176V432c0 17.7 14.3 32 32 32s32-14.3 32-32V288H384c17.7 0 32-14.3 32-32s-14.3-32-32-32H240V80z"]
};
Jl.add(ug);
Jl.add(dg);
const hg = () => {
  console.log("init vuejs stuff");
  const t = _s();
  t !== void 0 && t.page.class === "gradient" && (Ze(Qe).component("FontAwesomeIcon", pe).mount(".gradient .btn1"), Ze(() => ot(Qe, {
    canDisable: !0
  }, null)).component("FontAwesomeIcon", pe).mount(".gradient .btn2"), Ze(() => ot(Qe, {
    canDisable: !0,
    showSpinner: !0
  }, null)).component("FontAwesomeIcon", pe).mount(".gradient .btn3"), Ze(() => ot(Qe, {
    canDisable: !0,
    showSpinner: !0,
    showProgress: !0
  }, null)).component("FontAwesomeIcon", pe).mount(".gradient .btn4"), Ze(() => ot(Qe, {
    canDisable: !0,
    showSpinner: !0,
    showProgress: !0,
    goalGradientEffect: !0
  }, null)).component("FontAwesomeIcon", pe).mount(".gradient .btn5"), console.log("end vuejs stuff"));
};
Gd();
const mg = new Yd();
mg.initSvg();
hg();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
