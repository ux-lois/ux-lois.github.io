var nf = Object.defineProperty;
var rf = (t, e, n) => e in t ? nf(t, e, { enumerable: !0, configurable: !0, writable: !0, value: n }) : t[e] = n;
var Pe = (t, e, n) => (rf(t, typeof e != "symbol" ? e + "" : e, n), n);
var af = { value: () => {
} };
function Jo() {
  for (var t = 0, e = arguments.length, n = {}, r; t < e; ++t) {
    if (!(r = arguments[t] + "") || r in n || /[\s.]/.test(r))
      throw new Error("illegal type: " + r);
    n[r] = [];
  }
  return new er(n);
}
function er(t) {
  this._ = t;
}
function of(t, e) {
  return t.trim().split(/^|\s+/).map(function(n) {
    var r = "", i = n.indexOf(".");
    if (i >= 0 && (r = n.slice(i + 1), n = n.slice(0, i)), n && !e.hasOwnProperty(n))
      throw new Error("unknown type: " + n);
    return { type: n, name: r };
  });
}
er.prototype = Jo.prototype = {
  constructor: er,
  on: function(t, e) {
    var n = this._, r = of(t + "", n), i, a = -1, o = r.length;
    if (arguments.length < 2) {
      for (; ++a < o; )
        if ((i = (t = r[a]).type) && (i = sf(n[i], t.name)))
          return i;
      return;
    }
    if (e != null && typeof e != "function")
      throw new Error("invalid callback: " + e);
    for (; ++a < o; )
      if (i = (t = r[a]).type)
        n[i] = Ra(n[i], t.name, e);
      else if (e == null)
        for (i in n)
          n[i] = Ra(n[i], t.name, null);
    return this;
  },
  copy: function() {
    var t = {}, e = this._;
    for (var n in e)
      t[n] = e[n].slice();
    return new er(t);
  },
  call: function(t, e) {
    if ((i = arguments.length - 2) > 0)
      for (var n = new Array(i), r = 0, i, a; r < i; ++r)
        n[r] = arguments[r + 2];
    if (!this._.hasOwnProperty(t))
      throw new Error("unknown type: " + t);
    for (a = this._[t], r = 0, i = a.length; r < i; ++r)
      a[r].value.apply(e, n);
  },
  apply: function(t, e, n) {
    if (!this._.hasOwnProperty(t))
      throw new Error("unknown type: " + t);
    for (var r = this._[t], i = 0, a = r.length; i < a; ++i)
      r[i].value.apply(e, n);
  }
};
function sf(t, e) {
  for (var n = 0, r = t.length, i; n < r; ++n)
    if ((i = t[n]).name === e)
      return i.value;
}
function Ra(t, e, n) {
  for (var r = 0, i = t.length; r < i; ++r)
    if (t[r].name === e) {
      t[r] = af, t = t.slice(0, r).concat(t.slice(r + 1));
      break;
    }
  return n != null && t.push({ name: e, value: n }), t;
}
var si = "http://www.w3.org/1999/xhtml";
const Fa = {
  svg: "http://www.w3.org/2000/svg",
  xhtml: si,
  xlink: "http://www.w3.org/1999/xlink",
  xml: "http://www.w3.org/XML/1998/namespace",
  xmlns: "http://www.w3.org/2000/xmlns/"
};
function Cr(t) {
  var e = t += "", n = e.indexOf(":");
  return n >= 0 && (e = t.slice(0, n)) !== "xmlns" && (t = t.slice(n + 1)), Fa.hasOwnProperty(e) ? { space: Fa[e], local: t } : t;
}
function lf(t) {
  return function() {
    var e = this.ownerDocument, n = this.namespaceURI;
    return n === si && e.documentElement.namespaceURI === si ? e.createElement(t) : e.createElementNS(n, t);
  };
}
function ff(t) {
  return function() {
    return this.ownerDocument.createElementNS(t.space, t.local);
  };
}
function Zo(t) {
  var e = Cr(t);
  return (e.local ? ff : lf)(e);
}
function cf() {
}
function Hi(t) {
  return t == null ? cf : function() {
    return this.querySelector(t);
  };
}
function uf(t) {
  typeof t != "function" && (t = Hi(t));
  for (var e = this._groups, n = e.length, r = new Array(n), i = 0; i < n; ++i)
    for (var a = e[i], o = a.length, s = r[i] = new Array(o), l, f, c = 0; c < o; ++c)
      (l = a[c]) && (f = t.call(l, l.__data__, c, a)) && ("__data__" in l && (f.__data__ = l.__data__), s[c] = f);
  return new gt(r, this._parents);
}
function df(t) {
  return t == null ? [] : Array.isArray(t) ? t : Array.from(t);
}
function hf() {
  return [];
}
function Qo(t) {
  return t == null ? hf : function() {
    return this.querySelectorAll(t);
  };
}
function mf(t) {
  return function() {
    return df(t.apply(this, arguments));
  };
}
function pf(t) {
  typeof t == "function" ? t = mf(t) : t = Qo(t);
  for (var e = this._groups, n = e.length, r = [], i = [], a = 0; a < n; ++a)
    for (var o = e[a], s = o.length, l, f = 0; f < s; ++f)
      (l = o[f]) && (r.push(t.call(l, l.__data__, f, o)), i.push(l));
  return new gt(r, i);
}
function ts(t) {
  return function() {
    return this.matches(t);
  };
}
function es(t) {
  return function(e) {
    return e.matches(t);
  };
}
var gf = Array.prototype.find;
function vf(t) {
  return function() {
    return gf.call(this.children, t);
  };
}
function yf() {
  return this.firstElementChild;
}
function bf(t) {
  return this.select(t == null ? yf : vf(typeof t == "function" ? t : es(t)));
}
var xf = Array.prototype.filter;
function wf() {
  return Array.from(this.children);
}
function _f(t) {
  return function() {
    return xf.call(this.children, t);
  };
}
function kf(t) {
  return this.selectAll(t == null ? wf : _f(typeof t == "function" ? t : es(t)));
}
function Af(t) {
  typeof t != "function" && (t = ts(t));
  for (var e = this._groups, n = e.length, r = new Array(n), i = 0; i < n; ++i)
    for (var a = e[i], o = a.length, s = r[i] = [], l, f = 0; f < o; ++f)
      (l = a[f]) && t.call(l, l.__data__, f, a) && s.push(l);
  return new gt(r, this._parents);
}
function ns(t) {
  return new Array(t.length);
}
function Ef() {
  return new gt(this._enter || this._groups.map(ns), this._parents);
}
function ur(t, e) {
  this.ownerDocument = t.ownerDocument, this.namespaceURI = t.namespaceURI, this._next = null, this._parent = t, this.__data__ = e;
}
ur.prototype = {
  constructor: ur,
  appendChild: function(t) {
    return this._parent.insertBefore(t, this._next);
  },
  insertBefore: function(t, e) {
    return this._parent.insertBefore(t, e);
  },
  querySelector: function(t) {
    return this._parent.querySelector(t);
  },
  querySelectorAll: function(t) {
    return this._parent.querySelectorAll(t);
  }
};
function Cf(t) {
  return function() {
    return t;
  };
}
function Sf(t, e, n, r, i, a) {
  for (var o = 0, s, l = e.length, f = a.length; o < f; ++o)
    (s = e[o]) ? (s.__data__ = a[o], r[o] = s) : n[o] = new ur(t, a[o]);
  for (; o < l; ++o)
    (s = e[o]) && (i[o] = s);
}
function Of(t, e, n, r, i, a, o) {
  var s, l, f = /* @__PURE__ */ new Map(), c = e.length, d = a.length, m = new Array(c), g;
  for (s = 0; s < c; ++s)
    (l = e[s]) && (m[s] = g = o.call(l, l.__data__, s, e) + "", f.has(g) ? i[s] = l : f.set(g, l));
  for (s = 0; s < d; ++s)
    g = o.call(t, a[s], s, a) + "", (l = f.get(g)) ? (r[s] = l, l.__data__ = a[s], f.delete(g)) : n[s] = new ur(t, a[s]);
  for (s = 0; s < c; ++s)
    (l = e[s]) && f.get(m[s]) === l && (i[s] = l);
}
function Pf(t) {
  return t.__data__;
}
function Tf(t, e) {
  if (!arguments.length)
    return Array.from(this, Pf);
  var n = e ? Of : Sf, r = this._parents, i = this._groups;
  typeof t != "function" && (t = Cf(t));
  for (var a = i.length, o = new Array(a), s = new Array(a), l = new Array(a), f = 0; f < a; ++f) {
    var c = r[f], d = i[f], m = d.length, g = Nf(t.call(c, c && c.__data__, f, r)), P = g.length, O = s[f] = new Array(P), z = o[f] = new Array(P), _ = l[f] = new Array(m);
    n(c, d, O, z, _, g, e);
    for (var C = 0, E = 0, $, G; C < P; ++C)
      if ($ = O[C]) {
        for (C >= E && (E = C + 1); !(G = z[E]) && ++E < P; )
          ;
        $._next = G || null;
      }
  }
  return o = new gt(o, r), o._enter = s, o._exit = l, o;
}
function Nf(t) {
  return typeof t == "object" && "length" in t ? t : Array.from(t);
}
function If() {
  return new gt(this._exit || this._groups.map(ns), this._parents);
}
function Mf(t, e, n) {
  var r = this.enter(), i = this, a = this.exit();
  return typeof t == "function" ? (r = t(r), r && (r = r.selection())) : r = r.append(t + ""), e != null && (i = e(i), i && (i = i.selection())), n == null ? a.remove() : n(a), r && i ? r.merge(i).order() : i;
}
function Rf(t) {
  for (var e = t.selection ? t.selection() : t, n = this._groups, r = e._groups, i = n.length, a = r.length, o = Math.min(i, a), s = new Array(i), l = 0; l < o; ++l)
    for (var f = n[l], c = r[l], d = f.length, m = s[l] = new Array(d), g, P = 0; P < d; ++P)
      (g = f[P] || c[P]) && (m[P] = g);
  for (; l < i; ++l)
    s[l] = n[l];
  return new gt(s, this._parents);
}
function Ff() {
  for (var t = this._groups, e = -1, n = t.length; ++e < n; )
    for (var r = t[e], i = r.length - 1, a = r[i], o; --i >= 0; )
      (o = r[i]) && (a && o.compareDocumentPosition(a) ^ 4 && a.parentNode.insertBefore(o, a), a = o);
  return this;
}
function $f(t) {
  t || (t = Lf);
  function e(d, m) {
    return d && m ? t(d.__data__, m.__data__) : !d - !m;
  }
  for (var n = this._groups, r = n.length, i = new Array(r), a = 0; a < r; ++a) {
    for (var o = n[a], s = o.length, l = i[a] = new Array(s), f, c = 0; c < s; ++c)
      (f = o[c]) && (l[c] = f);
    l.sort(e);
  }
  return new gt(i, this._parents).order();
}
function Lf(t, e) {
  return t < e ? -1 : t > e ? 1 : t >= e ? 0 : NaN;
}
function Df() {
  var t = arguments[0];
  return arguments[0] = this, t.apply(null, arguments), this;
}
function zf() {
  return Array.from(this);
}
function Hf() {
  for (var t = this._groups, e = 0, n = t.length; e < n; ++e)
    for (var r = t[e], i = 0, a = r.length; i < a; ++i) {
      var o = r[i];
      if (o)
        return o;
    }
  return null;
}
function jf() {
  let t = 0;
  for (const e of this)
    ++t;
  return t;
}
function Gf() {
  return !this.node();
}
function Bf(t) {
  for (var e = this._groups, n = 0, r = e.length; n < r; ++n)
    for (var i = e[n], a = 0, o = i.length, s; a < o; ++a)
      (s = i[a]) && t.call(s, s.__data__, a, i);
  return this;
}
function Uf(t) {
  return function() {
    this.removeAttribute(t);
  };
}
function Yf(t) {
  return function() {
    this.removeAttributeNS(t.space, t.local);
  };
}
function Vf(t, e) {
  return function() {
    this.setAttribute(t, e);
  };
}
function Wf(t, e) {
  return function() {
    this.setAttributeNS(t.space, t.local, e);
  };
}
function Kf(t, e) {
  return function() {
    var n = e.apply(this, arguments);
    n == null ? this.removeAttribute(t) : this.setAttribute(t, n);
  };
}
function qf(t, e) {
  return function() {
    var n = e.apply(this, arguments);
    n == null ? this.removeAttributeNS(t.space, t.local) : this.setAttributeNS(t.space, t.local, n);
  };
}
function Xf(t, e) {
  var n = Cr(t);
  if (arguments.length < 2) {
    var r = this.node();
    return n.local ? r.getAttributeNS(n.space, n.local) : r.getAttribute(n);
  }
  return this.each((e == null ? n.local ? Yf : Uf : typeof e == "function" ? n.local ? qf : Kf : n.local ? Wf : Vf)(n, e));
}
function rs(t) {
  return t.ownerDocument && t.ownerDocument.defaultView || t.document && t || t.defaultView;
}
function Jf(t) {
  return function() {
    this.style.removeProperty(t);
  };
}
function Zf(t, e, n) {
  return function() {
    this.style.setProperty(t, e, n);
  };
}
function Qf(t, e, n) {
  return function() {
    var r = e.apply(this, arguments);
    r == null ? this.style.removeProperty(t) : this.style.setProperty(t, r, n);
  };
}
function tc(t, e, n) {
  return arguments.length > 1 ? this.each((e == null ? Jf : typeof e == "function" ? Qf : Zf)(t, e, n ?? "")) : ze(this.node(), t);
}
function ze(t, e) {
  return t.style.getPropertyValue(e) || rs(t).getComputedStyle(t, null).getPropertyValue(e);
}
function ec(t) {
  return function() {
    delete this[t];
  };
}
function nc(t, e) {
  return function() {
    this[t] = e;
  };
}
function rc(t, e) {
  return function() {
    var n = e.apply(this, arguments);
    n == null ? delete this[t] : this[t] = n;
  };
}
function ic(t, e) {
  return arguments.length > 1 ? this.each((e == null ? ec : typeof e == "function" ? rc : nc)(t, e)) : this.node()[t];
}
function is(t) {
  return t.trim().split(/^|\s+/);
}
function ji(t) {
  return t.classList || new as(t);
}
function as(t) {
  this._node = t, this._names = is(t.getAttribute("class") || "");
}
as.prototype = {
  add: function(t) {
    var e = this._names.indexOf(t);
    e < 0 && (this._names.push(t), this._node.setAttribute("class", this._names.join(" ")));
  },
  remove: function(t) {
    var e = this._names.indexOf(t);
    e >= 0 && (this._names.splice(e, 1), this._node.setAttribute("class", this._names.join(" ")));
  },
  contains: function(t) {
    return this._names.indexOf(t) >= 0;
  }
};
function os(t, e) {
  for (var n = ji(t), r = -1, i = e.length; ++r < i; )
    n.add(e[r]);
}
function ss(t, e) {
  for (var n = ji(t), r = -1, i = e.length; ++r < i; )
    n.remove(e[r]);
}
function ac(t) {
  return function() {
    os(this, t);
  };
}
function oc(t) {
  return function() {
    ss(this, t);
  };
}
function sc(t, e) {
  return function() {
    (e.apply(this, arguments) ? os : ss)(this, t);
  };
}
function lc(t, e) {
  var n = is(t + "");
  if (arguments.length < 2) {
    for (var r = ji(this.node()), i = -1, a = n.length; ++i < a; )
      if (!r.contains(n[i]))
        return !1;
    return !0;
  }
  return this.each((typeof e == "function" ? sc : e ? ac : oc)(n, e));
}
function fc() {
  this.textContent = "";
}
function cc(t) {
  return function() {
    this.textContent = t;
  };
}
function uc(t) {
  return function() {
    var e = t.apply(this, arguments);
    this.textContent = e ?? "";
  };
}
function dc(t) {
  return arguments.length ? this.each(t == null ? fc : (typeof t == "function" ? uc : cc)(t)) : this.node().textContent;
}
function hc() {
  this.innerHTML = "";
}
function mc(t) {
  return function() {
    this.innerHTML = t;
  };
}
function pc(t) {
  return function() {
    var e = t.apply(this, arguments);
    this.innerHTML = e ?? "";
  };
}
function gc(t) {
  return arguments.length ? this.each(t == null ? hc : (typeof t == "function" ? pc : mc)(t)) : this.node().innerHTML;
}
function vc() {
  this.nextSibling && this.parentNode.appendChild(this);
}
function yc() {
  return this.each(vc);
}
function bc() {
  this.previousSibling && this.parentNode.insertBefore(this, this.parentNode.firstChild);
}
function xc() {
  return this.each(bc);
}
function wc(t) {
  var e = typeof t == "function" ? t : Zo(t);
  return this.select(function() {
    return this.appendChild(e.apply(this, arguments));
  });
}
function _c() {
  return null;
}
function kc(t, e) {
  var n = typeof t == "function" ? t : Zo(t), r = e == null ? _c : typeof e == "function" ? e : Hi(e);
  return this.select(function() {
    return this.insertBefore(n.apply(this, arguments), r.apply(this, arguments) || null);
  });
}
function Ac() {
  var t = this.parentNode;
  t && t.removeChild(this);
}
function Ec() {
  return this.each(Ac);
}
function Cc() {
  var t = this.cloneNode(!1), e = this.parentNode;
  return e ? e.insertBefore(t, this.nextSibling) : t;
}
function Sc() {
  var t = this.cloneNode(!0), e = this.parentNode;
  return e ? e.insertBefore(t, this.nextSibling) : t;
}
function Oc(t) {
  return this.select(t ? Sc : Cc);
}
function Pc(t) {
  return arguments.length ? this.property("__data__", t) : this.node().__data__;
}
function Tc(t) {
  return function(e) {
    t.call(this, e, this.__data__);
  };
}
function Nc(t) {
  return t.trim().split(/^|\s+/).map(function(e) {
    var n = "", r = e.indexOf(".");
    return r >= 0 && (n = e.slice(r + 1), e = e.slice(0, r)), { type: e, name: n };
  });
}
function Ic(t) {
  return function() {
    var e = this.__on;
    if (e) {
      for (var n = 0, r = -1, i = e.length, a; n < i; ++n)
        a = e[n], (!t.type || a.type === t.type) && a.name === t.name ? this.removeEventListener(a.type, a.listener, a.options) : e[++r] = a;
      ++r ? e.length = r : delete this.__on;
    }
  };
}
function Mc(t, e, n) {
  return function() {
    var r = this.__on, i, a = Tc(e);
    if (r) {
      for (var o = 0, s = r.length; o < s; ++o)
        if ((i = r[o]).type === t.type && i.name === t.name) {
          this.removeEventListener(i.type, i.listener, i.options), this.addEventListener(i.type, i.listener = a, i.options = n), i.value = e;
          return;
        }
    }
    this.addEventListener(t.type, a, n), i = { type: t.type, name: t.name, value: e, listener: a, options: n }, r ? r.push(i) : this.__on = [i];
  };
}
function Rc(t, e, n) {
  var r = Nc(t + ""), i, a = r.length, o;
  if (arguments.length < 2) {
    var s = this.node().__on;
    if (s) {
      for (var l = 0, f = s.length, c; l < f; ++l)
        for (i = 0, c = s[l]; i < a; ++i)
          if ((o = r[i]).type === c.type && o.name === c.name)
            return c.value;
    }
    return;
  }
  for (s = e ? Mc : Ic, i = 0; i < a; ++i)
    this.each(s(r[i], e, n));
  return this;
}
function ls(t, e, n) {
  var r = rs(t), i = r.CustomEvent;
  typeof i == "function" ? i = new i(e, n) : (i = r.document.createEvent("Event"), n ? (i.initEvent(e, n.bubbles, n.cancelable), i.detail = n.detail) : i.initEvent(e, !1, !1)), t.dispatchEvent(i);
}
function Fc(t, e) {
  return function() {
    return ls(this, t, e);
  };
}
function $c(t, e) {
  return function() {
    return ls(this, t, e.apply(this, arguments));
  };
}
function Lc(t, e) {
  return this.each((typeof e == "function" ? $c : Fc)(t, e));
}
function* Dc() {
  for (var t = this._groups, e = 0, n = t.length; e < n; ++e)
    for (var r = t[e], i = 0, a = r.length, o; i < a; ++i)
      (o = r[i]) && (yield o);
}
var fs = [null];
function gt(t, e) {
  this._groups = t, this._parents = e;
}
function Sn() {
  return new gt([[document.documentElement]], fs);
}
function zc() {
  return this;
}
gt.prototype = Sn.prototype = {
  constructor: gt,
  select: uf,
  selectAll: pf,
  selectChild: bf,
  selectChildren: kf,
  filter: Af,
  data: Tf,
  enter: Ef,
  exit: If,
  join: Mf,
  merge: Rf,
  selection: zc,
  order: Ff,
  sort: $f,
  call: Df,
  nodes: zf,
  node: Hf,
  size: jf,
  empty: Gf,
  each: Bf,
  attr: Xf,
  style: tc,
  property: ic,
  classed: lc,
  text: dc,
  html: gc,
  raise: yc,
  lower: xc,
  append: wc,
  insert: kc,
  remove: Ec,
  clone: Oc,
  datum: Pc,
  on: Rc,
  dispatch: Lc,
  [Symbol.iterator]: Dc
};
function Hc(t) {
  return typeof t == "string" ? new gt([[document.querySelector(t)]], [document.documentElement]) : new gt([[t]], fs);
}
function Gi(t, e, n) {
  t.prototype = e.prototype = n, n.constructor = t;
}
function cs(t, e) {
  var n = Object.create(t.prototype);
  for (var r in e)
    n[r] = e[r];
  return n;
}
function On() {
}
var un = 0.7, dr = 1 / un, Me = "\\s*([+-]?\\d+)\\s*", dn = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*", Dt = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*", jc = /^#([0-9a-f]{3,8})$/, Gc = new RegExp(`^rgb\\(${Me},${Me},${Me}\\)$`), Bc = new RegExp(`^rgb\\(${Dt},${Dt},${Dt}\\)$`), Uc = new RegExp(`^rgba\\(${Me},${Me},${Me},${dn}\\)$`), Yc = new RegExp(`^rgba\\(${Dt},${Dt},${Dt},${dn}\\)$`), Vc = new RegExp(`^hsl\\(${dn},${Dt},${Dt}\\)$`), Wc = new RegExp(`^hsla\\(${dn},${Dt},${Dt},${dn}\\)$`), $a = {
  aliceblue: 15792383,
  antiquewhite: 16444375,
  aqua: 65535,
  aquamarine: 8388564,
  azure: 15794175,
  beige: 16119260,
  bisque: 16770244,
  black: 0,
  blanchedalmond: 16772045,
  blue: 255,
  blueviolet: 9055202,
  brown: 10824234,
  burlywood: 14596231,
  cadetblue: 6266528,
  chartreuse: 8388352,
  chocolate: 13789470,
  coral: 16744272,
  cornflowerblue: 6591981,
  cornsilk: 16775388,
  crimson: 14423100,
  cyan: 65535,
  darkblue: 139,
  darkcyan: 35723,
  darkgoldenrod: 12092939,
  darkgray: 11119017,
  darkgreen: 25600,
  darkgrey: 11119017,
  darkkhaki: 12433259,
  darkmagenta: 9109643,
  darkolivegreen: 5597999,
  darkorange: 16747520,
  darkorchid: 10040012,
  darkred: 9109504,
  darksalmon: 15308410,
  darkseagreen: 9419919,
  darkslateblue: 4734347,
  darkslategray: 3100495,
  darkslategrey: 3100495,
  darkturquoise: 52945,
  darkviolet: 9699539,
  deeppink: 16716947,
  deepskyblue: 49151,
  dimgray: 6908265,
  dimgrey: 6908265,
  dodgerblue: 2003199,
  firebrick: 11674146,
  floralwhite: 16775920,
  forestgreen: 2263842,
  fuchsia: 16711935,
  gainsboro: 14474460,
  ghostwhite: 16316671,
  gold: 16766720,
  goldenrod: 14329120,
  gray: 8421504,
  green: 32768,
  greenyellow: 11403055,
  grey: 8421504,
  honeydew: 15794160,
  hotpink: 16738740,
  indianred: 13458524,
  indigo: 4915330,
  ivory: 16777200,
  khaki: 15787660,
  lavender: 15132410,
  lavenderblush: 16773365,
  lawngreen: 8190976,
  lemonchiffon: 16775885,
  lightblue: 11393254,
  lightcoral: 15761536,
  lightcyan: 14745599,
  lightgoldenrodyellow: 16448210,
  lightgray: 13882323,
  lightgreen: 9498256,
  lightgrey: 13882323,
  lightpink: 16758465,
  lightsalmon: 16752762,
  lightseagreen: 2142890,
  lightskyblue: 8900346,
  lightslategray: 7833753,
  lightslategrey: 7833753,
  lightsteelblue: 11584734,
  lightyellow: 16777184,
  lime: 65280,
  limegreen: 3329330,
  linen: 16445670,
  magenta: 16711935,
  maroon: 8388608,
  mediumaquamarine: 6737322,
  mediumblue: 205,
  mediumorchid: 12211667,
  mediumpurple: 9662683,
  mediumseagreen: 3978097,
  mediumslateblue: 8087790,
  mediumspringgreen: 64154,
  mediumturquoise: 4772300,
  mediumvioletred: 13047173,
  midnightblue: 1644912,
  mintcream: 16121850,
  mistyrose: 16770273,
  moccasin: 16770229,
  navajowhite: 16768685,
  navy: 128,
  oldlace: 16643558,
  olive: 8421376,
  olivedrab: 7048739,
  orange: 16753920,
  orangered: 16729344,
  orchid: 14315734,
  palegoldenrod: 15657130,
  palegreen: 10025880,
  paleturquoise: 11529966,
  palevioletred: 14381203,
  papayawhip: 16773077,
  peachpuff: 16767673,
  peru: 13468991,
  pink: 16761035,
  plum: 14524637,
  powderblue: 11591910,
  purple: 8388736,
  rebeccapurple: 6697881,
  red: 16711680,
  rosybrown: 12357519,
  royalblue: 4286945,
  saddlebrown: 9127187,
  salmon: 16416882,
  sandybrown: 16032864,
  seagreen: 3050327,
  seashell: 16774638,
  sienna: 10506797,
  silver: 12632256,
  skyblue: 8900331,
  slateblue: 6970061,
  slategray: 7372944,
  slategrey: 7372944,
  snow: 16775930,
  springgreen: 65407,
  steelblue: 4620980,
  tan: 13808780,
  teal: 32896,
  thistle: 14204888,
  tomato: 16737095,
  turquoise: 4251856,
  violet: 15631086,
  wheat: 16113331,
  white: 16777215,
  whitesmoke: 16119285,
  yellow: 16776960,
  yellowgreen: 10145074
};
Gi(On, hn, {
  copy(t) {
    return Object.assign(new this.constructor(), this, t);
  },
  displayable() {
    return this.rgb().displayable();
  },
  hex: La,
  // Deprecated! Use color.formatHex.
  formatHex: La,
  formatHex8: Kc,
  formatHsl: qc,
  formatRgb: Da,
  toString: Da
});
function La() {
  return this.rgb().formatHex();
}
function Kc() {
  return this.rgb().formatHex8();
}
function qc() {
  return us(this).formatHsl();
}
function Da() {
  return this.rgb().formatRgb();
}
function hn(t) {
  var e, n;
  return t = (t + "").trim().toLowerCase(), (e = jc.exec(t)) ? (n = e[1].length, e = parseInt(e[1], 16), n === 6 ? za(e) : n === 3 ? new ht(e >> 8 & 15 | e >> 4 & 240, e >> 4 & 15 | e & 240, (e & 15) << 4 | e & 15, 1) : n === 8 ? $n(e >> 24 & 255, e >> 16 & 255, e >> 8 & 255, (e & 255) / 255) : n === 4 ? $n(e >> 12 & 15 | e >> 8 & 240, e >> 8 & 15 | e >> 4 & 240, e >> 4 & 15 | e & 240, ((e & 15) << 4 | e & 15) / 255) : null) : (e = Gc.exec(t)) ? new ht(e[1], e[2], e[3], 1) : (e = Bc.exec(t)) ? new ht(e[1] * 255 / 100, e[2] * 255 / 100, e[3] * 255 / 100, 1) : (e = Uc.exec(t)) ? $n(e[1], e[2], e[3], e[4]) : (e = Yc.exec(t)) ? $n(e[1] * 255 / 100, e[2] * 255 / 100, e[3] * 255 / 100, e[4]) : (e = Vc.exec(t)) ? Ga(e[1], e[2] / 100, e[3] / 100, 1) : (e = Wc.exec(t)) ? Ga(e[1], e[2] / 100, e[3] / 100, e[4]) : $a.hasOwnProperty(t) ? za($a[t]) : t === "transparent" ? new ht(NaN, NaN, NaN, 0) : null;
}
function za(t) {
  return new ht(t >> 16 & 255, t >> 8 & 255, t & 255, 1);
}
function $n(t, e, n, r) {
  return r <= 0 && (t = e = n = NaN), new ht(t, e, n, r);
}
function Xc(t) {
  return t instanceof On || (t = hn(t)), t ? (t = t.rgb(), new ht(t.r, t.g, t.b, t.opacity)) : new ht();
}
function li(t, e, n, r) {
  return arguments.length === 1 ? Xc(t) : new ht(t, e, n, r ?? 1);
}
function ht(t, e, n, r) {
  this.r = +t, this.g = +e, this.b = +n, this.opacity = +r;
}
Gi(ht, li, cs(On, {
  brighter(t) {
    return t = t == null ? dr : Math.pow(dr, t), new ht(this.r * t, this.g * t, this.b * t, this.opacity);
  },
  darker(t) {
    return t = t == null ? un : Math.pow(un, t), new ht(this.r * t, this.g * t, this.b * t, this.opacity);
  },
  rgb() {
    return this;
  },
  clamp() {
    return new ht(we(this.r), we(this.g), we(this.b), hr(this.opacity));
  },
  displayable() {
    return -0.5 <= this.r && this.r < 255.5 && -0.5 <= this.g && this.g < 255.5 && -0.5 <= this.b && this.b < 255.5 && 0 <= this.opacity && this.opacity <= 1;
  },
  hex: Ha,
  // Deprecated! Use color.formatHex.
  formatHex: Ha,
  formatHex8: Jc,
  formatRgb: ja,
  toString: ja
}));
function Ha() {
  return `#${ye(this.r)}${ye(this.g)}${ye(this.b)}`;
}
function Jc() {
  return `#${ye(this.r)}${ye(this.g)}${ye(this.b)}${ye((isNaN(this.opacity) ? 1 : this.opacity) * 255)}`;
}
function ja() {
  const t = hr(this.opacity);
  return `${t === 1 ? "rgb(" : "rgba("}${we(this.r)}, ${we(this.g)}, ${we(this.b)}${t === 1 ? ")" : `, ${t})`}`;
}
function hr(t) {
  return isNaN(t) ? 1 : Math.max(0, Math.min(1, t));
}
function we(t) {
  return Math.max(0, Math.min(255, Math.round(t) || 0));
}
function ye(t) {
  return t = we(t), (t < 16 ? "0" : "") + t.toString(16);
}
function Ga(t, e, n, r) {
  return r <= 0 ? t = e = n = NaN : n <= 0 || n >= 1 ? t = e = NaN : e <= 0 && (t = NaN), new kt(t, e, n, r);
}
function us(t) {
  if (t instanceof kt)
    return new kt(t.h, t.s, t.l, t.opacity);
  if (t instanceof On || (t = hn(t)), !t)
    return new kt();
  if (t instanceof kt)
    return t;
  t = t.rgb();
  var e = t.r / 255, n = t.g / 255, r = t.b / 255, i = Math.min(e, n, r), a = Math.max(e, n, r), o = NaN, s = a - i, l = (a + i) / 2;
  return s ? (e === a ? o = (n - r) / s + (n < r) * 6 : n === a ? o = (r - e) / s + 2 : o = (e - n) / s + 4, s /= l < 0.5 ? a + i : 2 - a - i, o *= 60) : s = l > 0 && l < 1 ? 0 : o, new kt(o, s, l, t.opacity);
}
function Zc(t, e, n, r) {
  return arguments.length === 1 ? us(t) : new kt(t, e, n, r ?? 1);
}
function kt(t, e, n, r) {
  this.h = +t, this.s = +e, this.l = +n, this.opacity = +r;
}
Gi(kt, Zc, cs(On, {
  brighter(t) {
    return t = t == null ? dr : Math.pow(dr, t), new kt(this.h, this.s, this.l * t, this.opacity);
  },
  darker(t) {
    return t = t == null ? un : Math.pow(un, t), new kt(this.h, this.s, this.l * t, this.opacity);
  },
  rgb() {
    var t = this.h % 360 + (this.h < 0) * 360, e = isNaN(t) || isNaN(this.s) ? 0 : this.s, n = this.l, r = n + (n < 0.5 ? n : 1 - n) * e, i = 2 * n - r;
    return new ht(
      Vr(t >= 240 ? t - 240 : t + 120, i, r),
      Vr(t, i, r),
      Vr(t < 120 ? t + 240 : t - 120, i, r),
      this.opacity
    );
  },
  clamp() {
    return new kt(Ba(this.h), Ln(this.s), Ln(this.l), hr(this.opacity));
  },
  displayable() {
    return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1;
  },
  formatHsl() {
    const t = hr(this.opacity);
    return `${t === 1 ? "hsl(" : "hsla("}${Ba(this.h)}, ${Ln(this.s) * 100}%, ${Ln(this.l) * 100}%${t === 1 ? ")" : `, ${t})`}`;
  }
}));
function Ba(t) {
  return t = (t || 0) % 360, t < 0 ? t + 360 : t;
}
function Ln(t) {
  return Math.max(0, Math.min(1, t || 0));
}
function Vr(t, e, n) {
  return (t < 60 ? e + (n - e) * t / 60 : t < 180 ? n : t < 240 ? e + (n - e) * (240 - t) / 60 : e) * 255;
}
const ds = (t) => () => t;
function Qc(t, e) {
  return function(n) {
    return t + n * e;
  };
}
function tu(t, e, n) {
  return t = Math.pow(t, n), e = Math.pow(e, n) - t, n = 1 / n, function(r) {
    return Math.pow(t + r * e, n);
  };
}
function eu(t) {
  return (t = +t) == 1 ? hs : function(e, n) {
    return n - e ? tu(e, n, t) : ds(isNaN(e) ? n : e);
  };
}
function hs(t, e) {
  var n = e - t;
  return n ? Qc(t, n) : ds(isNaN(t) ? e : t);
}
const Ua = function t(e) {
  var n = eu(e);
  function r(i, a) {
    var o = n((i = li(i)).r, (a = li(a)).r), s = n(i.g, a.g), l = n(i.b, a.b), f = hs(i.opacity, a.opacity);
    return function(c) {
      return i.r = o(c), i.g = s(c), i.b = l(c), i.opacity = f(c), i + "";
    };
  }
  return r.gamma = t, r;
}(1);
function ee(t, e) {
  return t = +t, e = +e, function(n) {
    return t * (1 - n) + e * n;
  };
}
var fi = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g, Wr = new RegExp(fi.source, "g");
function nu(t) {
  return function() {
    return t;
  };
}
function ru(t) {
  return function(e) {
    return t(e) + "";
  };
}
function iu(t, e) {
  var n = fi.lastIndex = Wr.lastIndex = 0, r, i, a, o = -1, s = [], l = [];
  for (t = t + "", e = e + ""; (r = fi.exec(t)) && (i = Wr.exec(e)); )
    (a = i.index) > n && (a = e.slice(n, a), s[o] ? s[o] += a : s[++o] = a), (r = r[0]) === (i = i[0]) ? s[o] ? s[o] += i : s[++o] = i : (s[++o] = null, l.push({ i: o, x: ee(r, i) })), n = Wr.lastIndex;
  return n < e.length && (a = e.slice(n), s[o] ? s[o] += a : s[++o] = a), s.length < 2 ? l[0] ? ru(l[0].x) : nu(e) : (e = l.length, function(f) {
    for (var c = 0, d; c < e; ++c)
      s[(d = l[c]).i] = d.x(f);
    return s.join("");
  });
}
var Ya = 180 / Math.PI, ci = {
  translateX: 0,
  translateY: 0,
  rotate: 0,
  skewX: 0,
  scaleX: 1,
  scaleY: 1
};
function ms(t, e, n, r, i, a) {
  var o, s, l;
  return (o = Math.sqrt(t * t + e * e)) && (t /= o, e /= o), (l = t * n + e * r) && (n -= t * l, r -= e * l), (s = Math.sqrt(n * n + r * r)) && (n /= s, r /= s, l /= s), t * r < e * n && (t = -t, e = -e, l = -l, o = -o), {
    translateX: i,
    translateY: a,
    rotate: Math.atan2(e, t) * Ya,
    skewX: Math.atan(l) * Ya,
    scaleX: o,
    scaleY: s
  };
}
var Dn;
function au(t) {
  const e = new (typeof DOMMatrix == "function" ? DOMMatrix : WebKitCSSMatrix)(t + "");
  return e.isIdentity ? ci : ms(e.a, e.b, e.c, e.d, e.e, e.f);
}
function ou(t) {
  return t == null || (Dn || (Dn = document.createElementNS("http://www.w3.org/2000/svg", "g")), Dn.setAttribute("transform", t), !(t = Dn.transform.baseVal.consolidate())) ? ci : (t = t.matrix, ms(t.a, t.b, t.c, t.d, t.e, t.f));
}
function ps(t, e, n, r) {
  function i(f) {
    return f.length ? f.pop() + " " : "";
  }
  function a(f, c, d, m, g, P) {
    if (f !== d || c !== m) {
      var O = g.push("translate(", null, e, null, n);
      P.push({ i: O - 4, x: ee(f, d) }, { i: O - 2, x: ee(c, m) });
    } else
      (d || m) && g.push("translate(" + d + e + m + n);
  }
  function o(f, c, d, m) {
    f !== c ? (f - c > 180 ? c += 360 : c - f > 180 && (f += 360), m.push({ i: d.push(i(d) + "rotate(", null, r) - 2, x: ee(f, c) })) : c && d.push(i(d) + "rotate(" + c + r);
  }
  function s(f, c, d, m) {
    f !== c ? m.push({ i: d.push(i(d) + "skewX(", null, r) - 2, x: ee(f, c) }) : c && d.push(i(d) + "skewX(" + c + r);
  }
  function l(f, c, d, m, g, P) {
    if (f !== d || c !== m) {
      var O = g.push(i(g) + "scale(", null, ",", null, ")");
      P.push({ i: O - 4, x: ee(f, d) }, { i: O - 2, x: ee(c, m) });
    } else
      (d !== 1 || m !== 1) && g.push(i(g) + "scale(" + d + "," + m + ")");
  }
  return function(f, c) {
    var d = [], m = [];
    return f = t(f), c = t(c), a(f.translateX, f.translateY, c.translateX, c.translateY, d, m), o(f.rotate, c.rotate, d, m), s(f.skewX, c.skewX, d, m), l(f.scaleX, f.scaleY, c.scaleX, c.scaleY, d, m), f = c = null, function(g) {
      for (var P = -1, O = m.length, z; ++P < O; )
        d[(z = m[P]).i] = z.x(g);
      return d.join("");
    };
  };
}
var su = ps(au, "px, ", "px)", "deg)"), lu = ps(ou, ", ", ")", ")"), He = 0, tn = 0, Ze = 0, gs = 1e3, mr, en, pr = 0, Ae = 0, Sr = 0, mn = typeof performance == "object" && performance.now ? performance : Date, vs = typeof window == "object" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(t) {
  setTimeout(t, 17);
};
function Bi() {
  return Ae || (vs(fu), Ae = mn.now() + Sr);
}
function fu() {
  Ae = 0;
}
function gr() {
  this._call = this._time = this._next = null;
}
gr.prototype = ys.prototype = {
  constructor: gr,
  restart: function(t, e, n) {
    if (typeof t != "function")
      throw new TypeError("callback is not a function");
    n = (n == null ? Bi() : +n) + (e == null ? 0 : +e), !this._next && en !== this && (en ? en._next = this : mr = this, en = this), this._call = t, this._time = n, ui();
  },
  stop: function() {
    this._call && (this._call = null, this._time = 1 / 0, ui());
  }
};
function ys(t, e, n) {
  var r = new gr();
  return r.restart(t, e, n), r;
}
function cu() {
  Bi(), ++He;
  for (var t = mr, e; t; )
    (e = Ae - t._time) >= 0 && t._call.call(void 0, e), t = t._next;
  --He;
}
function Va() {
  Ae = (pr = mn.now()) + Sr, He = tn = 0;
  try {
    cu();
  } finally {
    He = 0, du(), Ae = 0;
  }
}
function uu() {
  var t = mn.now(), e = t - pr;
  e > gs && (Sr -= e, pr = t);
}
function du() {
  for (var t, e = mr, n, r = 1 / 0; e; )
    e._call ? (r > e._time && (r = e._time), t = e, e = e._next) : (n = e._next, e._next = null, e = t ? t._next = n : mr = n);
  en = t, ui(r);
}
function ui(t) {
  if (!He) {
    tn && (tn = clearTimeout(tn));
    var e = t - Ae;
    e > 24 ? (t < 1 / 0 && (tn = setTimeout(Va, t - mn.now() - Sr)), Ze && (Ze = clearInterval(Ze))) : (Ze || (pr = mn.now(), Ze = setInterval(uu, gs)), He = 1, vs(Va));
  }
}
function Wa(t, e, n) {
  var r = new gr();
  return e = e == null ? 0 : +e, r.restart((i) => {
    r.stop(), t(i + e);
  }, e, n), r;
}
var hu = Jo("start", "end", "cancel", "interrupt"), mu = [], bs = 0, Ka = 1, di = 2, nr = 3, qa = 4, hi = 5, rr = 6;
function Or(t, e, n, r, i, a) {
  var o = t.__transition;
  if (!o)
    t.__transition = {};
  else if (n in o)
    return;
  pu(t, n, {
    name: e,
    index: r,
    // For context during callback.
    group: i,
    // For context during callback.
    on: hu,
    tween: mu,
    time: a.time,
    delay: a.delay,
    duration: a.duration,
    ease: a.ease,
    timer: null,
    state: bs
  });
}
function Ui(t, e) {
  var n = Tt(t, e);
  if (n.state > bs)
    throw new Error("too late; already scheduled");
  return n;
}
function zt(t, e) {
  var n = Tt(t, e);
  if (n.state > nr)
    throw new Error("too late; already running");
  return n;
}
function Tt(t, e) {
  var n = t.__transition;
  if (!n || !(n = n[e]))
    throw new Error("transition not found");
  return n;
}
function pu(t, e, n) {
  var r = t.__transition, i;
  r[e] = n, n.timer = ys(a, 0, n.time);
  function a(f) {
    n.state = Ka, n.timer.restart(o, n.delay, n.time), n.delay <= f && o(f - n.delay);
  }
  function o(f) {
    var c, d, m, g;
    if (n.state !== Ka)
      return l();
    for (c in r)
      if (g = r[c], g.name === n.name) {
        if (g.state === nr)
          return Wa(o);
        g.state === qa ? (g.state = rr, g.timer.stop(), g.on.call("interrupt", t, t.__data__, g.index, g.group), delete r[c]) : +c < e && (g.state = rr, g.timer.stop(), g.on.call("cancel", t, t.__data__, g.index, g.group), delete r[c]);
      }
    if (Wa(function() {
      n.state === nr && (n.state = qa, n.timer.restart(s, n.delay, n.time), s(f));
    }), n.state = di, n.on.call("start", t, t.__data__, n.index, n.group), n.state === di) {
      for (n.state = nr, i = new Array(m = n.tween.length), c = 0, d = -1; c < m; ++c)
        (g = n.tween[c].value.call(t, t.__data__, n.index, n.group)) && (i[++d] = g);
      i.length = d + 1;
    }
  }
  function s(f) {
    for (var c = f < n.duration ? n.ease.call(null, f / n.duration) : (n.timer.restart(l), n.state = hi, 1), d = -1, m = i.length; ++d < m; )
      i[d].call(t, c);
    n.state === hi && (n.on.call("end", t, t.__data__, n.index, n.group), l());
  }
  function l() {
    n.state = rr, n.timer.stop(), delete r[e];
    for (var f in r)
      return;
    delete t.__transition;
  }
}
function gu(t, e) {
  var n = t.__transition, r, i, a = !0, o;
  if (n) {
    e = e == null ? null : e + "";
    for (o in n) {
      if ((r = n[o]).name !== e) {
        a = !1;
        continue;
      }
      i = r.state > di && r.state < hi, r.state = rr, r.timer.stop(), r.on.call(i ? "interrupt" : "cancel", t, t.__data__, r.index, r.group), delete n[o];
    }
    a && delete t.__transition;
  }
}
function vu(t) {
  return this.each(function() {
    gu(this, t);
  });
}
function yu(t, e) {
  var n, r;
  return function() {
    var i = zt(this, t), a = i.tween;
    if (a !== n) {
      r = n = a;
      for (var o = 0, s = r.length; o < s; ++o)
        if (r[o].name === e) {
          r = r.slice(), r.splice(o, 1);
          break;
        }
    }
    i.tween = r;
  };
}
function bu(t, e, n) {
  var r, i;
  if (typeof n != "function")
    throw new Error();
  return function() {
    var a = zt(this, t), o = a.tween;
    if (o !== r) {
      i = (r = o).slice();
      for (var s = { name: e, value: n }, l = 0, f = i.length; l < f; ++l)
        if (i[l].name === e) {
          i[l] = s;
          break;
        }
      l === f && i.push(s);
    }
    a.tween = i;
  };
}
function xu(t, e) {
  var n = this._id;
  if (t += "", arguments.length < 2) {
    for (var r = Tt(this.node(), n).tween, i = 0, a = r.length, o; i < a; ++i)
      if ((o = r[i]).name === t)
        return o.value;
    return null;
  }
  return this.each((e == null ? yu : bu)(n, t, e));
}
function Yi(t, e, n) {
  var r = t._id;
  return t.each(function() {
    var i = zt(this, r);
    (i.value || (i.value = {}))[e] = n.apply(this, arguments);
  }), function(i) {
    return Tt(i, r).value[e];
  };
}
function xs(t, e) {
  var n;
  return (typeof e == "number" ? ee : e instanceof hn ? Ua : (n = hn(e)) ? (e = n, Ua) : iu)(t, e);
}
function wu(t) {
  return function() {
    this.removeAttribute(t);
  };
}
function _u(t) {
  return function() {
    this.removeAttributeNS(t.space, t.local);
  };
}
function ku(t, e, n) {
  var r, i = n + "", a;
  return function() {
    var o = this.getAttribute(t);
    return o === i ? null : o === r ? a : a = e(r = o, n);
  };
}
function Au(t, e, n) {
  var r, i = n + "", a;
  return function() {
    var o = this.getAttributeNS(t.space, t.local);
    return o === i ? null : o === r ? a : a = e(r = o, n);
  };
}
function Eu(t, e, n) {
  var r, i, a;
  return function() {
    var o, s = n(this), l;
    return s == null ? void this.removeAttribute(t) : (o = this.getAttribute(t), l = s + "", o === l ? null : o === r && l === i ? a : (i = l, a = e(r = o, s)));
  };
}
function Cu(t, e, n) {
  var r, i, a;
  return function() {
    var o, s = n(this), l;
    return s == null ? void this.removeAttributeNS(t.space, t.local) : (o = this.getAttributeNS(t.space, t.local), l = s + "", o === l ? null : o === r && l === i ? a : (i = l, a = e(r = o, s)));
  };
}
function Su(t, e) {
  var n = Cr(t), r = n === "transform" ? lu : xs;
  return this.attrTween(t, typeof e == "function" ? (n.local ? Cu : Eu)(n, r, Yi(this, "attr." + t, e)) : e == null ? (n.local ? _u : wu)(n) : (n.local ? Au : ku)(n, r, e));
}
function Ou(t, e) {
  return function(n) {
    this.setAttribute(t, e.call(this, n));
  };
}
function Pu(t, e) {
  return function(n) {
    this.setAttributeNS(t.space, t.local, e.call(this, n));
  };
}
function Tu(t, e) {
  var n, r;
  function i() {
    var a = e.apply(this, arguments);
    return a !== r && (n = (r = a) && Pu(t, a)), n;
  }
  return i._value = e, i;
}
function Nu(t, e) {
  var n, r;
  function i() {
    var a = e.apply(this, arguments);
    return a !== r && (n = (r = a) && Ou(t, a)), n;
  }
  return i._value = e, i;
}
function Iu(t, e) {
  var n = "attr." + t;
  if (arguments.length < 2)
    return (n = this.tween(n)) && n._value;
  if (e == null)
    return this.tween(n, null);
  if (typeof e != "function")
    throw new Error();
  var r = Cr(t);
  return this.tween(n, (r.local ? Tu : Nu)(r, e));
}
function Mu(t, e) {
  return function() {
    Ui(this, t).delay = +e.apply(this, arguments);
  };
}
function Ru(t, e) {
  return e = +e, function() {
    Ui(this, t).delay = e;
  };
}
function Fu(t) {
  var e = this._id;
  return arguments.length ? this.each((typeof t == "function" ? Mu : Ru)(e, t)) : Tt(this.node(), e).delay;
}
function $u(t, e) {
  return function() {
    zt(this, t).duration = +e.apply(this, arguments);
  };
}
function Lu(t, e) {
  return e = +e, function() {
    zt(this, t).duration = e;
  };
}
function Du(t) {
  var e = this._id;
  return arguments.length ? this.each((typeof t == "function" ? $u : Lu)(e, t)) : Tt(this.node(), e).duration;
}
function zu(t, e) {
  if (typeof e != "function")
    throw new Error();
  return function() {
    zt(this, t).ease = e;
  };
}
function Hu(t) {
  var e = this._id;
  return arguments.length ? this.each(zu(e, t)) : Tt(this.node(), e).ease;
}
function ju(t, e) {
  return function() {
    var n = e.apply(this, arguments);
    if (typeof n != "function")
      throw new Error();
    zt(this, t).ease = n;
  };
}
function Gu(t) {
  if (typeof t != "function")
    throw new Error();
  return this.each(ju(this._id, t));
}
function Bu(t) {
  typeof t != "function" && (t = ts(t));
  for (var e = this._groups, n = e.length, r = new Array(n), i = 0; i < n; ++i)
    for (var a = e[i], o = a.length, s = r[i] = [], l, f = 0; f < o; ++f)
      (l = a[f]) && t.call(l, l.__data__, f, a) && s.push(l);
  return new Vt(r, this._parents, this._name, this._id);
}
function Uu(t) {
  if (t._id !== this._id)
    throw new Error();
  for (var e = this._groups, n = t._groups, r = e.length, i = n.length, a = Math.min(r, i), o = new Array(r), s = 0; s < a; ++s)
    for (var l = e[s], f = n[s], c = l.length, d = o[s] = new Array(c), m, g = 0; g < c; ++g)
      (m = l[g] || f[g]) && (d[g] = m);
  for (; s < r; ++s)
    o[s] = e[s];
  return new Vt(o, this._parents, this._name, this._id);
}
function Yu(t) {
  return (t + "").trim().split(/^|\s+/).every(function(e) {
    var n = e.indexOf(".");
    return n >= 0 && (e = e.slice(0, n)), !e || e === "start";
  });
}
function Vu(t, e, n) {
  var r, i, a = Yu(e) ? Ui : zt;
  return function() {
    var o = a(this, t), s = o.on;
    s !== r && (i = (r = s).copy()).on(e, n), o.on = i;
  };
}
function Wu(t, e) {
  var n = this._id;
  return arguments.length < 2 ? Tt(this.node(), n).on.on(t) : this.each(Vu(n, t, e));
}
function Ku(t) {
  return function() {
    var e = this.parentNode;
    for (var n in this.__transition)
      if (+n !== t)
        return;
    e && e.removeChild(this);
  };
}
function qu() {
  return this.on("end.remove", Ku(this._id));
}
function Xu(t) {
  var e = this._name, n = this._id;
  typeof t != "function" && (t = Hi(t));
  for (var r = this._groups, i = r.length, a = new Array(i), o = 0; o < i; ++o)
    for (var s = r[o], l = s.length, f = a[o] = new Array(l), c, d, m = 0; m < l; ++m)
      (c = s[m]) && (d = t.call(c, c.__data__, m, s)) && ("__data__" in c && (d.__data__ = c.__data__), f[m] = d, Or(f[m], e, n, m, f, Tt(c, n)));
  return new Vt(a, this._parents, e, n);
}
function Ju(t) {
  var e = this._name, n = this._id;
  typeof t != "function" && (t = Qo(t));
  for (var r = this._groups, i = r.length, a = [], o = [], s = 0; s < i; ++s)
    for (var l = r[s], f = l.length, c, d = 0; d < f; ++d)
      if (c = l[d]) {
        for (var m = t.call(c, c.__data__, d, l), g, P = Tt(c, n), O = 0, z = m.length; O < z; ++O)
          (g = m[O]) && Or(g, e, n, O, m, P);
        a.push(m), o.push(c);
      }
  return new Vt(a, o, e, n);
}
var Zu = Sn.prototype.constructor;
function Qu() {
  return new Zu(this._groups, this._parents);
}
function td(t, e) {
  var n, r, i;
  return function() {
    var a = ze(this, t), o = (this.style.removeProperty(t), ze(this, t));
    return a === o ? null : a === n && o === r ? i : i = e(n = a, r = o);
  };
}
function ws(t) {
  return function() {
    this.style.removeProperty(t);
  };
}
function ed(t, e, n) {
  var r, i = n + "", a;
  return function() {
    var o = ze(this, t);
    return o === i ? null : o === r ? a : a = e(r = o, n);
  };
}
function nd(t, e, n) {
  var r, i, a;
  return function() {
    var o = ze(this, t), s = n(this), l = s + "";
    return s == null && (l = s = (this.style.removeProperty(t), ze(this, t))), o === l ? null : o === r && l === i ? a : (i = l, a = e(r = o, s));
  };
}
function rd(t, e) {
  var n, r, i, a = "style." + e, o = "end." + a, s;
  return function() {
    var l = zt(this, t), f = l.on, c = l.value[a] == null ? s || (s = ws(e)) : void 0;
    (f !== n || i !== c) && (r = (n = f).copy()).on(o, i = c), l.on = r;
  };
}
function id(t, e, n) {
  var r = (t += "") == "transform" ? su : xs;
  return e == null ? this.styleTween(t, td(t, r)).on("end.style." + t, ws(t)) : typeof e == "function" ? this.styleTween(t, nd(t, r, Yi(this, "style." + t, e))).each(rd(this._id, t)) : this.styleTween(t, ed(t, r, e), n).on("end.style." + t, null);
}
function ad(t, e, n) {
  return function(r) {
    this.style.setProperty(t, e.call(this, r), n);
  };
}
function od(t, e, n) {
  var r, i;
  function a() {
    var o = e.apply(this, arguments);
    return o !== i && (r = (i = o) && ad(t, o, n)), r;
  }
  return a._value = e, a;
}
function sd(t, e, n) {
  var r = "style." + (t += "");
  if (arguments.length < 2)
    return (r = this.tween(r)) && r._value;
  if (e == null)
    return this.tween(r, null);
  if (typeof e != "function")
    throw new Error();
  return this.tween(r, od(t, e, n ?? ""));
}
function ld(t) {
  return function() {
    this.textContent = t;
  };
}
function fd(t) {
  return function() {
    var e = t(this);
    this.textContent = e ?? "";
  };
}
function cd(t) {
  return this.tween("text", typeof t == "function" ? fd(Yi(this, "text", t)) : ld(t == null ? "" : t + ""));
}
function ud(t) {
  return function(e) {
    this.textContent = t.call(this, e);
  };
}
function dd(t) {
  var e, n;
  function r() {
    var i = t.apply(this, arguments);
    return i !== n && (e = (n = i) && ud(i)), e;
  }
  return r._value = t, r;
}
function hd(t) {
  var e = "text";
  if (arguments.length < 1)
    return (e = this.tween(e)) && e._value;
  if (t == null)
    return this.tween(e, null);
  if (typeof t != "function")
    throw new Error();
  return this.tween(e, dd(t));
}
function md() {
  for (var t = this._name, e = this._id, n = _s(), r = this._groups, i = r.length, a = 0; a < i; ++a)
    for (var o = r[a], s = o.length, l, f = 0; f < s; ++f)
      if (l = o[f]) {
        var c = Tt(l, e);
        Or(l, t, n, f, o, {
          time: c.time + c.delay + c.duration,
          delay: 0,
          duration: c.duration,
          ease: c.ease
        });
      }
  return new Vt(r, this._parents, t, n);
}
function pd() {
  var t, e, n = this, r = n._id, i = n.size();
  return new Promise(function(a, o) {
    var s = { value: o }, l = { value: function() {
      --i === 0 && a();
    } };
    n.each(function() {
      var f = zt(this, r), c = f.on;
      c !== t && (e = (t = c).copy(), e._.cancel.push(s), e._.interrupt.push(s), e._.end.push(l)), f.on = e;
    }), i === 0 && a();
  });
}
var gd = 0;
function Vt(t, e, n, r) {
  this._groups = t, this._parents = e, this._name = n, this._id = r;
}
function _s() {
  return ++gd;
}
var Gt = Sn.prototype;
Vt.prototype = {
  constructor: Vt,
  select: Xu,
  selectAll: Ju,
  selectChild: Gt.selectChild,
  selectChildren: Gt.selectChildren,
  filter: Bu,
  merge: Uu,
  selection: Qu,
  transition: md,
  call: Gt.call,
  nodes: Gt.nodes,
  node: Gt.node,
  size: Gt.size,
  empty: Gt.empty,
  each: Gt.each,
  on: Wu,
  attr: Su,
  attrTween: Iu,
  style: id,
  styleTween: sd,
  text: cd,
  textTween: hd,
  remove: qu,
  tween: xu,
  delay: Fu,
  duration: Du,
  ease: Hu,
  easeVarying: Gu,
  end: pd,
  [Symbol.iterator]: Gt[Symbol.iterator]
};
const vd = (t) => +t;
function yd(t) {
  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;
}
var bd = {
  time: null,
  // Set on use.
  delay: 0,
  duration: 250,
  ease: yd
};
function xd(t, e) {
  for (var n; !(n = t.__transition) || !(n = n[e]); )
    if (!(t = t.parentNode))
      throw new Error(`transition ${e} not found`);
  return n;
}
function wd(t) {
  var e, n;
  t instanceof Vt ? (e = t._id, t = t._name) : (e = _s(), (n = bd).time = Bi(), t = t == null ? null : t + "");
  for (var r = this._groups, i = r.length, a = 0; a < i; ++a)
    for (var o = r[a], s = o.length, l, f = 0; f < s; ++f)
      (l = o[f]) && Or(l, t, e, f, o, n || xd(l, e));
  return new Vt(r, this._parents, t, e);
}
Sn.prototype.interrupt = vu;
Sn.prototype.transition = wd;
function nn(t, e, n) {
  this.k = t, this.x = e, this.y = n;
}
nn.prototype = {
  constructor: nn,
  scale: function(t) {
    return t === 1 ? this : new nn(this.k * t, this.x, this.y);
  },
  translate: function(t, e) {
    return t === 0 & e === 0 ? this : new nn(this.k, this.x + this.k * t, this.y + this.k * e);
  },
  apply: function(t) {
    return [t[0] * this.k + this.x, t[1] * this.k + this.y];
  },
  applyX: function(t) {
    return t * this.k + this.x;
  },
  applyY: function(t) {
    return t * this.k + this.y;
  },
  invert: function(t) {
    return [(t[0] - this.x) / this.k, (t[1] - this.y) / this.k];
  },
  invertX: function(t) {
    return (t - this.x) / this.k;
  },
  invertY: function(t) {
    return (t - this.y) / this.k;
  },
  rescaleX: function(t) {
    return t.copy().domain(t.range().map(this.invertX, this).map(t.invert, t));
  },
  rescaleY: function(t) {
    return t.copy().domain(t.range().map(this.invertY, this).map(t.invert, t));
  },
  toString: function() {
    return "translate(" + this.x + "," + this.y + ") scale(" + this.k + ")";
  }
};
nn.prototype;
const F = (t, e) => {
  const n = document.querySelector(t);
  if (n === null)
    throw new Error("Cannot find selector " + t);
  if (e !== void 0 && !(n instanceof e))
    throw new Error(`Selector ${t} not of type ${e}`);
  return n;
}, _d = (t) => new Promise((e) => setTimeout(e, t)), Vi = () => window.uxLawState, kd = (t) => {
  const e = F("svg.fitts g.big-target1", SVGGElement);
  t.createCircle(e, 40, 50, 35), t.createCircle(e, 40, 50, 25), t.createCircle(e, 40, 50, 15), t.createCircle(e, 40, 50, 5);
  const n = F("svg.fitts g.big-target2", SVGGElement);
  t.createCircle(n, 40, 50, 35), t.createCircle(n, 40, 50, 25), t.createCircle(n, 40, 50, 15), t.createCircle(n, 40, 50, 5);
  const r = F("svg.fitts g.small-target", SVGGElement);
  t.createCircle(r, 40, 50, 5);
}, Ad = (t) => {
  const e = F("svg.purpose g.target", SVGGElement);
  t.createCircle(e, 150, 50, 40), t.createCircle(e, 150, 50, 30), t.createCircle(e, 150, 50, 20), t.createCircle(e, 150, 50, 10), t.createCircle(e, 150, 50, 1);
}, Ed = (t) => {
  const e = F("svg.hick g.choice-01", SVGGElement);
  t.createForm(
    e,
    "polygon",
    { points: "0,0 0,0 0,0 0,0" },
    { points: "0,0 0,40 40,40" },
    {
      duration: 300,
      delay: t.getDelay()
    }
  );
  const n = F("svg.hick g.choice-02", SVGGElement);
  t.createForm(
    n,
    "polygon",
    { points: "0,0 0,0 0,0 0,0" },
    { points: "0,0 0,40 40,40 40,0" },
    {
      duration: 300,
      delay: t.getDelay()
    }
  );
  const r = F("svg.hick g.choice-03", SVGGElement);
  t.createForm(
    r,
    "polygon",
    { points: "0,0 0,0 0,0 0,0" },
    { points: "0,40 40,40 40,0" },
    {
      duration: 300,
      delay: t.getDelay()
    }
  );
  const i = F("svg.hick g.choice-04", SVGGElement);
  t.createForm(
    i,
    "polygon",
    { points: "0,0 0,0 0,0 0,0" },
    { points: "0,0 20,40 40,0" },
    {
      duration: 300,
      delay: t.getDelay()
    }
  );
  const a = F("svg.hick g.choice-05", SVGGElement);
  t.createForm(
    a,
    "polygon",
    { points: "0,0 0,0 0,0 0,0" },
    { points: "0,0 0,40 40,20" },
    {
      duration: 300,
      delay: t.getDelay()
    }
  );
  const o = F("svg.hick g.choice-06", SVGGElement);
  t.createForm(
    o,
    "polygon",
    { points: "0,0 0,0 0,0 0,0" },
    { points: "0,40 40,40 20,0" },
    {
      duration: 300,
      delay: t.getDelay()
    }
  );
}, Cd = (t) => {
  const e = F("svg.jakob g.app-1", SVGGElement);
  t.createCircle(e, 40, 50, 35);
  const n = F("svg.jakob g.app-2", SVGGElement);
  t.createCircle(n, 40, 50, 35);
  const r = F("svg.jakob g.your-app", SVGGElement);
  t.createCircle(r, 40, 50, 35);
}, Sd = (t) => {
  const e = F("svg.gradient g", SVGGElement);
  t.createRect(e, 5, 30, 40, 40, 1), t.createRect(e, 50, 30, 40, 40, 2), t.createRect(e, 95, 30, 40, 40, 3), t.createRect(e, 140, 30, 40, 40, 4), t.createRect(e, 185, 30, 40, 40, 5), t.createRect(e, 230, 30, 40, 40, 6);
}, Od = (t) => {
  const e = F("svg.gestalt g", SVGGElement);
  for (let n = 0; n < 5; n++)
    for (let r = 0; r < 4; r++)
      t.createCircle(e, n * 20 + 100, r * 20 + 20, 5, {
        class: "full",
        delay: 0,
        duration: 300
      });
}, Pd = (t) => {
  const e = F("svg.proximity g", SVGGElement);
  for (let n = 0; n < 5; n++)
    for (let r = 0; r < 4; r++) {
      const i = n > 1 && r < 2 ? 8 : 0;
      t.createCircle(e, n * 20 + 100 + i, r * 20 + 20 - i, 5, {
        class: "full",
        delay: 0,
        duration: 300
      });
    }
}, Td = (t) => {
  const e = F("svg.similarity g", SVGGElement);
  for (let n = 0; n < 5; n++)
    for (let r = 0; r < 4; r++) {
      const i = n > 1 && r < 2 ? "xxx" : "full";
      t.createCircle(e, n * 20 + 100, r * 20 + 20, 5, {
        class: i,
        delay: 0,
        duration: 300
      });
    }
}, Nd = (t) => {
  const e = F("svg.commonRegion g", SVGGElement);
  t.createRect(e, 100 + 32, 12, 57, 37, 2);
  for (let n = 0; n < 5; n++)
    for (let r = 0; r < 4; r++)
      t.createCircle(e, n * 20 + 100, r * 20 + 20, 5, {
        class: "full",
        delay: 0,
        duration: 300
      });
}, Id = (t) => {
  const e = F("svg.simplicity g", SVGGElement);
  t.createRect(e, 100 + 32, 12, 57, 37, 2), t.createRect(e, 100 - 8, 12, 97, 77, 2);
}, Md = (t) => {
  const e = F("svg.miller g", SVGGElement);
  t.createCircle(e, 130, 20, 5, { class: "full" }), t.createCircle(e, 150, 20, 5, { class: "full" }), t.createCircle(e, 170, 20, 5, { class: "full" }), t.createCircle(e, 170, 40, 5, { class: "full" }), t.createCircle(e, 170, 60, 5, { class: "full" }), t.createCircle(e, 170, 80, 5, { class: "full" });
}, Rd = (t) => {
  const e = F("svg.tesler g", SVGGElement);
  for (let n = 0; n < 6; n++)
    t.createCircle(e, 100 + n * 20, 20, 5, {
      class: n >= 3 ? "empty" : "full"
    });
  for (let n = 0; n < 6; n++)
    t.createCircle(e, 100 + n * 20, 50, 5, { class: n % 2 ? "empty" : "full" });
  for (let n = 0; n < 6; n++)
    t.createCircle(e, 100 + n * 20, 80, 5, { class: n < 3 ? "empty" : "full" });
}, Fd = (t) => {
  const e = F("svg.postel g", SVGGElement);
  t.createCircle(e, 80, 50, 35, { class: "full" }), t.createCircle(e, 220, 50, 35, { class: "empty" });
}, $d = (t) => {
  const e = F("svg.zeigarnik g", SVGGElement);
  for (let n = 1; n < 5; n++)
    t.createRect(e, 50, n * 15, 200, 10, 6, "emptyrect");
  t.createRect(e, 50, 5 * 15, 150, 10, 6, "fullrect");
}, Ld = (t) => {
  const e = F("svg.vonRestorff g", SVGGElement);
  for (let n = 0; n < 5; n++)
    for (let r = 0; r < 4; r++) {
      const i = n === 2 && r === 2 ? "xxx" : "full";
      t.createCircle(e, n * 20 + 100, r * 20 + 20, 5, {
        class: i,
        delay: 0,
        duration: 300
      });
    }
}, zn = "20,10, 20,20 10,30, 20,40 20,50, 10,50 10,60 20,60 20,70 20,80 10,90", Dd = (t) => {
  const e = F(".symetrie svg g", SVGGElement);
  e.innerHTML = `
<g class="p1" transform="translate(60)"></g>
<g class="p2" transform="translate(80)"></g>
<g class="p3" transform="translate(180)"></g>
<g class="p4" transform="translate(230) scale(-1, 1)"></g>
`;
  const n = F(".symetrie svg g.p1", SVGGElement);
  t.createPolyline(n, zn, "empty");
  const r = F(".symetrie svg g.p2", SVGGElement);
  t.createPolyline(r, zn, "empty");
  const i = F(".symetrie svg g.p3", SVGGElement);
  t.createPolyline(i, zn, "empty");
  const a = F(".symetrie svg g.p4", SVGGElement);
  t.createPolyline(a, zn, "empty");
}, zd = (t) => {
  const e = F(".serialPosition svg g", SVGGElement);
  for (let n = 0; n < 7; n++) {
    const r = n === 0 || n === 6 ? "full" : "empty";
    t.createCircle(e, n * 40 + 30, 50, 20, {
      class: r,
      delay: 0,
      duration: 300
    });
  }
}, Hd = (t) => {
  const e = F(".pareto svg g", SVGGElement);
  t.createRect(e, 50, 40, 50, 20, 6, "empty"), t.createRect(e, 150, 10, 100, 80, 6, "empty");
}, jd = (t) => {
  const e = F(".peakEnd svg g", SVGGElement);
  for (let n = 0; n < 5; n++)
    for (let r = 0; r < 4; r++) {
      const i = n === 1 && r === 1 || n === 4 && r === 3 ? "empty" : "full";
      t.createCircle(e, n * 20 + 100, r * 20 + 20, 5, {
        class: i
      });
    }
}, Gd = (t) => {
  const e = F(".anchor svg g", SVGGElement);
  t.createCircle(e, 100, 50, 35), t.createPolyline(e, "60,10 140,90"), t.createPolyline(e, "140,10 60,90"), t.createCircle(e, 200, 50, 20);
}, Bd = (t) => {
  const e = F(".wandering svg g", SVGGElement);
  for (let n = 0; n < 15; n++)
    t.createCircle(e, 150, 50, 5 + 10 * n, {
      class: "empty-thin",
      delay: 0,
      duration: 2e3
    });
}, Ud = (t) => {
  const e = F(".webography svg g", SVGGElement);
  for (let n = 0; n < 3; n++)
    t.createCircle(e, 150, 50, 5 + 30 * n, {
      class: "empty-thin",
      delay: 0,
      duration: 2e3
    });
}, Yd = (t) => {
  const e = F(".confirmation svg g", SVGGElement);
  t.createCircle(e, 120, 50, 45, { class: "semi-emtpy" }), t.createCircle(e, 180, 50, 45, { class: "semi-emtpy" });
}, Vd = (t) => {
  const e = F(".fatigue svg g", SVGGElement);
  t.createPolygon(e, "130,10 130,90 40,50"), t.createPolygon(e, "170,10 170,90 260,50", "full");
}, Wd = (t) => {
  const e = F(".decoy svg g", SVGGElement);
  t.createCircle(e, 55, 50, 25), t.createPolygon(e, "45,40 45,60 65,60 65,40"), t.createCircle(e, 135, 50, 40), t.createCircle(e, 135, 50, 20), t.createCircle(e, 230, 50, 40), t.createCircle(e, 230, 50, 20), t.createPolygon(e, "220,40 220,60 240,60 240,40");
}, Kd = (t) => {
  const e = F("svg.bastien g.target", SVGGElement);
  t.createCircle(e, 150, 50, 40), t.createCircle(e, 150, 50, 30), t.createCircle(e, 150, 50, 20), t.createCircle(e, 150, 50, 10), t.createCircle(e, 150, 50, 1);
}, qd = (t) => {
  const e = F(".engagement svg g", SVGGElement);
  t.createCircle(e, 135, 50, 20);
}, Xd = (t) => {
  const e = F(".defaultEffect svg g", SVGGElement);
  for (let n = 0; n < 5; n++)
    t.createRect(e, 5 + n * 60, 30, 50, 50, 6, "emptyrect");
  t.createPolyline(e, "15,40 30,70 40,50", "empty");
}, ks = {
  fitts: [kd],
  purpose: [Ad],
  hick: [Ed],
  jakob: [Cd],
  gradient: [Sd],
  gestalt: [Od],
  proximity: [Pd],
  similarity: [Td],
  commonRegion: [Nd],
  simplicity: [Id],
  miller: [Md],
  tesler: [Rd],
  postel: [Fd],
  zeigarnik: [$d],
  vonRestorff: [Ld],
  symetrie: [Dd],
  serialPosition: [zd],
  pareto: [Hd],
  peakEnd: [jd],
  anchor: [Gd],
  wandering: [Bd],
  webography: [Ud],
  confirmation: [Yd],
  fatigue: [Vd],
  decoy: [Wd],
  defaultEffect: [Xd],
  bastien: [Kd],
  engagement: [qd]
}, As = /* @__PURE__ */ new Set();
for (const t of Object.values(ks))
  for (const e of t)
    As.add(e);
const Jd = [...As];
class Zd {
  constructor() {
    Pe(this, "delayCounter", 0);
    Pe(this, "delayIncrement", 100);
    Pe(this, "useTransition", !1);
    Pe(this, "svgName");
    Pe(this, "createForm", (e, n, r, i, a) => {
      const o = {
        duration: 2e3,
        delay: 1e3,
        class: "",
        ...a
      };
      this.useTransition || (o.delay = 0, o.duration = 0);
      const s = Hc(e).append(n);
      for (const [f, c] of Object.entries(r))
        s.attr(f, c);
      o.class && s.attr("class", o.class);
      const l = s.transition().duration(o.duration).delay(o.delay).ease(vd);
      for (const [f, c] of Object.entries(i))
        l.attr(f, c);
    });
    this.initSvgName();
  }
  initSvgName() {
    const e = Vi();
    if (e === void 0) {
      this.useTransition = !1;
      return;
    }
    console.log("uxLawState: ", e);
    const n = e.page.image === "default" ? e.page.class : e.page.image;
    this.svgName = n, this.useTransition = !0;
  }
  initSvg() {
    const e = this.svgName ? ks[this.svgName] : Jd;
    if (e !== void 0)
      for (const n of e)
        n(this);
  }
  getDelay() {
    return this.delayCounter += this.delayIncrement, this.delayCounter;
  }
  createCircle(e, n, r, i, a) {
    const o = {
      duration: 300,
      delay: this.getDelay(),
      ...a
    };
    return this.createForm(
      e,
      "circle",
      {
        cx: n,
        cy: r,
        r: 0
      },
      { r: i },
      o
    );
  }
  createPolygon(e, n, r = "empty") {
    return this.createForm(
      e,
      "polygon",
      { points: "" },
      { points: n },
      {
        duration: 300,
        delay: this.getDelay(),
        class: r
      }
    );
  }
  createPolyline(e, n, r = "full") {
    return this.createForm(
      e,
      "polyline",
      { points: "" },
      { points: n },
      {
        duration: 300,
        delay: this.getDelay(),
        class: r
      }
    );
  }
  createRect(e, n, r, i, a, o = 6, s = "empty") {
    return this.createForm(
      e,
      "rect",
      { x: n, y: r, width: i, height: 0, opacity: o * (1 / 6) },
      { height: a },
      {
        duration: 300,
        delay: this.getDelay(),
        class: s
      }
    );
  }
}
const Qd = () => {
  th(), document.documentElement.style.setProperty(
    "--primary-color",
    "hsl(120, 100%, 25%)"
  ), document.documentElement.style.setProperty(
    "--fill-color",
    "hsla(120, 0%, 25%, 0.1)"
  ), eh();
}, th = () => {
  const t = window.matchMedia && window.matchMedia("(prefers-color-scheme: dark)").matches, e = document.body.classList;
  t ? e.add("dark") : e.add("light"), window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change", (n) => {
    const r = n.matches ? "dark" : "light";
    console.log("colorScheme: ", r), e.remove("dark"), e.remove("light"), r === "dark" ? e.add("dark") : e.add("light");
  });
};
window.toggleUglyTheme = () => {
  let t = localStorage.getItem("theme");
  t = t !== "ugly" ? "ugly" : "default", localStorage.setItem("theme", t), console.log("update theme to " + t), document.body.classList.remove("ugly"), document.body.classList.remove("default"), document.body.classList.add(t), Es();
};
const eh = () => {
  let t = localStorage.getItem("theme");
  t = t !== "ugly" ? "default" : "ugly", document.body.classList.add(t), Es();
}, Es = () => {
  let t = localStorage.getItem("theme");
  const e = t === "ugly" ? "Remettre l'esthétique" : "Enlever l'esthétique", n = document.querySelector("button.toggle-theme");
  n && (n.innerHTML = e);
  const r = F("header div.ugly-theme");
  r.innerHTML = t !== "ugly" ? "" : `
<button onClick="window.toggleUglyTheme()"> 
  Remettre l'esthétique
</button>
    `;
};
function Xa(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(t);
    e && (r = r.filter(function(i) {
      return Object.getOwnPropertyDescriptor(t, i).enumerable;
    })), n.push.apply(n, r);
  }
  return n;
}
function S(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2 ? Xa(Object(n), !0).forEach(function(r) {
      et(t, r, n[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : Xa(Object(n)).forEach(function(r) {
      Object.defineProperty(t, r, Object.getOwnPropertyDescriptor(n, r));
    });
  }
  return t;
}
function vr(t) {
  return vr = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, vr(t);
}
function nh(t, e) {
  if (!(t instanceof e))
    throw new TypeError("Cannot call a class as a function");
}
function Ja(t, e) {
  for (var n = 0; n < e.length; n++) {
    var r = e[n];
    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r);
  }
}
function rh(t, e, n) {
  return e && Ja(t.prototype, e), n && Ja(t, n), Object.defineProperty(t, "prototype", {
    writable: !1
  }), t;
}
function et(t, e, n) {
  return e in t ? Object.defineProperty(t, e, {
    value: n,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : t[e] = n, t;
}
function Wi(t, e) {
  return ah(t) || sh(t, e) || Cs(t, e) || fh();
}
function Pn(t) {
  return ih(t) || oh(t) || Cs(t) || lh();
}
function ih(t) {
  if (Array.isArray(t))
    return mi(t);
}
function ah(t) {
  if (Array.isArray(t))
    return t;
}
function oh(t) {
  if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null)
    return Array.from(t);
}
function sh(t, e) {
  var n = t == null ? null : typeof Symbol < "u" && t[Symbol.iterator] || t["@@iterator"];
  if (n != null) {
    var r = [], i = !0, a = !1, o, s;
    try {
      for (n = n.call(t); !(i = (o = n.next()).done) && (r.push(o.value), !(e && r.length === e)); i = !0)
        ;
    } catch (l) {
      a = !0, s = l;
    } finally {
      try {
        !i && n.return != null && n.return();
      } finally {
        if (a)
          throw s;
      }
    }
    return r;
  }
}
function Cs(t, e) {
  if (t) {
    if (typeof t == "string")
      return mi(t, e);
    var n = Object.prototype.toString.call(t).slice(8, -1);
    if (n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set")
      return Array.from(t);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return mi(t, e);
  }
}
function mi(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, r = new Array(e); n < e; n++)
    r[n] = t[n];
  return r;
}
function lh() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function fh() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
var Za = function() {
}, Ki = {}, Ss = {}, Os = null, Ps = {
  mark: Za,
  measure: Za
};
try {
  typeof window < "u" && (Ki = window), typeof document < "u" && (Ss = document), typeof MutationObserver < "u" && (Os = MutationObserver), typeof performance < "u" && (Ps = performance);
} catch {
}
var ch = Ki.navigator || {}, Qa = ch.userAgent, to = Qa === void 0 ? "" : Qa, ae = Ki, K = Ss, eo = Os, Hn = Ps;
ae.document;
var Jt = !!K.documentElement && !!K.head && typeof K.addEventListener == "function" && typeof K.createElement == "function", Ts = ~to.indexOf("MSIE") || ~to.indexOf("Trident/"), jn, Gn, Bn, Un, Yn, Wt = "___FONT_AWESOME___", pi = 16, Ns = "fa", Is = "svg-inline--fa", Ee = "data-fa-i2svg", gi = "data-fa-pseudo-element", uh = "data-fa-pseudo-element-pending", qi = "data-prefix", Xi = "data-icon", no = "fontawesome-i2svg", dh = "async", hh = ["HTML", "HEAD", "STYLE", "SCRIPT"], Ms = function() {
  try {
    return !0;
  } catch {
    return !1;
  }
}(), W = "classic", Z = "sharp", Ji = [W, Z];
function Tn(t) {
  return new Proxy(t, {
    get: function(n, r) {
      return r in n ? n[r] : n[W];
    }
  });
}
var pn = Tn((jn = {}, et(jn, W, {
  fa: "solid",
  fas: "solid",
  "fa-solid": "solid",
  far: "regular",
  "fa-regular": "regular",
  fal: "light",
  "fa-light": "light",
  fat: "thin",
  "fa-thin": "thin",
  fad: "duotone",
  "fa-duotone": "duotone",
  fab: "brands",
  "fa-brands": "brands",
  fak: "kit",
  "fa-kit": "kit"
}), et(jn, Z, {
  fa: "solid",
  fass: "solid",
  "fa-solid": "solid",
  fasr: "regular",
  "fa-regular": "regular"
}), jn)), gn = Tn((Gn = {}, et(Gn, W, {
  solid: "fas",
  regular: "far",
  light: "fal",
  thin: "fat",
  duotone: "fad",
  brands: "fab",
  kit: "fak"
}), et(Gn, Z, {
  solid: "fass",
  regular: "fasr"
}), Gn)), vn = Tn((Bn = {}, et(Bn, W, {
  fab: "fa-brands",
  fad: "fa-duotone",
  fak: "fa-kit",
  fal: "fa-light",
  far: "fa-regular",
  fas: "fa-solid",
  fat: "fa-thin"
}), et(Bn, Z, {
  fass: "fa-solid",
  fasr: "fa-regular"
}), Bn)), mh = Tn((Un = {}, et(Un, W, {
  "fa-brands": "fab",
  "fa-duotone": "fad",
  "fa-kit": "fak",
  "fa-light": "fal",
  "fa-regular": "far",
  "fa-solid": "fas",
  "fa-thin": "fat"
}), et(Un, Z, {
  "fa-solid": "fass",
  "fa-regular": "fasr"
}), Un)), ph = /fa(s|r|l|t|d|b|k|ss|sr)?[\-\ ]/, Rs = "fa-layers-text", gh = /Font ?Awesome ?([56 ]*)(Solid|Regular|Light|Thin|Duotone|Brands|Free|Pro|Sharp|Kit)?.*/i, vh = Tn((Yn = {}, et(Yn, W, {
  900: "fas",
  400: "far",
  normal: "far",
  300: "fal",
  100: "fat"
}), et(Yn, Z, {
  900: "fass",
  400: "fasr"
}), Yn)), Fs = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], yh = Fs.concat([11, 12, 13, 14, 15, 16, 17, 18, 19, 20]), bh = ["class", "data-prefix", "data-icon", "data-fa-transform", "data-fa-mask"], be = {
  GROUP: "duotone-group",
  SWAP_OPACITY: "swap-opacity",
  PRIMARY: "primary",
  SECONDARY: "secondary"
}, yn = /* @__PURE__ */ new Set();
Object.keys(gn[W]).map(yn.add.bind(yn));
Object.keys(gn[Z]).map(yn.add.bind(yn));
var xh = [].concat(Ji, Pn(yn), ["2xs", "xs", "sm", "lg", "xl", "2xl", "beat", "border", "fade", "beat-fade", "bounce", "flip-both", "flip-horizontal", "flip-vertical", "flip", "fw", "inverse", "layers-counter", "layers-text", "layers", "li", "pull-left", "pull-right", "pulse", "rotate-180", "rotate-270", "rotate-90", "rotate-by", "shake", "spin-pulse", "spin-reverse", "spin", "stack-1x", "stack-2x", "stack", "ul", be.GROUP, be.SWAP_OPACITY, be.PRIMARY, be.SECONDARY]).concat(Fs.map(function(t) {
  return "".concat(t, "x");
})).concat(yh.map(function(t) {
  return "w-".concat(t);
})), on = ae.FontAwesomeConfig || {};
function wh(t) {
  var e = K.querySelector("script[" + t + "]");
  if (e)
    return e.getAttribute(t);
}
function _h(t) {
  return t === "" ? !0 : t === "false" ? !1 : t === "true" ? !0 : t;
}
if (K && typeof K.querySelector == "function") {
  var kh = [["data-family-prefix", "familyPrefix"], ["data-css-prefix", "cssPrefix"], ["data-family-default", "familyDefault"], ["data-style-default", "styleDefault"], ["data-replacement-class", "replacementClass"], ["data-auto-replace-svg", "autoReplaceSvg"], ["data-auto-add-css", "autoAddCss"], ["data-auto-a11y", "autoA11y"], ["data-search-pseudo-elements", "searchPseudoElements"], ["data-observe-mutations", "observeMutations"], ["data-mutate-approach", "mutateApproach"], ["data-keep-original-source", "keepOriginalSource"], ["data-measure-performance", "measurePerformance"], ["data-show-missing-icons", "showMissingIcons"]];
  kh.forEach(function(t) {
    var e = Wi(t, 2), n = e[0], r = e[1], i = _h(wh(n));
    i != null && (on[r] = i);
  });
}
var $s = {
  styleDefault: "solid",
  familyDefault: "classic",
  cssPrefix: Ns,
  replacementClass: Is,
  autoReplaceSvg: !0,
  autoAddCss: !0,
  autoA11y: !0,
  searchPseudoElements: !1,
  observeMutations: !0,
  mutateApproach: "async",
  keepOriginalSource: !0,
  measurePerformance: !1,
  showMissingIcons: !0
};
on.familyPrefix && (on.cssPrefix = on.familyPrefix);
var je = S(S({}, $s), on);
je.autoReplaceSvg || (je.observeMutations = !1);
var N = {};
Object.keys($s).forEach(function(t) {
  Object.defineProperty(N, t, {
    enumerable: !0,
    set: function(n) {
      je[t] = n, sn.forEach(function(r) {
        return r(N);
      });
    },
    get: function() {
      return je[t];
    }
  });
});
Object.defineProperty(N, "familyPrefix", {
  enumerable: !0,
  set: function(e) {
    je.cssPrefix = e, sn.forEach(function(n) {
      return n(N);
    });
  },
  get: function() {
    return je.cssPrefix;
  }
});
ae.FontAwesomeConfig = N;
var sn = [];
function Ah(t) {
  return sn.push(t), function() {
    sn.splice(sn.indexOf(t), 1);
  };
}
var Qt = pi, $t = {
  size: 16,
  x: 0,
  y: 0,
  rotate: 0,
  flipX: !1,
  flipY: !1
};
function Eh(t) {
  if (!(!t || !Jt)) {
    var e = K.createElement("style");
    e.setAttribute("type", "text/css"), e.innerHTML = t;
    for (var n = K.head.childNodes, r = null, i = n.length - 1; i > -1; i--) {
      var a = n[i], o = (a.tagName || "").toUpperCase();
      ["STYLE", "LINK"].indexOf(o) > -1 && (r = a);
    }
    return K.head.insertBefore(e, r), t;
  }
}
var Ch = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
function bn() {
  for (var t = 12, e = ""; t-- > 0; )
    e += Ch[Math.random() * 62 | 0];
  return e;
}
function Ve(t) {
  for (var e = [], n = (t || []).length >>> 0; n--; )
    e[n] = t[n];
  return e;
}
function Zi(t) {
  return t.classList ? Ve(t.classList) : (t.getAttribute("class") || "").split(" ").filter(function(e) {
    return e;
  });
}
function Ls(t) {
  return "".concat(t).replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/'/g, "&#39;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
}
function Sh(t) {
  return Object.keys(t || {}).reduce(function(e, n) {
    return e + "".concat(n, '="').concat(Ls(t[n]), '" ');
  }, "").trim();
}
function Pr(t) {
  return Object.keys(t || {}).reduce(function(e, n) {
    return e + "".concat(n, ": ").concat(t[n].trim(), ";");
  }, "");
}
function Qi(t) {
  return t.size !== $t.size || t.x !== $t.x || t.y !== $t.y || t.rotate !== $t.rotate || t.flipX || t.flipY;
}
function Oh(t) {
  var e = t.transform, n = t.containerWidth, r = t.iconWidth, i = {
    transform: "translate(".concat(n / 2, " 256)")
  }, a = "translate(".concat(e.x * 32, ", ").concat(e.y * 32, ") "), o = "scale(".concat(e.size / 16 * (e.flipX ? -1 : 1), ", ").concat(e.size / 16 * (e.flipY ? -1 : 1), ") "), s = "rotate(".concat(e.rotate, " 0 0)"), l = {
    transform: "".concat(a, " ").concat(o, " ").concat(s)
  }, f = {
    transform: "translate(".concat(r / 2 * -1, " -256)")
  };
  return {
    outer: i,
    inner: l,
    path: f
  };
}
function Ph(t) {
  var e = t.transform, n = t.width, r = n === void 0 ? pi : n, i = t.height, a = i === void 0 ? pi : i, o = t.startCentered, s = o === void 0 ? !1 : o, l = "";
  return s && Ts ? l += "translate(".concat(e.x / Qt - r / 2, "em, ").concat(e.y / Qt - a / 2, "em) ") : s ? l += "translate(calc(-50% + ".concat(e.x / Qt, "em), calc(-50% + ").concat(e.y / Qt, "em)) ") : l += "translate(".concat(e.x / Qt, "em, ").concat(e.y / Qt, "em) "), l += "scale(".concat(e.size / Qt * (e.flipX ? -1 : 1), ", ").concat(e.size / Qt * (e.flipY ? -1 : 1), ") "), l += "rotate(".concat(e.rotate, "deg) "), l;
}
var Th = `:root, :host {
  --fa-font-solid: normal 900 1em/1 "Font Awesome 6 Solid";
  --fa-font-regular: normal 400 1em/1 "Font Awesome 6 Regular";
  --fa-font-light: normal 300 1em/1 "Font Awesome 6 Light";
  --fa-font-thin: normal 100 1em/1 "Font Awesome 6 Thin";
  --fa-font-duotone: normal 900 1em/1 "Font Awesome 6 Duotone";
  --fa-font-sharp-solid: normal 900 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-regular: normal 400 1em/1 "Font Awesome 6 Sharp";
  --fa-font-brands: normal 400 1em/1 "Font Awesome 6 Brands";
}

svg:not(:root).svg-inline--fa, svg:not(:host).svg-inline--fa {
  overflow: visible;
  box-sizing: content-box;
}

.svg-inline--fa {
  display: var(--fa-display, inline-block);
  height: 1em;
  overflow: visible;
  vertical-align: -0.125em;
}
.svg-inline--fa.fa-2xs {
  vertical-align: 0.1em;
}
.svg-inline--fa.fa-xs {
  vertical-align: 0em;
}
.svg-inline--fa.fa-sm {
  vertical-align: -0.0714285705em;
}
.svg-inline--fa.fa-lg {
  vertical-align: -0.2em;
}
.svg-inline--fa.fa-xl {
  vertical-align: -0.25em;
}
.svg-inline--fa.fa-2xl {
  vertical-align: -0.3125em;
}
.svg-inline--fa.fa-pull-left {
  margin-right: var(--fa-pull-margin, 0.3em);
  width: auto;
}
.svg-inline--fa.fa-pull-right {
  margin-left: var(--fa-pull-margin, 0.3em);
  width: auto;
}
.svg-inline--fa.fa-li {
  width: var(--fa-li-width, 2em);
  top: 0.25em;
}
.svg-inline--fa.fa-fw {
  width: var(--fa-fw-width, 1.25em);
}

.fa-layers svg.svg-inline--fa {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
}

.fa-layers-counter, .fa-layers-text {
  display: inline-block;
  position: absolute;
  text-align: center;
}

.fa-layers {
  display: inline-block;
  height: 1em;
  position: relative;
  text-align: center;
  vertical-align: -0.125em;
  width: 1em;
}
.fa-layers svg.svg-inline--fa {
  -webkit-transform-origin: center center;
          transform-origin: center center;
}

.fa-layers-text {
  left: 50%;
  top: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  -webkit-transform-origin: center center;
          transform-origin: center center;
}

.fa-layers-counter {
  background-color: var(--fa-counter-background-color, #ff253a);
  border-radius: var(--fa-counter-border-radius, 1em);
  box-sizing: border-box;
  color: var(--fa-inverse, #fff);
  line-height: var(--fa-counter-line-height, 1);
  max-width: var(--fa-counter-max-width, 5em);
  min-width: var(--fa-counter-min-width, 1.5em);
  overflow: hidden;
  padding: var(--fa-counter-padding, 0.25em 0.5em);
  right: var(--fa-right, 0);
  text-overflow: ellipsis;
  top: var(--fa-top, 0);
  -webkit-transform: scale(var(--fa-counter-scale, 0.25));
          transform: scale(var(--fa-counter-scale, 0.25));
  -webkit-transform-origin: top right;
          transform-origin: top right;
}

.fa-layers-bottom-right {
  bottom: var(--fa-bottom, 0);
  right: var(--fa-right, 0);
  top: auto;
  -webkit-transform: scale(var(--fa-layers-scale, 0.25));
          transform: scale(var(--fa-layers-scale, 0.25));
  -webkit-transform-origin: bottom right;
          transform-origin: bottom right;
}

.fa-layers-bottom-left {
  bottom: var(--fa-bottom, 0);
  left: var(--fa-left, 0);
  right: auto;
  top: auto;
  -webkit-transform: scale(var(--fa-layers-scale, 0.25));
          transform: scale(var(--fa-layers-scale, 0.25));
  -webkit-transform-origin: bottom left;
          transform-origin: bottom left;
}

.fa-layers-top-right {
  top: var(--fa-top, 0);
  right: var(--fa-right, 0);
  -webkit-transform: scale(var(--fa-layers-scale, 0.25));
          transform: scale(var(--fa-layers-scale, 0.25));
  -webkit-transform-origin: top right;
          transform-origin: top right;
}

.fa-layers-top-left {
  left: var(--fa-left, 0);
  right: auto;
  top: var(--fa-top, 0);
  -webkit-transform: scale(var(--fa-layers-scale, 0.25));
          transform: scale(var(--fa-layers-scale, 0.25));
  -webkit-transform-origin: top left;
          transform-origin: top left;
}

.fa-1x {
  font-size: 1em;
}

.fa-2x {
  font-size: 2em;
}

.fa-3x {
  font-size: 3em;
}

.fa-4x {
  font-size: 4em;
}

.fa-5x {
  font-size: 5em;
}

.fa-6x {
  font-size: 6em;
}

.fa-7x {
  font-size: 7em;
}

.fa-8x {
  font-size: 8em;
}

.fa-9x {
  font-size: 9em;
}

.fa-10x {
  font-size: 10em;
}

.fa-2xs {
  font-size: 0.625em;
  line-height: 0.1em;
  vertical-align: 0.225em;
}

.fa-xs {
  font-size: 0.75em;
  line-height: 0.0833333337em;
  vertical-align: 0.125em;
}

.fa-sm {
  font-size: 0.875em;
  line-height: 0.0714285718em;
  vertical-align: 0.0535714295em;
}

.fa-lg {
  font-size: 1.25em;
  line-height: 0.05em;
  vertical-align: -0.075em;
}

.fa-xl {
  font-size: 1.5em;
  line-height: 0.0416666682em;
  vertical-align: -0.125em;
}

.fa-2xl {
  font-size: 2em;
  line-height: 0.03125em;
  vertical-align: -0.1875em;
}

.fa-fw {
  text-align: center;
  width: 1.25em;
}

.fa-ul {
  list-style-type: none;
  margin-left: var(--fa-li-margin, 2.5em);
  padding-left: 0;
}
.fa-ul > li {
  position: relative;
}

.fa-li {
  left: calc(var(--fa-li-width, 2em) * -1);
  position: absolute;
  text-align: center;
  width: var(--fa-li-width, 2em);
  line-height: inherit;
}

.fa-border {
  border-color: var(--fa-border-color, #eee);
  border-radius: var(--fa-border-radius, 0.1em);
  border-style: var(--fa-border-style, solid);
  border-width: var(--fa-border-width, 0.08em);
  padding: var(--fa-border-padding, 0.2em 0.25em 0.15em);
}

.fa-pull-left {
  float: left;
  margin-right: var(--fa-pull-margin, 0.3em);
}

.fa-pull-right {
  float: right;
  margin-left: var(--fa-pull-margin, 0.3em);
}

.fa-beat {
  -webkit-animation-name: fa-beat;
          animation-name: fa-beat;
  -webkit-animation-delay: var(--fa-animation-delay, 0s);
          animation-delay: var(--fa-animation-delay, 0s);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, ease-in-out);
          animation-timing-function: var(--fa-animation-timing, ease-in-out);
}

.fa-bounce {
  -webkit-animation-name: fa-bounce;
          animation-name: fa-bounce;
  -webkit-animation-delay: var(--fa-animation-delay, 0s);
          animation-delay: var(--fa-animation-delay, 0s);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.28, 0.84, 0.42, 1));
          animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.28, 0.84, 0.42, 1));
}

.fa-fade {
  -webkit-animation-name: fa-fade;
          animation-name: fa-fade;
  -webkit-animation-delay: var(--fa-animation-delay, 0s);
          animation-delay: var(--fa-animation-delay, 0s);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
          animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
}

.fa-beat-fade {
  -webkit-animation-name: fa-beat-fade;
          animation-name: fa-beat-fade;
  -webkit-animation-delay: var(--fa-animation-delay, 0s);
          animation-delay: var(--fa-animation-delay, 0s);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
          animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
}

.fa-flip {
  -webkit-animation-name: fa-flip;
          animation-name: fa-flip;
  -webkit-animation-delay: var(--fa-animation-delay, 0s);
          animation-delay: var(--fa-animation-delay, 0s);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, ease-in-out);
          animation-timing-function: var(--fa-animation-timing, ease-in-out);
}

.fa-shake {
  -webkit-animation-name: fa-shake;
          animation-name: fa-shake;
  -webkit-animation-delay: var(--fa-animation-delay, 0s);
          animation-delay: var(--fa-animation-delay, 0s);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, linear);
          animation-timing-function: var(--fa-animation-timing, linear);
}

.fa-spin {
  -webkit-animation-name: fa-spin;
          animation-name: fa-spin;
  -webkit-animation-delay: var(--fa-animation-delay, 0s);
          animation-delay: var(--fa-animation-delay, 0s);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 2s);
          animation-duration: var(--fa-animation-duration, 2s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, linear);
          animation-timing-function: var(--fa-animation-timing, linear);
}

.fa-spin-reverse {
  --fa-animation-direction: reverse;
}

.fa-pulse,
.fa-spin-pulse {
  -webkit-animation-name: fa-spin;
          animation-name: fa-spin;
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, steps(8));
          animation-timing-function: var(--fa-animation-timing, steps(8));
}

@media (prefers-reduced-motion: reduce) {
  .fa-beat,
.fa-bounce,
.fa-fade,
.fa-beat-fade,
.fa-flip,
.fa-pulse,
.fa-shake,
.fa-spin,
.fa-spin-pulse {
    -webkit-animation-delay: -1ms;
            animation-delay: -1ms;
    -webkit-animation-duration: 1ms;
            animation-duration: 1ms;
    -webkit-animation-iteration-count: 1;
            animation-iteration-count: 1;
    -webkit-transition-delay: 0s;
            transition-delay: 0s;
    -webkit-transition-duration: 0s;
            transition-duration: 0s;
  }
}
@-webkit-keyframes fa-beat {
  0%, 90% {
    -webkit-transform: scale(1);
            transform: scale(1);
  }
  45% {
    -webkit-transform: scale(var(--fa-beat-scale, 1.25));
            transform: scale(var(--fa-beat-scale, 1.25));
  }
}
@keyframes fa-beat {
  0%, 90% {
    -webkit-transform: scale(1);
            transform: scale(1);
  }
  45% {
    -webkit-transform: scale(var(--fa-beat-scale, 1.25));
            transform: scale(var(--fa-beat-scale, 1.25));
  }
}
@-webkit-keyframes fa-bounce {
  0% {
    -webkit-transform: scale(1, 1) translateY(0);
            transform: scale(1, 1) translateY(0);
  }
  10% {
    -webkit-transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);
            transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);
  }
  30% {
    -webkit-transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));
            transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));
  }
  50% {
    -webkit-transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);
            transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);
  }
  57% {
    -webkit-transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));
            transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));
  }
  64% {
    -webkit-transform: scale(1, 1) translateY(0);
            transform: scale(1, 1) translateY(0);
  }
  100% {
    -webkit-transform: scale(1, 1) translateY(0);
            transform: scale(1, 1) translateY(0);
  }
}
@keyframes fa-bounce {
  0% {
    -webkit-transform: scale(1, 1) translateY(0);
            transform: scale(1, 1) translateY(0);
  }
  10% {
    -webkit-transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);
            transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);
  }
  30% {
    -webkit-transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));
            transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));
  }
  50% {
    -webkit-transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);
            transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);
  }
  57% {
    -webkit-transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));
            transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));
  }
  64% {
    -webkit-transform: scale(1, 1) translateY(0);
            transform: scale(1, 1) translateY(0);
  }
  100% {
    -webkit-transform: scale(1, 1) translateY(0);
            transform: scale(1, 1) translateY(0);
  }
}
@-webkit-keyframes fa-fade {
  50% {
    opacity: var(--fa-fade-opacity, 0.4);
  }
}
@keyframes fa-fade {
  50% {
    opacity: var(--fa-fade-opacity, 0.4);
  }
}
@-webkit-keyframes fa-beat-fade {
  0%, 100% {
    opacity: var(--fa-beat-fade-opacity, 0.4);
    -webkit-transform: scale(1);
            transform: scale(1);
  }
  50% {
    opacity: 1;
    -webkit-transform: scale(var(--fa-beat-fade-scale, 1.125));
            transform: scale(var(--fa-beat-fade-scale, 1.125));
  }
}
@keyframes fa-beat-fade {
  0%, 100% {
    opacity: var(--fa-beat-fade-opacity, 0.4);
    -webkit-transform: scale(1);
            transform: scale(1);
  }
  50% {
    opacity: 1;
    -webkit-transform: scale(var(--fa-beat-fade-scale, 1.125));
            transform: scale(var(--fa-beat-fade-scale, 1.125));
  }
}
@-webkit-keyframes fa-flip {
  50% {
    -webkit-transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));
            transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));
  }
}
@keyframes fa-flip {
  50% {
    -webkit-transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));
            transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));
  }
}
@-webkit-keyframes fa-shake {
  0% {
    -webkit-transform: rotate(-15deg);
            transform: rotate(-15deg);
  }
  4% {
    -webkit-transform: rotate(15deg);
            transform: rotate(15deg);
  }
  8%, 24% {
    -webkit-transform: rotate(-18deg);
            transform: rotate(-18deg);
  }
  12%, 28% {
    -webkit-transform: rotate(18deg);
            transform: rotate(18deg);
  }
  16% {
    -webkit-transform: rotate(-22deg);
            transform: rotate(-22deg);
  }
  20% {
    -webkit-transform: rotate(22deg);
            transform: rotate(22deg);
  }
  32% {
    -webkit-transform: rotate(-12deg);
            transform: rotate(-12deg);
  }
  36% {
    -webkit-transform: rotate(12deg);
            transform: rotate(12deg);
  }
  40%, 100% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
  }
}
@keyframes fa-shake {
  0% {
    -webkit-transform: rotate(-15deg);
            transform: rotate(-15deg);
  }
  4% {
    -webkit-transform: rotate(15deg);
            transform: rotate(15deg);
  }
  8%, 24% {
    -webkit-transform: rotate(-18deg);
            transform: rotate(-18deg);
  }
  12%, 28% {
    -webkit-transform: rotate(18deg);
            transform: rotate(18deg);
  }
  16% {
    -webkit-transform: rotate(-22deg);
            transform: rotate(-22deg);
  }
  20% {
    -webkit-transform: rotate(22deg);
            transform: rotate(22deg);
  }
  32% {
    -webkit-transform: rotate(-12deg);
            transform: rotate(-12deg);
  }
  36% {
    -webkit-transform: rotate(12deg);
            transform: rotate(12deg);
  }
  40%, 100% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
  }
}
@-webkit-keyframes fa-spin {
  0% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
  }
}
@keyframes fa-spin {
  0% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
  }
}
.fa-rotate-90 {
  -webkit-transform: rotate(90deg);
          transform: rotate(90deg);
}

.fa-rotate-180 {
  -webkit-transform: rotate(180deg);
          transform: rotate(180deg);
}

.fa-rotate-270 {
  -webkit-transform: rotate(270deg);
          transform: rotate(270deg);
}

.fa-flip-horizontal {
  -webkit-transform: scale(-1, 1);
          transform: scale(-1, 1);
}

.fa-flip-vertical {
  -webkit-transform: scale(1, -1);
          transform: scale(1, -1);
}

.fa-flip-both,
.fa-flip-horizontal.fa-flip-vertical {
  -webkit-transform: scale(-1, -1);
          transform: scale(-1, -1);
}

.fa-rotate-by {
  -webkit-transform: rotate(var(--fa-rotate-angle, none));
          transform: rotate(var(--fa-rotate-angle, none));
}

.fa-stack {
  display: inline-block;
  vertical-align: middle;
  height: 2em;
  position: relative;
  width: 2.5em;
}

.fa-stack-1x,
.fa-stack-2x {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
  z-index: var(--fa-stack-z-index, auto);
}

.svg-inline--fa.fa-stack-1x {
  height: 1em;
  width: 1.25em;
}
.svg-inline--fa.fa-stack-2x {
  height: 2em;
  width: 2.5em;
}

.fa-inverse {
  color: var(--fa-inverse, #fff);
}

.sr-only,
.fa-sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.sr-only-focusable:not(:focus),
.fa-sr-only-focusable:not(:focus) {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.svg-inline--fa .fa-primary {
  fill: var(--fa-primary-color, currentColor);
  opacity: var(--fa-primary-opacity, 1);
}

.svg-inline--fa .fa-secondary {
  fill: var(--fa-secondary-color, currentColor);
  opacity: var(--fa-secondary-opacity, 0.4);
}

.svg-inline--fa.fa-swap-opacity .fa-primary {
  opacity: var(--fa-secondary-opacity, 0.4);
}

.svg-inline--fa.fa-swap-opacity .fa-secondary {
  opacity: var(--fa-primary-opacity, 1);
}

.svg-inline--fa mask .fa-primary,
.svg-inline--fa mask .fa-secondary {
  fill: black;
}

.fad.fa-inverse,
.fa-duotone.fa-inverse {
  color: var(--fa-inverse, #fff);
}`;
function Ds() {
  var t = Ns, e = Is, n = N.cssPrefix, r = N.replacementClass, i = Th;
  if (n !== t || r !== e) {
    var a = new RegExp("\\.".concat(t, "\\-"), "g"), o = new RegExp("\\--".concat(t, "\\-"), "g"), s = new RegExp("\\.".concat(e), "g");
    i = i.replace(a, ".".concat(n, "-")).replace(o, "--".concat(n, "-")).replace(s, ".".concat(r));
  }
  return i;
}
var ro = !1;
function Kr() {
  N.autoAddCss && !ro && (Eh(Ds()), ro = !0);
}
var Nh = {
  mixout: function() {
    return {
      dom: {
        css: Ds,
        insertCss: Kr
      }
    };
  },
  hooks: function() {
    return {
      beforeDOMElementCreation: function() {
        Kr();
      },
      beforeI2svg: function() {
        Kr();
      }
    };
  }
}, Kt = ae || {};
Kt[Wt] || (Kt[Wt] = {});
Kt[Wt].styles || (Kt[Wt].styles = {});
Kt[Wt].hooks || (Kt[Wt].hooks = {});
Kt[Wt].shims || (Kt[Wt].shims = []);
var Ct = Kt[Wt], zs = [], Ih = function t() {
  K.removeEventListener("DOMContentLoaded", t), yr = 1, zs.map(function(e) {
    return e();
  });
}, yr = !1;
Jt && (yr = (K.documentElement.doScroll ? /^loaded|^c/ : /^loaded|^i|^c/).test(K.readyState), yr || K.addEventListener("DOMContentLoaded", Ih));
function Mh(t) {
  Jt && (yr ? setTimeout(t, 0) : zs.push(t));
}
function Nn(t) {
  var e = t.tag, n = t.attributes, r = n === void 0 ? {} : n, i = t.children, a = i === void 0 ? [] : i;
  return typeof t == "string" ? Ls(t) : "<".concat(e, " ").concat(Sh(r), ">").concat(a.map(Nn).join(""), "</").concat(e, ">");
}
function io(t, e, n) {
  if (t && t[e] && t[e][n])
    return {
      prefix: e,
      iconName: n,
      icon: t[e][n]
    };
}
var Rh = function(e, n) {
  return function(r, i, a, o) {
    return e.call(n, r, i, a, o);
  };
}, qr = function(e, n, r, i) {
  var a = Object.keys(e), o = a.length, s = i !== void 0 ? Rh(n, i) : n, l, f, c;
  for (r === void 0 ? (l = 1, c = e[a[0]]) : (l = 0, c = r); l < o; l++)
    f = a[l], c = s(c, e[f], f, e);
  return c;
};
function Fh(t) {
  for (var e = [], n = 0, r = t.length; n < r; ) {
    var i = t.charCodeAt(n++);
    if (i >= 55296 && i <= 56319 && n < r) {
      var a = t.charCodeAt(n++);
      (a & 64512) == 56320 ? e.push(((i & 1023) << 10) + (a & 1023) + 65536) : (e.push(i), n--);
    } else
      e.push(i);
  }
  return e;
}
function vi(t) {
  var e = Fh(t);
  return e.length === 1 ? e[0].toString(16) : null;
}
function $h(t, e) {
  var n = t.length, r = t.charCodeAt(e), i;
  return r >= 55296 && r <= 56319 && n > e + 1 && (i = t.charCodeAt(e + 1), i >= 56320 && i <= 57343) ? (r - 55296) * 1024 + i - 56320 + 65536 : r;
}
function ao(t) {
  return Object.keys(t).reduce(function(e, n) {
    var r = t[n], i = !!r.icon;
    return i ? e[r.iconName] = r.icon : e[n] = r, e;
  }, {});
}
function yi(t, e) {
  var n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, r = n.skipHooks, i = r === void 0 ? !1 : r, a = ao(e);
  typeof Ct.hooks.addPack == "function" && !i ? Ct.hooks.addPack(t, ao(e)) : Ct.styles[t] = S(S({}, Ct.styles[t] || {}), a), t === "fas" && yi("fa", e);
}
var Vn, Wn, Kn, Te = Ct.styles, Lh = Ct.shims, Dh = (Vn = {}, et(Vn, W, Object.values(vn[W])), et(Vn, Z, Object.values(vn[Z])), Vn), ta = null, Hs = {}, js = {}, Gs = {}, Bs = {}, Us = {}, zh = (Wn = {}, et(Wn, W, Object.keys(pn[W])), et(Wn, Z, Object.keys(pn[Z])), Wn);
function Hh(t) {
  return ~xh.indexOf(t);
}
function jh(t, e) {
  var n = e.split("-"), r = n[0], i = n.slice(1).join("-");
  return r === t && i !== "" && !Hh(i) ? i : null;
}
var Ys = function() {
  var e = function(a) {
    return qr(Te, function(o, s, l) {
      return o[l] = qr(s, a, {}), o;
    }, {});
  };
  Hs = e(function(i, a, o) {
    if (a[3] && (i[a[3]] = o), a[2]) {
      var s = a[2].filter(function(l) {
        return typeof l == "number";
      });
      s.forEach(function(l) {
        i[l.toString(16)] = o;
      });
    }
    return i;
  }), js = e(function(i, a, o) {
    if (i[o] = o, a[2]) {
      var s = a[2].filter(function(l) {
        return typeof l == "string";
      });
      s.forEach(function(l) {
        i[l] = o;
      });
    }
    return i;
  }), Us = e(function(i, a, o) {
    var s = a[2];
    return i[o] = o, s.forEach(function(l) {
      i[l] = o;
    }), i;
  });
  var n = "far" in Te || N.autoFetchSvg, r = qr(Lh, function(i, a) {
    var o = a[0], s = a[1], l = a[2];
    return s === "far" && !n && (s = "fas"), typeof o == "string" && (i.names[o] = {
      prefix: s,
      iconName: l
    }), typeof o == "number" && (i.unicodes[o.toString(16)] = {
      prefix: s,
      iconName: l
    }), i;
  }, {
    names: {},
    unicodes: {}
  });
  Gs = r.names, Bs = r.unicodes, ta = Tr(N.styleDefault, {
    family: N.familyDefault
  });
};
Ah(function(t) {
  ta = Tr(t.styleDefault, {
    family: N.familyDefault
  });
});
Ys();
function ea(t, e) {
  return (Hs[t] || {})[e];
}
function Gh(t, e) {
  return (js[t] || {})[e];
}
function xe(t, e) {
  return (Us[t] || {})[e];
}
function Vs(t) {
  return Gs[t] || {
    prefix: null,
    iconName: null
  };
}
function Bh(t) {
  var e = Bs[t], n = ea("fas", t);
  return e || (n ? {
    prefix: "fas",
    iconName: n
  } : null) || {
    prefix: null,
    iconName: null
  };
}
function oe() {
  return ta;
}
var na = function() {
  return {
    prefix: null,
    iconName: null,
    rest: []
  };
};
function Tr(t) {
  var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, n = e.family, r = n === void 0 ? W : n, i = pn[r][t], a = gn[r][t] || gn[r][i], o = t in Ct.styles ? t : null;
  return a || o || null;
}
var oo = (Kn = {}, et(Kn, W, Object.keys(vn[W])), et(Kn, Z, Object.keys(vn[Z])), Kn);
function Nr(t) {
  var e, n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, r = n.skipLookups, i = r === void 0 ? !1 : r, a = (e = {}, et(e, W, "".concat(N.cssPrefix, "-").concat(W)), et(e, Z, "".concat(N.cssPrefix, "-").concat(Z)), e), o = null, s = W;
  (t.includes(a[W]) || t.some(function(f) {
    return oo[W].includes(f);
  })) && (s = W), (t.includes(a[Z]) || t.some(function(f) {
    return oo[Z].includes(f);
  })) && (s = Z);
  var l = t.reduce(function(f, c) {
    var d = jh(N.cssPrefix, c);
    if (Te[c] ? (c = Dh[s].includes(c) ? mh[s][c] : c, o = c, f.prefix = c) : zh[s].indexOf(c) > -1 ? (o = c, f.prefix = Tr(c, {
      family: s
    })) : d ? f.iconName = d : c !== N.replacementClass && c !== a[W] && c !== a[Z] && f.rest.push(c), !i && f.prefix && f.iconName) {
      var m = o === "fa" ? Vs(f.iconName) : {}, g = xe(f.prefix, f.iconName);
      m.prefix && (o = null), f.iconName = m.iconName || g || f.iconName, f.prefix = m.prefix || f.prefix, f.prefix === "far" && !Te.far && Te.fas && !N.autoFetchSvg && (f.prefix = "fas");
    }
    return f;
  }, na());
  return (t.includes("fa-brands") || t.includes("fab")) && (l.prefix = "fab"), (t.includes("fa-duotone") || t.includes("fad")) && (l.prefix = "fad"), !l.prefix && s === Z && (Te.fass || N.autoFetchSvg) && (l.prefix = "fass", l.iconName = xe(l.prefix, l.iconName) || l.iconName), (l.prefix === "fa" || o === "fa") && (l.prefix = oe() || "fas"), l;
}
var Uh = /* @__PURE__ */ function() {
  function t() {
    nh(this, t), this.definitions = {};
  }
  return rh(t, [{
    key: "add",
    value: function() {
      for (var n = this, r = arguments.length, i = new Array(r), a = 0; a < r; a++)
        i[a] = arguments[a];
      var o = i.reduce(this._pullDefinitions, {});
      Object.keys(o).forEach(function(s) {
        n.definitions[s] = S(S({}, n.definitions[s] || {}), o[s]), yi(s, o[s]);
        var l = vn[W][s];
        l && yi(l, o[s]), Ys();
      });
    }
  }, {
    key: "reset",
    value: function() {
      this.definitions = {};
    }
  }, {
    key: "_pullDefinitions",
    value: function(n, r) {
      var i = r.prefix && r.iconName && r.icon ? {
        0: r
      } : r;
      return Object.keys(i).map(function(a) {
        var o = i[a], s = o.prefix, l = o.iconName, f = o.icon, c = f[2];
        n[s] || (n[s] = {}), c.length > 0 && c.forEach(function(d) {
          typeof d == "string" && (n[s][d] = f);
        }), n[s][l] = f;
      }), n;
    }
  }]), t;
}(), so = [], Ne = {}, Re = {}, Yh = Object.keys(Re);
function Vh(t, e) {
  var n = e.mixoutsTo;
  return so = t, Ne = {}, Object.keys(Re).forEach(function(r) {
    Yh.indexOf(r) === -1 && delete Re[r];
  }), so.forEach(function(r) {
    var i = r.mixout ? r.mixout() : {};
    if (Object.keys(i).forEach(function(o) {
      typeof i[o] == "function" && (n[o] = i[o]), vr(i[o]) === "object" && Object.keys(i[o]).forEach(function(s) {
        n[o] || (n[o] = {}), n[o][s] = i[o][s];
      });
    }), r.hooks) {
      var a = r.hooks();
      Object.keys(a).forEach(function(o) {
        Ne[o] || (Ne[o] = []), Ne[o].push(a[o]);
      });
    }
    r.provides && r.provides(Re);
  }), n;
}
function bi(t, e) {
  for (var n = arguments.length, r = new Array(n > 2 ? n - 2 : 0), i = 2; i < n; i++)
    r[i - 2] = arguments[i];
  var a = Ne[t] || [];
  return a.forEach(function(o) {
    e = o.apply(null, [e].concat(r));
  }), e;
}
function Ce(t) {
  for (var e = arguments.length, n = new Array(e > 1 ? e - 1 : 0), r = 1; r < e; r++)
    n[r - 1] = arguments[r];
  var i = Ne[t] || [];
  i.forEach(function(a) {
    a.apply(null, n);
  });
}
function qt() {
  var t = arguments[0], e = Array.prototype.slice.call(arguments, 1);
  return Re[t] ? Re[t].apply(null, e) : void 0;
}
function xi(t) {
  t.prefix === "fa" && (t.prefix = "fas");
  var e = t.iconName, n = t.prefix || oe();
  if (e)
    return e = xe(n, e) || e, io(Ws.definitions, n, e) || io(Ct.styles, n, e);
}
var Ws = new Uh(), Wh = function() {
  N.autoReplaceSvg = !1, N.observeMutations = !1, Ce("noAuto");
}, Kh = {
  i2svg: function() {
    var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return Jt ? (Ce("beforeI2svg", e), qt("pseudoElements2svg", e), qt("i2svg", e)) : Promise.reject("Operation requires a DOM of some kind.");
  },
  watch: function() {
    var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, n = e.autoReplaceSvgRoot;
    N.autoReplaceSvg === !1 && (N.autoReplaceSvg = !0), N.observeMutations = !0, Mh(function() {
      Xh({
        autoReplaceSvgRoot: n
      }), Ce("watch", e);
    });
  }
}, qh = {
  icon: function(e) {
    if (e === null)
      return null;
    if (vr(e) === "object" && e.prefix && e.iconName)
      return {
        prefix: e.prefix,
        iconName: xe(e.prefix, e.iconName) || e.iconName
      };
    if (Array.isArray(e) && e.length === 2) {
      var n = e[1].indexOf("fa-") === 0 ? e[1].slice(3) : e[1], r = Tr(e[0]);
      return {
        prefix: r,
        iconName: xe(r, n) || n
      };
    }
    if (typeof e == "string" && (e.indexOf("".concat(N.cssPrefix, "-")) > -1 || e.match(ph))) {
      var i = Nr(e.split(" "), {
        skipLookups: !0
      });
      return {
        prefix: i.prefix || oe(),
        iconName: xe(i.prefix, i.iconName) || i.iconName
      };
    }
    if (typeof e == "string") {
      var a = oe();
      return {
        prefix: a,
        iconName: xe(a, e) || e
      };
    }
  }
}, vt = {
  noAuto: Wh,
  config: N,
  dom: Kh,
  parse: qh,
  library: Ws,
  findIconDefinition: xi,
  toHtml: Nn
}, Xh = function() {
  var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, n = e.autoReplaceSvgRoot, r = n === void 0 ? K : n;
  (Object.keys(Ct.styles).length > 0 || N.autoFetchSvg) && Jt && N.autoReplaceSvg && vt.dom.i2svg({
    node: r
  });
};
function Ir(t, e) {
  return Object.defineProperty(t, "abstract", {
    get: e
  }), Object.defineProperty(t, "html", {
    get: function() {
      return t.abstract.map(function(r) {
        return Nn(r);
      });
    }
  }), Object.defineProperty(t, "node", {
    get: function() {
      if (Jt) {
        var r = K.createElement("div");
        return r.innerHTML = t.html, r.children;
      }
    }
  }), t;
}
function Jh(t) {
  var e = t.children, n = t.main, r = t.mask, i = t.attributes, a = t.styles, o = t.transform;
  if (Qi(o) && n.found && !r.found) {
    var s = n.width, l = n.height, f = {
      x: s / l / 2,
      y: 0.5
    };
    i.style = Pr(S(S({}, a), {}, {
      "transform-origin": "".concat(f.x + o.x / 16, "em ").concat(f.y + o.y / 16, "em")
    }));
  }
  return [{
    tag: "svg",
    attributes: i,
    children: e
  }];
}
function Zh(t) {
  var e = t.prefix, n = t.iconName, r = t.children, i = t.attributes, a = t.symbol, o = a === !0 ? "".concat(e, "-").concat(N.cssPrefix, "-").concat(n) : a;
  return [{
    tag: "svg",
    attributes: {
      style: "display: none;"
    },
    children: [{
      tag: "symbol",
      attributes: S(S({}, i), {}, {
        id: o
      }),
      children: r
    }]
  }];
}
function ra(t) {
  var e = t.icons, n = e.main, r = e.mask, i = t.prefix, a = t.iconName, o = t.transform, s = t.symbol, l = t.title, f = t.maskId, c = t.titleId, d = t.extra, m = t.watchable, g = m === void 0 ? !1 : m, P = r.found ? r : n, O = P.width, z = P.height, _ = i === "fak", C = [N.replacementClass, a ? "".concat(N.cssPrefix, "-").concat(a) : ""].filter(function(yt) {
    return d.classes.indexOf(yt) === -1;
  }).filter(function(yt) {
    return yt !== "" || !!yt;
  }).concat(d.classes).join(" "), E = {
    children: [],
    attributes: S(S({}, d.attributes), {}, {
      "data-prefix": i,
      "data-icon": a,
      class: C,
      role: d.attributes.role || "img",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 ".concat(O, " ").concat(z)
    })
  }, $ = _ && !~d.classes.indexOf("fa-fw") ? {
    width: "".concat(O / z * 16 * 0.0625, "em")
  } : {};
  g && (E.attributes[Ee] = ""), l && (E.children.push({
    tag: "title",
    attributes: {
      id: E.attributes["aria-labelledby"] || "title-".concat(c || bn())
    },
    children: [l]
  }), delete E.attributes.title);
  var G = S(S({}, E), {}, {
    prefix: i,
    iconName: a,
    main: n,
    mask: r,
    maskId: f,
    transform: o,
    symbol: s,
    styles: S(S({}, $), d.styles)
  }), ct = r.found && n.found ? qt("generateAbstractMask", G) || {
    children: [],
    attributes: {}
  } : qt("generateAbstractIcon", G) || {
    children: [],
    attributes: {}
  }, it = ct.children, xt = ct.attributes;
  return G.children = it, G.attributes = xt, s ? Zh(G) : Jh(G);
}
function lo(t) {
  var e = t.content, n = t.width, r = t.height, i = t.transform, a = t.title, o = t.extra, s = t.watchable, l = s === void 0 ? !1 : s, f = S(S(S({}, o.attributes), a ? {
    title: a
  } : {}), {}, {
    class: o.classes.join(" ")
  });
  l && (f[Ee] = "");
  var c = S({}, o.styles);
  Qi(i) && (c.transform = Ph({
    transform: i,
    startCentered: !0,
    width: n,
    height: r
  }), c["-webkit-transform"] = c.transform);
  var d = Pr(c);
  d.length > 0 && (f.style = d);
  var m = [];
  return m.push({
    tag: "span",
    attributes: f,
    children: [e]
  }), a && m.push({
    tag: "span",
    attributes: {
      class: "sr-only"
    },
    children: [a]
  }), m;
}
function Qh(t) {
  var e = t.content, n = t.title, r = t.extra, i = S(S(S({}, r.attributes), n ? {
    title: n
  } : {}), {}, {
    class: r.classes.join(" ")
  }), a = Pr(r.styles);
  a.length > 0 && (i.style = a);
  var o = [];
  return o.push({
    tag: "span",
    attributes: i,
    children: [e]
  }), n && o.push({
    tag: "span",
    attributes: {
      class: "sr-only"
    },
    children: [n]
  }), o;
}
var Xr = Ct.styles;
function wi(t) {
  var e = t[0], n = t[1], r = t.slice(4), i = Wi(r, 1), a = i[0], o = null;
  return Array.isArray(a) ? o = {
    tag: "g",
    attributes: {
      class: "".concat(N.cssPrefix, "-").concat(be.GROUP)
    },
    children: [{
      tag: "path",
      attributes: {
        class: "".concat(N.cssPrefix, "-").concat(be.SECONDARY),
        fill: "currentColor",
        d: a[0]
      }
    }, {
      tag: "path",
      attributes: {
        class: "".concat(N.cssPrefix, "-").concat(be.PRIMARY),
        fill: "currentColor",
        d: a[1]
      }
    }]
  } : o = {
    tag: "path",
    attributes: {
      fill: "currentColor",
      d: a
    }
  }, {
    found: !0,
    width: e,
    height: n,
    icon: o
  };
}
var tm = {
  found: !1,
  width: 512,
  height: 512
};
function em(t, e) {
  !Ms && !N.showMissingIcons && t && console.error('Icon with name "'.concat(t, '" and prefix "').concat(e, '" is missing.'));
}
function _i(t, e) {
  var n = e;
  return e === "fa" && N.styleDefault !== null && (e = oe()), new Promise(function(r, i) {
    if (qt("missingIconAbstract"), n === "fa") {
      var a = Vs(t) || {};
      t = a.iconName || t, e = a.prefix || e;
    }
    if (t && e && Xr[e] && Xr[e][t]) {
      var o = Xr[e][t];
      return r(wi(o));
    }
    em(t, e), r(S(S({}, tm), {}, {
      icon: N.showMissingIcons && t ? qt("missingIconAbstract") || {} : {}
    }));
  });
}
var fo = function() {
}, ki = N.measurePerformance && Hn && Hn.mark && Hn.measure ? Hn : {
  mark: fo,
  measure: fo
}, rn = 'FA "6.3.0"', nm = function(e) {
  return ki.mark("".concat(rn, " ").concat(e, " begins")), function() {
    return Ks(e);
  };
}, Ks = function(e) {
  ki.mark("".concat(rn, " ").concat(e, " ends")), ki.measure("".concat(rn, " ").concat(e), "".concat(rn, " ").concat(e, " begins"), "".concat(rn, " ").concat(e, " ends"));
}, ia = {
  begin: nm,
  end: Ks
}, ir = function() {
};
function co(t) {
  var e = t.getAttribute ? t.getAttribute(Ee) : null;
  return typeof e == "string";
}
function rm(t) {
  var e = t.getAttribute ? t.getAttribute(qi) : null, n = t.getAttribute ? t.getAttribute(Xi) : null;
  return e && n;
}
function im(t) {
  return t && t.classList && t.classList.contains && t.classList.contains(N.replacementClass);
}
function am() {
  if (N.autoReplaceSvg === !0)
    return ar.replace;
  var t = ar[N.autoReplaceSvg];
  return t || ar.replace;
}
function om(t) {
  return K.createElementNS("http://www.w3.org/2000/svg", t);
}
function sm(t) {
  return K.createElement(t);
}
function qs(t) {
  var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, n = e.ceFn, r = n === void 0 ? t.tag === "svg" ? om : sm : n;
  if (typeof t == "string")
    return K.createTextNode(t);
  var i = r(t.tag);
  Object.keys(t.attributes || []).forEach(function(o) {
    i.setAttribute(o, t.attributes[o]);
  });
  var a = t.children || [];
  return a.forEach(function(o) {
    i.appendChild(qs(o, {
      ceFn: r
    }));
  }), i;
}
function lm(t) {
  var e = " ".concat(t.outerHTML, " ");
  return e = "".concat(e, "Font Awesome fontawesome.com "), e;
}
var ar = {
  replace: function(e) {
    var n = e[0];
    if (n.parentNode)
      if (e[1].forEach(function(i) {
        n.parentNode.insertBefore(qs(i), n);
      }), n.getAttribute(Ee) === null && N.keepOriginalSource) {
        var r = K.createComment(lm(n));
        n.parentNode.replaceChild(r, n);
      } else
        n.remove();
  },
  nest: function(e) {
    var n = e[0], r = e[1];
    if (~Zi(n).indexOf(N.replacementClass))
      return ar.replace(e);
    var i = new RegExp("".concat(N.cssPrefix, "-.*"));
    if (delete r[0].attributes.id, r[0].attributes.class) {
      var a = r[0].attributes.class.split(" ").reduce(function(s, l) {
        return l === N.replacementClass || l.match(i) ? s.toSvg.push(l) : s.toNode.push(l), s;
      }, {
        toNode: [],
        toSvg: []
      });
      r[0].attributes.class = a.toSvg.join(" "), a.toNode.length === 0 ? n.removeAttribute("class") : n.setAttribute("class", a.toNode.join(" "));
    }
    var o = r.map(function(s) {
      return Nn(s);
    }).join(`
`);
    n.setAttribute(Ee, ""), n.innerHTML = o;
  }
};
function uo(t) {
  t();
}
function Xs(t, e) {
  var n = typeof e == "function" ? e : ir;
  if (t.length === 0)
    n();
  else {
    var r = uo;
    N.mutateApproach === dh && (r = ae.requestAnimationFrame || uo), r(function() {
      var i = am(), a = ia.begin("mutate");
      t.map(i), a(), n();
    });
  }
}
var aa = !1;
function Js() {
  aa = !0;
}
function Ai() {
  aa = !1;
}
var br = null;
function ho(t) {
  if (eo && N.observeMutations) {
    var e = t.treeCallback, n = e === void 0 ? ir : e, r = t.nodeCallback, i = r === void 0 ? ir : r, a = t.pseudoElementsCallback, o = a === void 0 ? ir : a, s = t.observeMutationsRoot, l = s === void 0 ? K : s;
    br = new eo(function(f) {
      if (!aa) {
        var c = oe();
        Ve(f).forEach(function(d) {
          if (d.type === "childList" && d.addedNodes.length > 0 && !co(d.addedNodes[0]) && (N.searchPseudoElements && o(d.target), n(d.target)), d.type === "attributes" && d.target.parentNode && N.searchPseudoElements && o(d.target.parentNode), d.type === "attributes" && co(d.target) && ~bh.indexOf(d.attributeName))
            if (d.attributeName === "class" && rm(d.target)) {
              var m = Nr(Zi(d.target)), g = m.prefix, P = m.iconName;
              d.target.setAttribute(qi, g || c), P && d.target.setAttribute(Xi, P);
            } else
              im(d.target) && i(d.target);
        });
      }
    }), Jt && br.observe(l, {
      childList: !0,
      attributes: !0,
      characterData: !0,
      subtree: !0
    });
  }
}
function fm() {
  br && br.disconnect();
}
function cm(t) {
  var e = t.getAttribute("style"), n = [];
  return e && (n = e.split(";").reduce(function(r, i) {
    var a = i.split(":"), o = a[0], s = a.slice(1);
    return o && s.length > 0 && (r[o] = s.join(":").trim()), r;
  }, {})), n;
}
function um(t) {
  var e = t.getAttribute("data-prefix"), n = t.getAttribute("data-icon"), r = t.innerText !== void 0 ? t.innerText.trim() : "", i = Nr(Zi(t));
  return i.prefix || (i.prefix = oe()), e && n && (i.prefix = e, i.iconName = n), i.iconName && i.prefix || (i.prefix && r.length > 0 && (i.iconName = Gh(i.prefix, t.innerText) || ea(i.prefix, vi(t.innerText))), !i.iconName && N.autoFetchSvg && t.firstChild && t.firstChild.nodeType === Node.TEXT_NODE && (i.iconName = t.firstChild.data)), i;
}
function dm(t) {
  var e = Ve(t.attributes).reduce(function(i, a) {
    return i.name !== "class" && i.name !== "style" && (i[a.name] = a.value), i;
  }, {}), n = t.getAttribute("title"), r = t.getAttribute("data-fa-title-id");
  return N.autoA11y && (n ? e["aria-labelledby"] = "".concat(N.replacementClass, "-title-").concat(r || bn()) : (e["aria-hidden"] = "true", e.focusable = "false")), e;
}
function hm() {
  return {
    iconName: null,
    title: null,
    titleId: null,
    prefix: null,
    transform: $t,
    symbol: !1,
    mask: {
      iconName: null,
      prefix: null,
      rest: []
    },
    maskId: null,
    extra: {
      classes: [],
      styles: {},
      attributes: {}
    }
  };
}
function mo(t) {
  var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
    styleParser: !0
  }, n = um(t), r = n.iconName, i = n.prefix, a = n.rest, o = dm(t), s = bi("parseNodeAttributes", {}, t), l = e.styleParser ? cm(t) : [];
  return S({
    iconName: r,
    title: t.getAttribute("title"),
    titleId: t.getAttribute("data-fa-title-id"),
    prefix: i,
    transform: $t,
    mask: {
      iconName: null,
      prefix: null,
      rest: []
    },
    maskId: null,
    symbol: !1,
    extra: {
      classes: a,
      styles: l,
      attributes: o
    }
  }, s);
}
var mm = Ct.styles;
function Zs(t) {
  var e = N.autoReplaceSvg === "nest" ? mo(t, {
    styleParser: !1
  }) : mo(t);
  return ~e.extra.classes.indexOf(Rs) ? qt("generateLayersText", t, e) : qt("generateSvgReplacementMutation", t, e);
}
var se = /* @__PURE__ */ new Set();
Ji.map(function(t) {
  se.add("fa-".concat(t));
});
Object.keys(pn[W]).map(se.add.bind(se));
Object.keys(pn[Z]).map(se.add.bind(se));
se = Pn(se);
function po(t) {
  var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
  if (!Jt)
    return Promise.resolve();
  var n = K.documentElement.classList, r = function(d) {
    return n.add("".concat(no, "-").concat(d));
  }, i = function(d) {
    return n.remove("".concat(no, "-").concat(d));
  }, a = N.autoFetchSvg ? se : Ji.map(function(c) {
    return "fa-".concat(c);
  }).concat(Object.keys(mm));
  a.includes("fa") || a.push("fa");
  var o = [".".concat(Rs, ":not([").concat(Ee, "])")].concat(a.map(function(c) {
    return ".".concat(c, ":not([").concat(Ee, "])");
  })).join(", ");
  if (o.length === 0)
    return Promise.resolve();
  var s = [];
  try {
    s = Ve(t.querySelectorAll(o));
  } catch {
  }
  if (s.length > 0)
    r("pending"), i("complete");
  else
    return Promise.resolve();
  var l = ia.begin("onTree"), f = s.reduce(function(c, d) {
    try {
      var m = Zs(d);
      m && c.push(m);
    } catch (g) {
      Ms || g.name === "MissingIcon" && console.error(g);
    }
    return c;
  }, []);
  return new Promise(function(c, d) {
    Promise.all(f).then(function(m) {
      Xs(m, function() {
        r("active"), r("complete"), i("pending"), typeof e == "function" && e(), l(), c();
      });
    }).catch(function(m) {
      l(), d(m);
    });
  });
}
function pm(t) {
  var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
  Zs(t).then(function(n) {
    n && Xs([n], e);
  });
}
function gm(t) {
  return function(e) {
    var n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, r = (e || {}).icon ? e : xi(e || {}), i = n.mask;
    return i && (i = (i || {}).icon ? i : xi(i || {})), t(r, S(S({}, n), {}, {
      mask: i
    }));
  };
}
var vm = function(e) {
  var n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, r = n.transform, i = r === void 0 ? $t : r, a = n.symbol, o = a === void 0 ? !1 : a, s = n.mask, l = s === void 0 ? null : s, f = n.maskId, c = f === void 0 ? null : f, d = n.title, m = d === void 0 ? null : d, g = n.titleId, P = g === void 0 ? null : g, O = n.classes, z = O === void 0 ? [] : O, _ = n.attributes, C = _ === void 0 ? {} : _, E = n.styles, $ = E === void 0 ? {} : E;
  if (e) {
    var G = e.prefix, ct = e.iconName, it = e.icon;
    return Ir(S({
      type: "icon"
    }, e), function() {
      return Ce("beforeDOMElementCreation", {
        iconDefinition: e,
        params: n
      }), N.autoA11y && (m ? C["aria-labelledby"] = "".concat(N.replacementClass, "-title-").concat(P || bn()) : (C["aria-hidden"] = "true", C.focusable = "false")), ra({
        icons: {
          main: wi(it),
          mask: l ? wi(l.icon) : {
            found: !1,
            width: null,
            height: null,
            icon: {}
          }
        },
        prefix: G,
        iconName: ct,
        transform: S(S({}, $t), i),
        symbol: o,
        title: m,
        maskId: c,
        titleId: P,
        extra: {
          attributes: C,
          styles: $,
          classes: z
        }
      });
    });
  }
}, ym = {
  mixout: function() {
    return {
      icon: gm(vm)
    };
  },
  hooks: function() {
    return {
      mutationObserverCallbacks: function(n) {
        return n.treeCallback = po, n.nodeCallback = pm, n;
      }
    };
  },
  provides: function(e) {
    e.i2svg = function(n) {
      var r = n.node, i = r === void 0 ? K : r, a = n.callback, o = a === void 0 ? function() {
      } : a;
      return po(i, o);
    }, e.generateSvgReplacementMutation = function(n, r) {
      var i = r.iconName, a = r.title, o = r.titleId, s = r.prefix, l = r.transform, f = r.symbol, c = r.mask, d = r.maskId, m = r.extra;
      return new Promise(function(g, P) {
        Promise.all([_i(i, s), c.iconName ? _i(c.iconName, c.prefix) : Promise.resolve({
          found: !1,
          width: 512,
          height: 512,
          icon: {}
        })]).then(function(O) {
          var z = Wi(O, 2), _ = z[0], C = z[1];
          g([n, ra({
            icons: {
              main: _,
              mask: C
            },
            prefix: s,
            iconName: i,
            transform: l,
            symbol: f,
            maskId: d,
            title: a,
            titleId: o,
            extra: m,
            watchable: !0
          })]);
        }).catch(P);
      });
    }, e.generateAbstractIcon = function(n) {
      var r = n.children, i = n.attributes, a = n.main, o = n.transform, s = n.styles, l = Pr(s);
      l.length > 0 && (i.style = l);
      var f;
      return Qi(o) && (f = qt("generateAbstractTransformGrouping", {
        main: a,
        transform: o,
        containerWidth: a.width,
        iconWidth: a.width
      })), r.push(f || a.icon), {
        children: r,
        attributes: i
      };
    };
  }
}, bm = {
  mixout: function() {
    return {
      layer: function(n) {
        var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, i = r.classes, a = i === void 0 ? [] : i;
        return Ir({
          type: "layer"
        }, function() {
          Ce("beforeDOMElementCreation", {
            assembler: n,
            params: r
          });
          var o = [];
          return n(function(s) {
            Array.isArray(s) ? s.map(function(l) {
              o = o.concat(l.abstract);
            }) : o = o.concat(s.abstract);
          }), [{
            tag: "span",
            attributes: {
              class: ["".concat(N.cssPrefix, "-layers")].concat(Pn(a)).join(" ")
            },
            children: o
          }];
        });
      }
    };
  }
}, xm = {
  mixout: function() {
    return {
      counter: function(n) {
        var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, i = r.title, a = i === void 0 ? null : i, o = r.classes, s = o === void 0 ? [] : o, l = r.attributes, f = l === void 0 ? {} : l, c = r.styles, d = c === void 0 ? {} : c;
        return Ir({
          type: "counter",
          content: n
        }, function() {
          return Ce("beforeDOMElementCreation", {
            content: n,
            params: r
          }), Qh({
            content: n.toString(),
            title: a,
            extra: {
              attributes: f,
              styles: d,
              classes: ["".concat(N.cssPrefix, "-layers-counter")].concat(Pn(s))
            }
          });
        });
      }
    };
  }
}, wm = {
  mixout: function() {
    return {
      text: function(n) {
        var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, i = r.transform, a = i === void 0 ? $t : i, o = r.title, s = o === void 0 ? null : o, l = r.classes, f = l === void 0 ? [] : l, c = r.attributes, d = c === void 0 ? {} : c, m = r.styles, g = m === void 0 ? {} : m;
        return Ir({
          type: "text",
          content: n
        }, function() {
          return Ce("beforeDOMElementCreation", {
            content: n,
            params: r
          }), lo({
            content: n,
            transform: S(S({}, $t), a),
            title: s,
            extra: {
              attributes: d,
              styles: g,
              classes: ["".concat(N.cssPrefix, "-layers-text")].concat(Pn(f))
            }
          });
        });
      }
    };
  },
  provides: function(e) {
    e.generateLayersText = function(n, r) {
      var i = r.title, a = r.transform, o = r.extra, s = null, l = null;
      if (Ts) {
        var f = parseInt(getComputedStyle(n).fontSize, 10), c = n.getBoundingClientRect();
        s = c.width / f, l = c.height / f;
      }
      return N.autoA11y && !i && (o.attributes["aria-hidden"] = "true"), Promise.resolve([n, lo({
        content: n.innerHTML,
        width: s,
        height: l,
        transform: a,
        title: i,
        extra: o,
        watchable: !0
      })]);
    };
  }
}, _m = new RegExp('"', "ug"), go = [1105920, 1112319];
function km(t) {
  var e = t.replace(_m, ""), n = $h(e, 0), r = n >= go[0] && n <= go[1], i = e.length === 2 ? e[0] === e[1] : !1;
  return {
    value: vi(i ? e[0] : e),
    isSecondary: r || i
  };
}
function vo(t, e) {
  var n = "".concat(uh).concat(e.replace(":", "-"));
  return new Promise(function(r, i) {
    if (t.getAttribute(n) !== null)
      return r();
    var a = Ve(t.children), o = a.filter(function(it) {
      return it.getAttribute(gi) === e;
    })[0], s = ae.getComputedStyle(t, e), l = s.getPropertyValue("font-family").match(gh), f = s.getPropertyValue("font-weight"), c = s.getPropertyValue("content");
    if (o && !l)
      return t.removeChild(o), r();
    if (l && c !== "none" && c !== "") {
      var d = s.getPropertyValue("content"), m = ~["Sharp"].indexOf(l[2]) ? Z : W, g = ~["Solid", "Regular", "Light", "Thin", "Duotone", "Brands", "Kit"].indexOf(l[2]) ? gn[m][l[2].toLowerCase()] : vh[m][f], P = km(d), O = P.value, z = P.isSecondary, _ = l[0].startsWith("FontAwesome"), C = ea(g, O), E = C;
      if (_) {
        var $ = Bh(O);
        $.iconName && $.prefix && (C = $.iconName, g = $.prefix);
      }
      if (C && !z && (!o || o.getAttribute(qi) !== g || o.getAttribute(Xi) !== E)) {
        t.setAttribute(n, E), o && t.removeChild(o);
        var G = hm(), ct = G.extra;
        ct.attributes[gi] = e, _i(C, g).then(function(it) {
          var xt = ra(S(S({}, G), {}, {
            icons: {
              main: it,
              mask: na()
            },
            prefix: g,
            iconName: E,
            extra: ct,
            watchable: !0
          })), yt = K.createElement("svg");
          e === "::before" ? t.insertBefore(yt, t.firstChild) : t.appendChild(yt), yt.outerHTML = xt.map(function(Ht) {
            return Nn(Ht);
          }).join(`
`), t.removeAttribute(n), r();
        }).catch(i);
      } else
        r();
    } else
      r();
  });
}
function Am(t) {
  return Promise.all([vo(t, "::before"), vo(t, "::after")]);
}
function Em(t) {
  return t.parentNode !== document.head && !~hh.indexOf(t.tagName.toUpperCase()) && !t.getAttribute(gi) && (!t.parentNode || t.parentNode.tagName !== "svg");
}
function yo(t) {
  if (Jt)
    return new Promise(function(e, n) {
      var r = Ve(t.querySelectorAll("*")).filter(Em).map(Am), i = ia.begin("searchPseudoElements");
      Js(), Promise.all(r).then(function() {
        i(), Ai(), e();
      }).catch(function() {
        i(), Ai(), n();
      });
    });
}
var Cm = {
  hooks: function() {
    return {
      mutationObserverCallbacks: function(n) {
        return n.pseudoElementsCallback = yo, n;
      }
    };
  },
  provides: function(e) {
    e.pseudoElements2svg = function(n) {
      var r = n.node, i = r === void 0 ? K : r;
      N.searchPseudoElements && yo(i);
    };
  }
}, bo = !1, Sm = {
  mixout: function() {
    return {
      dom: {
        unwatch: function() {
          Js(), bo = !0;
        }
      }
    };
  },
  hooks: function() {
    return {
      bootstrap: function() {
        ho(bi("mutationObserverCallbacks", {}));
      },
      noAuto: function() {
        fm();
      },
      watch: function(n) {
        var r = n.observeMutationsRoot;
        bo ? Ai() : ho(bi("mutationObserverCallbacks", {
          observeMutationsRoot: r
        }));
      }
    };
  }
}, xo = function(e) {
  var n = {
    size: 16,
    x: 0,
    y: 0,
    flipX: !1,
    flipY: !1,
    rotate: 0
  };
  return e.toLowerCase().split(" ").reduce(function(r, i) {
    var a = i.toLowerCase().split("-"), o = a[0], s = a.slice(1).join("-");
    if (o && s === "h")
      return r.flipX = !0, r;
    if (o && s === "v")
      return r.flipY = !0, r;
    if (s = parseFloat(s), isNaN(s))
      return r;
    switch (o) {
      case "grow":
        r.size = r.size + s;
        break;
      case "shrink":
        r.size = r.size - s;
        break;
      case "left":
        r.x = r.x - s;
        break;
      case "right":
        r.x = r.x + s;
        break;
      case "up":
        r.y = r.y - s;
        break;
      case "down":
        r.y = r.y + s;
        break;
      case "rotate":
        r.rotate = r.rotate + s;
        break;
    }
    return r;
  }, n);
}, Om = {
  mixout: function() {
    return {
      parse: {
        transform: function(n) {
          return xo(n);
        }
      }
    };
  },
  hooks: function() {
    return {
      parseNodeAttributes: function(n, r) {
        var i = r.getAttribute("data-fa-transform");
        return i && (n.transform = xo(i)), n;
      }
    };
  },
  provides: function(e) {
    e.generateAbstractTransformGrouping = function(n) {
      var r = n.main, i = n.transform, a = n.containerWidth, o = n.iconWidth, s = {
        transform: "translate(".concat(a / 2, " 256)")
      }, l = "translate(".concat(i.x * 32, ", ").concat(i.y * 32, ") "), f = "scale(".concat(i.size / 16 * (i.flipX ? -1 : 1), ", ").concat(i.size / 16 * (i.flipY ? -1 : 1), ") "), c = "rotate(".concat(i.rotate, " 0 0)"), d = {
        transform: "".concat(l, " ").concat(f, " ").concat(c)
      }, m = {
        transform: "translate(".concat(o / 2 * -1, " -256)")
      }, g = {
        outer: s,
        inner: d,
        path: m
      };
      return {
        tag: "g",
        attributes: S({}, g.outer),
        children: [{
          tag: "g",
          attributes: S({}, g.inner),
          children: [{
            tag: r.icon.tag,
            children: r.icon.children,
            attributes: S(S({}, r.icon.attributes), g.path)
          }]
        }]
      };
    };
  }
}, Jr = {
  x: 0,
  y: 0,
  width: "100%",
  height: "100%"
};
function wo(t) {
  var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
  return t.attributes && (t.attributes.fill || e) && (t.attributes.fill = "black"), t;
}
function Pm(t) {
  return t.tag === "g" ? t.children : [t];
}
var Tm = {
  hooks: function() {
    return {
      parseNodeAttributes: function(n, r) {
        var i = r.getAttribute("data-fa-mask"), a = i ? Nr(i.split(" ").map(function(o) {
          return o.trim();
        })) : na();
        return a.prefix || (a.prefix = oe()), n.mask = a, n.maskId = r.getAttribute("data-fa-mask-id"), n;
      }
    };
  },
  provides: function(e) {
    e.generateAbstractMask = function(n) {
      var r = n.children, i = n.attributes, a = n.main, o = n.mask, s = n.maskId, l = n.transform, f = a.width, c = a.icon, d = o.width, m = o.icon, g = Oh({
        transform: l,
        containerWidth: d,
        iconWidth: f
      }), P = {
        tag: "rect",
        attributes: S(S({}, Jr), {}, {
          fill: "white"
        })
      }, O = c.children ? {
        children: c.children.map(wo)
      } : {}, z = {
        tag: "g",
        attributes: S({}, g.inner),
        children: [wo(S({
          tag: c.tag,
          attributes: S(S({}, c.attributes), g.path)
        }, O))]
      }, _ = {
        tag: "g",
        attributes: S({}, g.outer),
        children: [z]
      }, C = "mask-".concat(s || bn()), E = "clip-".concat(s || bn()), $ = {
        tag: "mask",
        attributes: S(S({}, Jr), {}, {
          id: C,
          maskUnits: "userSpaceOnUse",
          maskContentUnits: "userSpaceOnUse"
        }),
        children: [P, _]
      }, G = {
        tag: "defs",
        children: [{
          tag: "clipPath",
          attributes: {
            id: E
          },
          children: Pm(m)
        }, $]
      };
      return r.push(G, {
        tag: "rect",
        attributes: S({
          fill: "currentColor",
          "clip-path": "url(#".concat(E, ")"),
          mask: "url(#".concat(C, ")")
        }, Jr)
      }), {
        children: r,
        attributes: i
      };
    };
  }
}, Nm = {
  provides: function(e) {
    var n = !1;
    ae.matchMedia && (n = ae.matchMedia("(prefers-reduced-motion: reduce)").matches), e.missingIconAbstract = function() {
      var r = [], i = {
        fill: "currentColor"
      }, a = {
        attributeType: "XML",
        repeatCount: "indefinite",
        dur: "2s"
      };
      r.push({
        tag: "path",
        attributes: S(S({}, i), {}, {
          d: "M156.5,447.7l-12.6,29.5c-18.7-9.5-35.9-21.2-51.5-34.9l22.7-22.7C127.6,430.5,141.5,440,156.5,447.7z M40.6,272H8.5 c1.4,21.2,5.4,41.7,11.7,61.1L50,321.2C45.1,305.5,41.8,289,40.6,272z M40.6,240c1.4-18.8,5.2-37,11.1-54.1l-29.5-12.6 C14.7,194.3,10,216.7,8.5,240H40.6z M64.3,156.5c7.8-14.9,17.2-28.8,28.1-41.5L69.7,92.3c-13.7,15.6-25.5,32.8-34.9,51.5 L64.3,156.5z M397,419.6c-13.9,12-29.4,22.3-46.1,30.4l11.9,29.8c20.7-9.9,39.8-22.6,56.9-37.6L397,419.6z M115,92.4 c13.9-12,29.4-22.3,46.1-30.4l-11.9-29.8c-20.7,9.9-39.8,22.6-56.8,37.6L115,92.4z M447.7,355.5c-7.8,14.9-17.2,28.8-28.1,41.5 l22.7,22.7c13.7-15.6,25.5-32.9,34.9-51.5L447.7,355.5z M471.4,272c-1.4,18.8-5.2,37-11.1,54.1l29.5,12.6 c7.5-21.1,12.2-43.5,13.6-66.8H471.4z M321.2,462c-15.7,5-32.2,8.2-49.2,9.4v32.1c21.2-1.4,41.7-5.4,61.1-11.7L321.2,462z M240,471.4c-18.8-1.4-37-5.2-54.1-11.1l-12.6,29.5c21.1,7.5,43.5,12.2,66.8,13.6V471.4z M462,190.8c5,15.7,8.2,32.2,9.4,49.2h32.1 c-1.4-21.2-5.4-41.7-11.7-61.1L462,190.8z M92.4,397c-12-13.9-22.3-29.4-30.4-46.1l-29.8,11.9c9.9,20.7,22.6,39.8,37.6,56.9 L92.4,397z M272,40.6c18.8,1.4,36.9,5.2,54.1,11.1l12.6-29.5C317.7,14.7,295.3,10,272,8.5V40.6z M190.8,50 c15.7-5,32.2-8.2,49.2-9.4V8.5c-21.2,1.4-41.7,5.4-61.1,11.7L190.8,50z M442.3,92.3L419.6,115c12,13.9,22.3,29.4,30.5,46.1 l29.8-11.9C470,128.5,457.3,109.4,442.3,92.3z M397,92.4l22.7-22.7c-15.6-13.7-32.8-25.5-51.5-34.9l-12.6,29.5 C370.4,72.1,384.4,81.5,397,92.4z"
        })
      });
      var o = S(S({}, a), {}, {
        attributeName: "opacity"
      }), s = {
        tag: "circle",
        attributes: S(S({}, i), {}, {
          cx: "256",
          cy: "364",
          r: "28"
        }),
        children: []
      };
      return n || s.children.push({
        tag: "animate",
        attributes: S(S({}, a), {}, {
          attributeName: "r",
          values: "28;14;28;28;14;28;"
        })
      }, {
        tag: "animate",
        attributes: S(S({}, o), {}, {
          values: "1;0;1;1;0;1;"
        })
      }), r.push(s), r.push({
        tag: "path",
        attributes: S(S({}, i), {}, {
          opacity: "1",
          d: "M263.7,312h-16c-6.6,0-12-5.4-12-12c0-71,77.4-63.9,77.4-107.8c0-20-17.8-40.2-57.4-40.2c-29.1,0-44.3,9.6-59.2,28.7 c-3.9,5-11.1,6-16.2,2.4l-13.1-9.2c-5.6-3.9-6.9-11.8-2.6-17.2c21.2-27.2,46.4-44.7,91.2-44.7c52.3,0,97.4,29.8,97.4,80.2 c0,67.6-77.4,63.5-77.4,107.8C275.7,306.6,270.3,312,263.7,312z"
        }),
        children: n ? [] : [{
          tag: "animate",
          attributes: S(S({}, o), {}, {
            values: "1;0;0;0;0;1;"
          })
        }]
      }), n || r.push({
        tag: "path",
        attributes: S(S({}, i), {}, {
          opacity: "0",
          d: "M232.5,134.5l7,168c0.3,6.4,5.6,11.5,12,11.5h9c6.4,0,11.7-5.1,12-11.5l7-168c0.3-6.8-5.2-12.5-12-12.5h-23 C237.7,122,232.2,127.7,232.5,134.5z"
        }),
        children: [{
          tag: "animate",
          attributes: S(S({}, o), {}, {
            values: "0;0;1;1;0;0;"
          })
        }]
      }), {
        tag: "g",
        attributes: {
          class: "missing"
        },
        children: r
      };
    };
  }
}, Im = {
  hooks: function() {
    return {
      parseNodeAttributes: function(n, r) {
        var i = r.getAttribute("data-fa-symbol"), a = i === null ? !1 : i === "" ? !0 : i;
        return n.symbol = a, n;
      }
    };
  }
}, Mm = [Nh, ym, bm, xm, wm, Cm, Sm, Om, Tm, Nm, Im];
Vh(Mm, {
  mixoutsTo: vt
});
vt.noAuto;
var Qs = vt.config, tl = vt.library;
vt.dom;
var xr = vt.parse;
vt.findIconDefinition;
vt.toHtml;
var Rm = vt.icon;
vt.layer;
var Fm = vt.text;
vt.counter;
var $m = {
  prefix: "fas",
  iconName: "circle-notch",
  icon: [512, 512, [], "f1ce", "M222.7 32.1c5 16.9-4.6 34.8-21.5 39.8C121.8 95.6 64 169.1 64 256c0 106 86 192 192 192s192-86 192-192c0-86.9-57.8-160.4-137.1-184.1c-16.9-5-26.6-22.9-21.5-39.8s22.9-26.6 39.8-21.5C434.9 42.1 512 140 512 256c0 141.4-114.6 256-256 256S0 397.4 0 256C0 140 77.1 42.1 182.9 10.6c16.9-5 34.8 4.6 39.8 21.5z"]
}, Lm = {
  prefix: "fas",
  iconName: "plus",
  icon: [448, 512, [10133, 61543, "add"], "2b", "M240 80c0-17.7-14.3-32-32-32s-32 14.3-32 32V224H32c-17.7 0-32 14.3-32 32s14.3 32 32 32H176V432c0 17.7 14.3 32 32 32s32-14.3 32-32V288H384c17.7 0 32-14.3 32-32s-14.3-32-32-32H240V80z"]
};
function oa(t, e) {
  const n = /* @__PURE__ */ Object.create(null), r = t.split(",");
  for (let i = 0; i < r.length; i++)
    n[r[i]] = !0;
  return e ? (i) => !!n[i.toLowerCase()] : (i) => !!n[i];
}
function sa(t) {
  if (L(t)) {
    const e = {};
    for (let n = 0; n < t.length; n++) {
      const r = t[n], i = nt(r) ? jm(r) : sa(r);
      if (i)
        for (const a in i)
          e[a] = i[a];
    }
    return e;
  } else {
    if (nt(t))
      return t;
    if (X(t))
      return t;
  }
}
const Dm = /;(?![^(]*\))/g, zm = /:([^]+)/, Hm = /\/\*.*?\*\//gs;
function jm(t) {
  const e = {};
  return t.replace(Hm, "").split(Dm).forEach((n) => {
    if (n) {
      const r = n.split(zm);
      r.length > 1 && (e[r[0].trim()] = r[1].trim());
    }
  }), e;
}
function la(t) {
  let e = "";
  if (nt(t))
    e = t;
  else if (L(t))
    for (let n = 0; n < t.length; n++) {
      const r = la(t[n]);
      r && (e += r + " ");
    }
  else if (X(t))
    for (const n in t)
      t[n] && (e += n + " ");
  return e.trim();
}
const Gm = "itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly", Bm = /* @__PURE__ */ oa(Gm);
function el(t) {
  return !!t || t === "";
}
const Um = (t) => nt(t) ? t : t == null ? "" : L(t) || X(t) && (t.toString === al || !D(t.toString)) ? JSON.stringify(t, nl, 2) : String(t), nl = (t, e) => e && e.__v_isRef ? nl(t, e.value) : $e(e) ? {
  [`Map(${e.size})`]: [...e.entries()].reduce((n, [r, i]) => (n[`${r} =>`] = i, n), {})
} : rl(e) ? {
  [`Set(${e.size})`]: [...e.values()]
} : X(e) && !L(e) && !ol(e) ? String(e) : e, q = {}, Fe = [], Ot = () => {
}, Ym = () => !1, Vm = /^on[^a-z]/, Mr = (t) => Vm.test(t), fa = (t) => t.startsWith("onUpdate:"), ft = Object.assign, ca = (t, e) => {
  const n = t.indexOf(e);
  n > -1 && t.splice(n, 1);
}, Wm = Object.prototype.hasOwnProperty, j = (t, e) => Wm.call(t, e), L = Array.isArray, $e = (t) => Rr(t) === "[object Map]", rl = (t) => Rr(t) === "[object Set]", D = (t) => typeof t == "function", nt = (t) => typeof t == "string", ua = (t) => typeof t == "symbol", X = (t) => t !== null && typeof t == "object", il = (t) => X(t) && D(t.then) && D(t.catch), al = Object.prototype.toString, Rr = (t) => al.call(t), Km = (t) => Rr(t).slice(8, -1), ol = (t) => Rr(t) === "[object Object]", da = (t) => nt(t) && t !== "NaN" && t[0] !== "-" && "" + parseInt(t, 10) === t, or = /* @__PURE__ */ oa(
  // the leading comma is intentional so empty string "" is also included
  ",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"
), Fr = (t) => {
  const e = /* @__PURE__ */ Object.create(null);
  return (n) => e[n] || (e[n] = t(n));
}, qm = /-(\w)/g, Ge = Fr((t) => t.replace(qm, (e, n) => n ? n.toUpperCase() : "")), Xm = /\B([A-Z])/g, We = Fr((t) => t.replace(Xm, "-$1").toLowerCase()), sl = Fr((t) => t.charAt(0).toUpperCase() + t.slice(1)), Zr = Fr((t) => t ? `on${sl(t)}` : ""), xn = (t, e) => !Object.is(t, e), Qr = (t, e) => {
  for (let n = 0; n < t.length; n++)
    t[n](e);
}, wr = (t, e, n) => {
  Object.defineProperty(t, e, {
    configurable: !0,
    enumerable: !1,
    value: n
  });
}, Jm = (t) => {
  const e = parseFloat(t);
  return isNaN(e) ? t : e;
};
let _o;
const Zm = () => _o || (_o = typeof globalThis < "u" ? globalThis : typeof self < "u" ? self : typeof window < "u" ? window : typeof global < "u" ? global : {});
let _t;
class Qm {
  constructor(e = !1) {
    this.detached = e, this._active = !0, this.effects = [], this.cleanups = [], this.parent = _t, !e && _t && (this.index = (_t.scopes || (_t.scopes = [])).push(this) - 1);
  }
  get active() {
    return this._active;
  }
  run(e) {
    if (this._active) {
      const n = _t;
      try {
        return _t = this, e();
      } finally {
        _t = n;
      }
    }
  }
  /**
   * This should only be called on non-detached scopes
   * @internal
   */
  on() {
    _t = this;
  }
  /**
   * This should only be called on non-detached scopes
   * @internal
   */
  off() {
    _t = this.parent;
  }
  stop(e) {
    if (this._active) {
      let n, r;
      for (n = 0, r = this.effects.length; n < r; n++)
        this.effects[n].stop();
      for (n = 0, r = this.cleanups.length; n < r; n++)
        this.cleanups[n]();
      if (this.scopes)
        for (n = 0, r = this.scopes.length; n < r; n++)
          this.scopes[n].stop(!0);
      if (!this.detached && this.parent && !e) {
        const i = this.parent.scopes.pop();
        i && i !== this && (this.parent.scopes[this.index] = i, i.index = this.index);
      }
      this.parent = void 0, this._active = !1;
    }
  }
}
function tp(t, e = _t) {
  e && e.active && e.effects.push(t);
}
function ep() {
  return _t;
}
const ha = (t) => {
  const e = new Set(t);
  return e.w = 0, e.n = 0, e;
}, ll = (t) => (t.w & le) > 0, fl = (t) => (t.n & le) > 0, np = ({ deps: t }) => {
  if (t.length)
    for (let e = 0; e < t.length; e++)
      t[e].w |= le;
}, rp = (t) => {
  const { deps: e } = t;
  if (e.length) {
    let n = 0;
    for (let r = 0; r < e.length; r++) {
      const i = e[r];
      ll(i) && !fl(i) ? i.delete(t) : e[n++] = i, i.w &= ~le, i.n &= ~le;
    }
    e.length = n;
  }
}, Ei = /* @__PURE__ */ new WeakMap();
let an = 0, le = 1;
const Ci = 30;
let At;
const _e = Symbol(""), Si = Symbol("");
class ma {
  constructor(e, n = null, r) {
    this.fn = e, this.scheduler = n, this.active = !0, this.deps = [], this.parent = void 0, tp(this, r);
  }
  run() {
    if (!this.active)
      return this.fn();
    let e = At, n = re;
    for (; e; ) {
      if (e === this)
        return;
      e = e.parent;
    }
    try {
      return this.parent = At, At = this, re = !0, le = 1 << ++an, an <= Ci ? np(this) : ko(this), this.fn();
    } finally {
      an <= Ci && rp(this), le = 1 << --an, At = this.parent, re = n, this.parent = void 0, this.deferStop && this.stop();
    }
  }
  stop() {
    At === this ? this.deferStop = !0 : this.active && (ko(this), this.onStop && this.onStop(), this.active = !1);
  }
}
function ko(t) {
  const { deps: e } = t;
  if (e.length) {
    for (let n = 0; n < e.length; n++)
      e[n].delete(t);
    e.length = 0;
  }
}
let re = !0;
const cl = [];
function Ke() {
  cl.push(re), re = !1;
}
function qe() {
  const t = cl.pop();
  re = t === void 0 ? !0 : t;
}
function mt(t, e, n) {
  if (re && At) {
    let r = Ei.get(t);
    r || Ei.set(t, r = /* @__PURE__ */ new Map());
    let i = r.get(n);
    i || r.set(n, i = ha()), ul(i);
  }
}
function ul(t, e) {
  let n = !1;
  an <= Ci ? fl(t) || (t.n |= le, n = !ll(t)) : n = !t.has(At), n && (t.add(At), At.deps.push(t));
}
function Xt(t, e, n, r, i, a) {
  const o = Ei.get(t);
  if (!o)
    return;
  let s = [];
  if (e === "clear")
    s = [...o.values()];
  else if (n === "length" && L(t)) {
    const l = Number(r);
    o.forEach((f, c) => {
      (c === "length" || c >= l) && s.push(f);
    });
  } else
    switch (n !== void 0 && s.push(o.get(n)), e) {
      case "add":
        L(t) ? da(n) && s.push(o.get("length")) : (s.push(o.get(_e)), $e(t) && s.push(o.get(Si)));
        break;
      case "delete":
        L(t) || (s.push(o.get(_e)), $e(t) && s.push(o.get(Si)));
        break;
      case "set":
        $e(t) && s.push(o.get(_e));
        break;
    }
  if (s.length === 1)
    s[0] && Oi(s[0]);
  else {
    const l = [];
    for (const f of s)
      f && l.push(...f);
    Oi(ha(l));
  }
}
function Oi(t, e) {
  const n = L(t) ? t : [...t];
  for (const r of n)
    r.computed && Ao(r);
  for (const r of n)
    r.computed || Ao(r);
}
function Ao(t, e) {
  (t !== At || t.allowRecurse) && (t.scheduler ? t.scheduler() : t.run());
}
const ip = /* @__PURE__ */ oa("__proto__,__v_isRef,__isVue"), dl = new Set(
  /* @__PURE__ */ Object.getOwnPropertyNames(Symbol).filter((t) => t !== "arguments" && t !== "caller").map((t) => Symbol[t]).filter(ua)
), ap = /* @__PURE__ */ pa(), op = /* @__PURE__ */ pa(!1, !0), sp = /* @__PURE__ */ pa(!0), Eo = /* @__PURE__ */ lp();
function lp() {
  const t = {};
  return ["includes", "indexOf", "lastIndexOf"].forEach((e) => {
    t[e] = function(...n) {
      const r = B(this);
      for (let a = 0, o = this.length; a < o; a++)
        mt(r, "get", a + "");
      const i = r[e](...n);
      return i === -1 || i === !1 ? r[e](...n.map(B)) : i;
    };
  }), ["push", "pop", "shift", "unshift", "splice"].forEach((e) => {
    t[e] = function(...n) {
      Ke();
      const r = B(this)[e].apply(this, n);
      return qe(), r;
    };
  }), t;
}
function fp(t) {
  const e = B(this);
  return mt(e, "has", t), e.hasOwnProperty(t);
}
function pa(t = !1, e = !1) {
  return function(r, i, a) {
    if (i === "__v_isReactive")
      return !t;
    if (i === "__v_isReadonly")
      return t;
    if (i === "__v_isShallow")
      return e;
    if (i === "__v_raw" && a === (t ? e ? Ep : vl : e ? gl : pl).get(r))
      return r;
    const o = L(r);
    if (!t) {
      if (o && j(Eo, i))
        return Reflect.get(Eo, i, a);
      if (i === "hasOwnProperty")
        return fp;
    }
    const s = Reflect.get(r, i, a);
    return (ua(i) ? dl.has(i) : ip(i)) || (t || mt(r, "get", i), e) ? s : ot(s) ? o && da(i) ? s : s.value : X(s) ? t ? yl(s) : ya(s) : s;
  };
}
const cp = /* @__PURE__ */ hl(), up = /* @__PURE__ */ hl(!0);
function hl(t = !1) {
  return function(n, r, i, a) {
    let o = n[r];
    if (Be(o) && ot(o) && !ot(i))
      return !1;
    if (!t && (!_r(i) && !Be(i) && (o = B(o), i = B(i)), !L(n) && ot(o) && !ot(i)))
      return o.value = i, !0;
    const s = L(n) && da(r) ? Number(r) < n.length : j(n, r), l = Reflect.set(n, r, i, a);
    return n === B(a) && (s ? xn(i, o) && Xt(n, "set", r, i) : Xt(n, "add", r, i)), l;
  };
}
function dp(t, e) {
  const n = j(t, e);
  t[e];
  const r = Reflect.deleteProperty(t, e);
  return r && n && Xt(t, "delete", e, void 0), r;
}
function hp(t, e) {
  const n = Reflect.has(t, e);
  return (!ua(e) || !dl.has(e)) && mt(t, "has", e), n;
}
function mp(t) {
  return mt(t, "iterate", L(t) ? "length" : _e), Reflect.ownKeys(t);
}
const ml = {
  get: ap,
  set: cp,
  deleteProperty: dp,
  has: hp,
  ownKeys: mp
}, pp = {
  get: sp,
  set(t, e) {
    return !0;
  },
  deleteProperty(t, e) {
    return !0;
  }
}, gp = /* @__PURE__ */ ft({}, ml, {
  get: op,
  set: up
}), ga = (t) => t, $r = (t) => Reflect.getPrototypeOf(t);
function qn(t, e, n = !1, r = !1) {
  t = t.__v_raw;
  const i = B(t), a = B(e);
  n || (e !== a && mt(i, "get", e), mt(i, "get", a));
  const { has: o } = $r(i), s = r ? ga : n ? xa : wn;
  if (o.call(i, e))
    return s(t.get(e));
  if (o.call(i, a))
    return s(t.get(a));
  t !== i && t.get(e);
}
function Xn(t, e = !1) {
  const n = this.__v_raw, r = B(n), i = B(t);
  return e || (t !== i && mt(r, "has", t), mt(r, "has", i)), t === i ? n.has(t) : n.has(t) || n.has(i);
}
function Jn(t, e = !1) {
  return t = t.__v_raw, !e && mt(B(t), "iterate", _e), Reflect.get(t, "size", t);
}
function Co(t) {
  t = B(t);
  const e = B(this);
  return $r(e).has.call(e, t) || (e.add(t), Xt(e, "add", t, t)), this;
}
function So(t, e) {
  e = B(e);
  const n = B(this), { has: r, get: i } = $r(n);
  let a = r.call(n, t);
  a || (t = B(t), a = r.call(n, t));
  const o = i.call(n, t);
  return n.set(t, e), a ? xn(e, o) && Xt(n, "set", t, e) : Xt(n, "add", t, e), this;
}
function Oo(t) {
  const e = B(this), { has: n, get: r } = $r(e);
  let i = n.call(e, t);
  i || (t = B(t), i = n.call(e, t)), r && r.call(e, t);
  const a = e.delete(t);
  return i && Xt(e, "delete", t, void 0), a;
}
function Po() {
  const t = B(this), e = t.size !== 0, n = t.clear();
  return e && Xt(t, "clear", void 0, void 0), n;
}
function Zn(t, e) {
  return function(r, i) {
    const a = this, o = a.__v_raw, s = B(o), l = e ? ga : t ? xa : wn;
    return !t && mt(s, "iterate", _e), o.forEach((f, c) => r.call(i, l(f), l(c), a));
  };
}
function Qn(t, e, n) {
  return function(...r) {
    const i = this.__v_raw, a = B(i), o = $e(a), s = t === "entries" || t === Symbol.iterator && o, l = t === "keys" && o, f = i[t](...r), c = n ? ga : e ? xa : wn;
    return !e && mt(a, "iterate", l ? Si : _e), {
      // iterator protocol
      next() {
        const { value: d, done: m } = f.next();
        return m ? { value: d, done: m } : {
          value: s ? [c(d[0]), c(d[1])] : c(d),
          done: m
        };
      },
      // iterable protocol
      [Symbol.iterator]() {
        return this;
      }
    };
  };
}
function te(t) {
  return function(...e) {
    return t === "delete" ? !1 : this;
  };
}
function vp() {
  const t = {
    get(a) {
      return qn(this, a);
    },
    get size() {
      return Jn(this);
    },
    has: Xn,
    add: Co,
    set: So,
    delete: Oo,
    clear: Po,
    forEach: Zn(!1, !1)
  }, e = {
    get(a) {
      return qn(this, a, !1, !0);
    },
    get size() {
      return Jn(this);
    },
    has: Xn,
    add: Co,
    set: So,
    delete: Oo,
    clear: Po,
    forEach: Zn(!1, !0)
  }, n = {
    get(a) {
      return qn(this, a, !0);
    },
    get size() {
      return Jn(this, !0);
    },
    has(a) {
      return Xn.call(this, a, !0);
    },
    add: te(
      "add"
      /* TriggerOpTypes.ADD */
    ),
    set: te(
      "set"
      /* TriggerOpTypes.SET */
    ),
    delete: te(
      "delete"
      /* TriggerOpTypes.DELETE */
    ),
    clear: te(
      "clear"
      /* TriggerOpTypes.CLEAR */
    ),
    forEach: Zn(!0, !1)
  }, r = {
    get(a) {
      return qn(this, a, !0, !0);
    },
    get size() {
      return Jn(this, !0);
    },
    has(a) {
      return Xn.call(this, a, !0);
    },
    add: te(
      "add"
      /* TriggerOpTypes.ADD */
    ),
    set: te(
      "set"
      /* TriggerOpTypes.SET */
    ),
    delete: te(
      "delete"
      /* TriggerOpTypes.DELETE */
    ),
    clear: te(
      "clear"
      /* TriggerOpTypes.CLEAR */
    ),
    forEach: Zn(!0, !0)
  };
  return ["keys", "values", "entries", Symbol.iterator].forEach((a) => {
    t[a] = Qn(a, !1, !1), n[a] = Qn(a, !0, !1), e[a] = Qn(a, !1, !0), r[a] = Qn(a, !0, !0);
  }), [
    t,
    n,
    e,
    r
  ];
}
const [yp, bp, xp, wp] = /* @__PURE__ */ vp();
function va(t, e) {
  const n = e ? t ? wp : xp : t ? bp : yp;
  return (r, i, a) => i === "__v_isReactive" ? !t : i === "__v_isReadonly" ? t : i === "__v_raw" ? r : Reflect.get(j(n, i) && i in r ? n : r, i, a);
}
const _p = {
  get: /* @__PURE__ */ va(!1, !1)
}, kp = {
  get: /* @__PURE__ */ va(!1, !0)
}, Ap = {
  get: /* @__PURE__ */ va(!0, !1)
}, pl = /* @__PURE__ */ new WeakMap(), gl = /* @__PURE__ */ new WeakMap(), vl = /* @__PURE__ */ new WeakMap(), Ep = /* @__PURE__ */ new WeakMap();
function Cp(t) {
  switch (t) {
    case "Object":
    case "Array":
      return 1;
    case "Map":
    case "Set":
    case "WeakMap":
    case "WeakSet":
      return 2;
    default:
      return 0;
  }
}
function Sp(t) {
  return t.__v_skip || !Object.isExtensible(t) ? 0 : Cp(Km(t));
}
function ya(t) {
  return Be(t) ? t : ba(t, !1, ml, _p, pl);
}
function Op(t) {
  return ba(t, !1, gp, kp, gl);
}
function yl(t) {
  return ba(t, !0, pp, Ap, vl);
}
function ba(t, e, n, r, i) {
  if (!X(t) || t.__v_raw && !(e && t.__v_isReactive))
    return t;
  const a = i.get(t);
  if (a)
    return a;
  const o = Sp(t);
  if (o === 0)
    return t;
  const s = new Proxy(t, o === 2 ? r : n);
  return i.set(t, s), s;
}
function Le(t) {
  return Be(t) ? Le(t.__v_raw) : !!(t && t.__v_isReactive);
}
function Be(t) {
  return !!(t && t.__v_isReadonly);
}
function _r(t) {
  return !!(t && t.__v_isShallow);
}
function bl(t) {
  return Le(t) || Be(t);
}
function B(t) {
  const e = t && t.__v_raw;
  return e ? B(e) : t;
}
function xl(t) {
  return wr(t, "__v_skip", !0), t;
}
const wn = (t) => X(t) ? ya(t) : t, xa = (t) => X(t) ? yl(t) : t;
function wl(t) {
  re && At && (t = B(t), ul(t.dep || (t.dep = ha())));
}
function _l(t, e) {
  t = B(t);
  const n = t.dep;
  n && Oi(n);
}
function ot(t) {
  return !!(t && t.__v_isRef === !0);
}
function ti(t) {
  return Pp(t, !1);
}
function Pp(t, e) {
  return ot(t) ? t : new Tp(t, e);
}
class Tp {
  constructor(e, n) {
    this.__v_isShallow = n, this.dep = void 0, this.__v_isRef = !0, this._rawValue = n ? e : B(e), this._value = n ? e : wn(e);
  }
  get value() {
    return wl(this), this._value;
  }
  set value(e) {
    const n = this.__v_isShallow || _r(e) || Be(e);
    e = n ? e : B(e), xn(e, this._rawValue) && (this._rawValue = e, this._value = n ? e : wn(e), _l(this));
  }
}
function Pi(t) {
  return ot(t) ? t.value : t;
}
const Np = {
  get: (t, e, n) => Pi(Reflect.get(t, e, n)),
  set: (t, e, n, r) => {
    const i = t[e];
    return ot(i) && !ot(n) ? (i.value = n, !0) : Reflect.set(t, e, n, r);
  }
};
function kl(t) {
  return Le(t) ? t : new Proxy(t, Np);
}
var Al;
class Ip {
  constructor(e, n, r, i) {
    this._setter = n, this.dep = void 0, this.__v_isRef = !0, this[Al] = !1, this._dirty = !0, this.effect = new ma(e, () => {
      this._dirty || (this._dirty = !0, _l(this));
    }), this.effect.computed = this, this.effect.active = this._cacheable = !i, this.__v_isReadonly = r;
  }
  get value() {
    const e = B(this);
    return wl(e), (e._dirty || !e._cacheable) && (e._dirty = !1, e._value = e.effect.run()), e._value;
  }
  set value(e) {
    this._setter(e);
  }
}
Al = "__v_isReadonly";
function Mp(t, e, n = !1) {
  let r, i;
  const a = D(t);
  return a ? (r = t, i = Ot) : (r = t.get, i = t.set), new Ip(r, i, a || !i, n);
}
function ie(t, e, n, r) {
  let i;
  try {
    i = r ? t(...r) : t();
  } catch (a) {
    Lr(a, e, n);
  }
  return i;
}
function Pt(t, e, n, r) {
  if (D(t)) {
    const a = ie(t, e, n, r);
    return a && il(a) && a.catch((o) => {
      Lr(o, e, n);
    }), a;
  }
  const i = [];
  for (let a = 0; a < t.length; a++)
    i.push(Pt(t[a], e, n, r));
  return i;
}
function Lr(t, e, n, r = !0) {
  const i = e ? e.vnode : null;
  if (e) {
    let a = e.parent;
    const o = e.proxy, s = n;
    for (; a; ) {
      const f = a.ec;
      if (f) {
        for (let c = 0; c < f.length; c++)
          if (f[c](t, o, s) === !1)
            return;
      }
      a = a.parent;
    }
    const l = e.appContext.config.errorHandler;
    if (l) {
      ie(l, null, 10, [t, o, s]);
      return;
    }
  }
  Rp(t, n, i, r);
}
function Rp(t, e, n, r = !0) {
  console.error(t);
}
let _n = !1, Ti = !1;
const at = [];
let Ft = 0;
const De = [];
let Bt = null, me = 0;
const El = /* @__PURE__ */ Promise.resolve();
let wa = null;
function Fp(t) {
  const e = wa || El;
  return t ? e.then(this ? t.bind(this) : t) : e;
}
function $p(t) {
  let e = Ft + 1, n = at.length;
  for (; e < n; ) {
    const r = e + n >>> 1;
    kn(at[r]) < t ? e = r + 1 : n = r;
  }
  return e;
}
function _a(t) {
  (!at.length || !at.includes(t, _n && t.allowRecurse ? Ft + 1 : Ft)) && (t.id == null ? at.push(t) : at.splice($p(t.id), 0, t), Cl());
}
function Cl() {
  !_n && !Ti && (Ti = !0, wa = El.then(Ol));
}
function Lp(t) {
  const e = at.indexOf(t);
  e > Ft && at.splice(e, 1);
}
function Dp(t) {
  L(t) ? De.push(...t) : (!Bt || !Bt.includes(t, t.allowRecurse ? me + 1 : me)) && De.push(t), Cl();
}
function To(t, e = _n ? Ft + 1 : 0) {
  for (; e < at.length; e++) {
    const n = at[e];
    n && n.pre && (at.splice(e, 1), e--, n());
  }
}
function Sl(t) {
  if (De.length) {
    const e = [...new Set(De)];
    if (De.length = 0, Bt) {
      Bt.push(...e);
      return;
    }
    for (Bt = e, Bt.sort((n, r) => kn(n) - kn(r)), me = 0; me < Bt.length; me++)
      Bt[me]();
    Bt = null, me = 0;
  }
}
const kn = (t) => t.id == null ? 1 / 0 : t.id, zp = (t, e) => {
  const n = kn(t) - kn(e);
  if (n === 0) {
    if (t.pre && !e.pre)
      return -1;
    if (e.pre && !t.pre)
      return 1;
  }
  return n;
};
function Ol(t) {
  Ti = !1, _n = !0, at.sort(zp);
  const e = Ot;
  try {
    for (Ft = 0; Ft < at.length; Ft++) {
      const n = at[Ft];
      n && n.active !== !1 && ie(
        n,
        null,
        14
        /* ErrorCodes.SCHEDULER */
      );
    }
  } finally {
    Ft = 0, at.length = 0, Sl(), _n = !1, wa = null, (at.length || De.length) && Ol();
  }
}
function Hp(t, e, ...n) {
  if (t.isUnmounted)
    return;
  const r = t.vnode.props || q;
  let i = n;
  const a = e.startsWith("update:"), o = a && e.slice(7);
  if (o && o in r) {
    const c = `${o === "modelValue" ? "model" : o}Modifiers`, { number: d, trim: m } = r[c] || q;
    m && (i = n.map((g) => nt(g) ? g.trim() : g)), d && (i = n.map(Jm));
  }
  let s, l = r[s = Zr(e)] || // also try camelCase event handler (#2249)
  r[s = Zr(Ge(e))];
  !l && a && (l = r[s = Zr(We(e))]), l && Pt(l, t, 6, i);
  const f = r[s + "Once"];
  if (f) {
    if (!t.emitted)
      t.emitted = {};
    else if (t.emitted[s])
      return;
    t.emitted[s] = !0, Pt(f, t, 6, i);
  }
}
function Pl(t, e, n = !1) {
  const r = e.emitsCache, i = r.get(t);
  if (i !== void 0)
    return i;
  const a = t.emits;
  let o = {}, s = !1;
  if (!D(t)) {
    const l = (f) => {
      const c = Pl(f, e, !0);
      c && (s = !0, ft(o, c));
    };
    !n && e.mixins.length && e.mixins.forEach(l), t.extends && l(t.extends), t.mixins && t.mixins.forEach(l);
  }
  return !a && !s ? (X(t) && r.set(t, null), null) : (L(a) ? a.forEach((l) => o[l] = null) : ft(o, a), X(t) && r.set(t, o), o);
}
function Dr(t, e) {
  return !t || !Mr(e) ? !1 : (e = e.slice(2).replace(/Once$/, ""), j(t, e[0].toLowerCase() + e.slice(1)) || j(t, We(e)) || j(t, e));
}
let Lt = null, Tl = null;
function kr(t) {
  const e = Lt;
  return Lt = t, Tl = t && t.type.__scopeId || null, e;
}
function jp(t, e = Lt, n) {
  if (!e || t._n)
    return t;
  const r = (...i) => {
    r._d && Do(-1);
    const a = kr(e);
    let o;
    try {
      o = t(...i);
    } finally {
      kr(a), r._d && Do(1);
    }
    return o;
  };
  return r._n = !0, r._c = !0, r._d = !0, r;
}
function ei(t) {
  const { type: e, vnode: n, proxy: r, withProxy: i, props: a, propsOptions: [o], slots: s, attrs: l, emit: f, render: c, renderCache: d, data: m, setupState: g, ctx: P, inheritAttrs: O } = t;
  let z, _;
  const C = kr(t);
  try {
    if (n.shapeFlag & 4) {
      const $ = i || r;
      z = Rt(c.call($, $, d, a, g, m, P)), _ = l;
    } else {
      const $ = e;
      z = Rt($.length > 1 ? $(a, { attrs: l, slots: s, emit: f }) : $(
        a,
        null
        /* we know it doesn't need it */
      )), _ = e.props ? l : Gp(l);
    }
  } catch ($) {
    fn.length = 0, Lr(
      $,
      t,
      1
      /* ErrorCodes.RENDER_FUNCTION */
    ), z = rt(An);
  }
  let E = z;
  if (_ && O !== !1) {
    const $ = Object.keys(_), { shapeFlag: G } = E;
    $.length && G & 7 && (o && $.some(fa) && (_ = Bp(_, o)), E = Ue(E, _));
  }
  return n.dirs && (E = Ue(E), E.dirs = E.dirs ? E.dirs.concat(n.dirs) : n.dirs), n.transition && (E.transition = n.transition), z = E, kr(C), z;
}
const Gp = (t) => {
  let e;
  for (const n in t)
    (n === "class" || n === "style" || Mr(n)) && ((e || (e = {}))[n] = t[n]);
  return e;
}, Bp = (t, e) => {
  const n = {};
  for (const r in t)
    (!fa(r) || !(r.slice(9) in e)) && (n[r] = t[r]);
  return n;
};
function Up(t, e, n) {
  const { props: r, children: i, component: a } = t, { props: o, children: s, patchFlag: l } = e, f = a.emitsOptions;
  if (e.dirs || e.transition)
    return !0;
  if (n && l >= 0) {
    if (l & 1024)
      return !0;
    if (l & 16)
      return r ? No(r, o, f) : !!o;
    if (l & 8) {
      const c = e.dynamicProps;
      for (let d = 0; d < c.length; d++) {
        const m = c[d];
        if (o[m] !== r[m] && !Dr(f, m))
          return !0;
      }
    }
  } else
    return (i || s) && (!s || !s.$stable) ? !0 : r === o ? !1 : r ? o ? No(r, o, f) : !0 : !!o;
  return !1;
}
function No(t, e, n) {
  const r = Object.keys(e);
  if (r.length !== Object.keys(t).length)
    return !0;
  for (let i = 0; i < r.length; i++) {
    const a = r[i];
    if (e[a] !== t[a] && !Dr(n, a))
      return !0;
  }
  return !1;
}
function Yp({ vnode: t, parent: e }, n) {
  for (; e && e.subTree === t; )
    (t = e.vnode).el = n, e = e.parent;
}
const Vp = (t) => t.__isSuspense;
function Wp(t, e) {
  e && e.pendingBranch ? L(t) ? e.effects.push(...t) : e.effects.push(t) : Dp(t);
}
function Kp(t, e) {
  if (tt) {
    let n = tt.provides;
    const r = tt.parent && tt.parent.provides;
    r === n && (n = tt.provides = Object.create(r)), n[t] = e;
  }
}
function sr(t, e, n = !1) {
  const r = tt || Lt;
  if (r) {
    const i = r.parent == null ? r.vnode.appContext && r.vnode.appContext.provides : r.parent.provides;
    if (i && t in i)
      return i[t];
    if (arguments.length > 1)
      return n && D(e) ? e.call(r.proxy) : e;
  }
}
const tr = {};
function lr(t, e, n) {
  return Nl(t, e, n);
}
function Nl(t, e, { immediate: n, deep: r, flush: i, onTrack: a, onTrigger: o } = q) {
  const s = ep() === (tt == null ? void 0 : tt.scope) ? tt : null;
  let l, f = !1, c = !1;
  if (ot(t) ? (l = () => t.value, f = _r(t)) : Le(t) ? (l = () => t, r = !0) : L(t) ? (c = !0, f = t.some((E) => Le(E) || _r(E)), l = () => t.map((E) => {
    if (ot(E))
      return E.value;
    if (Le(E))
      return Ie(E);
    if (D(E))
      return ie(
        E,
        s,
        2
        /* ErrorCodes.WATCH_GETTER */
      );
  })) : D(t) ? e ? l = () => ie(
    t,
    s,
    2
    /* ErrorCodes.WATCH_GETTER */
  ) : l = () => {
    if (!(s && s.isUnmounted))
      return d && d(), Pt(t, s, 3, [m]);
  } : l = Ot, e && r) {
    const E = l;
    l = () => Ie(E());
  }
  let d, m = (E) => {
    d = _.onStop = () => {
      ie(
        E,
        s,
        4
        /* ErrorCodes.WATCH_CLEANUP */
      );
    };
  }, g;
  if (Cn)
    if (m = Ot, e ? n && Pt(e, s, 3, [
      l(),
      c ? [] : void 0,
      m
    ]) : l(), i === "sync") {
      const E = z0();
      g = E.__watcherHandles || (E.__watcherHandles = []);
    } else
      return Ot;
  let P = c ? new Array(t.length).fill(tr) : tr;
  const O = () => {
    if (_.active)
      if (e) {
        const E = _.run();
        (r || f || (c ? E.some(($, G) => xn($, P[G])) : xn(E, P))) && (d && d(), Pt(e, s, 3, [
          E,
          // pass undefined as the old value when it's changed for the first time
          P === tr ? void 0 : c && P[0] === tr ? [] : P,
          m
        ]), P = E);
      } else
        _.run();
  };
  O.allowRecurse = !!e;
  let z;
  i === "sync" ? z = O : i === "post" ? z = () => dt(O, s && s.suspense) : (O.pre = !0, s && (O.id = s.uid), z = () => _a(O));
  const _ = new ma(l, z);
  e ? n ? O() : P = _.run() : i === "post" ? dt(_.run.bind(_), s && s.suspense) : _.run();
  const C = () => {
    _.stop(), s && s.scope && ca(s.scope.effects, _);
  };
  return g && g.push(C), C;
}
function qp(t, e, n) {
  const r = this.proxy, i = nt(t) ? t.includes(".") ? Il(r, t) : () => r[t] : t.bind(r, r);
  let a;
  D(e) ? a = e : (a = e.handler, n = e);
  const o = tt;
  Ye(this);
  const s = Nl(i, a.bind(r), n);
  return o ? Ye(o) : ke(), s;
}
function Il(t, e) {
  const n = e.split(".");
  return () => {
    let r = t;
    for (let i = 0; i < n.length && r; i++)
      r = r[n[i]];
    return r;
  };
}
function Ie(t, e) {
  if (!X(t) || t.__v_skip || (e = e || /* @__PURE__ */ new Set(), e.has(t)))
    return t;
  if (e.add(t), ot(t))
    Ie(t.value, e);
  else if (L(t))
    for (let n = 0; n < t.length; n++)
      Ie(t[n], e);
  else if (rl(t) || $e(t))
    t.forEach((n) => {
      Ie(n, e);
    });
  else if (ol(t))
    for (const n in t)
      Ie(t[n], e);
  return t;
}
function zr(t) {
  return D(t) ? { setup: t, name: t.name } : t;
}
const fr = (t) => !!t.type.__asyncLoader, Ml = (t) => t.type.__isKeepAlive;
function Xp(t, e) {
  Rl(t, "a", e);
}
function Jp(t, e) {
  Rl(t, "da", e);
}
function Rl(t, e, n = tt) {
  const r = t.__wdc || (t.__wdc = () => {
    let i = n;
    for (; i; ) {
      if (i.isDeactivated)
        return;
      i = i.parent;
    }
    return t();
  });
  if (Hr(e, r, n), n) {
    let i = n.parent;
    for (; i && i.parent; )
      Ml(i.parent.vnode) && Zp(r, e, n, i), i = i.parent;
  }
}
function Zp(t, e, n, r) {
  const i = Hr(
    e,
    t,
    r,
    !0
    /* prepend */
  );
  $l(() => {
    ca(r[e], i);
  }, n);
}
function Hr(t, e, n = tt, r = !1) {
  if (n) {
    const i = n[t] || (n[t] = []), a = e.__weh || (e.__weh = (...o) => {
      if (n.isUnmounted)
        return;
      Ke(), Ye(n);
      const s = Pt(e, n, t, o);
      return ke(), qe(), s;
    });
    return r ? i.unshift(a) : i.push(a), a;
  }
}
const Zt = (t) => (e, n = tt) => (
  // post-create lifecycle registrations are noops during SSR (except for serverPrefetch)
  (!Cn || t === "sp") && Hr(t, (...r) => e(...r), n)
), Qp = Zt(
  "bm"
  /* LifecycleHooks.BEFORE_MOUNT */
), Fl = Zt(
  "m"
  /* LifecycleHooks.MOUNTED */
), t0 = Zt(
  "bu"
  /* LifecycleHooks.BEFORE_UPDATE */
), e0 = Zt(
  "u"
  /* LifecycleHooks.UPDATED */
), n0 = Zt(
  "bum"
  /* LifecycleHooks.BEFORE_UNMOUNT */
), $l = Zt(
  "um"
  /* LifecycleHooks.UNMOUNTED */
), r0 = Zt(
  "sp"
  /* LifecycleHooks.SERVER_PREFETCH */
), i0 = Zt(
  "rtg"
  /* LifecycleHooks.RENDER_TRIGGERED */
), a0 = Zt(
  "rtc"
  /* LifecycleHooks.RENDER_TRACKED */
);
function o0(t, e = tt) {
  Hr("ec", t, e);
}
function ue(t, e, n, r) {
  const i = t.dirs, a = e && e.dirs;
  for (let o = 0; o < i.length; o++) {
    const s = i[o];
    a && (s.oldValue = a[o].value);
    let l = s.dir[r];
    l && (Ke(), Pt(l, n, 8, [
      t.el,
      s,
      t,
      e
    ]), qe());
  }
}
const s0 = Symbol(), Ni = (t) => t ? ql(t) ? Ca(t) || t.proxy : Ni(t.parent) : null, ln = (
  // Move PURE marker to new line to workaround compiler discarding it
  // due to type annotation
  /* @__PURE__ */ ft(/* @__PURE__ */ Object.create(null), {
    $: (t) => t,
    $el: (t) => t.vnode.el,
    $data: (t) => t.data,
    $props: (t) => t.props,
    $attrs: (t) => t.attrs,
    $slots: (t) => t.slots,
    $refs: (t) => t.refs,
    $parent: (t) => Ni(t.parent),
    $root: (t) => Ni(t.root),
    $emit: (t) => t.emit,
    $options: (t) => ka(t),
    $forceUpdate: (t) => t.f || (t.f = () => _a(t.update)),
    $nextTick: (t) => t.n || (t.n = Fp.bind(t.proxy)),
    $watch: (t) => qp.bind(t)
  })
), ni = (t, e) => t !== q && !t.__isScriptSetup && j(t, e), l0 = {
  get({ _: t }, e) {
    const { ctx: n, setupState: r, data: i, props: a, accessCache: o, type: s, appContext: l } = t;
    let f;
    if (e[0] !== "$") {
      const g = o[e];
      if (g !== void 0)
        switch (g) {
          case 1:
            return r[e];
          case 2:
            return i[e];
          case 4:
            return n[e];
          case 3:
            return a[e];
        }
      else {
        if (ni(r, e))
          return o[e] = 1, r[e];
        if (i !== q && j(i, e))
          return o[e] = 2, i[e];
        if (
          // only cache other properties when instance has declared (thus stable)
          // props
          (f = t.propsOptions[0]) && j(f, e)
        )
          return o[e] = 3, a[e];
        if (n !== q && j(n, e))
          return o[e] = 4, n[e];
        Ii && (o[e] = 0);
      }
    }
    const c = ln[e];
    let d, m;
    if (c)
      return e === "$attrs" && mt(t, "get", e), c(t);
    if (
      // css module (injected by vue-loader)
      (d = s.__cssModules) && (d = d[e])
    )
      return d;
    if (n !== q && j(n, e))
      return o[e] = 4, n[e];
    if (
      // global properties
      m = l.config.globalProperties, j(m, e)
    )
      return m[e];
  },
  set({ _: t }, e, n) {
    const { data: r, setupState: i, ctx: a } = t;
    return ni(i, e) ? (i[e] = n, !0) : r !== q && j(r, e) ? (r[e] = n, !0) : j(t.props, e) || e[0] === "$" && e.slice(1) in t ? !1 : (a[e] = n, !0);
  },
  has({ _: { data: t, setupState: e, accessCache: n, ctx: r, appContext: i, propsOptions: a } }, o) {
    let s;
    return !!n[o] || t !== q && j(t, o) || ni(e, o) || (s = a[0]) && j(s, o) || j(r, o) || j(ln, o) || j(i.config.globalProperties, o);
  },
  defineProperty(t, e, n) {
    return n.get != null ? t._.accessCache[e] = 0 : j(n, "value") && this.set(t, e, n.value, null), Reflect.defineProperty(t, e, n);
  }
};
let Ii = !0;
function f0(t) {
  const e = ka(t), n = t.proxy, r = t.ctx;
  Ii = !1, e.beforeCreate && Io(
    e.beforeCreate,
    t,
    "bc"
    /* LifecycleHooks.BEFORE_CREATE */
  );
  const {
    // state
    data: i,
    computed: a,
    methods: o,
    watch: s,
    provide: l,
    inject: f,
    // lifecycle
    created: c,
    beforeMount: d,
    mounted: m,
    beforeUpdate: g,
    updated: P,
    activated: O,
    deactivated: z,
    beforeDestroy: _,
    beforeUnmount: C,
    destroyed: E,
    unmounted: $,
    render: G,
    renderTracked: ct,
    renderTriggered: it,
    errorCaptured: xt,
    serverPrefetch: yt,
    // public API
    expose: Ht,
    inheritAttrs: Xe,
    // assets
    components: In,
    directives: Mn,
    filters: Br
  } = e;
  if (f && c0(f, r, null, t.appContext.config.unwrapInjectedRef), o)
    for (const J in o) {
      const Y = o[J];
      D(Y) && (r[J] = Y.bind(n));
    }
  if (i) {
    const J = i.call(n, n);
    X(J) && (t.data = ya(J));
  }
  if (Ii = !0, a)
    for (const J in a) {
      const Y = a[J], fe = D(Y) ? Y.bind(n, n) : D(Y.get) ? Y.get.bind(n, n) : Ot, Rn = !D(Y) && D(Y.set) ? Y.set.bind(n) : Ot, ce = bt({
        get: fe,
        set: Rn
      });
      Object.defineProperty(r, J, {
        enumerable: !0,
        configurable: !0,
        get: () => ce.value,
        set: (Nt) => ce.value = Nt
      });
    }
  if (s)
    for (const J in s)
      Ll(s[J], r, n, J);
  if (l) {
    const J = D(l) ? l.call(n) : l;
    Reflect.ownKeys(J).forEach((Y) => {
      Kp(Y, J[Y]);
    });
  }
  c && Io(
    c,
    t,
    "c"
    /* LifecycleHooks.CREATED */
  );
  function st(J, Y) {
    L(Y) ? Y.forEach((fe) => J(fe.bind(n))) : Y && J(Y.bind(n));
  }
  if (st(Qp, d), st(Fl, m), st(t0, g), st(e0, P), st(Xp, O), st(Jp, z), st(o0, xt), st(a0, ct), st(i0, it), st(n0, C), st($l, $), st(r0, yt), L(Ht))
    if (Ht.length) {
      const J = t.exposed || (t.exposed = {});
      Ht.forEach((Y) => {
        Object.defineProperty(J, Y, {
          get: () => n[Y],
          set: (fe) => n[Y] = fe
        });
      });
    } else
      t.exposed || (t.exposed = {});
  G && t.render === Ot && (t.render = G), Xe != null && (t.inheritAttrs = Xe), In && (t.components = In), Mn && (t.directives = Mn);
}
function c0(t, e, n = Ot, r = !1) {
  L(t) && (t = Mi(t));
  for (const i in t) {
    const a = t[i];
    let o;
    X(a) ? "default" in a ? o = sr(
      a.from || i,
      a.default,
      !0
      /* treat default function as factory */
    ) : o = sr(a.from || i) : o = sr(a), ot(o) && r ? Object.defineProperty(e, i, {
      enumerable: !0,
      configurable: !0,
      get: () => o.value,
      set: (s) => o.value = s
    }) : e[i] = o;
  }
}
function Io(t, e, n) {
  Pt(L(t) ? t.map((r) => r.bind(e.proxy)) : t.bind(e.proxy), e, n);
}
function Ll(t, e, n, r) {
  const i = r.includes(".") ? Il(n, r) : () => n[r];
  if (nt(t)) {
    const a = e[t];
    D(a) && lr(i, a);
  } else if (D(t))
    lr(i, t.bind(n));
  else if (X(t))
    if (L(t))
      t.forEach((a) => Ll(a, e, n, r));
    else {
      const a = D(t.handler) ? t.handler.bind(n) : e[t.handler];
      D(a) && lr(i, a, t);
    }
}
function ka(t) {
  const e = t.type, { mixins: n, extends: r } = e, { mixins: i, optionsCache: a, config: { optionMergeStrategies: o } } = t.appContext, s = a.get(e);
  let l;
  return s ? l = s : !i.length && !n && !r ? l = e : (l = {}, i.length && i.forEach((f) => Ar(l, f, o, !0)), Ar(l, e, o)), X(e) && a.set(e, l), l;
}
function Ar(t, e, n, r = !1) {
  const { mixins: i, extends: a } = e;
  a && Ar(t, a, n, !0), i && i.forEach((o) => Ar(t, o, n, !0));
  for (const o in e)
    if (!(r && o === "expose")) {
      const s = u0[o] || n && n[o];
      t[o] = s ? s(t[o], e[o]) : e[o];
    }
  return t;
}
const u0 = {
  data: Mo,
  props: he,
  emits: he,
  // objects
  methods: he,
  computed: he,
  // lifecycle
  beforeCreate: lt,
  created: lt,
  beforeMount: lt,
  mounted: lt,
  beforeUpdate: lt,
  updated: lt,
  beforeDestroy: lt,
  beforeUnmount: lt,
  destroyed: lt,
  unmounted: lt,
  activated: lt,
  deactivated: lt,
  errorCaptured: lt,
  serverPrefetch: lt,
  // assets
  components: he,
  directives: he,
  // watch
  watch: h0,
  // provide / inject
  provide: Mo,
  inject: d0
};
function Mo(t, e) {
  return e ? t ? function() {
    return ft(D(t) ? t.call(this, this) : t, D(e) ? e.call(this, this) : e);
  } : e : t;
}
function d0(t, e) {
  return he(Mi(t), Mi(e));
}
function Mi(t) {
  if (L(t)) {
    const e = {};
    for (let n = 0; n < t.length; n++)
      e[t[n]] = t[n];
    return e;
  }
  return t;
}
function lt(t, e) {
  return t ? [...new Set([].concat(t, e))] : e;
}
function he(t, e) {
  return t ? ft(ft(/* @__PURE__ */ Object.create(null), t), e) : e;
}
function h0(t, e) {
  if (!t)
    return e;
  if (!e)
    return t;
  const n = ft(/* @__PURE__ */ Object.create(null), t);
  for (const r in e)
    n[r] = lt(t[r], e[r]);
  return n;
}
function m0(t, e, n, r = !1) {
  const i = {}, a = {};
  wr(a, Gr, 1), t.propsDefaults = /* @__PURE__ */ Object.create(null), Dl(t, e, i, a);
  for (const o in t.propsOptions[0])
    o in i || (i[o] = void 0);
  n ? t.props = r ? i : Op(i) : t.type.props ? t.props = i : t.props = a, t.attrs = a;
}
function p0(t, e, n, r) {
  const { props: i, attrs: a, vnode: { patchFlag: o } } = t, s = B(i), [l] = t.propsOptions;
  let f = !1;
  if (
    // always force full diff in dev
    // - #1942 if hmr is enabled with sfc component
    // - vite#872 non-sfc component used by sfc component
    (r || o > 0) && !(o & 16)
  ) {
    if (o & 8) {
      const c = t.vnode.dynamicProps;
      for (let d = 0; d < c.length; d++) {
        let m = c[d];
        if (Dr(t.emitsOptions, m))
          continue;
        const g = e[m];
        if (l)
          if (j(a, m))
            g !== a[m] && (a[m] = g, f = !0);
          else {
            const P = Ge(m);
            i[P] = Ri(
              l,
              s,
              P,
              g,
              t,
              !1
              /* isAbsent */
            );
          }
        else
          g !== a[m] && (a[m] = g, f = !0);
      }
    }
  } else {
    Dl(t, e, i, a) && (f = !0);
    let c;
    for (const d in s)
      (!e || // for camelCase
      !j(e, d) && // it's possible the original props was passed in as kebab-case
      // and converted to camelCase (#955)
      ((c = We(d)) === d || !j(e, c))) && (l ? n && // for camelCase
      (n[d] !== void 0 || // for kebab-case
      n[c] !== void 0) && (i[d] = Ri(
        l,
        s,
        d,
        void 0,
        t,
        !0
        /* isAbsent */
      )) : delete i[d]);
    if (a !== s)
      for (const d in a)
        (!e || !j(e, d)) && (delete a[d], f = !0);
  }
  f && Xt(t, "set", "$attrs");
}
function Dl(t, e, n, r) {
  const [i, a] = t.propsOptions;
  let o = !1, s;
  if (e)
    for (let l in e) {
      if (or(l))
        continue;
      const f = e[l];
      let c;
      i && j(i, c = Ge(l)) ? !a || !a.includes(c) ? n[c] = f : (s || (s = {}))[c] = f : Dr(t.emitsOptions, l) || (!(l in r) || f !== r[l]) && (r[l] = f, o = !0);
    }
  if (a) {
    const l = B(n), f = s || q;
    for (let c = 0; c < a.length; c++) {
      const d = a[c];
      n[d] = Ri(i, l, d, f[d], t, !j(f, d));
    }
  }
  return o;
}
function Ri(t, e, n, r, i, a) {
  const o = t[n];
  if (o != null) {
    const s = j(o, "default");
    if (s && r === void 0) {
      const l = o.default;
      if (o.type !== Function && D(l)) {
        const { propsDefaults: f } = i;
        n in f ? r = f[n] : (Ye(i), r = f[n] = l.call(null, e), ke());
      } else
        r = l;
    }
    o[
      0
      /* BooleanFlags.shouldCast */
    ] && (a && !s ? r = !1 : o[
      1
      /* BooleanFlags.shouldCastTrue */
    ] && (r === "" || r === We(n)) && (r = !0));
  }
  return r;
}
function zl(t, e, n = !1) {
  const r = e.propsCache, i = r.get(t);
  if (i)
    return i;
  const a = t.props, o = {}, s = [];
  let l = !1;
  if (!D(t)) {
    const c = (d) => {
      l = !0;
      const [m, g] = zl(d, e, !0);
      ft(o, m), g && s.push(...g);
    };
    !n && e.mixins.length && e.mixins.forEach(c), t.extends && c(t.extends), t.mixins && t.mixins.forEach(c);
  }
  if (!a && !l)
    return X(t) && r.set(t, Fe), Fe;
  if (L(a))
    for (let c = 0; c < a.length; c++) {
      const d = Ge(a[c]);
      Ro(d) && (o[d] = q);
    }
  else if (a)
    for (const c in a) {
      const d = Ge(c);
      if (Ro(d)) {
        const m = a[c], g = o[d] = L(m) || D(m) ? { type: m } : Object.assign({}, m);
        if (g) {
          const P = Lo(Boolean, g.type), O = Lo(String, g.type);
          g[
            0
            /* BooleanFlags.shouldCast */
          ] = P > -1, g[
            1
            /* BooleanFlags.shouldCastTrue */
          ] = O < 0 || P < O, (P > -1 || j(g, "default")) && s.push(d);
        }
      }
    }
  const f = [o, s];
  return X(t) && r.set(t, f), f;
}
function Ro(t) {
  return t[0] !== "$";
}
function Fo(t) {
  const e = t && t.toString().match(/^\s*(function|class) (\w+)/);
  return e ? e[2] : t === null ? "null" : "";
}
function $o(t, e) {
  return Fo(t) === Fo(e);
}
function Lo(t, e) {
  return L(e) ? e.findIndex((n) => $o(n, t)) : D(e) && $o(e, t) ? 0 : -1;
}
const Hl = (t) => t[0] === "_" || t === "$stable", Aa = (t) => L(t) ? t.map(Rt) : [Rt(t)], g0 = (t, e, n) => {
  if (e._n)
    return e;
  const r = jp((...i) => Aa(e(...i)), n);
  return r._c = !1, r;
}, jl = (t, e, n) => {
  const r = t._ctx;
  for (const i in t) {
    if (Hl(i))
      continue;
    const a = t[i];
    if (D(a))
      e[i] = g0(i, a, r);
    else if (a != null) {
      const o = Aa(a);
      e[i] = () => o;
    }
  }
}, Gl = (t, e) => {
  const n = Aa(e);
  t.slots.default = () => n;
}, v0 = (t, e) => {
  if (t.vnode.shapeFlag & 32) {
    const n = e._;
    n ? (t.slots = B(e), wr(e, "_", n)) : jl(e, t.slots = {});
  } else
    t.slots = {}, e && Gl(t, e);
  wr(t.slots, Gr, 1);
}, y0 = (t, e, n) => {
  const { vnode: r, slots: i } = t;
  let a = !0, o = q;
  if (r.shapeFlag & 32) {
    const s = e._;
    s ? n && s === 1 ? a = !1 : (ft(i, e), !n && s === 1 && delete i._) : (a = !e.$stable, jl(e, i)), o = e;
  } else
    e && (Gl(t, e), o = { default: 1 });
  if (a)
    for (const s in i)
      !Hl(s) && !(s in o) && delete i[s];
};
function Bl() {
  return {
    app: null,
    config: {
      isNativeTag: Ym,
      performance: !1,
      globalProperties: {},
      optionMergeStrategies: {},
      errorHandler: void 0,
      warnHandler: void 0,
      compilerOptions: {}
    },
    mixins: [],
    components: {},
    directives: {},
    provides: /* @__PURE__ */ Object.create(null),
    optionsCache: /* @__PURE__ */ new WeakMap(),
    propsCache: /* @__PURE__ */ new WeakMap(),
    emitsCache: /* @__PURE__ */ new WeakMap()
  };
}
let b0 = 0;
function x0(t, e) {
  return function(r, i = null) {
    D(r) || (r = Object.assign({}, r)), i != null && !X(i) && (i = null);
    const a = Bl(), o = /* @__PURE__ */ new Set();
    let s = !1;
    const l = a.app = {
      _uid: b0++,
      _component: r,
      _props: i,
      _container: null,
      _context: a,
      _instance: null,
      version: H0,
      get config() {
        return a.config;
      },
      set config(f) {
      },
      use(f, ...c) {
        return o.has(f) || (f && D(f.install) ? (o.add(f), f.install(l, ...c)) : D(f) && (o.add(f), f(l, ...c))), l;
      },
      mixin(f) {
        return a.mixins.includes(f) || a.mixins.push(f), l;
      },
      component(f, c) {
        return c ? (a.components[f] = c, l) : a.components[f];
      },
      directive(f, c) {
        return c ? (a.directives[f] = c, l) : a.directives[f];
      },
      mount(f, c, d) {
        if (!s) {
          const m = rt(r, i);
          return m.appContext = a, c && e ? e(m, f) : t(m, f, d), s = !0, l._container = f, f.__vue_app__ = l, Ca(m.component) || m.component.proxy;
        }
      },
      unmount() {
        s && (t(null, l._container), delete l._container.__vue_app__);
      },
      provide(f, c) {
        return a.provides[f] = c, l;
      }
    };
    return l;
  };
}
function Fi(t, e, n, r, i = !1) {
  if (L(t)) {
    t.forEach((m, g) => Fi(m, e && (L(e) ? e[g] : e), n, r, i));
    return;
  }
  if (fr(r) && !i)
    return;
  const a = r.shapeFlag & 4 ? Ca(r.component) || r.component.proxy : r.el, o = i ? null : a, { i: s, r: l } = t, f = e && e.r, c = s.refs === q ? s.refs = {} : s.refs, d = s.setupState;
  if (f != null && f !== l && (nt(f) ? (c[f] = null, j(d, f) && (d[f] = null)) : ot(f) && (f.value = null)), D(l))
    ie(l, s, 12, [o, c]);
  else {
    const m = nt(l), g = ot(l);
    if (m || g) {
      const P = () => {
        if (t.f) {
          const O = m ? j(d, l) ? d[l] : c[l] : l.value;
          i ? L(O) && ca(O, a) : L(O) ? O.includes(a) || O.push(a) : m ? (c[l] = [a], j(d, l) && (d[l] = c[l])) : (l.value = [a], t.k && (c[t.k] = l.value));
        } else
          m ? (c[l] = o, j(d, l) && (d[l] = o)) : g && (l.value = o, t.k && (c[t.k] = o));
      };
      o ? (P.id = -1, dt(P, n)) : P();
    }
  }
}
const dt = Wp;
function w0(t) {
  return _0(t);
}
function _0(t, e) {
  const n = Zm();
  n.__VUE__ = !0;
  const { insert: r, remove: i, patchProp: a, createElement: o, createText: s, createComment: l, setText: f, setElementText: c, parentNode: d, nextSibling: m, setScopeId: g = Ot, insertStaticContent: P } = t, O = (u, h, p, y = null, v = null, w = null, A = !1, x = null, k = !!h.dynamicChildren) => {
    if (u === h)
      return;
    u && !Qe(u, h) && (y = Fn(u), Nt(u, v, w, !0), u = null), h.patchFlag === -2 && (k = !1, h.dynamicChildren = null);
    const { type: b, ref: I, shapeFlag: T } = h;
    switch (b) {
      case jr:
        z(u, h, p, y);
        break;
      case An:
        _(u, h, p, y);
        break;
      case ri:
        u == null && C(h, p, y, A);
        break;
      case Ut:
        In(u, h, p, y, v, w, A, x, k);
        break;
      default:
        T & 1 ? G(u, h, p, y, v, w, A, x, k) : T & 6 ? Mn(u, h, p, y, v, w, A, x, k) : (T & 64 || T & 128) && b.process(u, h, p, y, v, w, A, x, k, Se);
    }
    I != null && v && Fi(I, u && u.ref, w, h || u, !h);
  }, z = (u, h, p, y) => {
    if (u == null)
      r(h.el = s(h.children), p, y);
    else {
      const v = h.el = u.el;
      h.children !== u.children && f(v, h.children);
    }
  }, _ = (u, h, p, y) => {
    u == null ? r(h.el = l(h.children || ""), p, y) : h.el = u.el;
  }, C = (u, h, p, y) => {
    [u.el, u.anchor] = P(u.children, h, p, y, u.el, u.anchor);
  }, E = ({ el: u, anchor: h }, p, y) => {
    let v;
    for (; u && u !== h; )
      v = m(u), r(u, p, y), u = v;
    r(h, p, y);
  }, $ = ({ el: u, anchor: h }) => {
    let p;
    for (; u && u !== h; )
      p = m(u), i(u), u = p;
    i(h);
  }, G = (u, h, p, y, v, w, A, x, k) => {
    A = A || h.type === "svg", u == null ? ct(h, p, y, v, w, A, x, k) : yt(u, h, v, w, A, x, k);
  }, ct = (u, h, p, y, v, w, A, x) => {
    let k, b;
    const { type: I, props: T, shapeFlag: M, transition: R, dirs: H } = u;
    if (k = u.el = o(u.type, w, T && T.is, T), M & 8 ? c(k, u.children) : M & 16 && xt(u.children, k, null, y, v, w && I !== "foreignObject", A, x), H && ue(u, null, y, "created"), it(k, u, u.scopeId, A, y), T) {
      for (const U in T)
        U !== "value" && !or(U) && a(k, U, null, T[U], w, u.children, y, v, jt);
      "value" in T && a(k, "value", null, T.value), (b = T.onVnodeBeforeMount) && Mt(b, y, u);
    }
    H && ue(u, null, y, "beforeMount");
    const V = (!v || v && !v.pendingBranch) && R && !R.persisted;
    V && R.beforeEnter(k), r(k, h, p), ((b = T && T.onVnodeMounted) || V || H) && dt(() => {
      b && Mt(b, y, u), V && R.enter(k), H && ue(u, null, y, "mounted");
    }, v);
  }, it = (u, h, p, y, v) => {
    if (p && g(u, p), y)
      for (let w = 0; w < y.length; w++)
        g(u, y[w]);
    if (v) {
      let w = v.subTree;
      if (h === w) {
        const A = v.vnode;
        it(u, A, A.scopeId, A.slotScopeIds, v.parent);
      }
    }
  }, xt = (u, h, p, y, v, w, A, x, k = 0) => {
    for (let b = k; b < u.length; b++) {
      const I = u[b] = x ? ne(u[b]) : Rt(u[b]);
      O(null, I, h, p, y, v, w, A, x);
    }
  }, yt = (u, h, p, y, v, w, A) => {
    const x = h.el = u.el;
    let { patchFlag: k, dynamicChildren: b, dirs: I } = h;
    k |= u.patchFlag & 16;
    const T = u.props || q, M = h.props || q;
    let R;
    p && de(p, !1), (R = M.onVnodeBeforeUpdate) && Mt(R, p, h, u), I && ue(h, u, p, "beforeUpdate"), p && de(p, !0);
    const H = v && h.type !== "foreignObject";
    if (b ? Ht(u.dynamicChildren, b, x, p, y, H, w) : A || Y(u, h, x, null, p, y, H, w, !1), k > 0) {
      if (k & 16)
        Xe(x, h, T, M, p, y, v);
      else if (k & 2 && T.class !== M.class && a(x, "class", null, M.class, v), k & 4 && a(x, "style", T.style, M.style, v), k & 8) {
        const V = h.dynamicProps;
        for (let U = 0; U < V.length; U++) {
          const Q = V[U], wt = T[Q], Oe = M[Q];
          (Oe !== wt || Q === "value") && a(x, Q, wt, Oe, v, u.children, p, y, jt);
        }
      }
      k & 1 && u.children !== h.children && c(x, h.children);
    } else
      !A && b == null && Xe(x, h, T, M, p, y, v);
    ((R = M.onVnodeUpdated) || I) && dt(() => {
      R && Mt(R, p, h, u), I && ue(h, u, p, "updated");
    }, y);
  }, Ht = (u, h, p, y, v, w, A) => {
    for (let x = 0; x < h.length; x++) {
      const k = u[x], b = h[x], I = (
        // oldVNode may be an errored async setup() component inside Suspense
        // which will not have a mounted element
        k.el && // - In the case of a Fragment, we need to provide the actual parent
        // of the Fragment itself so it can move its children.
        (k.type === Ut || // - In the case of different nodes, there is going to be a replacement
        // which also requires the correct parent container
        !Qe(k, b) || // - In the case of a component, it could contain anything.
        k.shapeFlag & 70) ? d(k.el) : (
          // In other cases, the parent container is not actually used so we
          // just pass the block element here to avoid a DOM parentNode call.
          p
        )
      );
      O(k, b, I, null, y, v, w, A, !0);
    }
  }, Xe = (u, h, p, y, v, w, A) => {
    if (p !== y) {
      if (p !== q)
        for (const x in p)
          !or(x) && !(x in y) && a(u, x, p[x], null, A, h.children, v, w, jt);
      for (const x in y) {
        if (or(x))
          continue;
        const k = y[x], b = p[x];
        k !== b && x !== "value" && a(u, x, b, k, A, h.children, v, w, jt);
      }
      "value" in y && a(u, "value", p.value, y.value);
    }
  }, In = (u, h, p, y, v, w, A, x, k) => {
    const b = h.el = u ? u.el : s(""), I = h.anchor = u ? u.anchor : s("");
    let { patchFlag: T, dynamicChildren: M, slotScopeIds: R } = h;
    R && (x = x ? x.concat(R) : R), u == null ? (r(b, p, y), r(I, p, y), xt(h.children, p, I, v, w, A, x, k)) : T > 0 && T & 64 && M && // #2715 the previous fragment could've been a BAILed one as a result
    // of renderSlot() with no valid children
    u.dynamicChildren ? (Ht(u.dynamicChildren, M, p, v, w, A, x), // #2080 if the stable fragment has a key, it's a <template v-for> that may
    //  get moved around. Make sure all root level vnodes inherit el.
    // #2134 or if it's a component root, it may also get moved around
    // as the component is being moved.
    (h.key != null || v && h === v.subTree) && Ul(
      u,
      h,
      !0
      /* shallow */
    )) : Y(u, h, p, I, v, w, A, x, k);
  }, Mn = (u, h, p, y, v, w, A, x, k) => {
    h.slotScopeIds = x, u == null ? h.shapeFlag & 512 ? v.ctx.activate(h, p, y, A, k) : Br(h, p, y, v, w, A, k) : Oa(u, h, k);
  }, Br = (u, h, p, y, v, w, A) => {
    const x = u.component = I0(u, y, v);
    if (Ml(u) && (x.ctx.renderer = Se), M0(x), x.asyncDep) {
      if (v && v.registerDep(x, st), !u.el) {
        const k = x.subTree = rt(An);
        _(null, k, h, p);
      }
      return;
    }
    st(x, u, h, p, v, w, A);
  }, Oa = (u, h, p) => {
    const y = h.component = u.component;
    if (Up(u, h, p))
      if (y.asyncDep && !y.asyncResolved) {
        J(y, h, p);
        return;
      } else
        y.next = h, Lp(y.update), y.update();
    else
      h.el = u.el, y.vnode = h;
  }, st = (u, h, p, y, v, w, A) => {
    const x = () => {
      if (u.isMounted) {
        let { next: I, bu: T, u: M, parent: R, vnode: H } = u, V = I, U;
        de(u, !1), I ? (I.el = H.el, J(u, I, A)) : I = H, T && Qr(T), (U = I.props && I.props.onVnodeBeforeUpdate) && Mt(U, R, I, H), de(u, !0);
        const Q = ei(u), wt = u.subTree;
        u.subTree = Q, O(
          wt,
          Q,
          // parent may have changed if it's in a teleport
          d(wt.el),
          // anchor may have changed if it's in a fragment
          Fn(wt),
          u,
          v,
          w
        ), I.el = Q.el, V === null && Yp(u, Q.el), M && dt(M, v), (U = I.props && I.props.onVnodeUpdated) && dt(() => Mt(U, R, I, H), v);
      } else {
        let I;
        const { el: T, props: M } = h, { bm: R, m: H, parent: V } = u, U = fr(h);
        if (de(u, !1), R && Qr(R), !U && (I = M && M.onVnodeBeforeMount) && Mt(I, V, h), de(u, !0), T && Yr) {
          const Q = () => {
            u.subTree = ei(u), Yr(T, u.subTree, u, v, null);
          };
          U ? h.type.__asyncLoader().then(
            // note: we are moving the render call into an async callback,
            // which means it won't track dependencies - but it's ok because
            // a server-rendered async wrapper is already in resolved state
            // and it will never need to change.
            () => !u.isUnmounted && Q()
          ) : Q();
        } else {
          const Q = u.subTree = ei(u);
          O(null, Q, p, y, u, v, w), h.el = Q.el;
        }
        if (H && dt(H, v), !U && (I = M && M.onVnodeMounted)) {
          const Q = h;
          dt(() => Mt(I, V, Q), v);
        }
        (h.shapeFlag & 256 || V && fr(V.vnode) && V.vnode.shapeFlag & 256) && u.a && dt(u.a, v), u.isMounted = !0, h = p = y = null;
      }
    }, k = u.effect = new ma(
      x,
      () => _a(b),
      u.scope
      // track it in component's effect scope
    ), b = u.update = () => k.run();
    b.id = u.uid, de(u, !0), b();
  }, J = (u, h, p) => {
    h.component = u;
    const y = u.vnode.props;
    u.vnode = h, u.next = null, p0(u, h.props, y, p), y0(u, h.children, p), Ke(), To(), qe();
  }, Y = (u, h, p, y, v, w, A, x, k = !1) => {
    const b = u && u.children, I = u ? u.shapeFlag : 0, T = h.children, { patchFlag: M, shapeFlag: R } = h;
    if (M > 0) {
      if (M & 128) {
        Rn(b, T, p, y, v, w, A, x, k);
        return;
      } else if (M & 256) {
        fe(b, T, p, y, v, w, A, x, k);
        return;
      }
    }
    R & 8 ? (I & 16 && jt(b, v, w), T !== b && c(p, T)) : I & 16 ? R & 16 ? Rn(b, T, p, y, v, w, A, x, k) : jt(b, v, w, !0) : (I & 8 && c(p, ""), R & 16 && xt(T, p, y, v, w, A, x, k));
  }, fe = (u, h, p, y, v, w, A, x, k) => {
    u = u || Fe, h = h || Fe;
    const b = u.length, I = h.length, T = Math.min(b, I);
    let M;
    for (M = 0; M < T; M++) {
      const R = h[M] = k ? ne(h[M]) : Rt(h[M]);
      O(u[M], R, p, null, v, w, A, x, k);
    }
    b > I ? jt(u, v, w, !0, !1, T) : xt(h, p, y, v, w, A, x, k, T);
  }, Rn = (u, h, p, y, v, w, A, x, k) => {
    let b = 0;
    const I = h.length;
    let T = u.length - 1, M = I - 1;
    for (; b <= T && b <= M; ) {
      const R = u[b], H = h[b] = k ? ne(h[b]) : Rt(h[b]);
      if (Qe(R, H))
        O(R, H, p, null, v, w, A, x, k);
      else
        break;
      b++;
    }
    for (; b <= T && b <= M; ) {
      const R = u[T], H = h[M] = k ? ne(h[M]) : Rt(h[M]);
      if (Qe(R, H))
        O(R, H, p, null, v, w, A, x, k);
      else
        break;
      T--, M--;
    }
    if (b > T) {
      if (b <= M) {
        const R = M + 1, H = R < I ? h[R].el : y;
        for (; b <= M; )
          O(null, h[b] = k ? ne(h[b]) : Rt(h[b]), p, H, v, w, A, x, k), b++;
      }
    } else if (b > M)
      for (; b <= T; )
        Nt(u[b], v, w, !0), b++;
    else {
      const R = b, H = b, V = /* @__PURE__ */ new Map();
      for (b = H; b <= M; b++) {
        const pt = h[b] = k ? ne(h[b]) : Rt(h[b]);
        pt.key != null && V.set(pt.key, b);
      }
      let U, Q = 0;
      const wt = M - H + 1;
      let Oe = !1, Na = 0;
      const Je = new Array(wt);
      for (b = 0; b < wt; b++)
        Je[b] = 0;
      for (b = R; b <= T; b++) {
        const pt = u[b];
        if (Q >= wt) {
          Nt(pt, v, w, !0);
          continue;
        }
        let It;
        if (pt.key != null)
          It = V.get(pt.key);
        else
          for (U = H; U <= M; U++)
            if (Je[U - H] === 0 && Qe(pt, h[U])) {
              It = U;
              break;
            }
        It === void 0 ? Nt(pt, v, w, !0) : (Je[It - H] = b + 1, It >= Na ? Na = It : Oe = !0, O(pt, h[It], p, null, v, w, A, x, k), Q++);
      }
      const Ia = Oe ? k0(Je) : Fe;
      for (U = Ia.length - 1, b = wt - 1; b >= 0; b--) {
        const pt = H + b, It = h[pt], Ma = pt + 1 < I ? h[pt + 1].el : y;
        Je[b] === 0 ? O(null, It, p, Ma, v, w, A, x, k) : Oe && (U < 0 || b !== Ia[U] ? ce(
          It,
          p,
          Ma,
          2
          /* MoveType.REORDER */
        ) : U--);
      }
    }
  }, ce = (u, h, p, y, v = null) => {
    const { el: w, type: A, transition: x, children: k, shapeFlag: b } = u;
    if (b & 6) {
      ce(u.component.subTree, h, p, y);
      return;
    }
    if (b & 128) {
      u.suspense.move(h, p, y);
      return;
    }
    if (b & 64) {
      A.move(u, h, p, Se);
      return;
    }
    if (A === Ut) {
      r(w, h, p);
      for (let T = 0; T < k.length; T++)
        ce(k[T], h, p, y);
      r(u.anchor, h, p);
      return;
    }
    if (A === ri) {
      E(u, h, p);
      return;
    }
    if (y !== 2 && b & 1 && x)
      if (y === 0)
        x.beforeEnter(w), r(w, h, p), dt(() => x.enter(w), v);
      else {
        const { leave: T, delayLeave: M, afterLeave: R } = x, H = () => r(w, h, p), V = () => {
          T(w, () => {
            H(), R && R();
          });
        };
        M ? M(w, H, V) : V();
      }
    else
      r(w, h, p);
  }, Nt = (u, h, p, y = !1, v = !1) => {
    const { type: w, props: A, ref: x, children: k, dynamicChildren: b, shapeFlag: I, patchFlag: T, dirs: M } = u;
    if (x != null && Fi(x, null, p, u, !0), I & 256) {
      h.ctx.deactivate(u);
      return;
    }
    const R = I & 1 && M, H = !fr(u);
    let V;
    if (H && (V = A && A.onVnodeBeforeUnmount) && Mt(V, h, u), I & 6)
      ef(u.component, p, y);
    else {
      if (I & 128) {
        u.suspense.unmount(p, y);
        return;
      }
      R && ue(u, null, h, "beforeUnmount"), I & 64 ? u.type.remove(u, h, p, v, Se, y) : b && // #1153: fast path should not be taken for non-stable (v-for) fragments
      (w !== Ut || T > 0 && T & 64) ? jt(b, h, p, !1, !0) : (w === Ut && T & 384 || !v && I & 16) && jt(k, h, p), y && Pa(u);
    }
    (H && (V = A && A.onVnodeUnmounted) || R) && dt(() => {
      V && Mt(V, h, u), R && ue(u, null, h, "unmounted");
    }, p);
  }, Pa = (u) => {
    const { type: h, el: p, anchor: y, transition: v } = u;
    if (h === Ut) {
      tf(p, y);
      return;
    }
    if (h === ri) {
      $(u);
      return;
    }
    const w = () => {
      i(p), v && !v.persisted && v.afterLeave && v.afterLeave();
    };
    if (u.shapeFlag & 1 && v && !v.persisted) {
      const { leave: A, delayLeave: x } = v, k = () => A(p, w);
      x ? x(u.el, w, k) : k();
    } else
      w();
  }, tf = (u, h) => {
    let p;
    for (; u !== h; )
      p = m(u), i(u), u = p;
    i(h);
  }, ef = (u, h, p) => {
    const { bum: y, scope: v, update: w, subTree: A, um: x } = u;
    y && Qr(y), v.stop(), w && (w.active = !1, Nt(A, u, h, p)), x && dt(x, h), dt(() => {
      u.isUnmounted = !0;
    }, h), h && h.pendingBranch && !h.isUnmounted && u.asyncDep && !u.asyncResolved && u.suspenseId === h.pendingId && (h.deps--, h.deps === 0 && h.resolve());
  }, jt = (u, h, p, y = !1, v = !1, w = 0) => {
    for (let A = w; A < u.length; A++)
      Nt(u[A], h, p, y, v);
  }, Fn = (u) => u.shapeFlag & 6 ? Fn(u.component.subTree) : u.shapeFlag & 128 ? u.suspense.next() : m(u.anchor || u.el), Ta = (u, h, p) => {
    u == null ? h._vnode && Nt(h._vnode, null, null, !0) : O(h._vnode || null, u, h, null, null, null, p), To(), Sl(), h._vnode = u;
  }, Se = {
    p: O,
    um: Nt,
    m: ce,
    r: Pa,
    mt: Br,
    mc: xt,
    pc: Y,
    pbc: Ht,
    n: Fn,
    o: t
  };
  let Ur, Yr;
  return e && ([Ur, Yr] = e(Se)), {
    render: Ta,
    hydrate: Ur,
    createApp: x0(Ta, Ur)
  };
}
function de({ effect: t, update: e }, n) {
  t.allowRecurse = e.allowRecurse = n;
}
function Ul(t, e, n = !1) {
  const r = t.children, i = e.children;
  if (L(r) && L(i))
    for (let a = 0; a < r.length; a++) {
      const o = r[a];
      let s = i[a];
      s.shapeFlag & 1 && !s.dynamicChildren && ((s.patchFlag <= 0 || s.patchFlag === 32) && (s = i[a] = ne(i[a]), s.el = o.el), n || Ul(o, s)), s.type === jr && (s.el = o.el);
    }
}
function k0(t) {
  const e = t.slice(), n = [0];
  let r, i, a, o, s;
  const l = t.length;
  for (r = 0; r < l; r++) {
    const f = t[r];
    if (f !== 0) {
      if (i = n[n.length - 1], t[i] < f) {
        e[r] = i, n.push(r);
        continue;
      }
      for (a = 0, o = n.length - 1; a < o; )
        s = a + o >> 1, t[n[s]] < f ? a = s + 1 : o = s;
      f < t[n[a]] && (a > 0 && (e[r] = n[a - 1]), n[a] = r);
    }
  }
  for (a = n.length, o = n[a - 1]; a-- > 0; )
    n[a] = o, o = e[o];
  return n;
}
const A0 = (t) => t.__isTeleport, Ut = Symbol(void 0), jr = Symbol(void 0), An = Symbol(void 0), ri = Symbol(void 0), fn = [];
let St = null;
function ii(t = !1) {
  fn.push(St = t ? null : []);
}
function E0() {
  fn.pop(), St = fn[fn.length - 1] || null;
}
let En = 1;
function Do(t) {
  En += t;
}
function Yl(t) {
  return t.dynamicChildren = En > 0 ? St || Fe : null, E0(), En > 0 && St && St.push(t), t;
}
function C0(t, e, n, r, i, a) {
  return Yl(Wl(
    t,
    e,
    n,
    r,
    i,
    a,
    !0
    /* isBlock */
  ));
}
function zo(t, e, n, r, i) {
  return Yl(rt(
    t,
    e,
    n,
    r,
    i,
    !0
    /* isBlock: prevent a block from tracking itself */
  ));
}
function $i(t) {
  return t ? t.__v_isVNode === !0 : !1;
}
function Qe(t, e) {
  return t.type === e.type && t.key === e.key;
}
const Gr = "__vInternal", Vl = ({ key: t }) => t ?? null, cr = ({ ref: t, ref_key: e, ref_for: n }) => t != null ? nt(t) || ot(t) || D(t) ? { i: Lt, r: t, k: e, f: !!n } : t : null;
function Wl(t, e = null, n = null, r = 0, i = null, a = t === Ut ? 0 : 1, o = !1, s = !1) {
  const l = {
    __v_isVNode: !0,
    __v_skip: !0,
    type: t,
    props: e,
    key: e && Vl(e),
    ref: e && cr(e),
    scopeId: Tl,
    slotScopeIds: null,
    children: n,
    component: null,
    suspense: null,
    ssContent: null,
    ssFallback: null,
    dirs: null,
    transition: null,
    el: null,
    anchor: null,
    target: null,
    targetAnchor: null,
    staticCount: 0,
    shapeFlag: a,
    patchFlag: r,
    dynamicProps: i,
    dynamicChildren: null,
    appContext: null,
    ctx: Lt
  };
  return s ? (Ea(l, n), a & 128 && t.normalize(l)) : n && (l.shapeFlag |= nt(n) ? 8 : 16), En > 0 && // avoid a block node from tracking itself
  !o && // has current parent block
  St && // presence of a patch flag indicates this node needs patching on updates.
  // component nodes also should always be patched, because even if the
  // component doesn't need to update, it needs to persist the instance on to
  // the next vnode so that it can be properly unmounted later.
  (l.patchFlag > 0 || a & 6) && // the EVENTS flag is only for hydration and if it is the only flag, the
  // vnode should not be considered dynamic due to handler caching.
  l.patchFlag !== 32 && St.push(l), l;
}
const rt = S0;
function S0(t, e = null, n = null, r = 0, i = null, a = !1) {
  if ((!t || t === s0) && (t = An), $i(t)) {
    const s = Ue(
      t,
      e,
      !0
      /* mergeRef: true */
    );
    return n && Ea(s, n), En > 0 && !a && St && (s.shapeFlag & 6 ? St[St.indexOf(t)] = s : St.push(s)), s.patchFlag |= -2, s;
  }
  if (L0(t) && (t = t.__vccOpts), e) {
    e = O0(e);
    let { class: s, style: l } = e;
    s && !nt(s) && (e.class = la(s)), X(l) && (bl(l) && !L(l) && (l = ft({}, l)), e.style = sa(l));
  }
  const o = nt(t) ? 1 : Vp(t) ? 128 : A0(t) ? 64 : X(t) ? 4 : D(t) ? 2 : 0;
  return Wl(t, e, n, r, i, o, a, !0);
}
function O0(t) {
  return t ? bl(t) || Gr in t ? ft({}, t) : t : null;
}
function Ue(t, e, n = !1) {
  const { props: r, ref: i, patchFlag: a, children: o } = t, s = e ? P0(r || {}, e) : r;
  return {
    __v_isVNode: !0,
    __v_skip: !0,
    type: t.type,
    props: s,
    key: s && Vl(s),
    ref: e && e.ref ? (
      // #2078 in the case of <component :is="vnode" ref="extra"/>
      // if the vnode itself already has a ref, cloneVNode will need to merge
      // the refs so the single vnode can be set on multiple refs
      n && i ? L(i) ? i.concat(cr(e)) : [i, cr(e)] : cr(e)
    ) : i,
    scopeId: t.scopeId,
    slotScopeIds: t.slotScopeIds,
    children: o,
    target: t.target,
    targetAnchor: t.targetAnchor,
    staticCount: t.staticCount,
    shapeFlag: t.shapeFlag,
    // if the vnode is cloned with extra props, we can no longer assume its
    // existing patch flag to be reliable and need to add the FULL_PROPS flag.
    // note: preserve flag for fragments since they use the flag for children
    // fast paths only.
    patchFlag: e && t.type !== Ut ? a === -1 ? 16 : a | 16 : a,
    dynamicProps: t.dynamicProps,
    dynamicChildren: t.dynamicChildren,
    appContext: t.appContext,
    dirs: t.dirs,
    transition: t.transition,
    // These should technically only be non-null on mounted VNodes. However,
    // they *should* be copied for kept-alive vnodes. So we just always copy
    // them since them being non-null during a mount doesn't affect the logic as
    // they will simply be overwritten.
    component: t.component,
    suspense: t.suspense,
    ssContent: t.ssContent && Ue(t.ssContent),
    ssFallback: t.ssFallback && Ue(t.ssFallback),
    el: t.el,
    anchor: t.anchor,
    ctx: t.ctx,
    ce: t.ce
  };
}
function Kl(t = " ", e = 0) {
  return rt(jr, null, t, e);
}
function Rt(t) {
  return t == null || typeof t == "boolean" ? rt(An) : L(t) ? rt(
    Ut,
    null,
    // #3666, avoid reference pollution when reusing vnode
    t.slice()
  ) : typeof t == "object" ? ne(t) : rt(jr, null, String(t));
}
function ne(t) {
  return t.el === null && t.patchFlag !== -1 || t.memo ? t : Ue(t);
}
function Ea(t, e) {
  let n = 0;
  const { shapeFlag: r } = t;
  if (e == null)
    e = null;
  else if (L(e))
    n = 16;
  else if (typeof e == "object")
    if (r & 65) {
      const i = e.default;
      i && (i._c && (i._d = !1), Ea(t, i()), i._c && (i._d = !0));
      return;
    } else {
      n = 32;
      const i = e._;
      !i && !(Gr in e) ? e._ctx = Lt : i === 3 && Lt && (Lt.slots._ === 1 ? e._ = 1 : (e._ = 2, t.patchFlag |= 1024));
    }
  else
    D(e) ? (e = { default: e, _ctx: Lt }, n = 32) : (e = String(e), r & 64 ? (n = 16, e = [Kl(e)]) : n = 8);
  t.children = e, t.shapeFlag |= n;
}
function P0(...t) {
  const e = {};
  for (let n = 0; n < t.length; n++) {
    const r = t[n];
    for (const i in r)
      if (i === "class")
        e.class !== r.class && (e.class = la([e.class, r.class]));
      else if (i === "style")
        e.style = sa([e.style, r.style]);
      else if (Mr(i)) {
        const a = e[i], o = r[i];
        o && a !== o && !(L(a) && a.includes(o)) && (e[i] = a ? [].concat(a, o) : o);
      } else
        i !== "" && (e[i] = r[i]);
  }
  return e;
}
function Mt(t, e, n, r = null) {
  Pt(t, e, 7, [
    n,
    r
  ]);
}
const T0 = Bl();
let N0 = 0;
function I0(t, e, n) {
  const r = t.type, i = (e ? e.appContext : t.appContext) || T0, a = {
    uid: N0++,
    vnode: t,
    type: r,
    parent: e,
    appContext: i,
    root: null,
    next: null,
    subTree: null,
    effect: null,
    update: null,
    scope: new Qm(
      !0
      /* detached */
    ),
    render: null,
    proxy: null,
    exposed: null,
    exposeProxy: null,
    withProxy: null,
    provides: e ? e.provides : Object.create(i.provides),
    accessCache: null,
    renderCache: [],
    // local resolved assets
    components: null,
    directives: null,
    // resolved props and emits options
    propsOptions: zl(r, i),
    emitsOptions: Pl(r, i),
    // emit
    emit: null,
    emitted: null,
    // props default value
    propsDefaults: q,
    // inheritAttrs
    inheritAttrs: r.inheritAttrs,
    // state
    ctx: q,
    data: q,
    props: q,
    attrs: q,
    slots: q,
    refs: q,
    setupState: q,
    setupContext: null,
    // suspense related
    suspense: n,
    suspenseId: n ? n.pendingId : 0,
    asyncDep: null,
    asyncResolved: !1,
    // lifecycle hooks
    // not using enums here because it results in computed properties
    isMounted: !1,
    isUnmounted: !1,
    isDeactivated: !1,
    bc: null,
    c: null,
    bm: null,
    m: null,
    bu: null,
    u: null,
    um: null,
    bum: null,
    da: null,
    a: null,
    rtg: null,
    rtc: null,
    ec: null,
    sp: null
  };
  return a.ctx = { _: a }, a.root = e ? e.root : a, a.emit = Hp.bind(null, a), t.ce && t.ce(a), a;
}
let tt = null;
const Ye = (t) => {
  tt = t, t.scope.on();
}, ke = () => {
  tt && tt.scope.off(), tt = null;
};
function ql(t) {
  return t.vnode.shapeFlag & 4;
}
let Cn = !1;
function M0(t, e = !1) {
  Cn = e;
  const { props: n, children: r } = t.vnode, i = ql(t);
  m0(t, n, i, e), v0(t, r);
  const a = i ? R0(t, e) : void 0;
  return Cn = !1, a;
}
function R0(t, e) {
  const n = t.type;
  t.accessCache = /* @__PURE__ */ Object.create(null), t.proxy = xl(new Proxy(t.ctx, l0));
  const { setup: r } = n;
  if (r) {
    const i = t.setupContext = r.length > 1 ? $0(t) : null;
    Ye(t), Ke();
    const a = ie(r, t, 0, [t.props, i]);
    if (qe(), ke(), il(a)) {
      if (a.then(ke, ke), e)
        return a.then((o) => {
          Ho(t, o, e);
        }).catch((o) => {
          Lr(
            o,
            t,
            0
            /* ErrorCodes.SETUP_FUNCTION */
          );
        });
      t.asyncDep = a;
    } else
      Ho(t, a, e);
  } else
    Xl(t, e);
}
function Ho(t, e, n) {
  D(e) ? t.type.__ssrInlineRender ? t.ssrRender = e : t.render = e : X(e) && (t.setupState = kl(e)), Xl(t, n);
}
let jo;
function Xl(t, e, n) {
  const r = t.type;
  if (!t.render) {
    if (!e && jo && !r.render) {
      const i = r.template || ka(t).template;
      if (i) {
        const { isCustomElement: a, compilerOptions: o } = t.appContext.config, { delimiters: s, compilerOptions: l } = r, f = ft(ft({
          isCustomElement: a,
          delimiters: s
        }, o), l);
        r.render = jo(i, f);
      }
    }
    t.render = r.render || Ot;
  }
  Ye(t), Ke(), f0(t), qe(), ke();
}
function F0(t) {
  return new Proxy(t.attrs, {
    get(e, n) {
      return mt(t, "get", "$attrs"), e[n];
    }
  });
}
function $0(t) {
  const e = (r) => {
    t.exposed = r || {};
  };
  let n;
  return {
    get attrs() {
      return n || (n = F0(t));
    },
    slots: t.slots,
    emit: t.emit,
    expose: e
  };
}
function Ca(t) {
  if (t.exposed)
    return t.exposeProxy || (t.exposeProxy = new Proxy(kl(xl(t.exposed)), {
      get(e, n) {
        if (n in e)
          return e[n];
        if (n in ln)
          return ln[n](t);
      },
      has(e, n) {
        return n in e || n in ln;
      }
    }));
}
function L0(t) {
  return D(t) && "__vccOpts" in t;
}
const bt = (t, e) => Mp(t, e, Cn);
function Jl(t, e, n) {
  const r = arguments.length;
  return r === 2 ? X(e) && !L(e) ? $i(e) ? rt(t, null, [e]) : rt(t, e) : rt(t, null, e) : (r > 3 ? n = Array.prototype.slice.call(arguments, 2) : r === 3 && $i(n) && (n = [n]), rt(t, e, n));
}
const D0 = Symbol(""), z0 = () => sr(D0), H0 = "3.2.47", j0 = "http://www.w3.org/2000/svg", pe = typeof document < "u" ? document : null, Go = pe && /* @__PURE__ */ pe.createElement("template"), G0 = {
  insert: (t, e, n) => {
    e.insertBefore(t, n || null);
  },
  remove: (t) => {
    const e = t.parentNode;
    e && e.removeChild(t);
  },
  createElement: (t, e, n, r) => {
    const i = e ? pe.createElementNS(j0, t) : pe.createElement(t, n ? { is: n } : void 0);
    return t === "select" && r && r.multiple != null && i.setAttribute("multiple", r.multiple), i;
  },
  createText: (t) => pe.createTextNode(t),
  createComment: (t) => pe.createComment(t),
  setText: (t, e) => {
    t.nodeValue = e;
  },
  setElementText: (t, e) => {
    t.textContent = e;
  },
  parentNode: (t) => t.parentNode,
  nextSibling: (t) => t.nextSibling,
  querySelector: (t) => pe.querySelector(t),
  setScopeId(t, e) {
    t.setAttribute(e, "");
  },
  // __UNSAFE__
  // Reason: innerHTML.
  // Static content here can only come from compiled templates.
  // As long as the user only uses trusted templates, this is safe.
  insertStaticContent(t, e, n, r, i, a) {
    const o = n ? n.previousSibling : e.lastChild;
    if (i && (i === a || i.nextSibling))
      for (; e.insertBefore(i.cloneNode(!0), n), !(i === a || !(i = i.nextSibling)); )
        ;
    else {
      Go.innerHTML = r ? `<svg>${t}</svg>` : t;
      const s = Go.content;
      if (r) {
        const l = s.firstChild;
        for (; l.firstChild; )
          s.appendChild(l.firstChild);
        s.removeChild(l);
      }
      e.insertBefore(s, n);
    }
    return [
      // first
      o ? o.nextSibling : e.firstChild,
      // last
      n ? n.previousSibling : e.lastChild
    ];
  }
};
function B0(t, e, n) {
  const r = t._vtc;
  r && (e = (e ? [e, ...r] : [...r]).join(" ")), e == null ? t.removeAttribute("class") : n ? t.setAttribute("class", e) : t.className = e;
}
function U0(t, e, n) {
  const r = t.style, i = nt(n);
  if (n && !i) {
    if (e && !nt(e))
      for (const a in e)
        n[a] == null && Li(r, a, "");
    for (const a in n)
      Li(r, a, n[a]);
  } else {
    const a = r.display;
    i ? e !== n && (r.cssText = n) : e && t.removeAttribute("style"), "_vod" in t && (r.display = a);
  }
}
const Bo = /\s*!important$/;
function Li(t, e, n) {
  if (L(n))
    n.forEach((r) => Li(t, e, r));
  else if (n == null && (n = ""), e.startsWith("--"))
    t.setProperty(e, n);
  else {
    const r = Y0(t, e);
    Bo.test(n) ? t.setProperty(We(r), n.replace(Bo, ""), "important") : t[r] = n;
  }
}
const Uo = ["Webkit", "Moz", "ms"], ai = {};
function Y0(t, e) {
  const n = ai[e];
  if (n)
    return n;
  let r = Ge(e);
  if (r !== "filter" && r in t)
    return ai[e] = r;
  r = sl(r);
  for (let i = 0; i < Uo.length; i++) {
    const a = Uo[i] + r;
    if (a in t)
      return ai[e] = a;
  }
  return e;
}
const Yo = "http://www.w3.org/1999/xlink";
function V0(t, e, n, r, i) {
  if (r && e.startsWith("xlink:"))
    n == null ? t.removeAttributeNS(Yo, e.slice(6, e.length)) : t.setAttributeNS(Yo, e, n);
  else {
    const a = Bm(e);
    n == null || a && !el(n) ? t.removeAttribute(e) : t.setAttribute(e, a ? "" : n);
  }
}
function W0(t, e, n, r, i, a, o) {
  if (e === "innerHTML" || e === "textContent") {
    r && o(r, i, a), t[e] = n ?? "";
    return;
  }
  if (e === "value" && t.tagName !== "PROGRESS" && // custom elements may use _value internally
  !t.tagName.includes("-")) {
    t._value = n;
    const l = n ?? "";
    (t.value !== l || // #4956: always set for OPTION elements because its value falls back to
    // textContent if no value attribute is present. And setting .value for
    // OPTION has no side effect
    t.tagName === "OPTION") && (t.value = l), n == null && t.removeAttribute(e);
    return;
  }
  let s = !1;
  if (n === "" || n == null) {
    const l = typeof t[e];
    l === "boolean" ? n = el(n) : n == null && l === "string" ? (n = "", s = !0) : l === "number" && (n = 0, s = !0);
  }
  try {
    t[e] = n;
  } catch {
  }
  s && t.removeAttribute(e);
}
function K0(t, e, n, r) {
  t.addEventListener(e, n, r);
}
function q0(t, e, n, r) {
  t.removeEventListener(e, n, r);
}
function X0(t, e, n, r, i = null) {
  const a = t._vei || (t._vei = {}), o = a[e];
  if (r && o)
    o.value = r;
  else {
    const [s, l] = J0(e);
    if (r) {
      const f = a[e] = tg(r, i);
      K0(t, s, f, l);
    } else
      o && (q0(t, s, o, l), a[e] = void 0);
  }
}
const Vo = /(?:Once|Passive|Capture)$/;
function J0(t) {
  let e;
  if (Vo.test(t)) {
    e = {};
    let r;
    for (; r = t.match(Vo); )
      t = t.slice(0, t.length - r[0].length), e[r[0].toLowerCase()] = !0;
  }
  return [t[2] === ":" ? t.slice(3) : We(t.slice(2)), e];
}
let oi = 0;
const Z0 = /* @__PURE__ */ Promise.resolve(), Q0 = () => oi || (Z0.then(() => oi = 0), oi = Date.now());
function tg(t, e) {
  const n = (r) => {
    if (!r._vts)
      r._vts = Date.now();
    else if (r._vts <= n.attached)
      return;
    Pt(eg(r, n.value), e, 5, [r]);
  };
  return n.value = t, n.attached = Q0(), n;
}
function eg(t, e) {
  if (L(e)) {
    const n = t.stopImmediatePropagation;
    return t.stopImmediatePropagation = () => {
      n.call(t), t._stopped = !0;
    }, e.map((r) => (i) => !i._stopped && r && r(i));
  } else
    return e;
}
const Wo = /^on[a-z]/, ng = (t, e, n, r, i = !1, a, o, s, l) => {
  e === "class" ? B0(t, r, i) : e === "style" ? U0(t, n, r) : Mr(e) ? fa(e) || X0(t, e, n, r, o) : (e[0] === "." ? (e = e.slice(1), !0) : e[0] === "^" ? (e = e.slice(1), !1) : rg(t, e, r, i)) ? W0(t, e, r, a, o, s, l) : (e === "true-value" ? t._trueValue = r : e === "false-value" && (t._falseValue = r), V0(t, e, r, i));
};
function rg(t, e, n, r) {
  return r ? !!(e === "innerHTML" || e === "textContent" || e in t && Wo.test(e) && D(n)) : e === "spellcheck" || e === "draggable" || e === "translate" || e === "form" || e === "list" && t.tagName === "INPUT" || e === "type" && t.tagName === "TEXTAREA" || Wo.test(e) && nt(n) ? !1 : e in t;
}
const ig = /* @__PURE__ */ ft({ patchProp: ng }, G0);
let Ko;
function ag() {
  return Ko || (Ko = w0(ig));
}
const ge = (...t) => {
  const e = ag().createApp(...t), { mount: n } = e;
  return e.mount = (r) => {
    const i = og(r);
    if (!i)
      return;
    const a = e._component;
    !D(a) && !a.render && !a.template && (a.template = i.innerHTML), i.innerHTML = "";
    const o = n(i, !1, i instanceof SVGElement);
    return i instanceof Element && (i.removeAttribute("v-cloak"), i.setAttribute("data-v-app", "")), o;
  }, e;
};
function og(t) {
  return nt(t) ? document.querySelector(t) : t;
}
function qo(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(t);
    e && (r = r.filter(function(i) {
      return Object.getOwnPropertyDescriptor(t, i).enumerable;
    })), n.push.apply(n, r);
  }
  return n;
}
function Et(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2 ? qo(Object(n), !0).forEach(function(r) {
      ut(t, r, n[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : qo(Object(n)).forEach(function(r) {
      Object.defineProperty(t, r, Object.getOwnPropertyDescriptor(n, r));
    });
  }
  return t;
}
function Er(t) {
  return Er = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, Er(t);
}
function ut(t, e, n) {
  return e in t ? Object.defineProperty(t, e, {
    value: n,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : t[e] = n, t;
}
function sg(t, e) {
  if (t == null)
    return {};
  var n = {}, r = Object.keys(t), i, a;
  for (a = 0; a < r.length; a++)
    i = r[a], !(e.indexOf(i) >= 0) && (n[i] = t[i]);
  return n;
}
function lg(t, e) {
  if (t == null)
    return {};
  var n = sg(t, e), r, i;
  if (Object.getOwnPropertySymbols) {
    var a = Object.getOwnPropertySymbols(t);
    for (i = 0; i < a.length; i++)
      r = a[i], !(e.indexOf(r) >= 0) && Object.prototype.propertyIsEnumerable.call(t, r) && (n[r] = t[r]);
  }
  return n;
}
function Di(t) {
  return fg(t) || cg(t) || ug(t) || dg();
}
function fg(t) {
  if (Array.isArray(t))
    return zi(t);
}
function cg(t) {
  if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null)
    return Array.from(t);
}
function ug(t, e) {
  if (t) {
    if (typeof t == "string")
      return zi(t, e);
    var n = Object.prototype.toString.call(t).slice(8, -1);
    if (n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set")
      return Array.from(t);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return zi(t, e);
  }
}
function zi(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, r = new Array(e); n < e; n++)
    r[n] = t[n];
  return r;
}
function dg() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
var hg = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {}, Zl = { exports: {} };
(function(t) {
  (function(e) {
    var n = function(_, C, E) {
      if (!f(C) || d(C) || m(C) || g(C) || l(C))
        return C;
      var $, G = 0, ct = 0;
      if (c(C))
        for ($ = [], ct = C.length; G < ct; G++)
          $.push(n(_, C[G], E));
      else {
        $ = {};
        for (var it in C)
          Object.prototype.hasOwnProperty.call(C, it) && ($[_(it, E)] = n(_, C[it], E));
      }
      return $;
    }, r = function(_, C) {
      C = C || {};
      var E = C.separator || "_", $ = C.split || /(?=[A-Z])/;
      return _.split($).join(E);
    }, i = function(_) {
      return P(_) ? _ : (_ = _.replace(/[\-_\s]+(.)?/g, function(C, E) {
        return E ? E.toUpperCase() : "";
      }), _.substr(0, 1).toLowerCase() + _.substr(1));
    }, a = function(_) {
      var C = i(_);
      return C.substr(0, 1).toUpperCase() + C.substr(1);
    }, o = function(_, C) {
      return r(_, C).toLowerCase();
    }, s = Object.prototype.toString, l = function(_) {
      return typeof _ == "function";
    }, f = function(_) {
      return _ === Object(_);
    }, c = function(_) {
      return s.call(_) == "[object Array]";
    }, d = function(_) {
      return s.call(_) == "[object Date]";
    }, m = function(_) {
      return s.call(_) == "[object RegExp]";
    }, g = function(_) {
      return s.call(_) == "[object Boolean]";
    }, P = function(_) {
      return _ = _ - 0, _ === _;
    }, O = function(_, C) {
      var E = C && "process" in C ? C.process : C;
      return typeof E != "function" ? _ : function($, G) {
        return E($, _, G);
      };
    }, z = {
      camelize: i,
      decamelize: o,
      pascalize: a,
      depascalize: o,
      camelizeKeys: function(_, C) {
        return n(O(i, C), _);
      },
      decamelizeKeys: function(_, C) {
        return n(O(o, C), _, C);
      },
      pascalizeKeys: function(_, C) {
        return n(O(a, C), _);
      },
      depascalizeKeys: function() {
        return this.decamelizeKeys.apply(this, arguments);
      }
    };
    t.exports ? t.exports = z : e.humps = z;
  })(hg);
})(Zl);
var mg = Zl.exports, pg = ["class", "style"];
function gg(t) {
  return t.split(";").map(function(e) {
    return e.trim();
  }).filter(function(e) {
    return e;
  }).reduce(function(e, n) {
    var r = n.indexOf(":"), i = mg.camelize(n.slice(0, r)), a = n.slice(r + 1).trim();
    return e[i] = a, e;
  }, {});
}
function vg(t) {
  return t.split(/\s+/).reduce(function(e, n) {
    return e[n] = !0, e;
  }, {});
}
function Sa(t) {
  var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  if (typeof t == "string")
    return t;
  var r = (t.children || []).map(function(l) {
    return Sa(l);
  }), i = Object.keys(t.attributes || {}).reduce(function(l, f) {
    var c = t.attributes[f];
    switch (f) {
      case "class":
        l.class = vg(c);
        break;
      case "style":
        l.style = gg(c);
        break;
      default:
        l.attrs[f] = c;
    }
    return l;
  }, {
    attrs: {},
    class: {},
    style: {}
  });
  n.class;
  var a = n.style, o = a === void 0 ? {} : a, s = lg(n, pg);
  return Jl(t.tag, Et(Et(Et({}, e), {}, {
    class: i.class,
    style: Et(Et({}, i.style), o)
  }, i.attrs), s), r);
}
var Ql = !1;
try {
  Ql = !0;
} catch {
}
function yg() {
  if (!Ql && console && typeof console.error == "function") {
    var t;
    (t = console).error.apply(t, arguments);
  }
}
function cn(t, e) {
  return Array.isArray(e) && e.length > 0 || !Array.isArray(e) && e ? ut({}, t, e) : {};
}
function bg(t) {
  var e, n = (e = {
    "fa-spin": t.spin,
    "fa-pulse": t.pulse,
    "fa-fw": t.fixedWidth,
    "fa-border": t.border,
    "fa-li": t.listItem,
    "fa-inverse": t.inverse,
    "fa-flip": t.flip === !0,
    "fa-flip-horizontal": t.flip === "horizontal" || t.flip === "both",
    "fa-flip-vertical": t.flip === "vertical" || t.flip === "both"
  }, ut(e, "fa-".concat(t.size), t.size !== null), ut(e, "fa-rotate-".concat(t.rotation), t.rotation !== null), ut(e, "fa-pull-".concat(t.pull), t.pull !== null), ut(e, "fa-swap-opacity", t.swapOpacity), ut(e, "fa-bounce", t.bounce), ut(e, "fa-shake", t.shake), ut(e, "fa-beat", t.beat), ut(e, "fa-fade", t.fade), ut(e, "fa-beat-fade", t.beatFade), ut(e, "fa-flash", t.flash), ut(e, "fa-spin-pulse", t.spinPulse), ut(e, "fa-spin-reverse", t.spinReverse), e);
  return Object.keys(n).map(function(r) {
    return n[r] ? r : null;
  }).filter(function(r) {
    return r;
  });
}
function Xo(t) {
  if (t && Er(t) === "object" && t.prefix && t.iconName && t.icon)
    return t;
  if (xr.icon)
    return xr.icon(t);
  if (t === null)
    return null;
  if (Er(t) === "object" && t.prefix && t.iconName)
    return t;
  if (Array.isArray(t) && t.length === 2)
    return {
      prefix: t[0],
      iconName: t[1]
    };
  if (typeof t == "string")
    return {
      prefix: "fas",
      iconName: t
    };
}
var Yt = zr({
  name: "FontAwesomeIcon",
  props: {
    border: {
      type: Boolean,
      default: !1
    },
    fixedWidth: {
      type: Boolean,
      default: !1
    },
    flip: {
      type: [Boolean, String],
      default: !1,
      validator: function(e) {
        return [!0, !1, "horizontal", "vertical", "both"].indexOf(e) > -1;
      }
    },
    icon: {
      type: [Object, Array, String],
      required: !0
    },
    mask: {
      type: [Object, Array, String],
      default: null
    },
    listItem: {
      type: Boolean,
      default: !1
    },
    pull: {
      type: String,
      default: null,
      validator: function(e) {
        return ["right", "left"].indexOf(e) > -1;
      }
    },
    pulse: {
      type: Boolean,
      default: !1
    },
    rotation: {
      type: [String, Number],
      default: null,
      validator: function(e) {
        return [90, 180, 270].indexOf(Number.parseInt(e, 10)) > -1;
      }
    },
    swapOpacity: {
      type: Boolean,
      default: !1
    },
    size: {
      type: String,
      default: null,
      validator: function(e) {
        return ["2xs", "xs", "sm", "lg", "xl", "2xl", "1x", "2x", "3x", "4x", "5x", "6x", "7x", "8x", "9x", "10x"].indexOf(e) > -1;
      }
    },
    spin: {
      type: Boolean,
      default: !1
    },
    transform: {
      type: [String, Object],
      default: null
    },
    symbol: {
      type: [Boolean, String],
      default: !1
    },
    title: {
      type: String,
      default: null
    },
    inverse: {
      type: Boolean,
      default: !1
    },
    bounce: {
      type: Boolean,
      default: !1
    },
    shake: {
      type: Boolean,
      default: !1
    },
    beat: {
      type: Boolean,
      default: !1
    },
    fade: {
      type: Boolean,
      default: !1
    },
    beatFade: {
      type: Boolean,
      default: !1
    },
    flash: {
      type: Boolean,
      default: !1
    },
    spinPulse: {
      type: Boolean,
      default: !1
    },
    spinReverse: {
      type: Boolean,
      default: !1
    }
  },
  setup: function(e, n) {
    var r = n.attrs, i = bt(function() {
      return Xo(e.icon);
    }), a = bt(function() {
      return cn("classes", bg(e));
    }), o = bt(function() {
      return cn("transform", typeof e.transform == "string" ? xr.transform(e.transform) : e.transform);
    }), s = bt(function() {
      return cn("mask", Xo(e.mask));
    }), l = bt(function() {
      return Rm(i.value, Et(Et(Et(Et({}, a.value), o.value), s.value), {}, {
        symbol: e.symbol,
        title: e.title
      }));
    });
    lr(l, function(c) {
      if (!c)
        return yg("Could not find one or more icon(s)", i.value, s.value);
    }, {
      immediate: !0
    });
    var f = bt(function() {
      return l.value ? Sa(l.value.abstract[0], {}, r) : null;
    });
    return function() {
      return f.value;
    };
  }
});
zr({
  name: "FontAwesomeLayers",
  props: {
    fixedWidth: {
      type: Boolean,
      default: !1
    }
  },
  setup: function(e, n) {
    var r = n.slots, i = Qs.familyPrefix, a = bt(function() {
      return ["".concat(i, "-layers")].concat(Di(e.fixedWidth ? ["".concat(i, "-fw")] : []));
    });
    return function() {
      return Jl("div", {
        class: a.value
      }, r.default ? r.default() : []);
    };
  }
});
zr({
  name: "FontAwesomeLayersText",
  props: {
    value: {
      type: [String, Number],
      default: ""
    },
    transform: {
      type: [String, Object],
      default: null
    },
    counter: {
      type: Boolean,
      default: !1
    },
    position: {
      type: String,
      default: null,
      validator: function(e) {
        return ["bottom-left", "bottom-right", "top-left", "top-right"].indexOf(e) > -1;
      }
    }
  },
  setup: function(e, n) {
    var r = n.attrs, i = Qs.familyPrefix, a = bt(function() {
      return cn("classes", [].concat(Di(e.counter ? ["".concat(i, "-layers-counter")] : []), Di(e.position ? ["".concat(i, "-layers-").concat(e.position)] : [])));
    }), o = bt(function() {
      return cn("transform", typeof e.transform == "string" ? xr.transform(e.transform) : e.transform);
    }), s = bt(function() {
      var f = Fm(e.value.toString(), Et(Et({}, o.value), a.value)), c = f.abstract;
      return e.counter && (c[0].attributes.class = c[0].attributes.class.replace("fa-layers-text", "")), c[0];
    }), l = bt(function() {
      return Sa(s.value, {}, r);
    });
    return function() {
      return l.value;
    };
  }
});
const xg = ["disabled"], ve = /* @__PURE__ */ zr({
  __name: "Counter",
  props: {
    canDisable: {
      type: Boolean,
      default: !1
    },
    showSpinner: {
      type: Boolean,
      default: !1
    },
    showProgress: {
      type: Boolean,
      default: !1
    },
    goalGradientEffect: {
      type: Boolean,
      default: !1
    }
  },
  setup(t) {
    const e = t, n = (s) => -Math.pow(s - 1, 8) + 1, r = ti(), i = ti(0), a = ti(!1), o = async () => {
      if (!r.value || a.value)
        return;
      a.value = !0;
      const s = 5e3, l = 15, f = s / l;
      for (let c = 0; c < f; c++) {
        const d = e.goalGradientEffect ? (100 * n(c / f)).toFixed(2) : (100 * c / f).toFixed(2);
        e.showProgress && (r.value.style.background = `linear-gradient(90deg, rgba(0,0,0,0.3) ${d}%, rgba(255,255,255,1) ${d}%)`), await _d(l);
      }
      r.value.style.background = "", i.value++, a.value = !1;
    };
    return Fl(() => {
    }), (s, l) => (ii(), C0("button", {
      ref_key: "button",
      ref: r,
      onClick: o,
      disabled: t.canDisable && a.value
    }, [
      t.showSpinner && a.value ? (ii(), zo(Pi(Yt), {
        key: 0,
        icon: "fa-solid fa-circle-notch",
        spin: !0
      })) : (ii(), zo(Pi(Yt), {
        key: 1,
        icon: "fa-solid fa-plus"
      })),
      Kl(" Ma valeur est : " + Um(i.value), 1)
    ], 8, xg));
  }
}), wg = () => {
  const t = Vi();
  t !== void 0 && t.page.class === "gradient" && (ge(ve).component("FontAwesomeIcon", Yt).mount(".gradient .btn1"), ge(() => rt(ve, {
    canDisable: !0
  }, null)).component("FontAwesomeIcon", Yt).mount(".gradient .btn2"), ge(() => rt(ve, {
    canDisable: !0,
    showSpinner: !0
  }, null)).component("FontAwesomeIcon", Yt).mount(".gradient .btn3"), ge(() => rt(ve, {
    canDisable: !0,
    showSpinner: !0,
    showProgress: !0
  }, null)).component("FontAwesomeIcon", Yt).mount(".gradient .btn4"), ge(() => rt(ve, {
    canDisable: !0,
    showSpinner: !0,
    showProgress: !0,
    goalGradientEffect: !0
  }, null)).component("FontAwesomeIcon", Yt).mount(".gradient .btn5"));
}, _g = () => {
  const t = Vi();
  t !== void 0 && t.page.class === "wandering" && (ge(ve).component("FontAwesomeIcon", Yt).mount(".wandering .btn1"), ge(() => rt(ve, {
    canDisable: !0,
    goalGradientEffect: !0,
    showProgress: !0
  }, null)).component("FontAwesomeIcon", Yt).mount(".wandering .btn2"));
};
tl.add($m);
tl.add(Lm);
const kg = () => {
  console.log("init vuejs stuff"), wg(), _g(), console.log("end vuejs stuff");
};
Qd();
const Ag = new Zd();
Ag.initSvg();
kg();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
