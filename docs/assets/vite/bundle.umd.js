(function(N){typeof define=="function"&&define.amd?define(N):N()})(function(){"use strict";var Vi=Object.defineProperty;var Ii=(N,k,E)=>k in N?Vi(N,k,{enumerable:!0,configurable:!0,writable:!0,value:E}):N[k]=E;var V=(N,k,E)=>(Ii(N,typeof k!="symbol"?k+"":k,E),E);const N="";var k={value:()=>{}};function E(){for(var t=0,e=arguments.length,n={},r;t<e;++t){if(!(r=arguments[t]+"")||r in n||/[\s.]/.test(r))throw new Error("illegal type: "+r);n[r]=[]}return new K(n)}function K(t){this._=t}function ye(t,e){return t.trim().split(/^|\s+/).map(function(n){var r="",i=n.indexOf(".");if(i>=0&&(r=n.slice(i+1),n=n.slice(0,i)),n&&!e.hasOwnProperty(n))throw new Error("unknown type: "+n);return{type:n,name:r}})}K.prototype=E.prototype={constructor:K,on:function(t,e){var n=this._,r=ye(t+"",n),i,o=-1,s=r.length;if(arguments.length<2){for(;++o<s;)if((i=(t=r[o]).type)&&(i=_e(n[i],t.name)))return i;return}if(e!=null&&typeof e!="function")throw new Error("invalid callback: "+e);for(;++o<s;)if(i=(t=r[o]).type)n[i]=St(n[i],t.name,e);else if(e==null)for(i in n)n[i]=St(n[i],t.name,null);return this},copy:function(){var t={},e=this._;for(var n in e)t[n]=e[n].slice();return new K(t)},call:function(t,e){if((i=arguments.length-2)>0)for(var n=new Array(i),r=0,i,o;r<i;++r)n[r]=arguments[r+2];if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(o=this._[t],r=0,i=o.length;r<i;++r)o[r].value.apply(e,n)},apply:function(t,e,n){if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(var r=this._[t],i=0,o=r.length;i<o;++i)r[i].value.apply(e,n)}};function _e(t,e){for(var n=0,r=t.length,i;n<r;++n)if((i=t[n]).name===e)return i.value}function St(t,e,n){for(var r=0,i=t.length;r<i;++r)if(t[r].name===e){t[r]=k,t=t.slice(0,r).concat(t.slice(r+1));break}return n!=null&&t.push({name:e,value:n}),t}var ut="http://www.w3.org/1999/xhtml";const At={svg:"http://www.w3.org/2000/svg",xhtml:ut,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};function W(t){var e=t+="",n=e.indexOf(":");return n>=0&&(e=t.slice(0,n))!=="xmlns"&&(t=t.slice(n+1)),At.hasOwnProperty(e)?{space:At[e],local:t}:t}function me(t){return function(){var e=this.ownerDocument,n=this.namespaceURI;return n===ut&&e.documentElement.namespaceURI===ut?e.createElement(t):e.createElementNS(n,t)}}function we(t){return function(){return this.ownerDocument.createElementNS(t.space,t.local)}}function Et(t){var e=W(t);return(e.local?we:me)(e)}function ve(){}function ft(t){return t==null?ve:function(){return this.querySelector(t)}}function xe(t){typeof t!="function"&&(t=ft(t));for(var e=this._groups,n=e.length,r=new Array(n),i=0;i<n;++i)for(var o=e[i],s=o.length,a=r[i]=new Array(s),c,l,u=0;u<s;++u)(c=o[u])&&(l=t.call(c,c.__data__,u,o))&&("__data__"in c&&(l.__data__=c.__data__),a[u]=l);return new m(r,this._parents)}function be(t){return t==null?[]:Array.isArray(t)?t:Array.from(t)}function Ne(){return[]}function Ct(t){return t==null?Ne:function(){return this.querySelectorAll(t)}}function ke(t){return function(){return be(t.apply(this,arguments))}}function Se(t){typeof t=="function"?t=ke(t):t=Ct(t);for(var e=this._groups,n=e.length,r=[],i=[],o=0;o<n;++o)for(var s=e[o],a=s.length,c,l=0;l<a;++l)(c=s[l])&&(r.push(t.call(c,c.__data__,l,s)),i.push(c));return new m(r,i)}function $t(t){return function(){return this.matches(t)}}function Tt(t){return function(e){return e.matches(t)}}var Ae=Array.prototype.find;function Ee(t){return function(){return Ae.call(this.children,t)}}function Ce(){return this.firstElementChild}function $e(t){return this.select(t==null?Ce:Ee(typeof t=="function"?t:Tt(t)))}var Te=Array.prototype.filter;function Re(){return Array.from(this.children)}function Me(t){return function(){return Te.call(this.children,t)}}function Fe(t){return this.selectAll(t==null?Re:Me(typeof t=="function"?t:Tt(t)))}function Ge(t){typeof t!="function"&&(t=$t(t));for(var e=this._groups,n=e.length,r=new Array(n),i=0;i<n;++i)for(var o=e[i],s=o.length,a=r[i]=[],c,l=0;l<s;++l)(c=o[l])&&t.call(c,c.__data__,l,o)&&a.push(c);return new m(r,this._parents)}function Rt(t){return new Array(t.length)}function De(){return new m(this._enter||this._groups.map(Rt),this._parents)}function J(t,e){this.ownerDocument=t.ownerDocument,this.namespaceURI=t.namespaceURI,this._next=null,this._parent=t,this.__data__=e}J.prototype={constructor:J,appendChild:function(t){return this._parent.insertBefore(t,this._next)},insertBefore:function(t,e){return this._parent.insertBefore(t,e)},querySelector:function(t){return this._parent.querySelector(t)},querySelectorAll:function(t){return this._parent.querySelectorAll(t)}};function Ve(t){return function(){return t}}function Ie(t,e,n,r,i,o){for(var s=0,a,c=e.length,l=o.length;s<l;++s)(a=e[s])?(a.__data__=o[s],r[s]=a):n[s]=new J(t,o[s]);for(;s<c;++s)(a=e[s])&&(i[s]=a)}function qe(t,e,n,r,i,o,s){var a,c,l=new Map,u=e.length,f=o.length,h=new Array(u),d;for(a=0;a<u;++a)(c=e[a])&&(h[a]=d=s.call(c,c.__data__,a,e)+"",l.has(d)?i[a]=c:l.set(d,c));for(a=0;a<f;++a)d=s.call(t,o[a],a,o)+"",(c=l.get(d))?(r[a]=c,c.__data__=o[a],l.delete(d)):n[a]=new J(t,o[a]);for(a=0;a<u;++a)(c=e[a])&&l.get(h[a])===c&&(i[a]=c)}function He(t){return t.__data__}function Xe(t,e){if(!arguments.length)return Array.from(this,He);var n=e?qe:Ie,r=this._parents,i=this._groups;typeof t!="function"&&(t=Ve(t));for(var o=i.length,s=new Array(o),a=new Array(o),c=new Array(o),l=0;l<o;++l){var u=r[l],f=i[l],h=f.length,d=Oe(t.call(u,u&&u.__data__,l,r)),p=d.length,y=a[l]=new Array(p),M=s[l]=new Array(p),Di=c[l]=new Array(h);n(u,f,y,M,Di,d,e);for(var U=0,lt=0,pe,ge;U<p;++U)if(pe=y[U]){for(U>=lt&&(lt=U+1);!(ge=M[lt])&&++lt<p;);pe._next=ge||null}}return s=new m(s,r),s._enter=a,s._exit=c,s}function Oe(t){return typeof t=="object"&&"length"in t?t:Array.from(t)}function Pe(){return new m(this._exit||this._groups.map(Rt),this._parents)}function Le(t,e,n){var r=this.enter(),i=this,o=this.exit();return typeof t=="function"?(r=t(r),r&&(r=r.selection())):r=r.append(t+""),e!=null&&(i=e(i),i&&(i=i.selection())),n==null?o.remove():n(o),r&&i?r.merge(i).order():i}function Ye(t){for(var e=t.selection?t.selection():t,n=this._groups,r=e._groups,i=n.length,o=r.length,s=Math.min(i,o),a=new Array(i),c=0;c<s;++c)for(var l=n[c],u=r[c],f=l.length,h=a[c]=new Array(f),d,p=0;p<f;++p)(d=l[p]||u[p])&&(h[p]=d);for(;c<i;++c)a[c]=n[c];return new m(a,this._parents)}function Be(){for(var t=this._groups,e=-1,n=t.length;++e<n;)for(var r=t[e],i=r.length-1,o=r[i],s;--i>=0;)(s=r[i])&&(o&&s.compareDocumentPosition(o)^4&&o.parentNode.insertBefore(s,o),o=s);return this}function ze(t){t||(t=Ue);function e(f,h){return f&&h?t(f.__data__,h.__data__):!f-!h}for(var n=this._groups,r=n.length,i=new Array(r),o=0;o<r;++o){for(var s=n[o],a=s.length,c=i[o]=new Array(a),l,u=0;u<a;++u)(l=s[u])&&(c[u]=l);c.sort(e)}return new m(i,this._parents).order()}function Ue(t,e){return t<e?-1:t>e?1:t>=e?0:NaN}function Ke(){var t=arguments[0];return arguments[0]=this,t.apply(null,arguments),this}function We(){return Array.from(this)}function Je(){for(var t=this._groups,e=0,n=t.length;e<n;++e)for(var r=t[e],i=0,o=r.length;i<o;++i){var s=r[i];if(s)return s}return null}function Qe(){let t=0;for(const e of this)++t;return t}function Ze(){return!this.node()}function je(t){for(var e=this._groups,n=0,r=e.length;n<r;++n)for(var i=e[n],o=0,s=i.length,a;o<s;++o)(a=i[o])&&t.call(a,a.__data__,o,i);return this}function tn(t){return function(){this.removeAttribute(t)}}function en(t){return function(){this.removeAttributeNS(t.space,t.local)}}function nn(t,e){return function(){this.setAttribute(t,e)}}function rn(t,e){return function(){this.setAttributeNS(t.space,t.local,e)}}function on(t,e){return function(){var n=e.apply(this,arguments);n==null?this.removeAttribute(t):this.setAttribute(t,n)}}function sn(t,e){return function(){var n=e.apply(this,arguments);n==null?this.removeAttributeNS(t.space,t.local):this.setAttributeNS(t.space,t.local,n)}}function an(t,e){var n=W(t);if(arguments.length<2){var r=this.node();return n.local?r.getAttributeNS(n.space,n.local):r.getAttribute(n)}return this.each((e==null?n.local?en:tn:typeof e=="function"?n.local?sn:on:n.local?rn:nn)(n,e))}function Mt(t){return t.ownerDocument&&t.ownerDocument.defaultView||t.document&&t||t.defaultView}function cn(t){return function(){this.style.removeProperty(t)}}function ln(t,e,n){return function(){this.style.setProperty(t,e,n)}}function un(t,e,n){return function(){var r=e.apply(this,arguments);r==null?this.style.removeProperty(t):this.style.setProperty(t,r,n)}}function fn(t,e,n){return arguments.length>1?this.each((e==null?cn:typeof e=="function"?un:ln)(t,e,n??"")):F(this.node(),t)}function F(t,e){return t.style.getPropertyValue(e)||Mt(t).getComputedStyle(t,null).getPropertyValue(e)}function hn(t){return function(){delete this[t]}}function dn(t,e){return function(){this[t]=e}}function pn(t,e){return function(){var n=e.apply(this,arguments);n==null?delete this[t]:this[t]=n}}function gn(t,e){return arguments.length>1?this.each((e==null?hn:typeof e=="function"?pn:dn)(t,e)):this.node()[t]}function Ft(t){return t.trim().split(/^|\s+/)}function ht(t){return t.classList||new Gt(t)}function Gt(t){this._node=t,this._names=Ft(t.getAttribute("class")||"")}Gt.prototype={add:function(t){var e=this._names.indexOf(t);e<0&&(this._names.push(t),this._node.setAttribute("class",this._names.join(" ")))},remove:function(t){var e=this._names.indexOf(t);e>=0&&(this._names.splice(e,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(t){return this._names.indexOf(t)>=0}};function Dt(t,e){for(var n=ht(t),r=-1,i=e.length;++r<i;)n.add(e[r])}function Vt(t,e){for(var n=ht(t),r=-1,i=e.length;++r<i;)n.remove(e[r])}function yn(t){return function(){Dt(this,t)}}function _n(t){return function(){Vt(this,t)}}function mn(t,e){return function(){(e.apply(this,arguments)?Dt:Vt)(this,t)}}function wn(t,e){var n=Ft(t+"");if(arguments.length<2){for(var r=ht(this.node()),i=-1,o=n.length;++i<o;)if(!r.contains(n[i]))return!1;return!0}return this.each((typeof e=="function"?mn:e?yn:_n)(n,e))}function vn(){this.textContent=""}function xn(t){return function(){this.textContent=t}}function bn(t){return function(){var e=t.apply(this,arguments);this.textContent=e??""}}function Nn(t){return arguments.length?this.each(t==null?vn:(typeof t=="function"?bn:xn)(t)):this.node().textContent}function kn(){this.innerHTML=""}function Sn(t){return function(){this.innerHTML=t}}function An(t){return function(){var e=t.apply(this,arguments);this.innerHTML=e??""}}function En(t){return arguments.length?this.each(t==null?kn:(typeof t=="function"?An:Sn)(t)):this.node().innerHTML}function Cn(){this.nextSibling&&this.parentNode.appendChild(this)}function $n(){return this.each(Cn)}function Tn(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function Rn(){return this.each(Tn)}function Mn(t){var e=typeof t=="function"?t:Et(t);return this.select(function(){return this.appendChild(e.apply(this,arguments))})}function Fn(){return null}function Gn(t,e){var n=typeof t=="function"?t:Et(t),r=e==null?Fn:typeof e=="function"?e:ft(e);return this.select(function(){return this.insertBefore(n.apply(this,arguments),r.apply(this,arguments)||null)})}function Dn(){var t=this.parentNode;t&&t.removeChild(this)}function Vn(){return this.each(Dn)}function In(){var t=this.cloneNode(!1),e=this.parentNode;return e?e.insertBefore(t,this.nextSibling):t}function qn(){var t=this.cloneNode(!0),e=this.parentNode;return e?e.insertBefore(t,this.nextSibling):t}function Hn(t){return this.select(t?qn:In)}function Xn(t){return arguments.length?this.property("__data__",t):this.node().__data__}function On(t){return function(e){t.call(this,e,this.__data__)}}function Pn(t){return t.trim().split(/^|\s+/).map(function(e){var n="",r=e.indexOf(".");return r>=0&&(n=e.slice(r+1),e=e.slice(0,r)),{type:e,name:n}})}function Ln(t){return function(){var e=this.__on;if(e){for(var n=0,r=-1,i=e.length,o;n<i;++n)o=e[n],(!t.type||o.type===t.type)&&o.name===t.name?this.removeEventListener(o.type,o.listener,o.options):e[++r]=o;++r?e.length=r:delete this.__on}}}function Yn(t,e,n){return function(){var r=this.__on,i,o=On(e);if(r){for(var s=0,a=r.length;s<a;++s)if((i=r[s]).type===t.type&&i.name===t.name){this.removeEventListener(i.type,i.listener,i.options),this.addEventListener(i.type,i.listener=o,i.options=n),i.value=e;return}}this.addEventListener(t.type,o,n),i={type:t.type,name:t.name,value:e,listener:o,options:n},r?r.push(i):this.__on=[i]}}function Bn(t,e,n){var r=Pn(t+""),i,o=r.length,s;if(arguments.length<2){var a=this.node().__on;if(a){for(var c=0,l=a.length,u;c<l;++c)for(i=0,u=a[c];i<o;++i)if((s=r[i]).type===u.type&&s.name===u.name)return u.value}return}for(a=e?Yn:Ln,i=0;i<o;++i)this.each(a(r[i],e,n));return this}function It(t,e,n){var r=Mt(t),i=r.CustomEvent;typeof i=="function"?i=new i(e,n):(i=r.document.createEvent("Event"),n?(i.initEvent(e,n.bubbles,n.cancelable),i.detail=n.detail):i.initEvent(e,!1,!1)),t.dispatchEvent(i)}function zn(t,e){return function(){return It(this,t,e)}}function Un(t,e){return function(){return It(this,t,e.apply(this,arguments))}}function Kn(t,e){return this.each((typeof e=="function"?Un:zn)(t,e))}function*Wn(){for(var t=this._groups,e=0,n=t.length;e<n;++e)for(var r=t[e],i=0,o=r.length,s;i<o;++i)(s=r[i])&&(yield s)}var qt=[null];function m(t,e){this._groups=t,this._parents=e}function I(){return new m([[document.documentElement]],qt)}function Jn(){return this}m.prototype=I.prototype={constructor:m,select:xe,selectAll:Se,selectChild:$e,selectChildren:Fe,filter:Ge,data:Xe,enter:De,exit:Pe,join:Le,merge:Ye,selection:Jn,order:Be,sort:ze,call:Ke,nodes:We,node:Je,size:Qe,empty:Ze,each:je,attr:an,style:fn,property:gn,classed:wn,text:Nn,html:En,raise:$n,lower:Rn,append:Mn,insert:Gn,remove:Vn,clone:Hn,datum:Xn,on:Bn,dispatch:Kn,[Symbol.iterator]:Wn};function Qn(t){return typeof t=="string"?new m([[document.querySelector(t)]],[document.documentElement]):new m([[t]],qt)}function dt(t,e,n){t.prototype=e.prototype=n,n.constructor=t}function Ht(t,e){var n=Object.create(t.prototype);for(var r in e)n[r]=e[r];return n}function q(){}var H=.7,Q=1/H,G="\\s*([+-]?\\d+)\\s*",X="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*",x="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*",Zn=/^#([0-9a-f]{3,8})$/,jn=new RegExp(`^rgb\\(${G},${G},${G}\\)$`),tr=new RegExp(`^rgb\\(${x},${x},${x}\\)$`),er=new RegExp(`^rgba\\(${G},${G},${G},${X}\\)$`),nr=new RegExp(`^rgba\\(${x},${x},${x},${X}\\)$`),rr=new RegExp(`^hsl\\(${X},${x},${x}\\)$`),ir=new RegExp(`^hsla\\(${X},${x},${x},${X}\\)$`),Xt={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};dt(q,O,{copy(t){return Object.assign(new this.constructor,this,t)},displayable(){return this.rgb().displayable()},hex:Ot,formatHex:Ot,formatHex8:or,formatHsl:sr,formatRgb:Pt,toString:Pt});function Ot(){return this.rgb().formatHex()}function or(){return this.rgb().formatHex8()}function sr(){return Ut(this).formatHsl()}function Pt(){return this.rgb().formatRgb()}function O(t){var e,n;return t=(t+"").trim().toLowerCase(),(e=Zn.exec(t))?(n=e[1].length,e=parseInt(e[1],16),n===6?Lt(e):n===3?new _(e>>8&15|e>>4&240,e>>4&15|e&240,(e&15)<<4|e&15,1):n===8?Z(e>>24&255,e>>16&255,e>>8&255,(e&255)/255):n===4?Z(e>>12&15|e>>8&240,e>>8&15|e>>4&240,e>>4&15|e&240,((e&15)<<4|e&15)/255):null):(e=jn.exec(t))?new _(e[1],e[2],e[3],1):(e=tr.exec(t))?new _(e[1]*255/100,e[2]*255/100,e[3]*255/100,1):(e=er.exec(t))?Z(e[1],e[2],e[3],e[4]):(e=nr.exec(t))?Z(e[1]*255/100,e[2]*255/100,e[3]*255/100,e[4]):(e=rr.exec(t))?zt(e[1],e[2]/100,e[3]/100,1):(e=ir.exec(t))?zt(e[1],e[2]/100,e[3]/100,e[4]):Xt.hasOwnProperty(t)?Lt(Xt[t]):t==="transparent"?new _(NaN,NaN,NaN,0):null}function Lt(t){return new _(t>>16&255,t>>8&255,t&255,1)}function Z(t,e,n,r){return r<=0&&(t=e=n=NaN),new _(t,e,n,r)}function ar(t){return t instanceof q||(t=O(t)),t?(t=t.rgb(),new _(t.r,t.g,t.b,t.opacity)):new _}function pt(t,e,n,r){return arguments.length===1?ar(t):new _(t,e,n,r??1)}function _(t,e,n,r){this.r=+t,this.g=+e,this.b=+n,this.opacity=+r}dt(_,pt,Ht(q,{brighter(t){return t=t==null?Q:Math.pow(Q,t),new _(this.r*t,this.g*t,this.b*t,this.opacity)},darker(t){return t=t==null?H:Math.pow(H,t),new _(this.r*t,this.g*t,this.b*t,this.opacity)},rgb(){return this},clamp(){return new _($(this.r),$(this.g),$(this.b),j(this.opacity))},displayable(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:Yt,formatHex:Yt,formatHex8:cr,formatRgb:Bt,toString:Bt}));function Yt(){return`#${T(this.r)}${T(this.g)}${T(this.b)}`}function cr(){return`#${T(this.r)}${T(this.g)}${T(this.b)}${T((isNaN(this.opacity)?1:this.opacity)*255)}`}function Bt(){const t=j(this.opacity);return`${t===1?"rgb(":"rgba("}${$(this.r)}, ${$(this.g)}, ${$(this.b)}${t===1?")":`, ${t})`}`}function j(t){return isNaN(t)?1:Math.max(0,Math.min(1,t))}function $(t){return Math.max(0,Math.min(255,Math.round(t)||0))}function T(t){return t=$(t),(t<16?"0":"")+t.toString(16)}function zt(t,e,n,r){return r<=0?t=e=n=NaN:n<=0||n>=1?t=e=NaN:e<=0&&(t=NaN),new w(t,e,n,r)}function Ut(t){if(t instanceof w)return new w(t.h,t.s,t.l,t.opacity);if(t instanceof q||(t=O(t)),!t)return new w;if(t instanceof w)return t;t=t.rgb();var e=t.r/255,n=t.g/255,r=t.b/255,i=Math.min(e,n,r),o=Math.max(e,n,r),s=NaN,a=o-i,c=(o+i)/2;return a?(e===o?s=(n-r)/a+(n<r)*6:n===o?s=(r-e)/a+2:s=(e-n)/a+4,a/=c<.5?o+i:2-o-i,s*=60):a=c>0&&c<1?0:s,new w(s,a,c,t.opacity)}function lr(t,e,n,r){return arguments.length===1?Ut(t):new w(t,e,n,r??1)}function w(t,e,n,r){this.h=+t,this.s=+e,this.l=+n,this.opacity=+r}dt(w,lr,Ht(q,{brighter(t){return t=t==null?Q:Math.pow(Q,t),new w(this.h,this.s,this.l*t,this.opacity)},darker(t){return t=t==null?H:Math.pow(H,t),new w(this.h,this.s,this.l*t,this.opacity)},rgb(){var t=this.h%360+(this.h<0)*360,e=isNaN(t)||isNaN(this.s)?0:this.s,n=this.l,r=n+(n<.5?n:1-n)*e,i=2*n-r;return new _(gt(t>=240?t-240:t+120,i,r),gt(t,i,r),gt(t<120?t+240:t-120,i,r),this.opacity)},clamp(){return new w(Kt(this.h),tt(this.s),tt(this.l),j(this.opacity))},displayable(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl(){const t=j(this.opacity);return`${t===1?"hsl(":"hsla("}${Kt(this.h)}, ${tt(this.s)*100}%, ${tt(this.l)*100}%${t===1?")":`, ${t})`}`}}));function Kt(t){return t=(t||0)%360,t<0?t+360:t}function tt(t){return Math.max(0,Math.min(1,t||0))}function gt(t,e,n){return(t<60?e+(n-e)*t/60:t<180?n:t<240?e+(n-e)*(240-t)/60:e)*255}const Wt=t=>()=>t;function ur(t,e){return function(n){return t+n*e}}function fr(t,e,n){return t=Math.pow(t,n),e=Math.pow(e,n)-t,n=1/n,function(r){return Math.pow(t+r*e,n)}}function hr(t){return(t=+t)==1?Jt:function(e,n){return n-e?fr(e,n,t):Wt(isNaN(e)?n:e)}}function Jt(t,e){var n=e-t;return n?ur(t,n):Wt(isNaN(t)?e:t)}const Qt=function t(e){var n=hr(e);function r(i,o){var s=n((i=pt(i)).r,(o=pt(o)).r),a=n(i.g,o.g),c=n(i.b,o.b),l=Jt(i.opacity,o.opacity);return function(u){return i.r=s(u),i.g=a(u),i.b=c(u),i.opacity=l(u),i+""}}return r.gamma=t,r}(1);function C(t,e){return t=+t,e=+e,function(n){return t*(1-n)+e*n}}var yt=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,_t=new RegExp(yt.source,"g");function dr(t){return function(){return t}}function pr(t){return function(e){return t(e)+""}}function gr(t,e){var n=yt.lastIndex=_t.lastIndex=0,r,i,o,s=-1,a=[],c=[];for(t=t+"",e=e+"";(r=yt.exec(t))&&(i=_t.exec(e));)(o=i.index)>n&&(o=e.slice(n,o),a[s]?a[s]+=o:a[++s]=o),(r=r[0])===(i=i[0])?a[s]?a[s]+=i:a[++s]=i:(a[++s]=null,c.push({i:s,x:C(r,i)})),n=_t.lastIndex;return n<e.length&&(o=e.slice(n),a[s]?a[s]+=o:a[++s]=o),a.length<2?c[0]?pr(c[0].x):dr(e):(e=c.length,function(l){for(var u=0,f;u<e;++u)a[(f=c[u]).i]=f.x(l);return a.join("")})}var Zt=180/Math.PI,mt={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1};function jt(t,e,n,r,i,o){var s,a,c;return(s=Math.sqrt(t*t+e*e))&&(t/=s,e/=s),(c=t*n+e*r)&&(n-=t*c,r-=e*c),(a=Math.sqrt(n*n+r*r))&&(n/=a,r/=a,c/=a),t*r<e*n&&(t=-t,e=-e,c=-c,s=-s),{translateX:i,translateY:o,rotate:Math.atan2(e,t)*Zt,skewX:Math.atan(c)*Zt,scaleX:s,scaleY:a}}var et;function yr(t){const e=new(typeof DOMMatrix=="function"?DOMMatrix:WebKitCSSMatrix)(t+"");return e.isIdentity?mt:jt(e.a,e.b,e.c,e.d,e.e,e.f)}function _r(t){return t==null||(et||(et=document.createElementNS("http://www.w3.org/2000/svg","g")),et.setAttribute("transform",t),!(t=et.transform.baseVal.consolidate()))?mt:(t=t.matrix,jt(t.a,t.b,t.c,t.d,t.e,t.f))}function te(t,e,n,r){function i(l){return l.length?l.pop()+" ":""}function o(l,u,f,h,d,p){if(l!==f||u!==h){var y=d.push("translate(",null,e,null,n);p.push({i:y-4,x:C(l,f)},{i:y-2,x:C(u,h)})}else(f||h)&&d.push("translate("+f+e+h+n)}function s(l,u,f,h){l!==u?(l-u>180?u+=360:u-l>180&&(l+=360),h.push({i:f.push(i(f)+"rotate(",null,r)-2,x:C(l,u)})):u&&f.push(i(f)+"rotate("+u+r)}function a(l,u,f,h){l!==u?h.push({i:f.push(i(f)+"skewX(",null,r)-2,x:C(l,u)}):u&&f.push(i(f)+"skewX("+u+r)}function c(l,u,f,h,d,p){if(l!==f||u!==h){var y=d.push(i(d)+"scale(",null,",",null,")");p.push({i:y-4,x:C(l,f)},{i:y-2,x:C(u,h)})}else(f!==1||h!==1)&&d.push(i(d)+"scale("+f+","+h+")")}return function(l,u){var f=[],h=[];return l=t(l),u=t(u),o(l.translateX,l.translateY,u.translateX,u.translateY,f,h),s(l.rotate,u.rotate,f,h),a(l.skewX,u.skewX,f,h),c(l.scaleX,l.scaleY,u.scaleX,u.scaleY,f,h),l=u=null,function(d){for(var p=-1,y=h.length,M;++p<y;)f[(M=h[p]).i]=M.x(d);return f.join("")}}}var mr=te(yr,"px, ","px)","deg)"),wr=te(_r,", ",")",")"),D=0,P=0,L=0,ee=1e3,nt,Y,rt=0,R=0,it=0,B=typeof performance=="object"&&performance.now?performance:Date,ne=typeof window=="object"&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(t){setTimeout(t,17)};function wt(){return R||(ne(vr),R=B.now()+it)}function vr(){R=0}function ot(){this._call=this._time=this._next=null}ot.prototype=re.prototype={constructor:ot,restart:function(t,e,n){if(typeof t!="function")throw new TypeError("callback is not a function");n=(n==null?wt():+n)+(e==null?0:+e),!this._next&&Y!==this&&(Y?Y._next=this:nt=this,Y=this),this._call=t,this._time=n,vt()},stop:function(){this._call&&(this._call=null,this._time=1/0,vt())}};function re(t,e,n){var r=new ot;return r.restart(t,e,n),r}function xr(){wt(),++D;for(var t=nt,e;t;)(e=R-t._time)>=0&&t._call.call(void 0,e),t=t._next;--D}function ie(){R=(rt=B.now())+it,D=P=0;try{xr()}finally{D=0,Nr(),R=0}}function br(){var t=B.now(),e=t-rt;e>ee&&(it-=e,rt=t)}function Nr(){for(var t,e=nt,n,r=1/0;e;)e._call?(r>e._time&&(r=e._time),t=e,e=e._next):(n=e._next,e._next=null,e=t?t._next=n:nt=n);Y=t,vt(r)}function vt(t){if(!D){P&&(P=clearTimeout(P));var e=t-R;e>24?(t<1/0&&(P=setTimeout(ie,t-B.now()-it)),L&&(L=clearInterval(L))):(L||(rt=B.now(),L=setInterval(br,ee)),D=1,ne(ie))}}function oe(t,e,n){var r=new ot;return e=e==null?0:+e,r.restart(i=>{r.stop(),t(i+e)},e,n),r}var kr=E("start","end","cancel","interrupt"),Sr=[],se=0,ae=1,xt=2,st=3,ce=4,bt=5,at=6;function ct(t,e,n,r,i,o){var s=t.__transition;if(!s)t.__transition={};else if(n in s)return;Ar(t,n,{name:e,index:r,group:i,on:kr,tween:Sr,time:o.time,delay:o.delay,duration:o.duration,ease:o.ease,timer:null,state:se})}function Nt(t,e){var n=v(t,e);if(n.state>se)throw new Error("too late; already scheduled");return n}function b(t,e){var n=v(t,e);if(n.state>st)throw new Error("too late; already running");return n}function v(t,e){var n=t.__transition;if(!n||!(n=n[e]))throw new Error("transition not found");return n}function Ar(t,e,n){var r=t.__transition,i;r[e]=n,n.timer=re(o,0,n.time);function o(l){n.state=ae,n.timer.restart(s,n.delay,n.time),n.delay<=l&&s(l-n.delay)}function s(l){var u,f,h,d;if(n.state!==ae)return c();for(u in r)if(d=r[u],d.name===n.name){if(d.state===st)return oe(s);d.state===ce?(d.state=at,d.timer.stop(),d.on.call("interrupt",t,t.__data__,d.index,d.group),delete r[u]):+u<e&&(d.state=at,d.timer.stop(),d.on.call("cancel",t,t.__data__,d.index,d.group),delete r[u])}if(oe(function(){n.state===st&&(n.state=ce,n.timer.restart(a,n.delay,n.time),a(l))}),n.state=xt,n.on.call("start",t,t.__data__,n.index,n.group),n.state===xt){for(n.state=st,i=new Array(h=n.tween.length),u=0,f=-1;u<h;++u)(d=n.tween[u].value.call(t,t.__data__,n.index,n.group))&&(i[++f]=d);i.length=f+1}}function a(l){for(var u=l<n.duration?n.ease.call(null,l/n.duration):(n.timer.restart(c),n.state=bt,1),f=-1,h=i.length;++f<h;)i[f].call(t,u);n.state===bt&&(n.on.call("end",t,t.__data__,n.index,n.group),c())}function c(){n.state=at,n.timer.stop(),delete r[e];for(var l in r)return;delete t.__transition}}function Er(t,e){var n=t.__transition,r,i,o=!0,s;if(n){e=e==null?null:e+"";for(s in n){if((r=n[s]).name!==e){o=!1;continue}i=r.state>xt&&r.state<bt,r.state=at,r.timer.stop(),r.on.call(i?"interrupt":"cancel",t,t.__data__,r.index,r.group),delete n[s]}o&&delete t.__transition}}function Cr(t){return this.each(function(){Er(this,t)})}function $r(t,e){var n,r;return function(){var i=b(this,t),o=i.tween;if(o!==n){r=n=o;for(var s=0,a=r.length;s<a;++s)if(r[s].name===e){r=r.slice(),r.splice(s,1);break}}i.tween=r}}function Tr(t,e,n){var r,i;if(typeof n!="function")throw new Error;return function(){var o=b(this,t),s=o.tween;if(s!==r){i=(r=s).slice();for(var a={name:e,value:n},c=0,l=i.length;c<l;++c)if(i[c].name===e){i[c]=a;break}c===l&&i.push(a)}o.tween=i}}function Rr(t,e){var n=this._id;if(t+="",arguments.length<2){for(var r=v(this.node(),n).tween,i=0,o=r.length,s;i<o;++i)if((s=r[i]).name===t)return s.value;return null}return this.each((e==null?$r:Tr)(n,t,e))}function kt(t,e,n){var r=t._id;return t.each(function(){var i=b(this,r);(i.value||(i.value={}))[e]=n.apply(this,arguments)}),function(i){return v(i,r).value[e]}}function le(t,e){var n;return(typeof e=="number"?C:e instanceof O?Qt:(n=O(e))?(e=n,Qt):gr)(t,e)}function Mr(t){return function(){this.removeAttribute(t)}}function Fr(t){return function(){this.removeAttributeNS(t.space,t.local)}}function Gr(t,e,n){var r,i=n+"",o;return function(){var s=this.getAttribute(t);return s===i?null:s===r?o:o=e(r=s,n)}}function Dr(t,e,n){var r,i=n+"",o;return function(){var s=this.getAttributeNS(t.space,t.local);return s===i?null:s===r?o:o=e(r=s,n)}}function Vr(t,e,n){var r,i,o;return function(){var s,a=n(this),c;return a==null?void this.removeAttribute(t):(s=this.getAttribute(t),c=a+"",s===c?null:s===r&&c===i?o:(i=c,o=e(r=s,a)))}}function Ir(t,e,n){var r,i,o;return function(){var s,a=n(this),c;return a==null?void this.removeAttributeNS(t.space,t.local):(s=this.getAttributeNS(t.space,t.local),c=a+"",s===c?null:s===r&&c===i?o:(i=c,o=e(r=s,a)))}}function qr(t,e){var n=W(t),r=n==="transform"?wr:le;return this.attrTween(t,typeof e=="function"?(n.local?Ir:Vr)(n,r,kt(this,"attr."+t,e)):e==null?(n.local?Fr:Mr)(n):(n.local?Dr:Gr)(n,r,e))}function Hr(t,e){return function(n){this.setAttribute(t,e.call(this,n))}}function Xr(t,e){return function(n){this.setAttributeNS(t.space,t.local,e.call(this,n))}}function Or(t,e){var n,r;function i(){var o=e.apply(this,arguments);return o!==r&&(n=(r=o)&&Xr(t,o)),n}return i._value=e,i}function Pr(t,e){var n,r;function i(){var o=e.apply(this,arguments);return o!==r&&(n=(r=o)&&Hr(t,o)),n}return i._value=e,i}function Lr(t,e){var n="attr."+t;if(arguments.length<2)return(n=this.tween(n))&&n._value;if(e==null)return this.tween(n,null);if(typeof e!="function")throw new Error;var r=W(t);return this.tween(n,(r.local?Or:Pr)(r,e))}function Yr(t,e){return function(){Nt(this,t).delay=+e.apply(this,arguments)}}function Br(t,e){return e=+e,function(){Nt(this,t).delay=e}}function zr(t){var e=this._id;return arguments.length?this.each((typeof t=="function"?Yr:Br)(e,t)):v(this.node(),e).delay}function Ur(t,e){return function(){b(this,t).duration=+e.apply(this,arguments)}}function Kr(t,e){return e=+e,function(){b(this,t).duration=e}}function Wr(t){var e=this._id;return arguments.length?this.each((typeof t=="function"?Ur:Kr)(e,t)):v(this.node(),e).duration}function Jr(t,e){if(typeof e!="function")throw new Error;return function(){b(this,t).ease=e}}function Qr(t){var e=this._id;return arguments.length?this.each(Jr(e,t)):v(this.node(),e).ease}function Zr(t,e){return function(){var n=e.apply(this,arguments);if(typeof n!="function")throw new Error;b(this,t).ease=n}}function jr(t){if(typeof t!="function")throw new Error;return this.each(Zr(this._id,t))}function ti(t){typeof t!="function"&&(t=$t(t));for(var e=this._groups,n=e.length,r=new Array(n),i=0;i<n;++i)for(var o=e[i],s=o.length,a=r[i]=[],c,l=0;l<s;++l)(c=o[l])&&t.call(c,c.__data__,l,o)&&a.push(c);return new S(r,this._parents,this._name,this._id)}function ei(t){if(t._id!==this._id)throw new Error;for(var e=this._groups,n=t._groups,r=e.length,i=n.length,o=Math.min(r,i),s=new Array(r),a=0;a<o;++a)for(var c=e[a],l=n[a],u=c.length,f=s[a]=new Array(u),h,d=0;d<u;++d)(h=c[d]||l[d])&&(f[d]=h);for(;a<r;++a)s[a]=e[a];return new S(s,this._parents,this._name,this._id)}function ni(t){return(t+"").trim().split(/^|\s+/).every(function(e){var n=e.indexOf(".");return n>=0&&(e=e.slice(0,n)),!e||e==="start"})}function ri(t,e,n){var r,i,o=ni(e)?Nt:b;return function(){var s=o(this,t),a=s.on;a!==r&&(i=(r=a).copy()).on(e,n),s.on=i}}function ii(t,e){var n=this._id;return arguments.length<2?v(this.node(),n).on.on(t):this.each(ri(n,t,e))}function oi(t){return function(){var e=this.parentNode;for(var n in this.__transition)if(+n!==t)return;e&&e.removeChild(this)}}function si(){return this.on("end.remove",oi(this._id))}function ai(t){var e=this._name,n=this._id;typeof t!="function"&&(t=ft(t));for(var r=this._groups,i=r.length,o=new Array(i),s=0;s<i;++s)for(var a=r[s],c=a.length,l=o[s]=new Array(c),u,f,h=0;h<c;++h)(u=a[h])&&(f=t.call(u,u.__data__,h,a))&&("__data__"in u&&(f.__data__=u.__data__),l[h]=f,ct(l[h],e,n,h,l,v(u,n)));return new S(o,this._parents,e,n)}function ci(t){var e=this._name,n=this._id;typeof t!="function"&&(t=Ct(t));for(var r=this._groups,i=r.length,o=[],s=[],a=0;a<i;++a)for(var c=r[a],l=c.length,u,f=0;f<l;++f)if(u=c[f]){for(var h=t.call(u,u.__data__,f,c),d,p=v(u,n),y=0,M=h.length;y<M;++y)(d=h[y])&&ct(d,e,n,y,h,p);o.push(h),s.push(u)}return new S(o,s,e,n)}var li=I.prototype.constructor;function ui(){return new li(this._groups,this._parents)}function fi(t,e){var n,r,i;return function(){var o=F(this,t),s=(this.style.removeProperty(t),F(this,t));return o===s?null:o===n&&s===r?i:i=e(n=o,r=s)}}function ue(t){return function(){this.style.removeProperty(t)}}function hi(t,e,n){var r,i=n+"",o;return function(){var s=F(this,t);return s===i?null:s===r?o:o=e(r=s,n)}}function di(t,e,n){var r,i,o;return function(){var s=F(this,t),a=n(this),c=a+"";return a==null&&(c=a=(this.style.removeProperty(t),F(this,t))),s===c?null:s===r&&c===i?o:(i=c,o=e(r=s,a))}}function pi(t,e){var n,r,i,o="style."+e,s="end."+o,a;return function(){var c=b(this,t),l=c.on,u=c.value[o]==null?a||(a=ue(e)):void 0;(l!==n||i!==u)&&(r=(n=l).copy()).on(s,i=u),c.on=r}}function gi(t,e,n){var r=(t+="")=="transform"?mr:le;return e==null?this.styleTween(t,fi(t,r)).on("end.style."+t,ue(t)):typeof e=="function"?this.styleTween(t,di(t,r,kt(this,"style."+t,e))).each(pi(this._id,t)):this.styleTween(t,hi(t,r,e),n).on("end.style."+t,null)}function yi(t,e,n){return function(r){this.style.setProperty(t,e.call(this,r),n)}}function _i(t,e,n){var r,i;function o(){var s=e.apply(this,arguments);return s!==i&&(r=(i=s)&&yi(t,s,n)),r}return o._value=e,o}function mi(t,e,n){var r="style."+(t+="");if(arguments.length<2)return(r=this.tween(r))&&r._value;if(e==null)return this.tween(r,null);if(typeof e!="function")throw new Error;return this.tween(r,_i(t,e,n??""))}function wi(t){return function(){this.textContent=t}}function vi(t){return function(){var e=t(this);this.textContent=e??""}}function xi(t){return this.tween("text",typeof t=="function"?vi(kt(this,"text",t)):wi(t==null?"":t+""))}function bi(t){return function(e){this.textContent=t.call(this,e)}}function Ni(t){var e,n;function r(){var i=t.apply(this,arguments);return i!==n&&(e=(n=i)&&bi(i)),e}return r._value=t,r}function ki(t){var e="text";if(arguments.length<1)return(e=this.tween(e))&&e._value;if(t==null)return this.tween(e,null);if(typeof t!="function")throw new Error;return this.tween(e,Ni(t))}function Si(){for(var t=this._name,e=this._id,n=fe(),r=this._groups,i=r.length,o=0;o<i;++o)for(var s=r[o],a=s.length,c,l=0;l<a;++l)if(c=s[l]){var u=v(c,e);ct(c,t,n,l,s,{time:u.time+u.delay+u.duration,delay:0,duration:u.duration,ease:u.ease})}return new S(r,this._parents,t,n)}function Ai(){var t,e,n=this,r=n._id,i=n.size();return new Promise(function(o,s){var a={value:s},c={value:function(){--i===0&&o()}};n.each(function(){var l=b(this,r),u=l.on;u!==t&&(e=(t=u).copy(),e._.cancel.push(a),e._.interrupt.push(a),e._.end.push(c)),l.on=e}),i===0&&o()})}var Ei=0;function S(t,e,n,r){this._groups=t,this._parents=e,this._name=n,this._id=r}function fe(){return++Ei}var A=I.prototype;S.prototype={constructor:S,select:ai,selectAll:ci,selectChild:A.selectChild,selectChildren:A.selectChildren,filter:ti,merge:ei,selection:ui,transition:Si,call:A.call,nodes:A.nodes,node:A.node,size:A.size,empty:A.empty,each:A.each,on:ii,attr:qr,attrTween:Lr,style:gi,styleTween:mi,text:xi,textTween:ki,remove:si,tween:Rr,delay:zr,duration:Wr,ease:Qr,easeVarying:jr,end:Ai,[Symbol.iterator]:A[Symbol.iterator]};const Ci=t=>+t;function $i(t){return((t*=2)<=1?t*t*t:(t-=2)*t*t+2)/2}var Ti={time:null,delay:0,duration:250,ease:$i};function Ri(t,e){for(var n;!(n=t.__transition)||!(n=n[e]);)if(!(t=t.parentNode))throw new Error(`transition ${e} not found`);return n}function Mi(t){var e,n;t instanceof S?(e=t._id,t=t._name):(e=fe(),(n=Ti).time=wt(),t=t==null?null:t+"");for(var r=this._groups,i=r.length,o=0;o<i;++o)for(var s=r[o],a=s.length,c,l=0;l<a;++l)(c=s[l])&&ct(c,t,e,l,s,n||Ri(c,e));return new S(r,this._parents,t,e)}I.prototype.interrupt=Cr,I.prototype.transition=Mi;function z(t,e,n){this.k=t,this.x=e,this.y=n}z.prototype={constructor:z,scale:function(t){return t===1?this:new z(this.k*t,this.x,this.y)},translate:function(t,e){return t===0&e===0?this:new z(this.k,this.x+this.k*t,this.y+this.k*e)},apply:function(t){return[t[0]*this.k+this.x,t[1]*this.k+this.y]},applyX:function(t){return t*this.k+this.x},applyY:function(t){return t*this.k+this.y},invert:function(t){return[(t[0]-this.x)/this.k,(t[1]-this.y)/this.k]},invertX:function(t){return(t-this.x)/this.k},invertY:function(t){return(t-this.y)/this.k},rescaleX:function(t){return t.copy().domain(t.range().map(this.invertX,this).map(t.invert,t))},rescaleY:function(t){return t.copy().domain(t.range().map(this.invertY,this).map(t.invert,t))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}},z.prototype;const g=(t,e)=>{const n=document.querySelector(t);if(n===null)throw new Error("Cannot find selector "+t);if(e!==void 0&&!(n instanceof e))throw new Error(`Selector ${t} not of type ${e}`);return n},he={"02-fitts":[t=>{const e=g("svg.fitts g.big-target1",SVGGElement);t.createCircle(e,40,50,35),t.createCircle(e,40,50,25),t.createCircle(e,40,50,15),t.createCircle(e,40,50,5);const n=g("svg.fitts g.big-target2",SVGGElement);t.createCircle(n,40,50,35),t.createCircle(n,40,50,25),t.createCircle(n,40,50,15),t.createCircle(n,40,50,5);const r=g("svg.fitts g.small-target",SVGGElement);t.createCircle(r,40,50,5)}],"01-purpose":[t=>{const e=g("svg.purpose g.target",SVGGElement);t.createCircle(e,150,50,40),t.createCircle(e,150,50,30),t.createCircle(e,150,50,20),t.createCircle(e,150,50,10),t.createCircle(e,150,50,1)}],"03-hick":[t=>{const e=g("svg.hick g.choice-01",SVGGElement);t.createForm(e,"polygon",{points:"0,0 0,0 0,0 0,0"},{points:"0,0 0,40 40,40"},{duration:300,delay:t.getDelay()});const n=g("svg.hick g.choice-02",SVGGElement);t.createForm(n,"polygon",{points:"0,0 0,0 0,0 0,0"},{points:"0,0 0,40 40,40 40,0"},{duration:300,delay:t.getDelay()});const r=g("svg.hick g.choice-03",SVGGElement);t.createForm(r,"polygon",{points:"0,0 0,0 0,0 0,0"},{points:"0,40 40,40 40,0"},{duration:300,delay:t.getDelay()});const i=g("svg.hick g.choice-04",SVGGElement);t.createForm(i,"polygon",{points:"0,0 0,0 0,0 0,0"},{points:"0,0 20,40 40,0"},{duration:300,delay:t.getDelay()});const o=g("svg.hick g.choice-05",SVGGElement);t.createForm(o,"polygon",{points:"0,0 0,0 0,0 0,0"},{points:"0,0 0,40 40,20"},{duration:300,delay:t.getDelay()});const s=g("svg.hick g.choice-06",SVGGElement);t.createForm(s,"polygon",{points:"0,0 0,0 0,0 0,0"},{points:"0,40 40,40 20,0"},{duration:300,delay:t.getDelay()})}],"04-jakob":[t=>{const e=g("svg.jakob g.app-1",SVGGElement);t.createCircle(e,40,50,35);const n=g("svg.jakob g.app-2",SVGGElement);t.createCircle(n,40,50,35);const r=g("svg.jakob g.your-app",SVGGElement);t.createCircle(r,40,50,35)}],"07-goal-gradient":[t=>{const e=g("svg.gradient g",SVGGElement);t.createRect(e,5,30,40,40,1),t.createRect(e,50,30,40,40,2),t.createRect(e,95,30,40,40,3),t.createRect(e,140,30,40,40,4),t.createRect(e,185,30,40,40,5),t.createRect(e,230,30,40,40,6)}],"08-gestalt":[t=>{const e=g("svg.gestalt g",SVGGElement);for(let n=0;n<5;n++)for(let r=0;r<4;r++)t.createCircle(e,n*20+100,r*20+20,5,{class:"full",delay:0,duration:300})}],"09-law-of-proximity":[t=>{const e=g("svg.proximity g",SVGGElement);for(let n=0;n<5;n++)for(let r=0;r<4;r++){const i=n>1&&r<2?8:0;t.createCircle(e,n*20+100+i,r*20+20-i,5,{class:"full",delay:0,duration:300})}}],"10-law-of-similarity":[t=>{const e=g("svg.similarity g",SVGGElement);for(let n=0;n<5;n++)for(let r=0;r<4;r++){const i=n>1&&r<2?"":"full";t.createCircle(e,n*20+100,r*20+20,5,{class:i,delay:0,duration:300})}}]},de=new Set;for(const t of Object.values(he))for(const e of t)de.add(e);const Fi=[...de];class Gi{constructor(){V(this,"delayCounter",0);V(this,"delayIncrement",100);V(this,"useTransition",!1);V(this,"svgName");V(this,"createForm",(e,n,r,i,o)=>{const s={duration:2e3,delay:1e3,class:"",...o};this.useTransition||(s.delay=0,s.duration=0);const a=Qn(e).append(n);for(const[l,u]of Object.entries(r))a.attr(l,u);s.class&&a.attr("class",s.class);const c=a.transition().duration(s.duration).delay(s.delay).ease(Ci);for(const[l,u]of Object.entries(i))c.attr(l,u)});this.initSvgName()}initSvgName(){const e=window.location.pathname.match(/^.*\/cards\/(.*)(.html)$/);if(console.log("regex: ",e),e instanceof Array&&e.length>2){this.svgName=e[1],this.useTransition=!0;return}this.useTransition=!1}initSvg(){const e=this.svgName?he[this.svgName]:Fi;if(e!==void 0)for(const n of e)n(this)}getDelay(){return this.delayCounter+=this.delayIncrement,this.delayCounter}createCircle(e,n,r,i,o){const s={duration:300,delay:this.getDelay(),...o};return this.createForm(e,"circle",{cx:n,cy:r,r:0},{r:i},s)}createPolygon(e,n){return this.createForm(e,"polygon",{points:""},{points:n},{duration:300,delay:this.getDelay()})}createPolyline(e,n){return this.createForm(e,"polyline",{points:""},{points:n},{duration:300,delay:this.getDelay()})}createRect(e,n,r,i,o,s=0){return this.createForm(e,"rect",{x:n,y:r,width:i,height:0,opacity:s*(1/6)},{height:o},{duration:300,delay:this.getDelay()})}}(()=>{const t=window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches,e=document.body.classList;t?e.add("dark"):e.add("light"),window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change",n=>{const r=n.matches?"dark":"light";console.log("colorScheme: ",r),e.remove("dark"),e.remove("light"),r==="dark"?e.add("dark"):e.add("light")})})(),new Gi().initSvg()});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLnVtZC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2QzLWRpc3BhdGNoL3NyYy9kaXNwYXRjaC5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL25hbWVzcGFjZXMuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9uYW1lc3BhY2UuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9jcmVhdG9yLmpzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0b3IuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vc2VsZWN0LmpzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvYXJyYXkuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3RvckFsbC5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9zZWxlY3RBbGwuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9tYXRjaGVyLmpzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL3NlbGVjdENoaWxkLmpzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL3NlbGVjdENoaWxkcmVuLmpzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL2ZpbHRlci5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9zcGFyc2UuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vZW50ZXIuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9jb25zdGFudC5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9kYXRhLmpzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL2V4aXQuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vam9pbi5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9tZXJnZS5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9vcmRlci5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9zb3J0LmpzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL2NhbGwuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vbm9kZXMuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vbm9kZS5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9zaXplLmpzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL2VtcHR5LmpzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL2VhY2guanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vYXR0ci5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3dpbmRvdy5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9zdHlsZS5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9wcm9wZXJ0eS5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9jbGFzc2VkLmpzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL3RleHQuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vaHRtbC5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9yYWlzZS5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9sb3dlci5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9hcHBlbmQuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vaW5zZXJ0LmpzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL3JlbW92ZS5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9jbG9uZS5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9kYXR1bS5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9vbi5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9kaXNwYXRjaC5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9pdGVyYXRvci5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9pbmRleC5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdC5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1jb2xvci9zcmMvZGVmaW5lLmpzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2QzLWNvbG9yL3NyYy9jb2xvci5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvY29uc3RhbnQuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtaW50ZXJwb2xhdGUvc3JjL2NvbG9yLmpzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2QzLWludGVycG9sYXRlL3NyYy9yZ2IuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtaW50ZXJwb2xhdGUvc3JjL251bWJlci5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvc3RyaW5nLmpzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2QzLWludGVycG9sYXRlL3NyYy90cmFuc2Zvcm0vZGVjb21wb3NlLmpzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2QzLWludGVycG9sYXRlL3NyYy90cmFuc2Zvcm0vcGFyc2UuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtaW50ZXJwb2xhdGUvc3JjL3RyYW5zZm9ybS9pbmRleC5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy10aW1lci9zcmMvdGltZXIuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtdGltZXIvc3JjL3RpbWVvdXQuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi9zY2hlZHVsZS5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy9pbnRlcnJ1cHQuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvc2VsZWN0aW9uL2ludGVycnVwdC5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy90cmFuc2l0aW9uL3R3ZWVuLmpzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vaW50ZXJwb2xhdGUuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi9hdHRyLmpzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vYXR0clR3ZWVuLmpzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vZGVsYXkuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi9kdXJhdGlvbi5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy90cmFuc2l0aW9uL2Vhc2UuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi9lYXNlVmFyeWluZy5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy90cmFuc2l0aW9uL2ZpbHRlci5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy90cmFuc2l0aW9uL21lcmdlLmpzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vb24uanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi9yZW1vdmUuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi9zZWxlY3QuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi9zZWxlY3RBbGwuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi9zZWxlY3Rpb24uanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi9zdHlsZS5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy90cmFuc2l0aW9uL3N0eWxlVHdlZW4uanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi90ZXh0LmpzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vdGV4dFR3ZWVuLmpzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vdHJhbnNpdGlvbi5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy90cmFuc2l0aW9uL2VuZC5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy90cmFuc2l0aW9uL2luZGV4LmpzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2QzLWVhc2Uvc3JjL2xpbmVhci5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1lYXNlL3NyYy9jdWJpYy5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy9zZWxlY3Rpb24vdHJhbnNpdGlvbi5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy9zZWxlY3Rpb24vaW5kZXguanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtem9vbS9zcmMvdHJhbnNmb3JtLmpzIiwiLi4vLi4vLi4vc3JjL21pc2MudHMiLCIuLi8uLi8uLi9zcmMvc3ZnQ29uZmlnLnRzIiwiLi4vLi4vLi4vc3JjL3N2Z3MvZml0dHMudHMiLCIuLi8uLi8uLi9zcmMvc3Zncy9wdXJwb3NlLnRzIiwiLi4vLi4vLi4vc3JjL3N2Z3MvaGljay50cyIsIi4uLy4uLy4uL3NyYy9zdmdzL2pha29iLnRzIiwiLi4vLi4vLi4vc3JjL3N2Z3MvZ3JhZGllbnQudHMiLCIuLi8uLi8uLi9zcmMvc3Zncy9nZXN0YWx0LnRzIiwiLi4vLi4vLi4vc3JjL3N2Z3MvcHJveGltaXR5LnRzIiwiLi4vLi4vLi4vc3JjL3N2Z3Mvc2ltaWxhcml0eS50cyIsIi4uLy4uLy4uL3NyYy9TVkdUb29sLnRzIiwiLi4vLi4vLi4vc3JjL3RoZW1lLnRzIiwiLi4vLi4vLi4vc3JjL21haW4udHMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIG5vb3AgPSB7dmFsdWU6ICgpID0+IHt9fTtcblxuZnVuY3Rpb24gZGlzcGF0Y2goKSB7XG4gIGZvciAodmFyIGkgPSAwLCBuID0gYXJndW1lbnRzLmxlbmd0aCwgXyA9IHt9LCB0OyBpIDwgbjsgKytpKSB7XG4gICAgaWYgKCEodCA9IGFyZ3VtZW50c1tpXSArIFwiXCIpIHx8ICh0IGluIF8pIHx8IC9bXFxzLl0vLnRlc3QodCkpIHRocm93IG5ldyBFcnJvcihcImlsbGVnYWwgdHlwZTogXCIgKyB0KTtcbiAgICBfW3RdID0gW107XG4gIH1cbiAgcmV0dXJuIG5ldyBEaXNwYXRjaChfKTtcbn1cblxuZnVuY3Rpb24gRGlzcGF0Y2goXykge1xuICB0aGlzLl8gPSBfO1xufVxuXG5mdW5jdGlvbiBwYXJzZVR5cGVuYW1lcyh0eXBlbmFtZXMsIHR5cGVzKSB7XG4gIHJldHVybiB0eXBlbmFtZXMudHJpbSgpLnNwbGl0KC9efFxccysvKS5tYXAoZnVuY3Rpb24odCkge1xuICAgIHZhciBuYW1lID0gXCJcIiwgaSA9IHQuaW5kZXhPZihcIi5cIik7XG4gICAgaWYgKGkgPj0gMCkgbmFtZSA9IHQuc2xpY2UoaSArIDEpLCB0ID0gdC5zbGljZSgwLCBpKTtcbiAgICBpZiAodCAmJiAhdHlwZXMuaGFzT3duUHJvcGVydHkodCkpIHRocm93IG5ldyBFcnJvcihcInVua25vd24gdHlwZTogXCIgKyB0KTtcbiAgICByZXR1cm4ge3R5cGU6IHQsIG5hbWU6IG5hbWV9O1xuICB9KTtcbn1cblxuRGlzcGF0Y2gucHJvdG90eXBlID0gZGlzcGF0Y2gucHJvdG90eXBlID0ge1xuICBjb25zdHJ1Y3RvcjogRGlzcGF0Y2gsXG4gIG9uOiBmdW5jdGlvbih0eXBlbmFtZSwgY2FsbGJhY2spIHtcbiAgICB2YXIgXyA9IHRoaXMuXyxcbiAgICAgICAgVCA9IHBhcnNlVHlwZW5hbWVzKHR5cGVuYW1lICsgXCJcIiwgXyksXG4gICAgICAgIHQsXG4gICAgICAgIGkgPSAtMSxcbiAgICAgICAgbiA9IFQubGVuZ3RoO1xuXG4gICAgLy8gSWYgbm8gY2FsbGJhY2sgd2FzIHNwZWNpZmllZCwgcmV0dXJuIHRoZSBjYWxsYmFjayBvZiB0aGUgZ2l2ZW4gdHlwZSBhbmQgbmFtZS5cbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHtcbiAgICAgIHdoaWxlICgrK2kgPCBuKSBpZiAoKHQgPSAodHlwZW5hbWUgPSBUW2ldKS50eXBlKSAmJiAodCA9IGdldChfW3RdLCB0eXBlbmFtZS5uYW1lKSkpIHJldHVybiB0O1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIElmIGEgdHlwZSB3YXMgc3BlY2lmaWVkLCBzZXQgdGhlIGNhbGxiYWNrIGZvciB0aGUgZ2l2ZW4gdHlwZSBhbmQgbmFtZS5cbiAgICAvLyBPdGhlcndpc2UsIGlmIGEgbnVsbCBjYWxsYmFjayB3YXMgc3BlY2lmaWVkLCByZW1vdmUgY2FsbGJhY2tzIG9mIHRoZSBnaXZlbiBuYW1lLlxuICAgIGlmIChjYWxsYmFjayAhPSBudWxsICYmIHR5cGVvZiBjYWxsYmFjayAhPT0gXCJmdW5jdGlvblwiKSB0aHJvdyBuZXcgRXJyb3IoXCJpbnZhbGlkIGNhbGxiYWNrOiBcIiArIGNhbGxiYWNrKTtcbiAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgaWYgKHQgPSAodHlwZW5hbWUgPSBUW2ldKS50eXBlKSBfW3RdID0gc2V0KF9bdF0sIHR5cGVuYW1lLm5hbWUsIGNhbGxiYWNrKTtcbiAgICAgIGVsc2UgaWYgKGNhbGxiYWNrID09IG51bGwpIGZvciAodCBpbiBfKSBfW3RdID0gc2V0KF9bdF0sIHR5cGVuYW1lLm5hbWUsIG51bGwpO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzO1xuICB9LFxuICBjb3B5OiBmdW5jdGlvbigpIHtcbiAgICB2YXIgY29weSA9IHt9LCBfID0gdGhpcy5fO1xuICAgIGZvciAodmFyIHQgaW4gXykgY29weVt0XSA9IF9bdF0uc2xpY2UoKTtcbiAgICByZXR1cm4gbmV3IERpc3BhdGNoKGNvcHkpO1xuICB9LFxuICBjYWxsOiBmdW5jdGlvbih0eXBlLCB0aGF0KSB7XG4gICAgaWYgKChuID0gYXJndW1lbnRzLmxlbmd0aCAtIDIpID4gMCkgZm9yICh2YXIgYXJncyA9IG5ldyBBcnJheShuKSwgaSA9IDAsIG4sIHQ7IGkgPCBuOyArK2kpIGFyZ3NbaV0gPSBhcmd1bWVudHNbaSArIDJdO1xuICAgIGlmICghdGhpcy5fLmhhc093blByb3BlcnR5KHR5cGUpKSB0aHJvdyBuZXcgRXJyb3IoXCJ1bmtub3duIHR5cGU6IFwiICsgdHlwZSk7XG4gICAgZm9yICh0ID0gdGhpcy5fW3R5cGVdLCBpID0gMCwgbiA9IHQubGVuZ3RoOyBpIDwgbjsgKytpKSB0W2ldLnZhbHVlLmFwcGx5KHRoYXQsIGFyZ3MpO1xuICB9LFxuICBhcHBseTogZnVuY3Rpb24odHlwZSwgdGhhdCwgYXJncykge1xuICAgIGlmICghdGhpcy5fLmhhc093blByb3BlcnR5KHR5cGUpKSB0aHJvdyBuZXcgRXJyb3IoXCJ1bmtub3duIHR5cGU6IFwiICsgdHlwZSk7XG4gICAgZm9yICh2YXIgdCA9IHRoaXMuX1t0eXBlXSwgaSA9IDAsIG4gPSB0Lmxlbmd0aDsgaSA8IG47ICsraSkgdFtpXS52YWx1ZS5hcHBseSh0aGF0LCBhcmdzKTtcbiAgfVxufTtcblxuZnVuY3Rpb24gZ2V0KHR5cGUsIG5hbWUpIHtcbiAgZm9yICh2YXIgaSA9IDAsIG4gPSB0eXBlLmxlbmd0aCwgYzsgaSA8IG47ICsraSkge1xuICAgIGlmICgoYyA9IHR5cGVbaV0pLm5hbWUgPT09IG5hbWUpIHtcbiAgICAgIHJldHVybiBjLnZhbHVlO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBzZXQodHlwZSwgbmFtZSwgY2FsbGJhY2spIHtcbiAgZm9yICh2YXIgaSA9IDAsIG4gPSB0eXBlLmxlbmd0aDsgaSA8IG47ICsraSkge1xuICAgIGlmICh0eXBlW2ldLm5hbWUgPT09IG5hbWUpIHtcbiAgICAgIHR5cGVbaV0gPSBub29wLCB0eXBlID0gdHlwZS5zbGljZSgwLCBpKS5jb25jYXQodHlwZS5zbGljZShpICsgMSkpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIGlmIChjYWxsYmFjayAhPSBudWxsKSB0eXBlLnB1c2goe25hbWU6IG5hbWUsIHZhbHVlOiBjYWxsYmFja30pO1xuICByZXR1cm4gdHlwZTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZGlzcGF0Y2g7XG4iLCJleHBvcnQgdmFyIHhodG1sID0gXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgc3ZnOiBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsXG4gIHhodG1sOiB4aHRtbCxcbiAgeGxpbms6IFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiLFxuICB4bWw6IFwiaHR0cDovL3d3dy53My5vcmcvWE1MLzE5OTgvbmFtZXNwYWNlXCIsXG4gIHhtbG5zOiBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAveG1sbnMvXCJcbn07XG4iLCJpbXBvcnQgbmFtZXNwYWNlcyBmcm9tIFwiLi9uYW1lc3BhY2VzLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5hbWUpIHtcbiAgdmFyIHByZWZpeCA9IG5hbWUgKz0gXCJcIiwgaSA9IHByZWZpeC5pbmRleE9mKFwiOlwiKTtcbiAgaWYgKGkgPj0gMCAmJiAocHJlZml4ID0gbmFtZS5zbGljZSgwLCBpKSkgIT09IFwieG1sbnNcIikgbmFtZSA9IG5hbWUuc2xpY2UoaSArIDEpO1xuICByZXR1cm4gbmFtZXNwYWNlcy5oYXNPd25Qcm9wZXJ0eShwcmVmaXgpID8ge3NwYWNlOiBuYW1lc3BhY2VzW3ByZWZpeF0sIGxvY2FsOiBuYW1lfSA6IG5hbWU7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tcHJvdG90eXBlLWJ1aWx0aW5zXG59XG4iLCJpbXBvcnQgbmFtZXNwYWNlIGZyb20gXCIuL25hbWVzcGFjZS5qc1wiO1xuaW1wb3J0IHt4aHRtbH0gZnJvbSBcIi4vbmFtZXNwYWNlcy5qc1wiO1xuXG5mdW5jdGlvbiBjcmVhdG9ySW5oZXJpdChuYW1lKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgZG9jdW1lbnQgPSB0aGlzLm93bmVyRG9jdW1lbnQsXG4gICAgICAgIHVyaSA9IHRoaXMubmFtZXNwYWNlVVJJO1xuICAgIHJldHVybiB1cmkgPT09IHhodG1sICYmIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5uYW1lc3BhY2VVUkkgPT09IHhodG1sXG4gICAgICAgID8gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChuYW1lKVxuICAgICAgICA6IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyh1cmksIG5hbWUpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBjcmVhdG9yRml4ZWQoZnVsbG5hbWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLm93bmVyRG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKGZ1bGxuYW1lLnNwYWNlLCBmdWxsbmFtZS5sb2NhbCk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5hbWUpIHtcbiAgdmFyIGZ1bGxuYW1lID0gbmFtZXNwYWNlKG5hbWUpO1xuICByZXR1cm4gKGZ1bGxuYW1lLmxvY2FsXG4gICAgICA/IGNyZWF0b3JGaXhlZFxuICAgICAgOiBjcmVhdG9ySW5oZXJpdCkoZnVsbG5hbWUpO1xufVxuIiwiZnVuY3Rpb24gbm9uZSgpIHt9XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHNlbGVjdG9yKSB7XG4gIHJldHVybiBzZWxlY3RvciA9PSBudWxsID8gbm9uZSA6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IpO1xuICB9O1xufVxuIiwiaW1wb3J0IHtTZWxlY3Rpb259IGZyb20gXCIuL2luZGV4LmpzXCI7XG5pbXBvcnQgc2VsZWN0b3IgZnJvbSBcIi4uL3NlbGVjdG9yLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHNlbGVjdCkge1xuICBpZiAodHlwZW9mIHNlbGVjdCAhPT0gXCJmdW5jdGlvblwiKSBzZWxlY3QgPSBzZWxlY3RvcihzZWxlY3QpO1xuXG4gIGZvciAodmFyIGdyb3VwcyA9IHRoaXMuX2dyb3VwcywgbSA9IGdyb3Vwcy5sZW5ndGgsIHN1Ymdyb3VwcyA9IG5ldyBBcnJheShtKSwgaiA9IDA7IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHZhciBncm91cCA9IGdyb3Vwc1tqXSwgbiA9IGdyb3VwLmxlbmd0aCwgc3ViZ3JvdXAgPSBzdWJncm91cHNbal0gPSBuZXcgQXJyYXkobiksIG5vZGUsIHN1Ym5vZGUsIGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICBpZiAoKG5vZGUgPSBncm91cFtpXSkgJiYgKHN1Ym5vZGUgPSBzZWxlY3QuY2FsbChub2RlLCBub2RlLl9fZGF0YV9fLCBpLCBncm91cCkpKSB7XG4gICAgICAgIGlmIChcIl9fZGF0YV9fXCIgaW4gbm9kZSkgc3Vibm9kZS5fX2RhdGFfXyA9IG5vZGUuX19kYXRhX187XG4gICAgICAgIHN1Ymdyb3VwW2ldID0gc3Vibm9kZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gbmV3IFNlbGVjdGlvbihzdWJncm91cHMsIHRoaXMuX3BhcmVudHMpO1xufVxuIiwiLy8gR2l2ZW4gc29tZXRoaW5nIGFycmF5IGxpa2UgKG9yIG51bGwpLCByZXR1cm5zIHNvbWV0aGluZyB0aGF0IGlzIHN0cmljdGx5IGFuXG4vLyBhcnJheS4gVGhpcyBpcyB1c2VkIHRvIGVuc3VyZSB0aGF0IGFycmF5LWxpa2Ugb2JqZWN0cyBwYXNzZWQgdG8gZDMuc2VsZWN0QWxsXG4vLyBvciBzZWxlY3Rpb24uc2VsZWN0QWxsIGFyZSBjb252ZXJ0ZWQgaW50byBwcm9wZXIgYXJyYXlzIHdoZW4gY3JlYXRpbmcgYVxuLy8gc2VsZWN0aW9uOyB3ZSBkb27igJl0IGV2ZXIgd2FudCB0byBjcmVhdGUgYSBzZWxlY3Rpb24gYmFja2VkIGJ5IGEgbGl2ZVxuLy8gSFRNTENvbGxlY3Rpb24gb3IgTm9kZUxpc3QuIEhvd2V2ZXIsIG5vdGUgdGhhdCBzZWxlY3Rpb24uc2VsZWN0QWxsIHdpbGwgdXNlIGFcbi8vIHN0YXRpYyBOb2RlTGlzdCBhcyBhIGdyb3VwLCBzaW5jZSBpdCBzYWZlbHkgZGVyaXZlZCBmcm9tIHF1ZXJ5U2VsZWN0b3JBbGwuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBhcnJheSh4KSB7XG4gIHJldHVybiB4ID09IG51bGwgPyBbXSA6IEFycmF5LmlzQXJyYXkoeCkgPyB4IDogQXJyYXkuZnJvbSh4KTtcbn1cbiIsImZ1bmN0aW9uIGVtcHR5KCkge1xuICByZXR1cm4gW107XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHNlbGVjdG9yKSB7XG4gIHJldHVybiBzZWxlY3RvciA9PSBudWxsID8gZW1wdHkgOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5xdWVyeVNlbGVjdG9yQWxsKHNlbGVjdG9yKTtcbiAgfTtcbn1cbiIsImltcG9ydCB7U2VsZWN0aW9ufSBmcm9tIFwiLi9pbmRleC5qc1wiO1xuaW1wb3J0IGFycmF5IGZyb20gXCIuLi9hcnJheS5qc1wiO1xuaW1wb3J0IHNlbGVjdG9yQWxsIGZyb20gXCIuLi9zZWxlY3RvckFsbC5qc1wiO1xuXG5mdW5jdGlvbiBhcnJheUFsbChzZWxlY3QpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBhcnJheShzZWxlY3QuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHNlbGVjdCkge1xuICBpZiAodHlwZW9mIHNlbGVjdCA9PT0gXCJmdW5jdGlvblwiKSBzZWxlY3QgPSBhcnJheUFsbChzZWxlY3QpO1xuICBlbHNlIHNlbGVjdCA9IHNlbGVjdG9yQWxsKHNlbGVjdCk7XG5cbiAgZm9yICh2YXIgZ3JvdXBzID0gdGhpcy5fZ3JvdXBzLCBtID0gZ3JvdXBzLmxlbmd0aCwgc3ViZ3JvdXBzID0gW10sIHBhcmVudHMgPSBbXSwgaiA9IDA7IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHZhciBncm91cCA9IGdyb3Vwc1tqXSwgbiA9IGdyb3VwLmxlbmd0aCwgbm9kZSwgaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmIChub2RlID0gZ3JvdXBbaV0pIHtcbiAgICAgICAgc3ViZ3JvdXBzLnB1c2goc2VsZWN0LmNhbGwobm9kZSwgbm9kZS5fX2RhdGFfXywgaSwgZ3JvdXApKTtcbiAgICAgICAgcGFyZW50cy5wdXNoKG5vZGUpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBuZXcgU2VsZWN0aW9uKHN1Ymdyb3VwcywgcGFyZW50cyk7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzZWxlY3Rvcikge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMubWF0Y2hlcyhzZWxlY3Rvcik7XG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjaGlsZE1hdGNoZXIoc2VsZWN0b3IpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKG5vZGUpIHtcbiAgICByZXR1cm4gbm9kZS5tYXRjaGVzKHNlbGVjdG9yKTtcbiAgfTtcbn1cblxuIiwiaW1wb3J0IHtjaGlsZE1hdGNoZXJ9IGZyb20gXCIuLi9tYXRjaGVyLmpzXCI7XG5cbnZhciBmaW5kID0gQXJyYXkucHJvdG90eXBlLmZpbmQ7XG5cbmZ1bmN0aW9uIGNoaWxkRmluZChtYXRjaCkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGZpbmQuY2FsbCh0aGlzLmNoaWxkcmVuLCBtYXRjaCk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGNoaWxkRmlyc3QoKSB7XG4gIHJldHVybiB0aGlzLmZpcnN0RWxlbWVudENoaWxkO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihtYXRjaCkge1xuICByZXR1cm4gdGhpcy5zZWxlY3QobWF0Y2ggPT0gbnVsbCA/IGNoaWxkRmlyc3RcbiAgICAgIDogY2hpbGRGaW5kKHR5cGVvZiBtYXRjaCA9PT0gXCJmdW5jdGlvblwiID8gbWF0Y2ggOiBjaGlsZE1hdGNoZXIobWF0Y2gpKSk7XG59XG4iLCJpbXBvcnQge2NoaWxkTWF0Y2hlcn0gZnJvbSBcIi4uL21hdGNoZXIuanNcIjtcblxudmFyIGZpbHRlciA9IEFycmF5LnByb3RvdHlwZS5maWx0ZXI7XG5cbmZ1bmN0aW9uIGNoaWxkcmVuKCkge1xuICByZXR1cm4gQXJyYXkuZnJvbSh0aGlzLmNoaWxkcmVuKTtcbn1cblxuZnVuY3Rpb24gY2hpbGRyZW5GaWx0ZXIobWF0Y2gpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBmaWx0ZXIuY2FsbCh0aGlzLmNoaWxkcmVuLCBtYXRjaCk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG1hdGNoKSB7XG4gIHJldHVybiB0aGlzLnNlbGVjdEFsbChtYXRjaCA9PSBudWxsID8gY2hpbGRyZW5cbiAgICAgIDogY2hpbGRyZW5GaWx0ZXIodHlwZW9mIG1hdGNoID09PSBcImZ1bmN0aW9uXCIgPyBtYXRjaCA6IGNoaWxkTWF0Y2hlcihtYXRjaCkpKTtcbn1cbiIsImltcG9ydCB7U2VsZWN0aW9ufSBmcm9tIFwiLi9pbmRleC5qc1wiO1xuaW1wb3J0IG1hdGNoZXIgZnJvbSBcIi4uL21hdGNoZXIuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obWF0Y2gpIHtcbiAgaWYgKHR5cGVvZiBtYXRjaCAhPT0gXCJmdW5jdGlvblwiKSBtYXRjaCA9IG1hdGNoZXIobWF0Y2gpO1xuXG4gIGZvciAodmFyIGdyb3VwcyA9IHRoaXMuX2dyb3VwcywgbSA9IGdyb3Vwcy5sZW5ndGgsIHN1Ymdyb3VwcyA9IG5ldyBBcnJheShtKSwgaiA9IDA7IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHZhciBncm91cCA9IGdyb3Vwc1tqXSwgbiA9IGdyb3VwLmxlbmd0aCwgc3ViZ3JvdXAgPSBzdWJncm91cHNbal0gPSBbXSwgbm9kZSwgaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmICgobm9kZSA9IGdyb3VwW2ldKSAmJiBtYXRjaC5jYWxsKG5vZGUsIG5vZGUuX19kYXRhX18sIGksIGdyb3VwKSkge1xuICAgICAgICBzdWJncm91cC5wdXNoKG5vZGUpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBuZXcgU2VsZWN0aW9uKHN1Ymdyb3VwcywgdGhpcy5fcGFyZW50cyk7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih1cGRhdGUpIHtcbiAgcmV0dXJuIG5ldyBBcnJheSh1cGRhdGUubGVuZ3RoKTtcbn1cbiIsImltcG9ydCBzcGFyc2UgZnJvbSBcIi4vc3BhcnNlLmpzXCI7XG5pbXBvcnQge1NlbGVjdGlvbn0gZnJvbSBcIi4vaW5kZXguanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiBuZXcgU2VsZWN0aW9uKHRoaXMuX2VudGVyIHx8IHRoaXMuX2dyb3Vwcy5tYXAoc3BhcnNlKSwgdGhpcy5fcGFyZW50cyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBFbnRlck5vZGUocGFyZW50LCBkYXR1bSkge1xuICB0aGlzLm93bmVyRG9jdW1lbnQgPSBwYXJlbnQub3duZXJEb2N1bWVudDtcbiAgdGhpcy5uYW1lc3BhY2VVUkkgPSBwYXJlbnQubmFtZXNwYWNlVVJJO1xuICB0aGlzLl9uZXh0ID0gbnVsbDtcbiAgdGhpcy5fcGFyZW50ID0gcGFyZW50O1xuICB0aGlzLl9fZGF0YV9fID0gZGF0dW07XG59XG5cbkVudGVyTm9kZS5wcm90b3R5cGUgPSB7XG4gIGNvbnN0cnVjdG9yOiBFbnRlck5vZGUsXG4gIGFwcGVuZENoaWxkOiBmdW5jdGlvbihjaGlsZCkgeyByZXR1cm4gdGhpcy5fcGFyZW50Lmluc2VydEJlZm9yZShjaGlsZCwgdGhpcy5fbmV4dCk7IH0sXG4gIGluc2VydEJlZm9yZTogZnVuY3Rpb24oY2hpbGQsIG5leHQpIHsgcmV0dXJuIHRoaXMuX3BhcmVudC5pbnNlcnRCZWZvcmUoY2hpbGQsIG5leHQpOyB9LFxuICBxdWVyeVNlbGVjdG9yOiBmdW5jdGlvbihzZWxlY3RvcikgeyByZXR1cm4gdGhpcy5fcGFyZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IpOyB9LFxuICBxdWVyeVNlbGVjdG9yQWxsOiBmdW5jdGlvbihzZWxlY3RvcikgeyByZXR1cm4gdGhpcy5fcGFyZW50LnF1ZXJ5U2VsZWN0b3JBbGwoc2VsZWN0b3IpOyB9XG59O1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeCkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHg7XG4gIH07XG59XG4iLCJpbXBvcnQge1NlbGVjdGlvbn0gZnJvbSBcIi4vaW5kZXguanNcIjtcbmltcG9ydCB7RW50ZXJOb2RlfSBmcm9tIFwiLi9lbnRlci5qc1wiO1xuaW1wb3J0IGNvbnN0YW50IGZyb20gXCIuLi9jb25zdGFudC5qc1wiO1xuXG5mdW5jdGlvbiBiaW5kSW5kZXgocGFyZW50LCBncm91cCwgZW50ZXIsIHVwZGF0ZSwgZXhpdCwgZGF0YSkge1xuICB2YXIgaSA9IDAsXG4gICAgICBub2RlLFxuICAgICAgZ3JvdXBMZW5ndGggPSBncm91cC5sZW5ndGgsXG4gICAgICBkYXRhTGVuZ3RoID0gZGF0YS5sZW5ndGg7XG5cbiAgLy8gUHV0IGFueSBub24tbnVsbCBub2RlcyB0aGF0IGZpdCBpbnRvIHVwZGF0ZS5cbiAgLy8gUHV0IGFueSBudWxsIG5vZGVzIGludG8gZW50ZXIuXG4gIC8vIFB1dCBhbnkgcmVtYWluaW5nIGRhdGEgaW50byBlbnRlci5cbiAgZm9yICg7IGkgPCBkYXRhTGVuZ3RoOyArK2kpIHtcbiAgICBpZiAobm9kZSA9IGdyb3VwW2ldKSB7XG4gICAgICBub2RlLl9fZGF0YV9fID0gZGF0YVtpXTtcbiAgICAgIHVwZGF0ZVtpXSA9IG5vZGU7XG4gICAgfSBlbHNlIHtcbiAgICAgIGVudGVyW2ldID0gbmV3IEVudGVyTm9kZShwYXJlbnQsIGRhdGFbaV0pO1xuICAgIH1cbiAgfVxuXG4gIC8vIFB1dCBhbnkgbm9uLW51bGwgbm9kZXMgdGhhdCBkb27igJl0IGZpdCBpbnRvIGV4aXQuXG4gIGZvciAoOyBpIDwgZ3JvdXBMZW5ndGg7ICsraSkge1xuICAgIGlmIChub2RlID0gZ3JvdXBbaV0pIHtcbiAgICAgIGV4aXRbaV0gPSBub2RlO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBiaW5kS2V5KHBhcmVudCwgZ3JvdXAsIGVudGVyLCB1cGRhdGUsIGV4aXQsIGRhdGEsIGtleSkge1xuICB2YXIgaSxcbiAgICAgIG5vZGUsXG4gICAgICBub2RlQnlLZXlWYWx1ZSA9IG5ldyBNYXAsXG4gICAgICBncm91cExlbmd0aCA9IGdyb3VwLmxlbmd0aCxcbiAgICAgIGRhdGFMZW5ndGggPSBkYXRhLmxlbmd0aCxcbiAgICAgIGtleVZhbHVlcyA9IG5ldyBBcnJheShncm91cExlbmd0aCksXG4gICAgICBrZXlWYWx1ZTtcblxuICAvLyBDb21wdXRlIHRoZSBrZXkgZm9yIGVhY2ggbm9kZS5cbiAgLy8gSWYgbXVsdGlwbGUgbm9kZXMgaGF2ZSB0aGUgc2FtZSBrZXksIHRoZSBkdXBsaWNhdGVzIGFyZSBhZGRlZCB0byBleGl0LlxuICBmb3IgKGkgPSAwOyBpIDwgZ3JvdXBMZW5ndGg7ICsraSkge1xuICAgIGlmIChub2RlID0gZ3JvdXBbaV0pIHtcbiAgICAgIGtleVZhbHVlc1tpXSA9IGtleVZhbHVlID0ga2V5LmNhbGwobm9kZSwgbm9kZS5fX2RhdGFfXywgaSwgZ3JvdXApICsgXCJcIjtcbiAgICAgIGlmIChub2RlQnlLZXlWYWx1ZS5oYXMoa2V5VmFsdWUpKSB7XG4gICAgICAgIGV4aXRbaV0gPSBub2RlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbm9kZUJ5S2V5VmFsdWUuc2V0KGtleVZhbHVlLCBub2RlKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvLyBDb21wdXRlIHRoZSBrZXkgZm9yIGVhY2ggZGF0dW0uXG4gIC8vIElmIHRoZXJlIGEgbm9kZSBhc3NvY2lhdGVkIHdpdGggdGhpcyBrZXksIGpvaW4gYW5kIGFkZCBpdCB0byB1cGRhdGUuXG4gIC8vIElmIHRoZXJlIGlzIG5vdCAob3IgdGhlIGtleSBpcyBhIGR1cGxpY2F0ZSksIGFkZCBpdCB0byBlbnRlci5cbiAgZm9yIChpID0gMDsgaSA8IGRhdGFMZW5ndGg7ICsraSkge1xuICAgIGtleVZhbHVlID0ga2V5LmNhbGwocGFyZW50LCBkYXRhW2ldLCBpLCBkYXRhKSArIFwiXCI7XG4gICAgaWYgKG5vZGUgPSBub2RlQnlLZXlWYWx1ZS5nZXQoa2V5VmFsdWUpKSB7XG4gICAgICB1cGRhdGVbaV0gPSBub2RlO1xuICAgICAgbm9kZS5fX2RhdGFfXyA9IGRhdGFbaV07XG4gICAgICBub2RlQnlLZXlWYWx1ZS5kZWxldGUoa2V5VmFsdWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICBlbnRlcltpXSA9IG5ldyBFbnRlck5vZGUocGFyZW50LCBkYXRhW2ldKTtcbiAgICB9XG4gIH1cblxuICAvLyBBZGQgYW55IHJlbWFpbmluZyBub2RlcyB0aGF0IHdlcmUgbm90IGJvdW5kIHRvIGRhdGEgdG8gZXhpdC5cbiAgZm9yIChpID0gMDsgaSA8IGdyb3VwTGVuZ3RoOyArK2kpIHtcbiAgICBpZiAoKG5vZGUgPSBncm91cFtpXSkgJiYgKG5vZGVCeUtleVZhbHVlLmdldChrZXlWYWx1ZXNbaV0pID09PSBub2RlKSkge1xuICAgICAgZXhpdFtpXSA9IG5vZGU7XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIGRhdHVtKG5vZGUpIHtcbiAgcmV0dXJuIG5vZGUuX19kYXRhX187XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlLCBrZXkpIHtcbiAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gQXJyYXkuZnJvbSh0aGlzLCBkYXR1bSk7XG5cbiAgdmFyIGJpbmQgPSBrZXkgPyBiaW5kS2V5IDogYmluZEluZGV4LFxuICAgICAgcGFyZW50cyA9IHRoaXMuX3BhcmVudHMsXG4gICAgICBncm91cHMgPSB0aGlzLl9ncm91cHM7XG5cbiAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gXCJmdW5jdGlvblwiKSB2YWx1ZSA9IGNvbnN0YW50KHZhbHVlKTtcblxuICBmb3IgKHZhciBtID0gZ3JvdXBzLmxlbmd0aCwgdXBkYXRlID0gbmV3IEFycmF5KG0pLCBlbnRlciA9IG5ldyBBcnJheShtKSwgZXhpdCA9IG5ldyBBcnJheShtKSwgaiA9IDA7IGogPCBtOyArK2opIHtcbiAgICB2YXIgcGFyZW50ID0gcGFyZW50c1tqXSxcbiAgICAgICAgZ3JvdXAgPSBncm91cHNbal0sXG4gICAgICAgIGdyb3VwTGVuZ3RoID0gZ3JvdXAubGVuZ3RoLFxuICAgICAgICBkYXRhID0gYXJyYXlsaWtlKHZhbHVlLmNhbGwocGFyZW50LCBwYXJlbnQgJiYgcGFyZW50Ll9fZGF0YV9fLCBqLCBwYXJlbnRzKSksXG4gICAgICAgIGRhdGFMZW5ndGggPSBkYXRhLmxlbmd0aCxcbiAgICAgICAgZW50ZXJHcm91cCA9IGVudGVyW2pdID0gbmV3IEFycmF5KGRhdGFMZW5ndGgpLFxuICAgICAgICB1cGRhdGVHcm91cCA9IHVwZGF0ZVtqXSA9IG5ldyBBcnJheShkYXRhTGVuZ3RoKSxcbiAgICAgICAgZXhpdEdyb3VwID0gZXhpdFtqXSA9IG5ldyBBcnJheShncm91cExlbmd0aCk7XG5cbiAgICBiaW5kKHBhcmVudCwgZ3JvdXAsIGVudGVyR3JvdXAsIHVwZGF0ZUdyb3VwLCBleGl0R3JvdXAsIGRhdGEsIGtleSk7XG5cbiAgICAvLyBOb3cgY29ubmVjdCB0aGUgZW50ZXIgbm9kZXMgdG8gdGhlaXIgZm9sbG93aW5nIHVwZGF0ZSBub2RlLCBzdWNoIHRoYXRcbiAgICAvLyBhcHBlbmRDaGlsZCBjYW4gaW5zZXJ0IHRoZSBtYXRlcmlhbGl6ZWQgZW50ZXIgbm9kZSBiZWZvcmUgdGhpcyBub2RlLFxuICAgIC8vIHJhdGhlciB0aGFuIGF0IHRoZSBlbmQgb2YgdGhlIHBhcmVudCBub2RlLlxuICAgIGZvciAodmFyIGkwID0gMCwgaTEgPSAwLCBwcmV2aW91cywgbmV4dDsgaTAgPCBkYXRhTGVuZ3RoOyArK2kwKSB7XG4gICAgICBpZiAocHJldmlvdXMgPSBlbnRlckdyb3VwW2kwXSkge1xuICAgICAgICBpZiAoaTAgPj0gaTEpIGkxID0gaTAgKyAxO1xuICAgICAgICB3aGlsZSAoIShuZXh0ID0gdXBkYXRlR3JvdXBbaTFdKSAmJiArK2kxIDwgZGF0YUxlbmd0aCk7XG4gICAgICAgIHByZXZpb3VzLl9uZXh0ID0gbmV4dCB8fCBudWxsO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHVwZGF0ZSA9IG5ldyBTZWxlY3Rpb24odXBkYXRlLCBwYXJlbnRzKTtcbiAgdXBkYXRlLl9lbnRlciA9IGVudGVyO1xuICB1cGRhdGUuX2V4aXQgPSBleGl0O1xuICByZXR1cm4gdXBkYXRlO1xufVxuXG4vLyBHaXZlbiBzb21lIGRhdGEsIHRoaXMgcmV0dXJucyBhbiBhcnJheS1saWtlIHZpZXcgb2YgaXQ6IGFuIG9iamVjdCB0aGF0XG4vLyBleHBvc2VzIGEgbGVuZ3RoIHByb3BlcnR5IGFuZCBhbGxvd3MgbnVtZXJpYyBpbmRleGluZy4gTm90ZSB0aGF0IHVubGlrZVxuLy8gc2VsZWN0QWxsLCB0aGlzIGlzbuKAmXQgd29ycmllZCBhYm91dCDigJxsaXZl4oCdIGNvbGxlY3Rpb25zIGJlY2F1c2UgdGhlIHJlc3VsdGluZ1xuLy8gYXJyYXkgd2lsbCBvbmx5IGJlIHVzZWQgYnJpZWZseSB3aGlsZSBkYXRhIGlzIGJlaW5nIGJvdW5kLiAoSXQgaXMgcG9zc2libGUgdG9cbi8vIGNhdXNlIHRoZSBkYXRhIHRvIGNoYW5nZSB3aGlsZSBpdGVyYXRpbmcgYnkgdXNpbmcgYSBrZXkgZnVuY3Rpb24sIGJ1dCBwbGVhc2Vcbi8vIGRvbuKAmXQ7IHdl4oCZZCByYXRoZXIgYXZvaWQgYSBncmF0dWl0b3VzIGNvcHkuKVxuZnVuY3Rpb24gYXJyYXlsaWtlKGRhdGEpIHtcbiAgcmV0dXJuIHR5cGVvZiBkYXRhID09PSBcIm9iamVjdFwiICYmIFwibGVuZ3RoXCIgaW4gZGF0YVxuICAgID8gZGF0YSAvLyBBcnJheSwgVHlwZWRBcnJheSwgTm9kZUxpc3QsIGFycmF5LWxpa2VcbiAgICA6IEFycmF5LmZyb20oZGF0YSk7IC8vIE1hcCwgU2V0LCBpdGVyYWJsZSwgc3RyaW5nLCBvciBhbnl0aGluZyBlbHNlXG59XG4iLCJpbXBvcnQgc3BhcnNlIGZyb20gXCIuL3NwYXJzZS5qc1wiO1xuaW1wb3J0IHtTZWxlY3Rpb259IGZyb20gXCIuL2luZGV4LmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gbmV3IFNlbGVjdGlvbih0aGlzLl9leGl0IHx8IHRoaXMuX2dyb3Vwcy5tYXAoc3BhcnNlKSwgdGhpcy5fcGFyZW50cyk7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihvbmVudGVyLCBvbnVwZGF0ZSwgb25leGl0KSB7XG4gIHZhciBlbnRlciA9IHRoaXMuZW50ZXIoKSwgdXBkYXRlID0gdGhpcywgZXhpdCA9IHRoaXMuZXhpdCgpO1xuICBpZiAodHlwZW9mIG9uZW50ZXIgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIGVudGVyID0gb25lbnRlcihlbnRlcik7XG4gICAgaWYgKGVudGVyKSBlbnRlciA9IGVudGVyLnNlbGVjdGlvbigpO1xuICB9IGVsc2Uge1xuICAgIGVudGVyID0gZW50ZXIuYXBwZW5kKG9uZW50ZXIgKyBcIlwiKTtcbiAgfVxuICBpZiAob251cGRhdGUgIT0gbnVsbCkge1xuICAgIHVwZGF0ZSA9IG9udXBkYXRlKHVwZGF0ZSk7XG4gICAgaWYgKHVwZGF0ZSkgdXBkYXRlID0gdXBkYXRlLnNlbGVjdGlvbigpO1xuICB9XG4gIGlmIChvbmV4aXQgPT0gbnVsbCkgZXhpdC5yZW1vdmUoKTsgZWxzZSBvbmV4aXQoZXhpdCk7XG4gIHJldHVybiBlbnRlciAmJiB1cGRhdGUgPyBlbnRlci5tZXJnZSh1cGRhdGUpLm9yZGVyKCkgOiB1cGRhdGU7XG59XG4iLCJpbXBvcnQge1NlbGVjdGlvbn0gZnJvbSBcIi4vaW5kZXguanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oY29udGV4dCkge1xuICB2YXIgc2VsZWN0aW9uID0gY29udGV4dC5zZWxlY3Rpb24gPyBjb250ZXh0LnNlbGVjdGlvbigpIDogY29udGV4dDtcblxuICBmb3IgKHZhciBncm91cHMwID0gdGhpcy5fZ3JvdXBzLCBncm91cHMxID0gc2VsZWN0aW9uLl9ncm91cHMsIG0wID0gZ3JvdXBzMC5sZW5ndGgsIG0xID0gZ3JvdXBzMS5sZW5ndGgsIG0gPSBNYXRoLm1pbihtMCwgbTEpLCBtZXJnZXMgPSBuZXcgQXJyYXkobTApLCBqID0gMDsgaiA8IG07ICsraikge1xuICAgIGZvciAodmFyIGdyb3VwMCA9IGdyb3VwczBbal0sIGdyb3VwMSA9IGdyb3VwczFbal0sIG4gPSBncm91cDAubGVuZ3RoLCBtZXJnZSA9IG1lcmdlc1tqXSA9IG5ldyBBcnJheShuKSwgbm9kZSwgaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmIChub2RlID0gZ3JvdXAwW2ldIHx8IGdyb3VwMVtpXSkge1xuICAgICAgICBtZXJnZVtpXSA9IG5vZGU7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZm9yICg7IGogPCBtMDsgKytqKSB7XG4gICAgbWVyZ2VzW2pdID0gZ3JvdXBzMFtqXTtcbiAgfVxuXG4gIHJldHVybiBuZXcgU2VsZWN0aW9uKG1lcmdlcywgdGhpcy5fcGFyZW50cyk7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcblxuICBmb3IgKHZhciBncm91cHMgPSB0aGlzLl9ncm91cHMsIGogPSAtMSwgbSA9IGdyb3Vwcy5sZW5ndGg7ICsraiA8IG07KSB7XG4gICAgZm9yICh2YXIgZ3JvdXAgPSBncm91cHNbal0sIGkgPSBncm91cC5sZW5ndGggLSAxLCBuZXh0ID0gZ3JvdXBbaV0sIG5vZGU7IC0taSA+PSAwOykge1xuICAgICAgaWYgKG5vZGUgPSBncm91cFtpXSkge1xuICAgICAgICBpZiAobmV4dCAmJiBub2RlLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKG5leHQpIF4gNCkgbmV4dC5wYXJlbnROb2RlLmluc2VydEJlZm9yZShub2RlLCBuZXh0KTtcbiAgICAgICAgbmV4dCA9IG5vZGU7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRoaXM7XG59XG4iLCJpbXBvcnQge1NlbGVjdGlvbn0gZnJvbSBcIi4vaW5kZXguanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oY29tcGFyZSkge1xuICBpZiAoIWNvbXBhcmUpIGNvbXBhcmUgPSBhc2NlbmRpbmc7XG5cbiAgZnVuY3Rpb24gY29tcGFyZU5vZGUoYSwgYikge1xuICAgIHJldHVybiBhICYmIGIgPyBjb21wYXJlKGEuX19kYXRhX18sIGIuX19kYXRhX18pIDogIWEgLSAhYjtcbiAgfVxuXG4gIGZvciAodmFyIGdyb3VwcyA9IHRoaXMuX2dyb3VwcywgbSA9IGdyb3Vwcy5sZW5ndGgsIHNvcnRncm91cHMgPSBuZXcgQXJyYXkobSksIGogPSAwOyBqIDwgbTsgKytqKSB7XG4gICAgZm9yICh2YXIgZ3JvdXAgPSBncm91cHNbal0sIG4gPSBncm91cC5sZW5ndGgsIHNvcnRncm91cCA9IHNvcnRncm91cHNbal0gPSBuZXcgQXJyYXkobiksIG5vZGUsIGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICBpZiAobm9kZSA9IGdyb3VwW2ldKSB7XG4gICAgICAgIHNvcnRncm91cFtpXSA9IG5vZGU7XG4gICAgICB9XG4gICAgfVxuICAgIHNvcnRncm91cC5zb3J0KGNvbXBhcmVOb2RlKTtcbiAgfVxuXG4gIHJldHVybiBuZXcgU2VsZWN0aW9uKHNvcnRncm91cHMsIHRoaXMuX3BhcmVudHMpLm9yZGVyKCk7XG59XG5cbmZ1bmN0aW9uIGFzY2VuZGluZyhhLCBiKSB7XG4gIHJldHVybiBhIDwgYiA/IC0xIDogYSA+IGIgPyAxIDogYSA+PSBiID8gMCA6IE5hTjtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgY2FsbGJhY2sgPSBhcmd1bWVudHNbMF07XG4gIGFyZ3VtZW50c1swXSA9IHRoaXM7XG4gIGNhbGxiYWNrLmFwcGx5KG51bGwsIGFyZ3VtZW50cyk7XG4gIHJldHVybiB0aGlzO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiBBcnJheS5mcm9tKHRoaXMpO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG5cbiAgZm9yICh2YXIgZ3JvdXBzID0gdGhpcy5fZ3JvdXBzLCBqID0gMCwgbSA9IGdyb3Vwcy5sZW5ndGg7IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHZhciBncm91cCA9IGdyb3Vwc1tqXSwgaSA9IDAsIG4gPSBncm91cC5sZW5ndGg7IGkgPCBuOyArK2kpIHtcbiAgICAgIHZhciBub2RlID0gZ3JvdXBbaV07XG4gICAgICBpZiAobm9kZSkgcmV0dXJuIG5vZGU7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG51bGw7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgbGV0IHNpemUgPSAwO1xuICBmb3IgKGNvbnN0IG5vZGUgb2YgdGhpcykgKytzaXplOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXG4gIHJldHVybiBzaXplO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiAhdGhpcy5ub2RlKCk7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihjYWxsYmFjaykge1xuXG4gIGZvciAodmFyIGdyb3VwcyA9IHRoaXMuX2dyb3VwcywgaiA9IDAsIG0gPSBncm91cHMubGVuZ3RoOyBqIDwgbTsgKytqKSB7XG4gICAgZm9yICh2YXIgZ3JvdXAgPSBncm91cHNbal0sIGkgPSAwLCBuID0gZ3JvdXAubGVuZ3RoLCBub2RlOyBpIDwgbjsgKytpKSB7XG4gICAgICBpZiAobm9kZSA9IGdyb3VwW2ldKSBjYWxsYmFjay5jYWxsKG5vZGUsIG5vZGUuX19kYXRhX18sIGksIGdyb3VwKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdGhpcztcbn1cbiIsImltcG9ydCBuYW1lc3BhY2UgZnJvbSBcIi4uL25hbWVzcGFjZS5qc1wiO1xuXG5mdW5jdGlvbiBhdHRyUmVtb3ZlKG5hbWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHRoaXMucmVtb3ZlQXR0cmlidXRlKG5hbWUpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBhdHRyUmVtb3ZlTlMoZnVsbG5hbWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHRoaXMucmVtb3ZlQXR0cmlidXRlTlMoZnVsbG5hbWUuc3BhY2UsIGZ1bGxuYW1lLmxvY2FsKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYXR0ckNvbnN0YW50KG5hbWUsIHZhbHVlKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLnNldEF0dHJpYnV0ZShuYW1lLCB2YWx1ZSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGF0dHJDb25zdGFudE5TKGZ1bGxuYW1lLCB2YWx1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5zZXRBdHRyaWJ1dGVOUyhmdWxsbmFtZS5zcGFjZSwgZnVsbG5hbWUubG9jYWwsIHZhbHVlKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYXR0ckZ1bmN0aW9uKG5hbWUsIHZhbHVlKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgdiA9IHZhbHVlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgaWYgKHYgPT0gbnVsbCkgdGhpcy5yZW1vdmVBdHRyaWJ1dGUobmFtZSk7XG4gICAgZWxzZSB0aGlzLnNldEF0dHJpYnV0ZShuYW1lLCB2KTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYXR0ckZ1bmN0aW9uTlMoZnVsbG5hbWUsIHZhbHVlKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgdiA9IHZhbHVlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgaWYgKHYgPT0gbnVsbCkgdGhpcy5yZW1vdmVBdHRyaWJ1dGVOUyhmdWxsbmFtZS5zcGFjZSwgZnVsbG5hbWUubG9jYWwpO1xuICAgIGVsc2UgdGhpcy5zZXRBdHRyaWJ1dGVOUyhmdWxsbmFtZS5zcGFjZSwgZnVsbG5hbWUubG9jYWwsIHYpO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihuYW1lLCB2YWx1ZSkge1xuICB2YXIgZnVsbG5hbWUgPSBuYW1lc3BhY2UobmFtZSk7XG5cbiAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyKSB7XG4gICAgdmFyIG5vZGUgPSB0aGlzLm5vZGUoKTtcbiAgICByZXR1cm4gZnVsbG5hbWUubG9jYWxcbiAgICAgICAgPyBub2RlLmdldEF0dHJpYnV0ZU5TKGZ1bGxuYW1lLnNwYWNlLCBmdWxsbmFtZS5sb2NhbClcbiAgICAgICAgOiBub2RlLmdldEF0dHJpYnV0ZShmdWxsbmFtZSk7XG4gIH1cblxuICByZXR1cm4gdGhpcy5lYWNoKCh2YWx1ZSA9PSBudWxsXG4gICAgICA/IChmdWxsbmFtZS5sb2NhbCA/IGF0dHJSZW1vdmVOUyA6IGF0dHJSZW1vdmUpIDogKHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiXG4gICAgICA/IChmdWxsbmFtZS5sb2NhbCA/IGF0dHJGdW5jdGlvbk5TIDogYXR0ckZ1bmN0aW9uKVxuICAgICAgOiAoZnVsbG5hbWUubG9jYWwgPyBhdHRyQ29uc3RhbnROUyA6IGF0dHJDb25zdGFudCkpKShmdWxsbmFtZSwgdmFsdWUpKTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5vZGUpIHtcbiAgcmV0dXJuIChub2RlLm93bmVyRG9jdW1lbnQgJiYgbm9kZS5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3KSAvLyBub2RlIGlzIGEgTm9kZVxuICAgICAgfHwgKG5vZGUuZG9jdW1lbnQgJiYgbm9kZSkgLy8gbm9kZSBpcyBhIFdpbmRvd1xuICAgICAgfHwgbm9kZS5kZWZhdWx0VmlldzsgLy8gbm9kZSBpcyBhIERvY3VtZW50XG59XG4iLCJpbXBvcnQgZGVmYXVsdFZpZXcgZnJvbSBcIi4uL3dpbmRvdy5qc1wiO1xuXG5mdW5jdGlvbiBzdHlsZVJlbW92ZShuYW1lKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLnN0eWxlLnJlbW92ZVByb3BlcnR5KG5hbWUpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBzdHlsZUNvbnN0YW50KG5hbWUsIHZhbHVlLCBwcmlvcml0eSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5zdHlsZS5zZXRQcm9wZXJ0eShuYW1lLCB2YWx1ZSwgcHJpb3JpdHkpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBzdHlsZUZ1bmN0aW9uKG5hbWUsIHZhbHVlLCBwcmlvcml0eSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHYgPSB2YWx1ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIGlmICh2ID09IG51bGwpIHRoaXMuc3R5bGUucmVtb3ZlUHJvcGVydHkobmFtZSk7XG4gICAgZWxzZSB0aGlzLnN0eWxlLnNldFByb3BlcnR5KG5hbWUsIHYsIHByaW9yaXR5KTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obmFtZSwgdmFsdWUsIHByaW9yaXR5KSB7XG4gIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID4gMVxuICAgICAgPyB0aGlzLmVhY2goKHZhbHVlID09IG51bGxcbiAgICAgICAgICAgID8gc3R5bGVSZW1vdmUgOiB0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIlxuICAgICAgICAgICAgPyBzdHlsZUZ1bmN0aW9uXG4gICAgICAgICAgICA6IHN0eWxlQ29uc3RhbnQpKG5hbWUsIHZhbHVlLCBwcmlvcml0eSA9PSBudWxsID8gXCJcIiA6IHByaW9yaXR5KSlcbiAgICAgIDogc3R5bGVWYWx1ZSh0aGlzLm5vZGUoKSwgbmFtZSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzdHlsZVZhbHVlKG5vZGUsIG5hbWUpIHtcbiAgcmV0dXJuIG5vZGUuc3R5bGUuZ2V0UHJvcGVydHlWYWx1ZShuYW1lKVxuICAgICAgfHwgZGVmYXVsdFZpZXcobm9kZSkuZ2V0Q29tcHV0ZWRTdHlsZShub2RlLCBudWxsKS5nZXRQcm9wZXJ0eVZhbHVlKG5hbWUpO1xufVxuIiwiZnVuY3Rpb24gcHJvcGVydHlSZW1vdmUobmFtZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgZGVsZXRlIHRoaXNbbmFtZV07XG4gIH07XG59XG5cbmZ1bmN0aW9uIHByb3BlcnR5Q29uc3RhbnQobmFtZSwgdmFsdWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHRoaXNbbmFtZV0gPSB2YWx1ZTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gcHJvcGVydHlGdW5jdGlvbihuYW1lLCB2YWx1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHYgPSB2YWx1ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIGlmICh2ID09IG51bGwpIGRlbGV0ZSB0aGlzW25hbWVdO1xuICAgIGVsc2UgdGhpc1tuYW1lXSA9IHY7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5hbWUsIHZhbHVlKSB7XG4gIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID4gMVxuICAgICAgPyB0aGlzLmVhY2goKHZhbHVlID09IG51bGxcbiAgICAgICAgICA/IHByb3BlcnR5UmVtb3ZlIDogdHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCJcbiAgICAgICAgICA/IHByb3BlcnR5RnVuY3Rpb25cbiAgICAgICAgICA6IHByb3BlcnR5Q29uc3RhbnQpKG5hbWUsIHZhbHVlKSlcbiAgICAgIDogdGhpcy5ub2RlKClbbmFtZV07XG59XG4iLCJmdW5jdGlvbiBjbGFzc0FycmF5KHN0cmluZykge1xuICByZXR1cm4gc3RyaW5nLnRyaW0oKS5zcGxpdCgvXnxcXHMrLyk7XG59XG5cbmZ1bmN0aW9uIGNsYXNzTGlzdChub2RlKSB7XG4gIHJldHVybiBub2RlLmNsYXNzTGlzdCB8fCBuZXcgQ2xhc3NMaXN0KG5vZGUpO1xufVxuXG5mdW5jdGlvbiBDbGFzc0xpc3Qobm9kZSkge1xuICB0aGlzLl9ub2RlID0gbm9kZTtcbiAgdGhpcy5fbmFtZXMgPSBjbGFzc0FycmF5KG5vZGUuZ2V0QXR0cmlidXRlKFwiY2xhc3NcIikgfHwgXCJcIik7XG59XG5cbkNsYXNzTGlzdC5wcm90b3R5cGUgPSB7XG4gIGFkZDogZnVuY3Rpb24obmFtZSkge1xuICAgIHZhciBpID0gdGhpcy5fbmFtZXMuaW5kZXhPZihuYW1lKTtcbiAgICBpZiAoaSA8IDApIHtcbiAgICAgIHRoaXMuX25hbWVzLnB1c2gobmFtZSk7XG4gICAgICB0aGlzLl9ub2RlLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIHRoaXMuX25hbWVzLmpvaW4oXCIgXCIpKTtcbiAgICB9XG4gIH0sXG4gIHJlbW92ZTogZnVuY3Rpb24obmFtZSkge1xuICAgIHZhciBpID0gdGhpcy5fbmFtZXMuaW5kZXhPZihuYW1lKTtcbiAgICBpZiAoaSA+PSAwKSB7XG4gICAgICB0aGlzLl9uYW1lcy5zcGxpY2UoaSwgMSk7XG4gICAgICB0aGlzLl9ub2RlLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIHRoaXMuX25hbWVzLmpvaW4oXCIgXCIpKTtcbiAgICB9XG4gIH0sXG4gIGNvbnRhaW5zOiBmdW5jdGlvbihuYW1lKSB7XG4gICAgcmV0dXJuIHRoaXMuX25hbWVzLmluZGV4T2YobmFtZSkgPj0gMDtcbiAgfVxufTtcblxuZnVuY3Rpb24gY2xhc3NlZEFkZChub2RlLCBuYW1lcykge1xuICB2YXIgbGlzdCA9IGNsYXNzTGlzdChub2RlKSwgaSA9IC0xLCBuID0gbmFtZXMubGVuZ3RoO1xuICB3aGlsZSAoKytpIDwgbikgbGlzdC5hZGQobmFtZXNbaV0pO1xufVxuXG5mdW5jdGlvbiBjbGFzc2VkUmVtb3ZlKG5vZGUsIG5hbWVzKSB7XG4gIHZhciBsaXN0ID0gY2xhc3NMaXN0KG5vZGUpLCBpID0gLTEsIG4gPSBuYW1lcy5sZW5ndGg7XG4gIHdoaWxlICgrK2kgPCBuKSBsaXN0LnJlbW92ZShuYW1lc1tpXSk7XG59XG5cbmZ1bmN0aW9uIGNsYXNzZWRUcnVlKG5hbWVzKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICBjbGFzc2VkQWRkKHRoaXMsIG5hbWVzKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gY2xhc3NlZEZhbHNlKG5hbWVzKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICBjbGFzc2VkUmVtb3ZlKHRoaXMsIG5hbWVzKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gY2xhc3NlZEZ1bmN0aW9uKG5hbWVzLCB2YWx1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgKHZhbHVlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgPyBjbGFzc2VkQWRkIDogY2xhc3NlZFJlbW92ZSkodGhpcywgbmFtZXMpO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihuYW1lLCB2YWx1ZSkge1xuICB2YXIgbmFtZXMgPSBjbGFzc0FycmF5KG5hbWUgKyBcIlwiKTtcblxuICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHtcbiAgICB2YXIgbGlzdCA9IGNsYXNzTGlzdCh0aGlzLm5vZGUoKSksIGkgPSAtMSwgbiA9IG5hbWVzLmxlbmd0aDtcbiAgICB3aGlsZSAoKytpIDwgbikgaWYgKCFsaXN0LmNvbnRhaW5zKG5hbWVzW2ldKSkgcmV0dXJuIGZhbHNlO1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgcmV0dXJuIHRoaXMuZWFjaCgodHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCJcbiAgICAgID8gY2xhc3NlZEZ1bmN0aW9uIDogdmFsdWVcbiAgICAgID8gY2xhc3NlZFRydWVcbiAgICAgIDogY2xhc3NlZEZhbHNlKShuYW1lcywgdmFsdWUpKTtcbn1cbiIsImZ1bmN0aW9uIHRleHRSZW1vdmUoKSB7XG4gIHRoaXMudGV4dENvbnRlbnQgPSBcIlwiO1xufVxuXG5mdW5jdGlvbiB0ZXh0Q29uc3RhbnQodmFsdWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHRoaXMudGV4dENvbnRlbnQgPSB2YWx1ZTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gdGV4dEZ1bmN0aW9uKHZhbHVlKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgdiA9IHZhbHVlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgdGhpcy50ZXh0Q29udGVudCA9IHYgPT0gbnVsbCA/IFwiXCIgOiB2O1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih2YWx1ZSkge1xuICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aFxuICAgICAgPyB0aGlzLmVhY2godmFsdWUgPT0gbnVsbFxuICAgICAgICAgID8gdGV4dFJlbW92ZSA6ICh0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIlxuICAgICAgICAgID8gdGV4dEZ1bmN0aW9uXG4gICAgICAgICAgOiB0ZXh0Q29uc3RhbnQpKHZhbHVlKSlcbiAgICAgIDogdGhpcy5ub2RlKCkudGV4dENvbnRlbnQ7XG59XG4iLCJmdW5jdGlvbiBodG1sUmVtb3ZlKCkge1xuICB0aGlzLmlubmVySFRNTCA9IFwiXCI7XG59XG5cbmZ1bmN0aW9uIGh0bWxDb25zdGFudCh2YWx1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5pbm5lckhUTUwgPSB2YWx1ZTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gaHRtbEZ1bmN0aW9uKHZhbHVlKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgdiA9IHZhbHVlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgdGhpcy5pbm5lckhUTUwgPSB2ID09IG51bGwgPyBcIlwiIDogdjtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWUpIHtcbiAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGhcbiAgICAgID8gdGhpcy5lYWNoKHZhbHVlID09IG51bGxcbiAgICAgICAgICA/IGh0bWxSZW1vdmUgOiAodHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCJcbiAgICAgICAgICA/IGh0bWxGdW5jdGlvblxuICAgICAgICAgIDogaHRtbENvbnN0YW50KSh2YWx1ZSkpXG4gICAgICA6IHRoaXMubm9kZSgpLmlubmVySFRNTDtcbn1cbiIsImZ1bmN0aW9uIHJhaXNlKCkge1xuICBpZiAodGhpcy5uZXh0U2libGluZykgdGhpcy5wYXJlbnROb2RlLmFwcGVuZENoaWxkKHRoaXMpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHRoaXMuZWFjaChyYWlzZSk7XG59XG4iLCJmdW5jdGlvbiBsb3dlcigpIHtcbiAgaWYgKHRoaXMucHJldmlvdXNTaWJsaW5nKSB0aGlzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHRoaXMsIHRoaXMucGFyZW50Tm9kZS5maXJzdENoaWxkKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiB0aGlzLmVhY2gobG93ZXIpO1xufVxuIiwiaW1wb3J0IGNyZWF0b3IgZnJvbSBcIi4uL2NyZWF0b3IuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obmFtZSkge1xuICB2YXIgY3JlYXRlID0gdHlwZW9mIG5hbWUgPT09IFwiZnVuY3Rpb25cIiA/IG5hbWUgOiBjcmVhdG9yKG5hbWUpO1xuICByZXR1cm4gdGhpcy5zZWxlY3QoZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuYXBwZW5kQ2hpbGQoY3JlYXRlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpO1xuICB9KTtcbn1cbiIsImltcG9ydCBjcmVhdG9yIGZyb20gXCIuLi9jcmVhdG9yLmpzXCI7XG5pbXBvcnQgc2VsZWN0b3IgZnJvbSBcIi4uL3NlbGVjdG9yLmpzXCI7XG5cbmZ1bmN0aW9uIGNvbnN0YW50TnVsbCgpIHtcbiAgcmV0dXJuIG51bGw7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5hbWUsIGJlZm9yZSkge1xuICB2YXIgY3JlYXRlID0gdHlwZW9mIG5hbWUgPT09IFwiZnVuY3Rpb25cIiA/IG5hbWUgOiBjcmVhdG9yKG5hbWUpLFxuICAgICAgc2VsZWN0ID0gYmVmb3JlID09IG51bGwgPyBjb25zdGFudE51bGwgOiB0eXBlb2YgYmVmb3JlID09PSBcImZ1bmN0aW9uXCIgPyBiZWZvcmUgOiBzZWxlY3RvcihiZWZvcmUpO1xuICByZXR1cm4gdGhpcy5zZWxlY3QoZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuaW5zZXJ0QmVmb3JlKGNyZWF0ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpLCBzZWxlY3QuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCBudWxsKTtcbiAgfSk7XG59XG4iLCJmdW5jdGlvbiByZW1vdmUoKSB7XG4gIHZhciBwYXJlbnQgPSB0aGlzLnBhcmVudE5vZGU7XG4gIGlmIChwYXJlbnQpIHBhcmVudC5yZW1vdmVDaGlsZCh0aGlzKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiB0aGlzLmVhY2gocmVtb3ZlKTtcbn1cbiIsImZ1bmN0aW9uIHNlbGVjdGlvbl9jbG9uZVNoYWxsb3coKSB7XG4gIHZhciBjbG9uZSA9IHRoaXMuY2xvbmVOb2RlKGZhbHNlKSwgcGFyZW50ID0gdGhpcy5wYXJlbnROb2RlO1xuICByZXR1cm4gcGFyZW50ID8gcGFyZW50Lmluc2VydEJlZm9yZShjbG9uZSwgdGhpcy5uZXh0U2libGluZykgOiBjbG9uZTtcbn1cblxuZnVuY3Rpb24gc2VsZWN0aW9uX2Nsb25lRGVlcCgpIHtcbiAgdmFyIGNsb25lID0gdGhpcy5jbG9uZU5vZGUodHJ1ZSksIHBhcmVudCA9IHRoaXMucGFyZW50Tm9kZTtcbiAgcmV0dXJuIHBhcmVudCA/IHBhcmVudC5pbnNlcnRCZWZvcmUoY2xvbmUsIHRoaXMubmV4dFNpYmxpbmcpIDogY2xvbmU7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGRlZXApIHtcbiAgcmV0dXJuIHRoaXMuc2VsZWN0KGRlZXAgPyBzZWxlY3Rpb25fY2xvbmVEZWVwIDogc2VsZWN0aW9uX2Nsb25lU2hhbGxvdyk7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih2YWx1ZSkge1xuICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aFxuICAgICAgPyB0aGlzLnByb3BlcnR5KFwiX19kYXRhX19cIiwgdmFsdWUpXG4gICAgICA6IHRoaXMubm9kZSgpLl9fZGF0YV9fO1xufVxuIiwiZnVuY3Rpb24gY29udGV4dExpc3RlbmVyKGxpc3RlbmVyKSB7XG4gIHJldHVybiBmdW5jdGlvbihldmVudCkge1xuICAgIGxpc3RlbmVyLmNhbGwodGhpcywgZXZlbnQsIHRoaXMuX19kYXRhX18pO1xuICB9O1xufVxuXG5mdW5jdGlvbiBwYXJzZVR5cGVuYW1lcyh0eXBlbmFtZXMpIHtcbiAgcmV0dXJuIHR5cGVuYW1lcy50cmltKCkuc3BsaXQoL158XFxzKy8pLm1hcChmdW5jdGlvbih0KSB7XG4gICAgdmFyIG5hbWUgPSBcIlwiLCBpID0gdC5pbmRleE9mKFwiLlwiKTtcbiAgICBpZiAoaSA+PSAwKSBuYW1lID0gdC5zbGljZShpICsgMSksIHQgPSB0LnNsaWNlKDAsIGkpO1xuICAgIHJldHVybiB7dHlwZTogdCwgbmFtZTogbmFtZX07XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBvblJlbW92ZSh0eXBlbmFtZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIG9uID0gdGhpcy5fX29uO1xuICAgIGlmICghb24pIHJldHVybjtcbiAgICBmb3IgKHZhciBqID0gMCwgaSA9IC0xLCBtID0gb24ubGVuZ3RoLCBvOyBqIDwgbTsgKytqKSB7XG4gICAgICBpZiAobyA9IG9uW2pdLCAoIXR5cGVuYW1lLnR5cGUgfHwgby50eXBlID09PSB0eXBlbmFtZS50eXBlKSAmJiBvLm5hbWUgPT09IHR5cGVuYW1lLm5hbWUpIHtcbiAgICAgICAgdGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKG8udHlwZSwgby5saXN0ZW5lciwgby5vcHRpb25zKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG9uWysraV0gPSBvO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAoKytpKSBvbi5sZW5ndGggPSBpO1xuICAgIGVsc2UgZGVsZXRlIHRoaXMuX19vbjtcbiAgfTtcbn1cblxuZnVuY3Rpb24gb25BZGQodHlwZW5hbWUsIHZhbHVlLCBvcHRpb25zKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgb24gPSB0aGlzLl9fb24sIG8sIGxpc3RlbmVyID0gY29udGV4dExpc3RlbmVyKHZhbHVlKTtcbiAgICBpZiAob24pIGZvciAodmFyIGogPSAwLCBtID0gb24ubGVuZ3RoOyBqIDwgbTsgKytqKSB7XG4gICAgICBpZiAoKG8gPSBvbltqXSkudHlwZSA9PT0gdHlwZW5hbWUudHlwZSAmJiBvLm5hbWUgPT09IHR5cGVuYW1lLm5hbWUpIHtcbiAgICAgICAgdGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKG8udHlwZSwgby5saXN0ZW5lciwgby5vcHRpb25zKTtcbiAgICAgICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKG8udHlwZSwgby5saXN0ZW5lciA9IGxpc3RlbmVyLCBvLm9wdGlvbnMgPSBvcHRpb25zKTtcbiAgICAgICAgby52YWx1ZSA9IHZhbHVlO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgfVxuICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcih0eXBlbmFtZS50eXBlLCBsaXN0ZW5lciwgb3B0aW9ucyk7XG4gICAgbyA9IHt0eXBlOiB0eXBlbmFtZS50eXBlLCBuYW1lOiB0eXBlbmFtZS5uYW1lLCB2YWx1ZTogdmFsdWUsIGxpc3RlbmVyOiBsaXN0ZW5lciwgb3B0aW9uczogb3B0aW9uc307XG4gICAgaWYgKCFvbikgdGhpcy5fX29uID0gW29dO1xuICAgIGVsc2Ugb24ucHVzaChvKTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odHlwZW5hbWUsIHZhbHVlLCBvcHRpb25zKSB7XG4gIHZhciB0eXBlbmFtZXMgPSBwYXJzZVR5cGVuYW1lcyh0eXBlbmFtZSArIFwiXCIpLCBpLCBuID0gdHlwZW5hbWVzLmxlbmd0aCwgdDtcblxuICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHtcbiAgICB2YXIgb24gPSB0aGlzLm5vZGUoKS5fX29uO1xuICAgIGlmIChvbikgZm9yICh2YXIgaiA9IDAsIG0gPSBvbi5sZW5ndGgsIG87IGogPCBtOyArK2opIHtcbiAgICAgIGZvciAoaSA9IDAsIG8gPSBvbltqXTsgaSA8IG47ICsraSkge1xuICAgICAgICBpZiAoKHQgPSB0eXBlbmFtZXNbaV0pLnR5cGUgPT09IG8udHlwZSAmJiB0Lm5hbWUgPT09IG8ubmFtZSkge1xuICAgICAgICAgIHJldHVybiBvLnZhbHVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybjtcbiAgfVxuXG4gIG9uID0gdmFsdWUgPyBvbkFkZCA6IG9uUmVtb3ZlO1xuICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSB0aGlzLmVhY2gob24odHlwZW5hbWVzW2ldLCB2YWx1ZSwgb3B0aW9ucykpO1xuICByZXR1cm4gdGhpcztcbn1cbiIsImltcG9ydCBkZWZhdWx0VmlldyBmcm9tIFwiLi4vd2luZG93LmpzXCI7XG5cbmZ1bmN0aW9uIGRpc3BhdGNoRXZlbnQobm9kZSwgdHlwZSwgcGFyYW1zKSB7XG4gIHZhciB3aW5kb3cgPSBkZWZhdWx0Vmlldyhub2RlKSxcbiAgICAgIGV2ZW50ID0gd2luZG93LkN1c3RvbUV2ZW50O1xuXG4gIGlmICh0eXBlb2YgZXZlbnQgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIGV2ZW50ID0gbmV3IGV2ZW50KHR5cGUsIHBhcmFtcyk7XG4gIH0gZWxzZSB7XG4gICAgZXZlbnQgPSB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRXZlbnQoXCJFdmVudFwiKTtcbiAgICBpZiAocGFyYW1zKSBldmVudC5pbml0RXZlbnQodHlwZSwgcGFyYW1zLmJ1YmJsZXMsIHBhcmFtcy5jYW5jZWxhYmxlKSwgZXZlbnQuZGV0YWlsID0gcGFyYW1zLmRldGFpbDtcbiAgICBlbHNlIGV2ZW50LmluaXRFdmVudCh0eXBlLCBmYWxzZSwgZmFsc2UpO1xuICB9XG5cbiAgbm9kZS5kaXNwYXRjaEV2ZW50KGV2ZW50KTtcbn1cblxuZnVuY3Rpb24gZGlzcGF0Y2hDb25zdGFudCh0eXBlLCBwYXJhbXMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkaXNwYXRjaEV2ZW50KHRoaXMsIHR5cGUsIHBhcmFtcyk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGRpc3BhdGNoRnVuY3Rpb24odHlwZSwgcGFyYW1zKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZGlzcGF0Y2hFdmVudCh0aGlzLCB0eXBlLCBwYXJhbXMuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHR5cGUsIHBhcmFtcykge1xuICByZXR1cm4gdGhpcy5lYWNoKCh0eXBlb2YgcGFyYW1zID09PSBcImZ1bmN0aW9uXCJcbiAgICAgID8gZGlzcGF0Y2hGdW5jdGlvblxuICAgICAgOiBkaXNwYXRjaENvbnN0YW50KSh0eXBlLCBwYXJhbXMpKTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKigpIHtcbiAgZm9yICh2YXIgZ3JvdXBzID0gdGhpcy5fZ3JvdXBzLCBqID0gMCwgbSA9IGdyb3Vwcy5sZW5ndGg7IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHZhciBncm91cCA9IGdyb3Vwc1tqXSwgaSA9IDAsIG4gPSBncm91cC5sZW5ndGgsIG5vZGU7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmIChub2RlID0gZ3JvdXBbaV0pIHlpZWxkIG5vZGU7XG4gICAgfVxuICB9XG59XG4iLCJpbXBvcnQgc2VsZWN0aW9uX3NlbGVjdCBmcm9tIFwiLi9zZWxlY3QuanNcIjtcbmltcG9ydCBzZWxlY3Rpb25fc2VsZWN0QWxsIGZyb20gXCIuL3NlbGVjdEFsbC5qc1wiO1xuaW1wb3J0IHNlbGVjdGlvbl9zZWxlY3RDaGlsZCBmcm9tIFwiLi9zZWxlY3RDaGlsZC5qc1wiO1xuaW1wb3J0IHNlbGVjdGlvbl9zZWxlY3RDaGlsZHJlbiBmcm9tIFwiLi9zZWxlY3RDaGlsZHJlbi5qc1wiO1xuaW1wb3J0IHNlbGVjdGlvbl9maWx0ZXIgZnJvbSBcIi4vZmlsdGVyLmpzXCI7XG5pbXBvcnQgc2VsZWN0aW9uX2RhdGEgZnJvbSBcIi4vZGF0YS5qc1wiO1xuaW1wb3J0IHNlbGVjdGlvbl9lbnRlciBmcm9tIFwiLi9lbnRlci5qc1wiO1xuaW1wb3J0IHNlbGVjdGlvbl9leGl0IGZyb20gXCIuL2V4aXQuanNcIjtcbmltcG9ydCBzZWxlY3Rpb25fam9pbiBmcm9tIFwiLi9qb2luLmpzXCI7XG5pbXBvcnQgc2VsZWN0aW9uX21lcmdlIGZyb20gXCIuL21lcmdlLmpzXCI7XG5pbXBvcnQgc2VsZWN0aW9uX29yZGVyIGZyb20gXCIuL29yZGVyLmpzXCI7XG5pbXBvcnQgc2VsZWN0aW9uX3NvcnQgZnJvbSBcIi4vc29ydC5qc1wiO1xuaW1wb3J0IHNlbGVjdGlvbl9jYWxsIGZyb20gXCIuL2NhbGwuanNcIjtcbmltcG9ydCBzZWxlY3Rpb25fbm9kZXMgZnJvbSBcIi4vbm9kZXMuanNcIjtcbmltcG9ydCBzZWxlY3Rpb25fbm9kZSBmcm9tIFwiLi9ub2RlLmpzXCI7XG5pbXBvcnQgc2VsZWN0aW9uX3NpemUgZnJvbSBcIi4vc2l6ZS5qc1wiO1xuaW1wb3J0IHNlbGVjdGlvbl9lbXB0eSBmcm9tIFwiLi9lbXB0eS5qc1wiO1xuaW1wb3J0IHNlbGVjdGlvbl9lYWNoIGZyb20gXCIuL2VhY2guanNcIjtcbmltcG9ydCBzZWxlY3Rpb25fYXR0ciBmcm9tIFwiLi9hdHRyLmpzXCI7XG5pbXBvcnQgc2VsZWN0aW9uX3N0eWxlIGZyb20gXCIuL3N0eWxlLmpzXCI7XG5pbXBvcnQgc2VsZWN0aW9uX3Byb3BlcnR5IGZyb20gXCIuL3Byb3BlcnR5LmpzXCI7XG5pbXBvcnQgc2VsZWN0aW9uX2NsYXNzZWQgZnJvbSBcIi4vY2xhc3NlZC5qc1wiO1xuaW1wb3J0IHNlbGVjdGlvbl90ZXh0IGZyb20gXCIuL3RleHQuanNcIjtcbmltcG9ydCBzZWxlY3Rpb25faHRtbCBmcm9tIFwiLi9odG1sLmpzXCI7XG5pbXBvcnQgc2VsZWN0aW9uX3JhaXNlIGZyb20gXCIuL3JhaXNlLmpzXCI7XG5pbXBvcnQgc2VsZWN0aW9uX2xvd2VyIGZyb20gXCIuL2xvd2VyLmpzXCI7XG5pbXBvcnQgc2VsZWN0aW9uX2FwcGVuZCBmcm9tIFwiLi9hcHBlbmQuanNcIjtcbmltcG9ydCBzZWxlY3Rpb25faW5zZXJ0IGZyb20gXCIuL2luc2VydC5qc1wiO1xuaW1wb3J0IHNlbGVjdGlvbl9yZW1vdmUgZnJvbSBcIi4vcmVtb3ZlLmpzXCI7XG5pbXBvcnQgc2VsZWN0aW9uX2Nsb25lIGZyb20gXCIuL2Nsb25lLmpzXCI7XG5pbXBvcnQgc2VsZWN0aW9uX2RhdHVtIGZyb20gXCIuL2RhdHVtLmpzXCI7XG5pbXBvcnQgc2VsZWN0aW9uX29uIGZyb20gXCIuL29uLmpzXCI7XG5pbXBvcnQgc2VsZWN0aW9uX2Rpc3BhdGNoIGZyb20gXCIuL2Rpc3BhdGNoLmpzXCI7XG5pbXBvcnQgc2VsZWN0aW9uX2l0ZXJhdG9yIGZyb20gXCIuL2l0ZXJhdG9yLmpzXCI7XG5cbmV4cG9ydCB2YXIgcm9vdCA9IFtudWxsXTtcblxuZXhwb3J0IGZ1bmN0aW9uIFNlbGVjdGlvbihncm91cHMsIHBhcmVudHMpIHtcbiAgdGhpcy5fZ3JvdXBzID0gZ3JvdXBzO1xuICB0aGlzLl9wYXJlbnRzID0gcGFyZW50cztcbn1cblxuZnVuY3Rpb24gc2VsZWN0aW9uKCkge1xuICByZXR1cm4gbmV3IFNlbGVjdGlvbihbW2RvY3VtZW50LmRvY3VtZW50RWxlbWVudF1dLCByb290KTtcbn1cblxuZnVuY3Rpb24gc2VsZWN0aW9uX3NlbGVjdGlvbigpIHtcbiAgcmV0dXJuIHRoaXM7XG59XG5cblNlbGVjdGlvbi5wcm90b3R5cGUgPSBzZWxlY3Rpb24ucHJvdG90eXBlID0ge1xuICBjb25zdHJ1Y3RvcjogU2VsZWN0aW9uLFxuICBzZWxlY3Q6IHNlbGVjdGlvbl9zZWxlY3QsXG4gIHNlbGVjdEFsbDogc2VsZWN0aW9uX3NlbGVjdEFsbCxcbiAgc2VsZWN0Q2hpbGQ6IHNlbGVjdGlvbl9zZWxlY3RDaGlsZCxcbiAgc2VsZWN0Q2hpbGRyZW46IHNlbGVjdGlvbl9zZWxlY3RDaGlsZHJlbixcbiAgZmlsdGVyOiBzZWxlY3Rpb25fZmlsdGVyLFxuICBkYXRhOiBzZWxlY3Rpb25fZGF0YSxcbiAgZW50ZXI6IHNlbGVjdGlvbl9lbnRlcixcbiAgZXhpdDogc2VsZWN0aW9uX2V4aXQsXG4gIGpvaW46IHNlbGVjdGlvbl9qb2luLFxuICBtZXJnZTogc2VsZWN0aW9uX21lcmdlLFxuICBzZWxlY3Rpb246IHNlbGVjdGlvbl9zZWxlY3Rpb24sXG4gIG9yZGVyOiBzZWxlY3Rpb25fb3JkZXIsXG4gIHNvcnQ6IHNlbGVjdGlvbl9zb3J0LFxuICBjYWxsOiBzZWxlY3Rpb25fY2FsbCxcbiAgbm9kZXM6IHNlbGVjdGlvbl9ub2RlcyxcbiAgbm9kZTogc2VsZWN0aW9uX25vZGUsXG4gIHNpemU6IHNlbGVjdGlvbl9zaXplLFxuICBlbXB0eTogc2VsZWN0aW9uX2VtcHR5LFxuICBlYWNoOiBzZWxlY3Rpb25fZWFjaCxcbiAgYXR0cjogc2VsZWN0aW9uX2F0dHIsXG4gIHN0eWxlOiBzZWxlY3Rpb25fc3R5bGUsXG4gIHByb3BlcnR5OiBzZWxlY3Rpb25fcHJvcGVydHksXG4gIGNsYXNzZWQ6IHNlbGVjdGlvbl9jbGFzc2VkLFxuICB0ZXh0OiBzZWxlY3Rpb25fdGV4dCxcbiAgaHRtbDogc2VsZWN0aW9uX2h0bWwsXG4gIHJhaXNlOiBzZWxlY3Rpb25fcmFpc2UsXG4gIGxvd2VyOiBzZWxlY3Rpb25fbG93ZXIsXG4gIGFwcGVuZDogc2VsZWN0aW9uX2FwcGVuZCxcbiAgaW5zZXJ0OiBzZWxlY3Rpb25faW5zZXJ0LFxuICByZW1vdmU6IHNlbGVjdGlvbl9yZW1vdmUsXG4gIGNsb25lOiBzZWxlY3Rpb25fY2xvbmUsXG4gIGRhdHVtOiBzZWxlY3Rpb25fZGF0dW0sXG4gIG9uOiBzZWxlY3Rpb25fb24sXG4gIGRpc3BhdGNoOiBzZWxlY3Rpb25fZGlzcGF0Y2gsXG4gIFtTeW1ib2wuaXRlcmF0b3JdOiBzZWxlY3Rpb25faXRlcmF0b3Jcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHNlbGVjdGlvbjtcbiIsImltcG9ydCB7U2VsZWN0aW9uLCByb290fSBmcm9tIFwiLi9zZWxlY3Rpb24vaW5kZXguanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc2VsZWN0b3IpIHtcbiAgcmV0dXJuIHR5cGVvZiBzZWxlY3RvciA9PT0gXCJzdHJpbmdcIlxuICAgICAgPyBuZXcgU2VsZWN0aW9uKFtbZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3RvcildXSwgW2RvY3VtZW50LmRvY3VtZW50RWxlbWVudF0pXG4gICAgICA6IG5ldyBTZWxlY3Rpb24oW1tzZWxlY3Rvcl1dLCByb290KTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGNvbnN0cnVjdG9yLCBmYWN0b3J5LCBwcm90b3R5cGUpIHtcbiAgY29uc3RydWN0b3IucHJvdG90eXBlID0gZmFjdG9yeS5wcm90b3R5cGUgPSBwcm90b3R5cGU7XG4gIHByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IGNvbnN0cnVjdG9yO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZXh0ZW5kKHBhcmVudCwgZGVmaW5pdGlvbikge1xuICB2YXIgcHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShwYXJlbnQucHJvdG90eXBlKTtcbiAgZm9yICh2YXIga2V5IGluIGRlZmluaXRpb24pIHByb3RvdHlwZVtrZXldID0gZGVmaW5pdGlvbltrZXldO1xuICByZXR1cm4gcHJvdG90eXBlO1xufVxuIiwiaW1wb3J0IGRlZmluZSwge2V4dGVuZH0gZnJvbSBcIi4vZGVmaW5lLmpzXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBDb2xvcigpIHt9XG5cbmV4cG9ydCB2YXIgZGFya2VyID0gMC43O1xuZXhwb3J0IHZhciBicmlnaHRlciA9IDEgLyBkYXJrZXI7XG5cbnZhciByZUkgPSBcIlxcXFxzKihbKy1dP1xcXFxkKylcXFxccypcIixcbiAgICByZU4gPSBcIlxcXFxzKihbKy1dPyg/OlxcXFxkKlxcXFwuKT9cXFxcZCsoPzpbZUVdWystXT9cXFxcZCspPylcXFxccypcIixcbiAgICByZVAgPSBcIlxcXFxzKihbKy1dPyg/OlxcXFxkKlxcXFwuKT9cXFxcZCsoPzpbZUVdWystXT9cXFxcZCspPyklXFxcXHMqXCIsXG4gICAgcmVIZXggPSAvXiMoWzAtOWEtZl17Myw4fSkkLyxcbiAgICByZVJnYkludGVnZXIgPSBuZXcgUmVnRXhwKGBecmdiXFxcXCgke3JlSX0sJHtyZUl9LCR7cmVJfVxcXFwpJGApLFxuICAgIHJlUmdiUGVyY2VudCA9IG5ldyBSZWdFeHAoYF5yZ2JcXFxcKCR7cmVQfSwke3JlUH0sJHtyZVB9XFxcXCkkYCksXG4gICAgcmVSZ2JhSW50ZWdlciA9IG5ldyBSZWdFeHAoYF5yZ2JhXFxcXCgke3JlSX0sJHtyZUl9LCR7cmVJfSwke3JlTn1cXFxcKSRgKSxcbiAgICByZVJnYmFQZXJjZW50ID0gbmV3IFJlZ0V4cChgXnJnYmFcXFxcKCR7cmVQfSwke3JlUH0sJHtyZVB9LCR7cmVOfVxcXFwpJGApLFxuICAgIHJlSHNsUGVyY2VudCA9IG5ldyBSZWdFeHAoYF5oc2xcXFxcKCR7cmVOfSwke3JlUH0sJHtyZVB9XFxcXCkkYCksXG4gICAgcmVIc2xhUGVyY2VudCA9IG5ldyBSZWdFeHAoYF5oc2xhXFxcXCgke3JlTn0sJHtyZVB9LCR7cmVQfSwke3JlTn1cXFxcKSRgKTtcblxudmFyIG5hbWVkID0ge1xuICBhbGljZWJsdWU6IDB4ZjBmOGZmLFxuICBhbnRpcXVld2hpdGU6IDB4ZmFlYmQ3LFxuICBhcXVhOiAweDAwZmZmZixcbiAgYXF1YW1hcmluZTogMHg3ZmZmZDQsXG4gIGF6dXJlOiAweGYwZmZmZixcbiAgYmVpZ2U6IDB4ZjVmNWRjLFxuICBiaXNxdWU6IDB4ZmZlNGM0LFxuICBibGFjazogMHgwMDAwMDAsXG4gIGJsYW5jaGVkYWxtb25kOiAweGZmZWJjZCxcbiAgYmx1ZTogMHgwMDAwZmYsXG4gIGJsdWV2aW9sZXQ6IDB4OGEyYmUyLFxuICBicm93bjogMHhhNTJhMmEsXG4gIGJ1cmx5d29vZDogMHhkZWI4ODcsXG4gIGNhZGV0Ymx1ZTogMHg1ZjllYTAsXG4gIGNoYXJ0cmV1c2U6IDB4N2ZmZjAwLFxuICBjaG9jb2xhdGU6IDB4ZDI2OTFlLFxuICBjb3JhbDogMHhmZjdmNTAsXG4gIGNvcm5mbG93ZXJibHVlOiAweDY0OTVlZCxcbiAgY29ybnNpbGs6IDB4ZmZmOGRjLFxuICBjcmltc29uOiAweGRjMTQzYyxcbiAgY3lhbjogMHgwMGZmZmYsXG4gIGRhcmtibHVlOiAweDAwMDA4YixcbiAgZGFya2N5YW46IDB4MDA4YjhiLFxuICBkYXJrZ29sZGVucm9kOiAweGI4ODYwYixcbiAgZGFya2dyYXk6IDB4YTlhOWE5LFxuICBkYXJrZ3JlZW46IDB4MDA2NDAwLFxuICBkYXJrZ3JleTogMHhhOWE5YTksXG4gIGRhcmtraGFraTogMHhiZGI3NmIsXG4gIGRhcmttYWdlbnRhOiAweDhiMDA4YixcbiAgZGFya29saXZlZ3JlZW46IDB4NTU2YjJmLFxuICBkYXJrb3JhbmdlOiAweGZmOGMwMCxcbiAgZGFya29yY2hpZDogMHg5OTMyY2MsXG4gIGRhcmtyZWQ6IDB4OGIwMDAwLFxuICBkYXJrc2FsbW9uOiAweGU5OTY3YSxcbiAgZGFya3NlYWdyZWVuOiAweDhmYmM4ZixcbiAgZGFya3NsYXRlYmx1ZTogMHg0ODNkOGIsXG4gIGRhcmtzbGF0ZWdyYXk6IDB4MmY0ZjRmLFxuICBkYXJrc2xhdGVncmV5OiAweDJmNGY0ZixcbiAgZGFya3R1cnF1b2lzZTogMHgwMGNlZDEsXG4gIGRhcmt2aW9sZXQ6IDB4OTQwMGQzLFxuICBkZWVwcGluazogMHhmZjE0OTMsXG4gIGRlZXBza3libHVlOiAweDAwYmZmZixcbiAgZGltZ3JheTogMHg2OTY5NjksXG4gIGRpbWdyZXk6IDB4Njk2OTY5LFxuICBkb2RnZXJibHVlOiAweDFlOTBmZixcbiAgZmlyZWJyaWNrOiAweGIyMjIyMixcbiAgZmxvcmFsd2hpdGU6IDB4ZmZmYWYwLFxuICBmb3Jlc3RncmVlbjogMHgyMjhiMjIsXG4gIGZ1Y2hzaWE6IDB4ZmYwMGZmLFxuICBnYWluc2Jvcm86IDB4ZGNkY2RjLFxuICBnaG9zdHdoaXRlOiAweGY4ZjhmZixcbiAgZ29sZDogMHhmZmQ3MDAsXG4gIGdvbGRlbnJvZDogMHhkYWE1MjAsXG4gIGdyYXk6IDB4ODA4MDgwLFxuICBncmVlbjogMHgwMDgwMDAsXG4gIGdyZWVueWVsbG93OiAweGFkZmYyZixcbiAgZ3JleTogMHg4MDgwODAsXG4gIGhvbmV5ZGV3OiAweGYwZmZmMCxcbiAgaG90cGluazogMHhmZjY5YjQsXG4gIGluZGlhbnJlZDogMHhjZDVjNWMsXG4gIGluZGlnbzogMHg0YjAwODIsXG4gIGl2b3J5OiAweGZmZmZmMCxcbiAga2hha2k6IDB4ZjBlNjhjLFxuICBsYXZlbmRlcjogMHhlNmU2ZmEsXG4gIGxhdmVuZGVyYmx1c2g6IDB4ZmZmMGY1LFxuICBsYXduZ3JlZW46IDB4N2NmYzAwLFxuICBsZW1vbmNoaWZmb246IDB4ZmZmYWNkLFxuICBsaWdodGJsdWU6IDB4YWRkOGU2LFxuICBsaWdodGNvcmFsOiAweGYwODA4MCxcbiAgbGlnaHRjeWFuOiAweGUwZmZmZixcbiAgbGlnaHRnb2xkZW5yb2R5ZWxsb3c6IDB4ZmFmYWQyLFxuICBsaWdodGdyYXk6IDB4ZDNkM2QzLFxuICBsaWdodGdyZWVuOiAweDkwZWU5MCxcbiAgbGlnaHRncmV5OiAweGQzZDNkMyxcbiAgbGlnaHRwaW5rOiAweGZmYjZjMSxcbiAgbGlnaHRzYWxtb246IDB4ZmZhMDdhLFxuICBsaWdodHNlYWdyZWVuOiAweDIwYjJhYSxcbiAgbGlnaHRza3libHVlOiAweDg3Y2VmYSxcbiAgbGlnaHRzbGF0ZWdyYXk6IDB4Nzc4ODk5LFxuICBsaWdodHNsYXRlZ3JleTogMHg3Nzg4OTksXG4gIGxpZ2h0c3RlZWxibHVlOiAweGIwYzRkZSxcbiAgbGlnaHR5ZWxsb3c6IDB4ZmZmZmUwLFxuICBsaW1lOiAweDAwZmYwMCxcbiAgbGltZWdyZWVuOiAweDMyY2QzMixcbiAgbGluZW46IDB4ZmFmMGU2LFxuICBtYWdlbnRhOiAweGZmMDBmZixcbiAgbWFyb29uOiAweDgwMDAwMCxcbiAgbWVkaXVtYXF1YW1hcmluZTogMHg2NmNkYWEsXG4gIG1lZGl1bWJsdWU6IDB4MDAwMGNkLFxuICBtZWRpdW1vcmNoaWQ6IDB4YmE1NWQzLFxuICBtZWRpdW1wdXJwbGU6IDB4OTM3MGRiLFxuICBtZWRpdW1zZWFncmVlbjogMHgzY2IzNzEsXG4gIG1lZGl1bXNsYXRlYmx1ZTogMHg3YjY4ZWUsXG4gIG1lZGl1bXNwcmluZ2dyZWVuOiAweDAwZmE5YSxcbiAgbWVkaXVtdHVycXVvaXNlOiAweDQ4ZDFjYyxcbiAgbWVkaXVtdmlvbGV0cmVkOiAweGM3MTU4NSxcbiAgbWlkbmlnaHRibHVlOiAweDE5MTk3MCxcbiAgbWludGNyZWFtOiAweGY1ZmZmYSxcbiAgbWlzdHlyb3NlOiAweGZmZTRlMSxcbiAgbW9jY2FzaW46IDB4ZmZlNGI1LFxuICBuYXZham93aGl0ZTogMHhmZmRlYWQsXG4gIG5hdnk6IDB4MDAwMDgwLFxuICBvbGRsYWNlOiAweGZkZjVlNixcbiAgb2xpdmU6IDB4ODA4MDAwLFxuICBvbGl2ZWRyYWI6IDB4NmI4ZTIzLFxuICBvcmFuZ2U6IDB4ZmZhNTAwLFxuICBvcmFuZ2VyZWQ6IDB4ZmY0NTAwLFxuICBvcmNoaWQ6IDB4ZGE3MGQ2LFxuICBwYWxlZ29sZGVucm9kOiAweGVlZThhYSxcbiAgcGFsZWdyZWVuOiAweDk4ZmI5OCxcbiAgcGFsZXR1cnF1b2lzZTogMHhhZmVlZWUsXG4gIHBhbGV2aW9sZXRyZWQ6IDB4ZGI3MDkzLFxuICBwYXBheWF3aGlwOiAweGZmZWZkNSxcbiAgcGVhY2hwdWZmOiAweGZmZGFiOSxcbiAgcGVydTogMHhjZDg1M2YsXG4gIHBpbms6IDB4ZmZjMGNiLFxuICBwbHVtOiAweGRkYTBkZCxcbiAgcG93ZGVyYmx1ZTogMHhiMGUwZTYsXG4gIHB1cnBsZTogMHg4MDAwODAsXG4gIHJlYmVjY2FwdXJwbGU6IDB4NjYzMzk5LFxuICByZWQ6IDB4ZmYwMDAwLFxuICByb3N5YnJvd246IDB4YmM4ZjhmLFxuICByb3lhbGJsdWU6IDB4NDE2OWUxLFxuICBzYWRkbGVicm93bjogMHg4YjQ1MTMsXG4gIHNhbG1vbjogMHhmYTgwNzIsXG4gIHNhbmR5YnJvd246IDB4ZjRhNDYwLFxuICBzZWFncmVlbjogMHgyZThiNTcsXG4gIHNlYXNoZWxsOiAweGZmZjVlZSxcbiAgc2llbm5hOiAweGEwNTIyZCxcbiAgc2lsdmVyOiAweGMwYzBjMCxcbiAgc2t5Ymx1ZTogMHg4N2NlZWIsXG4gIHNsYXRlYmx1ZTogMHg2YTVhY2QsXG4gIHNsYXRlZ3JheTogMHg3MDgwOTAsXG4gIHNsYXRlZ3JleTogMHg3MDgwOTAsXG4gIHNub3c6IDB4ZmZmYWZhLFxuICBzcHJpbmdncmVlbjogMHgwMGZmN2YsXG4gIHN0ZWVsYmx1ZTogMHg0NjgyYjQsXG4gIHRhbjogMHhkMmI0OGMsXG4gIHRlYWw6IDB4MDA4MDgwLFxuICB0aGlzdGxlOiAweGQ4YmZkOCxcbiAgdG9tYXRvOiAweGZmNjM0NyxcbiAgdHVycXVvaXNlOiAweDQwZTBkMCxcbiAgdmlvbGV0OiAweGVlODJlZSxcbiAgd2hlYXQ6IDB4ZjVkZWIzLFxuICB3aGl0ZTogMHhmZmZmZmYsXG4gIHdoaXRlc21va2U6IDB4ZjVmNWY1LFxuICB5ZWxsb3c6IDB4ZmZmZjAwLFxuICB5ZWxsb3dncmVlbjogMHg5YWNkMzJcbn07XG5cbmRlZmluZShDb2xvciwgY29sb3IsIHtcbiAgY29weShjaGFubmVscykge1xuICAgIHJldHVybiBPYmplY3QuYXNzaWduKG5ldyB0aGlzLmNvbnN0cnVjdG9yLCB0aGlzLCBjaGFubmVscyk7XG4gIH0sXG4gIGRpc3BsYXlhYmxlKCkge1xuICAgIHJldHVybiB0aGlzLnJnYigpLmRpc3BsYXlhYmxlKCk7XG4gIH0sXG4gIGhleDogY29sb3JfZm9ybWF0SGV4LCAvLyBEZXByZWNhdGVkISBVc2UgY29sb3IuZm9ybWF0SGV4LlxuICBmb3JtYXRIZXg6IGNvbG9yX2Zvcm1hdEhleCxcbiAgZm9ybWF0SGV4ODogY29sb3JfZm9ybWF0SGV4OCxcbiAgZm9ybWF0SHNsOiBjb2xvcl9mb3JtYXRIc2wsXG4gIGZvcm1hdFJnYjogY29sb3JfZm9ybWF0UmdiLFxuICB0b1N0cmluZzogY29sb3JfZm9ybWF0UmdiXG59KTtcblxuZnVuY3Rpb24gY29sb3JfZm9ybWF0SGV4KCkge1xuICByZXR1cm4gdGhpcy5yZ2IoKS5mb3JtYXRIZXgoKTtcbn1cblxuZnVuY3Rpb24gY29sb3JfZm9ybWF0SGV4OCgpIHtcbiAgcmV0dXJuIHRoaXMucmdiKCkuZm9ybWF0SGV4OCgpO1xufVxuXG5mdW5jdGlvbiBjb2xvcl9mb3JtYXRIc2woKSB7XG4gIHJldHVybiBoc2xDb252ZXJ0KHRoaXMpLmZvcm1hdEhzbCgpO1xufVxuXG5mdW5jdGlvbiBjb2xvcl9mb3JtYXRSZ2IoKSB7XG4gIHJldHVybiB0aGlzLnJnYigpLmZvcm1hdFJnYigpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjb2xvcihmb3JtYXQpIHtcbiAgdmFyIG0sIGw7XG4gIGZvcm1hdCA9IChmb3JtYXQgKyBcIlwiKS50cmltKCkudG9Mb3dlckNhc2UoKTtcbiAgcmV0dXJuIChtID0gcmVIZXguZXhlYyhmb3JtYXQpKSA/IChsID0gbVsxXS5sZW5ndGgsIG0gPSBwYXJzZUludChtWzFdLCAxNiksIGwgPT09IDYgPyByZ2JuKG0pIC8vICNmZjAwMDBcbiAgICAgIDogbCA9PT0gMyA/IG5ldyBSZ2IoKG0gPj4gOCAmIDB4ZikgfCAobSA+PiA0ICYgMHhmMCksIChtID4+IDQgJiAweGYpIHwgKG0gJiAweGYwKSwgKChtICYgMHhmKSA8PCA0KSB8IChtICYgMHhmKSwgMSkgLy8gI2YwMFxuICAgICAgOiBsID09PSA4ID8gcmdiYShtID4+IDI0ICYgMHhmZiwgbSA+PiAxNiAmIDB4ZmYsIG0gPj4gOCAmIDB4ZmYsIChtICYgMHhmZikgLyAweGZmKSAvLyAjZmYwMDAwMDBcbiAgICAgIDogbCA9PT0gNCA/IHJnYmEoKG0gPj4gMTIgJiAweGYpIHwgKG0gPj4gOCAmIDB4ZjApLCAobSA+PiA4ICYgMHhmKSB8IChtID4+IDQgJiAweGYwKSwgKG0gPj4gNCAmIDB4ZikgfCAobSAmIDB4ZjApLCAoKChtICYgMHhmKSA8PCA0KSB8IChtICYgMHhmKSkgLyAweGZmKSAvLyAjZjAwMFxuICAgICAgOiBudWxsKSAvLyBpbnZhbGlkIGhleFxuICAgICAgOiAobSA9IHJlUmdiSW50ZWdlci5leGVjKGZvcm1hdCkpID8gbmV3IFJnYihtWzFdLCBtWzJdLCBtWzNdLCAxKSAvLyByZ2IoMjU1LCAwLCAwKVxuICAgICAgOiAobSA9IHJlUmdiUGVyY2VudC5leGVjKGZvcm1hdCkpID8gbmV3IFJnYihtWzFdICogMjU1IC8gMTAwLCBtWzJdICogMjU1IC8gMTAwLCBtWzNdICogMjU1IC8gMTAwLCAxKSAvLyByZ2IoMTAwJSwgMCUsIDAlKVxuICAgICAgOiAobSA9IHJlUmdiYUludGVnZXIuZXhlYyhmb3JtYXQpKSA/IHJnYmEobVsxXSwgbVsyXSwgbVszXSwgbVs0XSkgLy8gcmdiYSgyNTUsIDAsIDAsIDEpXG4gICAgICA6IChtID0gcmVSZ2JhUGVyY2VudC5leGVjKGZvcm1hdCkpID8gcmdiYShtWzFdICogMjU1IC8gMTAwLCBtWzJdICogMjU1IC8gMTAwLCBtWzNdICogMjU1IC8gMTAwLCBtWzRdKSAvLyByZ2IoMTAwJSwgMCUsIDAlLCAxKVxuICAgICAgOiAobSA9IHJlSHNsUGVyY2VudC5leGVjKGZvcm1hdCkpID8gaHNsYShtWzFdLCBtWzJdIC8gMTAwLCBtWzNdIC8gMTAwLCAxKSAvLyBoc2woMTIwLCA1MCUsIDUwJSlcbiAgICAgIDogKG0gPSByZUhzbGFQZXJjZW50LmV4ZWMoZm9ybWF0KSkgPyBoc2xhKG1bMV0sIG1bMl0gLyAxMDAsIG1bM10gLyAxMDAsIG1bNF0pIC8vIGhzbGEoMTIwLCA1MCUsIDUwJSwgMSlcbiAgICAgIDogbmFtZWQuaGFzT3duUHJvcGVydHkoZm9ybWF0KSA/IHJnYm4obmFtZWRbZm9ybWF0XSkgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1wcm90b3R5cGUtYnVpbHRpbnNcbiAgICAgIDogZm9ybWF0ID09PSBcInRyYW5zcGFyZW50XCIgPyBuZXcgUmdiKE5hTiwgTmFOLCBOYU4sIDApXG4gICAgICA6IG51bGw7XG59XG5cbmZ1bmN0aW9uIHJnYm4obikge1xuICByZXR1cm4gbmV3IFJnYihuID4+IDE2ICYgMHhmZiwgbiA+PiA4ICYgMHhmZiwgbiAmIDB4ZmYsIDEpO1xufVxuXG5mdW5jdGlvbiByZ2JhKHIsIGcsIGIsIGEpIHtcbiAgaWYgKGEgPD0gMCkgciA9IGcgPSBiID0gTmFOO1xuICByZXR1cm4gbmV3IFJnYihyLCBnLCBiLCBhKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJnYkNvbnZlcnQobykge1xuICBpZiAoIShvIGluc3RhbmNlb2YgQ29sb3IpKSBvID0gY29sb3Iobyk7XG4gIGlmICghbykgcmV0dXJuIG5ldyBSZ2I7XG4gIG8gPSBvLnJnYigpO1xuICByZXR1cm4gbmV3IFJnYihvLnIsIG8uZywgby5iLCBvLm9wYWNpdHkpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcmdiKHIsIGcsIGIsIG9wYWNpdHkpIHtcbiAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPT09IDEgPyByZ2JDb252ZXJ0KHIpIDogbmV3IFJnYihyLCBnLCBiLCBvcGFjaXR5ID09IG51bGwgPyAxIDogb3BhY2l0eSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBSZ2IociwgZywgYiwgb3BhY2l0eSkge1xuICB0aGlzLnIgPSArcjtcbiAgdGhpcy5nID0gK2c7XG4gIHRoaXMuYiA9ICtiO1xuICB0aGlzLm9wYWNpdHkgPSArb3BhY2l0eTtcbn1cblxuZGVmaW5lKFJnYiwgcmdiLCBleHRlbmQoQ29sb3IsIHtcbiAgYnJpZ2h0ZXIoaykge1xuICAgIGsgPSBrID09IG51bGwgPyBicmlnaHRlciA6IE1hdGgucG93KGJyaWdodGVyLCBrKTtcbiAgICByZXR1cm4gbmV3IFJnYih0aGlzLnIgKiBrLCB0aGlzLmcgKiBrLCB0aGlzLmIgKiBrLCB0aGlzLm9wYWNpdHkpO1xuICB9LFxuICBkYXJrZXIoaykge1xuICAgIGsgPSBrID09IG51bGwgPyBkYXJrZXIgOiBNYXRoLnBvdyhkYXJrZXIsIGspO1xuICAgIHJldHVybiBuZXcgUmdiKHRoaXMuciAqIGssIHRoaXMuZyAqIGssIHRoaXMuYiAqIGssIHRoaXMub3BhY2l0eSk7XG4gIH0sXG4gIHJnYigpIHtcbiAgICByZXR1cm4gdGhpcztcbiAgfSxcbiAgY2xhbXAoKSB7XG4gICAgcmV0dXJuIG5ldyBSZ2IoY2xhbXBpKHRoaXMuciksIGNsYW1waSh0aGlzLmcpLCBjbGFtcGkodGhpcy5iKSwgY2xhbXBhKHRoaXMub3BhY2l0eSkpO1xuICB9LFxuICBkaXNwbGF5YWJsZSgpIHtcbiAgICByZXR1cm4gKC0wLjUgPD0gdGhpcy5yICYmIHRoaXMuciA8IDI1NS41KVxuICAgICAgICAmJiAoLTAuNSA8PSB0aGlzLmcgJiYgdGhpcy5nIDwgMjU1LjUpXG4gICAgICAgICYmICgtMC41IDw9IHRoaXMuYiAmJiB0aGlzLmIgPCAyNTUuNSlcbiAgICAgICAgJiYgKDAgPD0gdGhpcy5vcGFjaXR5ICYmIHRoaXMub3BhY2l0eSA8PSAxKTtcbiAgfSxcbiAgaGV4OiByZ2JfZm9ybWF0SGV4LCAvLyBEZXByZWNhdGVkISBVc2UgY29sb3IuZm9ybWF0SGV4LlxuICBmb3JtYXRIZXg6IHJnYl9mb3JtYXRIZXgsXG4gIGZvcm1hdEhleDg6IHJnYl9mb3JtYXRIZXg4LFxuICBmb3JtYXRSZ2I6IHJnYl9mb3JtYXRSZ2IsXG4gIHRvU3RyaW5nOiByZ2JfZm9ybWF0UmdiXG59KSk7XG5cbmZ1bmN0aW9uIHJnYl9mb3JtYXRIZXgoKSB7XG4gIHJldHVybiBgIyR7aGV4KHRoaXMucil9JHtoZXgodGhpcy5nKX0ke2hleCh0aGlzLmIpfWA7XG59XG5cbmZ1bmN0aW9uIHJnYl9mb3JtYXRIZXg4KCkge1xuICByZXR1cm4gYCMke2hleCh0aGlzLnIpfSR7aGV4KHRoaXMuZyl9JHtoZXgodGhpcy5iKX0ke2hleCgoaXNOYU4odGhpcy5vcGFjaXR5KSA/IDEgOiB0aGlzLm9wYWNpdHkpICogMjU1KX1gO1xufVxuXG5mdW5jdGlvbiByZ2JfZm9ybWF0UmdiKCkge1xuICBjb25zdCBhID0gY2xhbXBhKHRoaXMub3BhY2l0eSk7XG4gIHJldHVybiBgJHthID09PSAxID8gXCJyZ2IoXCIgOiBcInJnYmEoXCJ9JHtjbGFtcGkodGhpcy5yKX0sICR7Y2xhbXBpKHRoaXMuZyl9LCAke2NsYW1waSh0aGlzLmIpfSR7YSA9PT0gMSA/IFwiKVwiIDogYCwgJHthfSlgfWA7XG59XG5cbmZ1bmN0aW9uIGNsYW1wYShvcGFjaXR5KSB7XG4gIHJldHVybiBpc05hTihvcGFjaXR5KSA/IDEgOiBNYXRoLm1heCgwLCBNYXRoLm1pbigxLCBvcGFjaXR5KSk7XG59XG5cbmZ1bmN0aW9uIGNsYW1waSh2YWx1ZSkge1xuICByZXR1cm4gTWF0aC5tYXgoMCwgTWF0aC5taW4oMjU1LCBNYXRoLnJvdW5kKHZhbHVlKSB8fCAwKSk7XG59XG5cbmZ1bmN0aW9uIGhleCh2YWx1ZSkge1xuICB2YWx1ZSA9IGNsYW1waSh2YWx1ZSk7XG4gIHJldHVybiAodmFsdWUgPCAxNiA/IFwiMFwiIDogXCJcIikgKyB2YWx1ZS50b1N0cmluZygxNik7XG59XG5cbmZ1bmN0aW9uIGhzbGEoaCwgcywgbCwgYSkge1xuICBpZiAoYSA8PSAwKSBoID0gcyA9IGwgPSBOYU47XG4gIGVsc2UgaWYgKGwgPD0gMCB8fCBsID49IDEpIGggPSBzID0gTmFOO1xuICBlbHNlIGlmIChzIDw9IDApIGggPSBOYU47XG4gIHJldHVybiBuZXcgSHNsKGgsIHMsIGwsIGEpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaHNsQ29udmVydChvKSB7XG4gIGlmIChvIGluc3RhbmNlb2YgSHNsKSByZXR1cm4gbmV3IEhzbChvLmgsIG8ucywgby5sLCBvLm9wYWNpdHkpO1xuICBpZiAoIShvIGluc3RhbmNlb2YgQ29sb3IpKSBvID0gY29sb3Iobyk7XG4gIGlmICghbykgcmV0dXJuIG5ldyBIc2w7XG4gIGlmIChvIGluc3RhbmNlb2YgSHNsKSByZXR1cm4gbztcbiAgbyA9IG8ucmdiKCk7XG4gIHZhciByID0gby5yIC8gMjU1LFxuICAgICAgZyA9IG8uZyAvIDI1NSxcbiAgICAgIGIgPSBvLmIgLyAyNTUsXG4gICAgICBtaW4gPSBNYXRoLm1pbihyLCBnLCBiKSxcbiAgICAgIG1heCA9IE1hdGgubWF4KHIsIGcsIGIpLFxuICAgICAgaCA9IE5hTixcbiAgICAgIHMgPSBtYXggLSBtaW4sXG4gICAgICBsID0gKG1heCArIG1pbikgLyAyO1xuICBpZiAocykge1xuICAgIGlmIChyID09PSBtYXgpIGggPSAoZyAtIGIpIC8gcyArIChnIDwgYikgKiA2O1xuICAgIGVsc2UgaWYgKGcgPT09IG1heCkgaCA9IChiIC0gcikgLyBzICsgMjtcbiAgICBlbHNlIGggPSAociAtIGcpIC8gcyArIDQ7XG4gICAgcyAvPSBsIDwgMC41ID8gbWF4ICsgbWluIDogMiAtIG1heCAtIG1pbjtcbiAgICBoICo9IDYwO1xuICB9IGVsc2Uge1xuICAgIHMgPSBsID4gMCAmJiBsIDwgMSA/IDAgOiBoO1xuICB9XG4gIHJldHVybiBuZXcgSHNsKGgsIHMsIGwsIG8ub3BhY2l0eSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBoc2woaCwgcywgbCwgb3BhY2l0eSkge1xuICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA9PT0gMSA/IGhzbENvbnZlcnQoaCkgOiBuZXcgSHNsKGgsIHMsIGwsIG9wYWNpdHkgPT0gbnVsbCA/IDEgOiBvcGFjaXR5KTtcbn1cblxuZnVuY3Rpb24gSHNsKGgsIHMsIGwsIG9wYWNpdHkpIHtcbiAgdGhpcy5oID0gK2g7XG4gIHRoaXMucyA9ICtzO1xuICB0aGlzLmwgPSArbDtcbiAgdGhpcy5vcGFjaXR5ID0gK29wYWNpdHk7XG59XG5cbmRlZmluZShIc2wsIGhzbCwgZXh0ZW5kKENvbG9yLCB7XG4gIGJyaWdodGVyKGspIHtcbiAgICBrID0gayA9PSBudWxsID8gYnJpZ2h0ZXIgOiBNYXRoLnBvdyhicmlnaHRlciwgayk7XG4gICAgcmV0dXJuIG5ldyBIc2wodGhpcy5oLCB0aGlzLnMsIHRoaXMubCAqIGssIHRoaXMub3BhY2l0eSk7XG4gIH0sXG4gIGRhcmtlcihrKSB7XG4gICAgayA9IGsgPT0gbnVsbCA/IGRhcmtlciA6IE1hdGgucG93KGRhcmtlciwgayk7XG4gICAgcmV0dXJuIG5ldyBIc2wodGhpcy5oLCB0aGlzLnMsIHRoaXMubCAqIGssIHRoaXMub3BhY2l0eSk7XG4gIH0sXG4gIHJnYigpIHtcbiAgICB2YXIgaCA9IHRoaXMuaCAlIDM2MCArICh0aGlzLmggPCAwKSAqIDM2MCxcbiAgICAgICAgcyA9IGlzTmFOKGgpIHx8IGlzTmFOKHRoaXMucykgPyAwIDogdGhpcy5zLFxuICAgICAgICBsID0gdGhpcy5sLFxuICAgICAgICBtMiA9IGwgKyAobCA8IDAuNSA/IGwgOiAxIC0gbCkgKiBzLFxuICAgICAgICBtMSA9IDIgKiBsIC0gbTI7XG4gICAgcmV0dXJuIG5ldyBSZ2IoXG4gICAgICBoc2wycmdiKGggPj0gMjQwID8gaCAtIDI0MCA6IGggKyAxMjAsIG0xLCBtMiksXG4gICAgICBoc2wycmdiKGgsIG0xLCBtMiksXG4gICAgICBoc2wycmdiKGggPCAxMjAgPyBoICsgMjQwIDogaCAtIDEyMCwgbTEsIG0yKSxcbiAgICAgIHRoaXMub3BhY2l0eVxuICAgICk7XG4gIH0sXG4gIGNsYW1wKCkge1xuICAgIHJldHVybiBuZXcgSHNsKGNsYW1waCh0aGlzLmgpLCBjbGFtcHQodGhpcy5zKSwgY2xhbXB0KHRoaXMubCksIGNsYW1wYSh0aGlzLm9wYWNpdHkpKTtcbiAgfSxcbiAgZGlzcGxheWFibGUoKSB7XG4gICAgcmV0dXJuICgwIDw9IHRoaXMucyAmJiB0aGlzLnMgPD0gMSB8fCBpc05hTih0aGlzLnMpKVxuICAgICAgICAmJiAoMCA8PSB0aGlzLmwgJiYgdGhpcy5sIDw9IDEpXG4gICAgICAgICYmICgwIDw9IHRoaXMub3BhY2l0eSAmJiB0aGlzLm9wYWNpdHkgPD0gMSk7XG4gIH0sXG4gIGZvcm1hdEhzbCgpIHtcbiAgICBjb25zdCBhID0gY2xhbXBhKHRoaXMub3BhY2l0eSk7XG4gICAgcmV0dXJuIGAke2EgPT09IDEgPyBcImhzbChcIiA6IFwiaHNsYShcIn0ke2NsYW1waCh0aGlzLmgpfSwgJHtjbGFtcHQodGhpcy5zKSAqIDEwMH0lLCAke2NsYW1wdCh0aGlzLmwpICogMTAwfSUke2EgPT09IDEgPyBcIilcIiA6IGAsICR7YX0pYH1gO1xuICB9XG59KSk7XG5cbmZ1bmN0aW9uIGNsYW1waCh2YWx1ZSkge1xuICB2YWx1ZSA9ICh2YWx1ZSB8fCAwKSAlIDM2MDtcbiAgcmV0dXJuIHZhbHVlIDwgMCA/IHZhbHVlICsgMzYwIDogdmFsdWU7XG59XG5cbmZ1bmN0aW9uIGNsYW1wdCh2YWx1ZSkge1xuICByZXR1cm4gTWF0aC5tYXgoMCwgTWF0aC5taW4oMSwgdmFsdWUgfHwgMCkpO1xufVxuXG4vKiBGcm9tIEZ2RCAxMy4zNywgQ1NTIENvbG9yIE1vZHVsZSBMZXZlbCAzICovXG5mdW5jdGlvbiBoc2wycmdiKGgsIG0xLCBtMikge1xuICByZXR1cm4gKGggPCA2MCA/IG0xICsgKG0yIC0gbTEpICogaCAvIDYwXG4gICAgICA6IGggPCAxODAgPyBtMlxuICAgICAgOiBoIDwgMjQwID8gbTEgKyAobTIgLSBtMSkgKiAoMjQwIC0gaCkgLyA2MFxuICAgICAgOiBtMSkgKiAyNTU7XG59XG4iLCJleHBvcnQgZGVmYXVsdCB4ID0+ICgpID0+IHg7XG4iLCJpbXBvcnQgY29uc3RhbnQgZnJvbSBcIi4vY29uc3RhbnQuanNcIjtcblxuZnVuY3Rpb24gbGluZWFyKGEsIGQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICByZXR1cm4gYSArIHQgKiBkO1xuICB9O1xufVxuXG5mdW5jdGlvbiBleHBvbmVudGlhbChhLCBiLCB5KSB7XG4gIHJldHVybiBhID0gTWF0aC5wb3coYSwgeSksIGIgPSBNYXRoLnBvdyhiLCB5KSAtIGEsIHkgPSAxIC8geSwgZnVuY3Rpb24odCkge1xuICAgIHJldHVybiBNYXRoLnBvdyhhICsgdCAqIGIsIHkpO1xuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaHVlKGEsIGIpIHtcbiAgdmFyIGQgPSBiIC0gYTtcbiAgcmV0dXJuIGQgPyBsaW5lYXIoYSwgZCA+IDE4MCB8fCBkIDwgLTE4MCA/IGQgLSAzNjAgKiBNYXRoLnJvdW5kKGQgLyAzNjApIDogZCkgOiBjb25zdGFudChpc05hTihhKSA/IGIgOiBhKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdhbW1hKHkpIHtcbiAgcmV0dXJuICh5ID0gK3kpID09PSAxID8gbm9nYW1tYSA6IGZ1bmN0aW9uKGEsIGIpIHtcbiAgICByZXR1cm4gYiAtIGEgPyBleHBvbmVudGlhbChhLCBiLCB5KSA6IGNvbnN0YW50KGlzTmFOKGEpID8gYiA6IGEpO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBub2dhbW1hKGEsIGIpIHtcbiAgdmFyIGQgPSBiIC0gYTtcbiAgcmV0dXJuIGQgPyBsaW5lYXIoYSwgZCkgOiBjb25zdGFudChpc05hTihhKSA/IGIgOiBhKTtcbn1cbiIsImltcG9ydCB7cmdiIGFzIGNvbG9yUmdifSBmcm9tIFwiZDMtY29sb3JcIjtcbmltcG9ydCBiYXNpcyBmcm9tIFwiLi9iYXNpcy5qc1wiO1xuaW1wb3J0IGJhc2lzQ2xvc2VkIGZyb20gXCIuL2Jhc2lzQ2xvc2VkLmpzXCI7XG5pbXBvcnQgbm9nYW1tYSwge2dhbW1hfSBmcm9tIFwiLi9jb2xvci5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gcmdiR2FtbWEoeSkge1xuICB2YXIgY29sb3IgPSBnYW1tYSh5KTtcblxuICBmdW5jdGlvbiByZ2Ioc3RhcnQsIGVuZCkge1xuICAgIHZhciByID0gY29sb3IoKHN0YXJ0ID0gY29sb3JSZ2Ioc3RhcnQpKS5yLCAoZW5kID0gY29sb3JSZ2IoZW5kKSkuciksXG4gICAgICAgIGcgPSBjb2xvcihzdGFydC5nLCBlbmQuZyksXG4gICAgICAgIGIgPSBjb2xvcihzdGFydC5iLCBlbmQuYiksXG4gICAgICAgIG9wYWNpdHkgPSBub2dhbW1hKHN0YXJ0Lm9wYWNpdHksIGVuZC5vcGFjaXR5KTtcbiAgICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgICAgc3RhcnQuciA9IHIodCk7XG4gICAgICBzdGFydC5nID0gZyh0KTtcbiAgICAgIHN0YXJ0LmIgPSBiKHQpO1xuICAgICAgc3RhcnQub3BhY2l0eSA9IG9wYWNpdHkodCk7XG4gICAgICByZXR1cm4gc3RhcnQgKyBcIlwiO1xuICAgIH07XG4gIH1cblxuICByZ2IuZ2FtbWEgPSByZ2JHYW1tYTtcblxuICByZXR1cm4gcmdiO1xufSkoMSk7XG5cbmZ1bmN0aW9uIHJnYlNwbGluZShzcGxpbmUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKGNvbG9ycykge1xuICAgIHZhciBuID0gY29sb3JzLmxlbmd0aCxcbiAgICAgICAgciA9IG5ldyBBcnJheShuKSxcbiAgICAgICAgZyA9IG5ldyBBcnJheShuKSxcbiAgICAgICAgYiA9IG5ldyBBcnJheShuKSxcbiAgICAgICAgaSwgY29sb3I7XG4gICAgZm9yIChpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgY29sb3IgPSBjb2xvclJnYihjb2xvcnNbaV0pO1xuICAgICAgcltpXSA9IGNvbG9yLnIgfHwgMDtcbiAgICAgIGdbaV0gPSBjb2xvci5nIHx8IDA7XG4gICAgICBiW2ldID0gY29sb3IuYiB8fCAwO1xuICAgIH1cbiAgICByID0gc3BsaW5lKHIpO1xuICAgIGcgPSBzcGxpbmUoZyk7XG4gICAgYiA9IHNwbGluZShiKTtcbiAgICBjb2xvci5vcGFjaXR5ID0gMTtcbiAgICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgICAgY29sb3IuciA9IHIodCk7XG4gICAgICBjb2xvci5nID0gZyh0KTtcbiAgICAgIGNvbG9yLmIgPSBiKHQpO1xuICAgICAgcmV0dXJuIGNvbG9yICsgXCJcIjtcbiAgICB9O1xuICB9O1xufVxuXG5leHBvcnQgdmFyIHJnYkJhc2lzID0gcmdiU3BsaW5lKGJhc2lzKTtcbmV4cG9ydCB2YXIgcmdiQmFzaXNDbG9zZWQgPSByZ2JTcGxpbmUoYmFzaXNDbG9zZWQpO1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oYSwgYikge1xuICByZXR1cm4gYSA9ICthLCBiID0gK2IsIGZ1bmN0aW9uKHQpIHtcbiAgICByZXR1cm4gYSAqICgxIC0gdCkgKyBiICogdDtcbiAgfTtcbn1cbiIsImltcG9ydCBudW1iZXIgZnJvbSBcIi4vbnVtYmVyLmpzXCI7XG5cbnZhciByZUEgPSAvWy0rXT8oPzpcXGQrXFwuP1xcZCp8XFwuP1xcZCspKD86W2VFXVstK10/XFxkKyk/L2csXG4gICAgcmVCID0gbmV3IFJlZ0V4cChyZUEuc291cmNlLCBcImdcIik7XG5cbmZ1bmN0aW9uIHplcm8oYikge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGI7XG4gIH07XG59XG5cbmZ1bmN0aW9uIG9uZShiKSB7XG4gIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgcmV0dXJuIGIodCkgKyBcIlwiO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihhLCBiKSB7XG4gIHZhciBiaSA9IHJlQS5sYXN0SW5kZXggPSByZUIubGFzdEluZGV4ID0gMCwgLy8gc2NhbiBpbmRleCBmb3IgbmV4dCBudW1iZXIgaW4gYlxuICAgICAgYW0sIC8vIGN1cnJlbnQgbWF0Y2ggaW4gYVxuICAgICAgYm0sIC8vIGN1cnJlbnQgbWF0Y2ggaW4gYlxuICAgICAgYnMsIC8vIHN0cmluZyBwcmVjZWRpbmcgY3VycmVudCBudW1iZXIgaW4gYiwgaWYgYW55XG4gICAgICBpID0gLTEsIC8vIGluZGV4IGluIHNcbiAgICAgIHMgPSBbXSwgLy8gc3RyaW5nIGNvbnN0YW50cyBhbmQgcGxhY2Vob2xkZXJzXG4gICAgICBxID0gW107IC8vIG51bWJlciBpbnRlcnBvbGF0b3JzXG5cbiAgLy8gQ29lcmNlIGlucHV0cyB0byBzdHJpbmdzLlxuICBhID0gYSArIFwiXCIsIGIgPSBiICsgXCJcIjtcblxuICAvLyBJbnRlcnBvbGF0ZSBwYWlycyBvZiBudW1iZXJzIGluIGEgJiBiLlxuICB3aGlsZSAoKGFtID0gcmVBLmV4ZWMoYSkpXG4gICAgICAmJiAoYm0gPSByZUIuZXhlYyhiKSkpIHtcbiAgICBpZiAoKGJzID0gYm0uaW5kZXgpID4gYmkpIHsgLy8gYSBzdHJpbmcgcHJlY2VkZXMgdGhlIG5leHQgbnVtYmVyIGluIGJcbiAgICAgIGJzID0gYi5zbGljZShiaSwgYnMpO1xuICAgICAgaWYgKHNbaV0pIHNbaV0gKz0gYnM7IC8vIGNvYWxlc2NlIHdpdGggcHJldmlvdXMgc3RyaW5nXG4gICAgICBlbHNlIHNbKytpXSA9IGJzO1xuICAgIH1cbiAgICBpZiAoKGFtID0gYW1bMF0pID09PSAoYm0gPSBibVswXSkpIHsgLy8gbnVtYmVycyBpbiBhICYgYiBtYXRjaFxuICAgICAgaWYgKHNbaV0pIHNbaV0gKz0gYm07IC8vIGNvYWxlc2NlIHdpdGggcHJldmlvdXMgc3RyaW5nXG4gICAgICBlbHNlIHNbKytpXSA9IGJtO1xuICAgIH0gZWxzZSB7IC8vIGludGVycG9sYXRlIG5vbi1tYXRjaGluZyBudW1iZXJzXG4gICAgICBzWysraV0gPSBudWxsO1xuICAgICAgcS5wdXNoKHtpOiBpLCB4OiBudW1iZXIoYW0sIGJtKX0pO1xuICAgIH1cbiAgICBiaSA9IHJlQi5sYXN0SW5kZXg7XG4gIH1cblxuICAvLyBBZGQgcmVtYWlucyBvZiBiLlxuICBpZiAoYmkgPCBiLmxlbmd0aCkge1xuICAgIGJzID0gYi5zbGljZShiaSk7XG4gICAgaWYgKHNbaV0pIHNbaV0gKz0gYnM7IC8vIGNvYWxlc2NlIHdpdGggcHJldmlvdXMgc3RyaW5nXG4gICAgZWxzZSBzWysraV0gPSBicztcbiAgfVxuXG4gIC8vIFNwZWNpYWwgb3B0aW1pemF0aW9uIGZvciBvbmx5IGEgc2luZ2xlIG1hdGNoLlxuICAvLyBPdGhlcndpc2UsIGludGVycG9sYXRlIGVhY2ggb2YgdGhlIG51bWJlcnMgYW5kIHJlam9pbiB0aGUgc3RyaW5nLlxuICByZXR1cm4gcy5sZW5ndGggPCAyID8gKHFbMF1cbiAgICAgID8gb25lKHFbMF0ueClcbiAgICAgIDogemVybyhiKSlcbiAgICAgIDogKGIgPSBxLmxlbmd0aCwgZnVuY3Rpb24odCkge1xuICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBvOyBpIDwgYjsgKytpKSBzWyhvID0gcVtpXSkuaV0gPSBvLngodCk7XG4gICAgICAgICAgcmV0dXJuIHMuam9pbihcIlwiKTtcbiAgICAgICAgfSk7XG59XG4iLCJ2YXIgZGVncmVlcyA9IDE4MCAvIE1hdGguUEk7XG5cbmV4cG9ydCB2YXIgaWRlbnRpdHkgPSB7XG4gIHRyYW5zbGF0ZVg6IDAsXG4gIHRyYW5zbGF0ZVk6IDAsXG4gIHJvdGF0ZTogMCxcbiAgc2tld1g6IDAsXG4gIHNjYWxlWDogMSxcbiAgc2NhbGVZOiAxXG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihhLCBiLCBjLCBkLCBlLCBmKSB7XG4gIHZhciBzY2FsZVgsIHNjYWxlWSwgc2tld1g7XG4gIGlmIChzY2FsZVggPSBNYXRoLnNxcnQoYSAqIGEgKyBiICogYikpIGEgLz0gc2NhbGVYLCBiIC89IHNjYWxlWDtcbiAgaWYgKHNrZXdYID0gYSAqIGMgKyBiICogZCkgYyAtPSBhICogc2tld1gsIGQgLT0gYiAqIHNrZXdYO1xuICBpZiAoc2NhbGVZID0gTWF0aC5zcXJ0KGMgKiBjICsgZCAqIGQpKSBjIC89IHNjYWxlWSwgZCAvPSBzY2FsZVksIHNrZXdYIC89IHNjYWxlWTtcbiAgaWYgKGEgKiBkIDwgYiAqIGMpIGEgPSAtYSwgYiA9IC1iLCBza2V3WCA9IC1za2V3WCwgc2NhbGVYID0gLXNjYWxlWDtcbiAgcmV0dXJuIHtcbiAgICB0cmFuc2xhdGVYOiBlLFxuICAgIHRyYW5zbGF0ZVk6IGYsXG4gICAgcm90YXRlOiBNYXRoLmF0YW4yKGIsIGEpICogZGVncmVlcyxcbiAgICBza2V3WDogTWF0aC5hdGFuKHNrZXdYKSAqIGRlZ3JlZXMsXG4gICAgc2NhbGVYOiBzY2FsZVgsXG4gICAgc2NhbGVZOiBzY2FsZVlcbiAgfTtcbn1cbiIsImltcG9ydCBkZWNvbXBvc2UsIHtpZGVudGl0eX0gZnJvbSBcIi4vZGVjb21wb3NlLmpzXCI7XG5cbnZhciBzdmdOb2RlO1xuXG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bmRlZiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlQ3NzKHZhbHVlKSB7XG4gIGNvbnN0IG0gPSBuZXcgKHR5cGVvZiBET01NYXRyaXggPT09IFwiZnVuY3Rpb25cIiA/IERPTU1hdHJpeCA6IFdlYktpdENTU01hdHJpeCkodmFsdWUgKyBcIlwiKTtcbiAgcmV0dXJuIG0uaXNJZGVudGl0eSA/IGlkZW50aXR5IDogZGVjb21wb3NlKG0uYSwgbS5iLCBtLmMsIG0uZCwgbS5lLCBtLmYpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VTdmcodmFsdWUpIHtcbiAgaWYgKHZhbHVlID09IG51bGwpIHJldHVybiBpZGVudGl0eTtcbiAgaWYgKCFzdmdOb2RlKSBzdmdOb2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiwgXCJnXCIpO1xuICBzdmdOb2RlLnNldEF0dHJpYnV0ZShcInRyYW5zZm9ybVwiLCB2YWx1ZSk7XG4gIGlmICghKHZhbHVlID0gc3ZnTm9kZS50cmFuc2Zvcm0uYmFzZVZhbC5jb25zb2xpZGF0ZSgpKSkgcmV0dXJuIGlkZW50aXR5O1xuICB2YWx1ZSA9IHZhbHVlLm1hdHJpeDtcbiAgcmV0dXJuIGRlY29tcG9zZSh2YWx1ZS5hLCB2YWx1ZS5iLCB2YWx1ZS5jLCB2YWx1ZS5kLCB2YWx1ZS5lLCB2YWx1ZS5mKTtcbn1cbiIsImltcG9ydCBudW1iZXIgZnJvbSBcIi4uL251bWJlci5qc1wiO1xuaW1wb3J0IHtwYXJzZUNzcywgcGFyc2VTdmd9IGZyb20gXCIuL3BhcnNlLmpzXCI7XG5cbmZ1bmN0aW9uIGludGVycG9sYXRlVHJhbnNmb3JtKHBhcnNlLCBweENvbW1hLCBweFBhcmVuLCBkZWdQYXJlbikge1xuXG4gIGZ1bmN0aW9uIHBvcChzKSB7XG4gICAgcmV0dXJuIHMubGVuZ3RoID8gcy5wb3AoKSArIFwiIFwiIDogXCJcIjtcbiAgfVxuXG4gIGZ1bmN0aW9uIHRyYW5zbGF0ZSh4YSwgeWEsIHhiLCB5YiwgcywgcSkge1xuICAgIGlmICh4YSAhPT0geGIgfHwgeWEgIT09IHliKSB7XG4gICAgICB2YXIgaSA9IHMucHVzaChcInRyYW5zbGF0ZShcIiwgbnVsbCwgcHhDb21tYSwgbnVsbCwgcHhQYXJlbik7XG4gICAgICBxLnB1c2goe2k6IGkgLSA0LCB4OiBudW1iZXIoeGEsIHhiKX0sIHtpOiBpIC0gMiwgeDogbnVtYmVyKHlhLCB5Yil9KTtcbiAgICB9IGVsc2UgaWYgKHhiIHx8IHliKSB7XG4gICAgICBzLnB1c2goXCJ0cmFuc2xhdGUoXCIgKyB4YiArIHB4Q29tbWEgKyB5YiArIHB4UGFyZW4pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHJvdGF0ZShhLCBiLCBzLCBxKSB7XG4gICAgaWYgKGEgIT09IGIpIHtcbiAgICAgIGlmIChhIC0gYiA+IDE4MCkgYiArPSAzNjA7IGVsc2UgaWYgKGIgLSBhID4gMTgwKSBhICs9IDM2MDsgLy8gc2hvcnRlc3QgcGF0aFxuICAgICAgcS5wdXNoKHtpOiBzLnB1c2gocG9wKHMpICsgXCJyb3RhdGUoXCIsIG51bGwsIGRlZ1BhcmVuKSAtIDIsIHg6IG51bWJlcihhLCBiKX0pO1xuICAgIH0gZWxzZSBpZiAoYikge1xuICAgICAgcy5wdXNoKHBvcChzKSArIFwicm90YXRlKFwiICsgYiArIGRlZ1BhcmVuKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBza2V3WChhLCBiLCBzLCBxKSB7XG4gICAgaWYgKGEgIT09IGIpIHtcbiAgICAgIHEucHVzaCh7aTogcy5wdXNoKHBvcChzKSArIFwic2tld1goXCIsIG51bGwsIGRlZ1BhcmVuKSAtIDIsIHg6IG51bWJlcihhLCBiKX0pO1xuICAgIH0gZWxzZSBpZiAoYikge1xuICAgICAgcy5wdXNoKHBvcChzKSArIFwic2tld1goXCIgKyBiICsgZGVnUGFyZW4pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHNjYWxlKHhhLCB5YSwgeGIsIHliLCBzLCBxKSB7XG4gICAgaWYgKHhhICE9PSB4YiB8fCB5YSAhPT0geWIpIHtcbiAgICAgIHZhciBpID0gcy5wdXNoKHBvcChzKSArIFwic2NhbGUoXCIsIG51bGwsIFwiLFwiLCBudWxsLCBcIilcIik7XG4gICAgICBxLnB1c2goe2k6IGkgLSA0LCB4OiBudW1iZXIoeGEsIHhiKX0sIHtpOiBpIC0gMiwgeDogbnVtYmVyKHlhLCB5Yil9KTtcbiAgICB9IGVsc2UgaWYgKHhiICE9PSAxIHx8IHliICE9PSAxKSB7XG4gICAgICBzLnB1c2gocG9wKHMpICsgXCJzY2FsZShcIiArIHhiICsgXCIsXCIgKyB5YiArIFwiKVwiKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24oYSwgYikge1xuICAgIHZhciBzID0gW10sIC8vIHN0cmluZyBjb25zdGFudHMgYW5kIHBsYWNlaG9sZGVyc1xuICAgICAgICBxID0gW107IC8vIG51bWJlciBpbnRlcnBvbGF0b3JzXG4gICAgYSA9IHBhcnNlKGEpLCBiID0gcGFyc2UoYik7XG4gICAgdHJhbnNsYXRlKGEudHJhbnNsYXRlWCwgYS50cmFuc2xhdGVZLCBiLnRyYW5zbGF0ZVgsIGIudHJhbnNsYXRlWSwgcywgcSk7XG4gICAgcm90YXRlKGEucm90YXRlLCBiLnJvdGF0ZSwgcywgcSk7XG4gICAgc2tld1goYS5za2V3WCwgYi5za2V3WCwgcywgcSk7XG4gICAgc2NhbGUoYS5zY2FsZVgsIGEuc2NhbGVZLCBiLnNjYWxlWCwgYi5zY2FsZVksIHMsIHEpO1xuICAgIGEgPSBiID0gbnVsbDsgLy8gZ2NcbiAgICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgICAgdmFyIGkgPSAtMSwgbiA9IHEubGVuZ3RoLCBvO1xuICAgICAgd2hpbGUgKCsraSA8IG4pIHNbKG8gPSBxW2ldKS5pXSA9IG8ueCh0KTtcbiAgICAgIHJldHVybiBzLmpvaW4oXCJcIik7XG4gICAgfTtcbiAgfTtcbn1cblxuZXhwb3J0IHZhciBpbnRlcnBvbGF0ZVRyYW5zZm9ybUNzcyA9IGludGVycG9sYXRlVHJhbnNmb3JtKHBhcnNlQ3NzLCBcInB4LCBcIiwgXCJweClcIiwgXCJkZWcpXCIpO1xuZXhwb3J0IHZhciBpbnRlcnBvbGF0ZVRyYW5zZm9ybVN2ZyA9IGludGVycG9sYXRlVHJhbnNmb3JtKHBhcnNlU3ZnLCBcIiwgXCIsIFwiKVwiLCBcIilcIik7XG4iLCJ2YXIgZnJhbWUgPSAwLCAvLyBpcyBhbiBhbmltYXRpb24gZnJhbWUgcGVuZGluZz9cbiAgICB0aW1lb3V0ID0gMCwgLy8gaXMgYSB0aW1lb3V0IHBlbmRpbmc/XG4gICAgaW50ZXJ2YWwgPSAwLCAvLyBhcmUgYW55IHRpbWVycyBhY3RpdmU/XG4gICAgcG9rZURlbGF5ID0gMTAwMCwgLy8gaG93IGZyZXF1ZW50bHkgd2UgY2hlY2sgZm9yIGNsb2NrIHNrZXdcbiAgICB0YXNrSGVhZCxcbiAgICB0YXNrVGFpbCxcbiAgICBjbG9ja0xhc3QgPSAwLFxuICAgIGNsb2NrTm93ID0gMCxcbiAgICBjbG9ja1NrZXcgPSAwLFxuICAgIGNsb2NrID0gdHlwZW9mIHBlcmZvcm1hbmNlID09PSBcIm9iamVjdFwiICYmIHBlcmZvcm1hbmNlLm5vdyA/IHBlcmZvcm1hbmNlIDogRGF0ZSxcbiAgICBzZXRGcmFtZSA9IHR5cGVvZiB3aW5kb3cgPT09IFwib2JqZWN0XCIgJiYgd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSA/IHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUuYmluZCh3aW5kb3cpIDogZnVuY3Rpb24oZikgeyBzZXRUaW1lb3V0KGYsIDE3KTsgfTtcblxuZXhwb3J0IGZ1bmN0aW9uIG5vdygpIHtcbiAgcmV0dXJuIGNsb2NrTm93IHx8IChzZXRGcmFtZShjbGVhck5vdyksIGNsb2NrTm93ID0gY2xvY2subm93KCkgKyBjbG9ja1NrZXcpO1xufVxuXG5mdW5jdGlvbiBjbGVhck5vdygpIHtcbiAgY2xvY2tOb3cgPSAwO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gVGltZXIoKSB7XG4gIHRoaXMuX2NhbGwgPVxuICB0aGlzLl90aW1lID1cbiAgdGhpcy5fbmV4dCA9IG51bGw7XG59XG5cblRpbWVyLnByb3RvdHlwZSA9IHRpbWVyLnByb3RvdHlwZSA9IHtcbiAgY29uc3RydWN0b3I6IFRpbWVyLFxuICByZXN0YXJ0OiBmdW5jdGlvbihjYWxsYmFjaywgZGVsYXksIHRpbWUpIHtcbiAgICBpZiAodHlwZW9mIGNhbGxiYWNrICE9PSBcImZ1bmN0aW9uXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJjYWxsYmFjayBpcyBub3QgYSBmdW5jdGlvblwiKTtcbiAgICB0aW1lID0gKHRpbWUgPT0gbnVsbCA/IG5vdygpIDogK3RpbWUpICsgKGRlbGF5ID09IG51bGwgPyAwIDogK2RlbGF5KTtcbiAgICBpZiAoIXRoaXMuX25leHQgJiYgdGFza1RhaWwgIT09IHRoaXMpIHtcbiAgICAgIGlmICh0YXNrVGFpbCkgdGFza1RhaWwuX25leHQgPSB0aGlzO1xuICAgICAgZWxzZSB0YXNrSGVhZCA9IHRoaXM7XG4gICAgICB0YXNrVGFpbCA9IHRoaXM7XG4gICAgfVxuICAgIHRoaXMuX2NhbGwgPSBjYWxsYmFjaztcbiAgICB0aGlzLl90aW1lID0gdGltZTtcbiAgICBzbGVlcCgpO1xuICB9LFxuICBzdG9wOiBmdW5jdGlvbigpIHtcbiAgICBpZiAodGhpcy5fY2FsbCkge1xuICAgICAgdGhpcy5fY2FsbCA9IG51bGw7XG4gICAgICB0aGlzLl90aW1lID0gSW5maW5pdHk7XG4gICAgICBzbGVlcCgpO1xuICAgIH1cbiAgfVxufTtcblxuZXhwb3J0IGZ1bmN0aW9uIHRpbWVyKGNhbGxiYWNrLCBkZWxheSwgdGltZSkge1xuICB2YXIgdCA9IG5ldyBUaW1lcjtcbiAgdC5yZXN0YXJ0KGNhbGxiYWNrLCBkZWxheSwgdGltZSk7XG4gIHJldHVybiB0O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdGltZXJGbHVzaCgpIHtcbiAgbm93KCk7IC8vIEdldCB0aGUgY3VycmVudCB0aW1lLCBpZiBub3QgYWxyZWFkeSBzZXQuXG4gICsrZnJhbWU7IC8vIFByZXRlbmQgd2XigJl2ZSBzZXQgYW4gYWxhcm0sIGlmIHdlIGhhdmVu4oCZdCBhbHJlYWR5LlxuICB2YXIgdCA9IHRhc2tIZWFkLCBlO1xuICB3aGlsZSAodCkge1xuICAgIGlmICgoZSA9IGNsb2NrTm93IC0gdC5fdGltZSkgPj0gMCkgdC5fY2FsbC5jYWxsKHVuZGVmaW5lZCwgZSk7XG4gICAgdCA9IHQuX25leHQ7XG4gIH1cbiAgLS1mcmFtZTtcbn1cblxuZnVuY3Rpb24gd2FrZSgpIHtcbiAgY2xvY2tOb3cgPSAoY2xvY2tMYXN0ID0gY2xvY2subm93KCkpICsgY2xvY2tTa2V3O1xuICBmcmFtZSA9IHRpbWVvdXQgPSAwO1xuICB0cnkge1xuICAgIHRpbWVyRmx1c2goKTtcbiAgfSBmaW5hbGx5IHtcbiAgICBmcmFtZSA9IDA7XG4gICAgbmFwKCk7XG4gICAgY2xvY2tOb3cgPSAwO1xuICB9XG59XG5cbmZ1bmN0aW9uIHBva2UoKSB7XG4gIHZhciBub3cgPSBjbG9jay5ub3coKSwgZGVsYXkgPSBub3cgLSBjbG9ja0xhc3Q7XG4gIGlmIChkZWxheSA+IHBva2VEZWxheSkgY2xvY2tTa2V3IC09IGRlbGF5LCBjbG9ja0xhc3QgPSBub3c7XG59XG5cbmZ1bmN0aW9uIG5hcCgpIHtcbiAgdmFyIHQwLCB0MSA9IHRhc2tIZWFkLCB0MiwgdGltZSA9IEluZmluaXR5O1xuICB3aGlsZSAodDEpIHtcbiAgICBpZiAodDEuX2NhbGwpIHtcbiAgICAgIGlmICh0aW1lID4gdDEuX3RpbWUpIHRpbWUgPSB0MS5fdGltZTtcbiAgICAgIHQwID0gdDEsIHQxID0gdDEuX25leHQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIHQyID0gdDEuX25leHQsIHQxLl9uZXh0ID0gbnVsbDtcbiAgICAgIHQxID0gdDAgPyB0MC5fbmV4dCA9IHQyIDogdGFza0hlYWQgPSB0MjtcbiAgICB9XG4gIH1cbiAgdGFza1RhaWwgPSB0MDtcbiAgc2xlZXAodGltZSk7XG59XG5cbmZ1bmN0aW9uIHNsZWVwKHRpbWUpIHtcbiAgaWYgKGZyYW1lKSByZXR1cm47IC8vIFNvb25lc3QgYWxhcm0gYWxyZWFkeSBzZXQsIG9yIHdpbGwgYmUuXG4gIGlmICh0aW1lb3V0KSB0aW1lb3V0ID0gY2xlYXJUaW1lb3V0KHRpbWVvdXQpO1xuICB2YXIgZGVsYXkgPSB0aW1lIC0gY2xvY2tOb3c7IC8vIFN0cmljdGx5IGxlc3MgdGhhbiBpZiB3ZSByZWNvbXB1dGVkIGNsb2NrTm93LlxuICBpZiAoZGVsYXkgPiAyNCkge1xuICAgIGlmICh0aW1lIDwgSW5maW5pdHkpIHRpbWVvdXQgPSBzZXRUaW1lb3V0KHdha2UsIHRpbWUgLSBjbG9jay5ub3coKSAtIGNsb2NrU2tldyk7XG4gICAgaWYgKGludGVydmFsKSBpbnRlcnZhbCA9IGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWwpO1xuICB9IGVsc2Uge1xuICAgIGlmICghaW50ZXJ2YWwpIGNsb2NrTGFzdCA9IGNsb2NrLm5vdygpLCBpbnRlcnZhbCA9IHNldEludGVydmFsKHBva2UsIHBva2VEZWxheSk7XG4gICAgZnJhbWUgPSAxLCBzZXRGcmFtZSh3YWtlKTtcbiAgfVxufVxuIiwiaW1wb3J0IHtUaW1lcn0gZnJvbSBcIi4vdGltZXIuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oY2FsbGJhY2ssIGRlbGF5LCB0aW1lKSB7XG4gIHZhciB0ID0gbmV3IFRpbWVyO1xuICBkZWxheSA9IGRlbGF5ID09IG51bGwgPyAwIDogK2RlbGF5O1xuICB0LnJlc3RhcnQoZWxhcHNlZCA9PiB7XG4gICAgdC5zdG9wKCk7XG4gICAgY2FsbGJhY2soZWxhcHNlZCArIGRlbGF5KTtcbiAgfSwgZGVsYXksIHRpbWUpO1xuICByZXR1cm4gdDtcbn1cbiIsImltcG9ydCB7ZGlzcGF0Y2h9IGZyb20gXCJkMy1kaXNwYXRjaFwiO1xuaW1wb3J0IHt0aW1lciwgdGltZW91dH0gZnJvbSBcImQzLXRpbWVyXCI7XG5cbnZhciBlbXB0eU9uID0gZGlzcGF0Y2goXCJzdGFydFwiLCBcImVuZFwiLCBcImNhbmNlbFwiLCBcImludGVycnVwdFwiKTtcbnZhciBlbXB0eVR3ZWVuID0gW107XG5cbmV4cG9ydCB2YXIgQ1JFQVRFRCA9IDA7XG5leHBvcnQgdmFyIFNDSEVEVUxFRCA9IDE7XG5leHBvcnQgdmFyIFNUQVJUSU5HID0gMjtcbmV4cG9ydCB2YXIgU1RBUlRFRCA9IDM7XG5leHBvcnQgdmFyIFJVTk5JTkcgPSA0O1xuZXhwb3J0IHZhciBFTkRJTkcgPSA1O1xuZXhwb3J0IHZhciBFTkRFRCA9IDY7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5vZGUsIG5hbWUsIGlkLCBpbmRleCwgZ3JvdXAsIHRpbWluZykge1xuICB2YXIgc2NoZWR1bGVzID0gbm9kZS5fX3RyYW5zaXRpb247XG4gIGlmICghc2NoZWR1bGVzKSBub2RlLl9fdHJhbnNpdGlvbiA9IHt9O1xuICBlbHNlIGlmIChpZCBpbiBzY2hlZHVsZXMpIHJldHVybjtcbiAgY3JlYXRlKG5vZGUsIGlkLCB7XG4gICAgbmFtZTogbmFtZSxcbiAgICBpbmRleDogaW5kZXgsIC8vIEZvciBjb250ZXh0IGR1cmluZyBjYWxsYmFjay5cbiAgICBncm91cDogZ3JvdXAsIC8vIEZvciBjb250ZXh0IGR1cmluZyBjYWxsYmFjay5cbiAgICBvbjogZW1wdHlPbixcbiAgICB0d2VlbjogZW1wdHlUd2VlbixcbiAgICB0aW1lOiB0aW1pbmcudGltZSxcbiAgICBkZWxheTogdGltaW5nLmRlbGF5LFxuICAgIGR1cmF0aW9uOiB0aW1pbmcuZHVyYXRpb24sXG4gICAgZWFzZTogdGltaW5nLmVhc2UsXG4gICAgdGltZXI6IG51bGwsXG4gICAgc3RhdGU6IENSRUFURURcbiAgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpbml0KG5vZGUsIGlkKSB7XG4gIHZhciBzY2hlZHVsZSA9IGdldChub2RlLCBpZCk7XG4gIGlmIChzY2hlZHVsZS5zdGF0ZSA+IENSRUFURUQpIHRocm93IG5ldyBFcnJvcihcInRvbyBsYXRlOyBhbHJlYWR5IHNjaGVkdWxlZFwiKTtcbiAgcmV0dXJuIHNjaGVkdWxlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc2V0KG5vZGUsIGlkKSB7XG4gIHZhciBzY2hlZHVsZSA9IGdldChub2RlLCBpZCk7XG4gIGlmIChzY2hlZHVsZS5zdGF0ZSA+IFNUQVJURUQpIHRocm93IG5ldyBFcnJvcihcInRvbyBsYXRlOyBhbHJlYWR5IHJ1bm5pbmdcIik7XG4gIHJldHVybiBzY2hlZHVsZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldChub2RlLCBpZCkge1xuICB2YXIgc2NoZWR1bGUgPSBub2RlLl9fdHJhbnNpdGlvbjtcbiAgaWYgKCFzY2hlZHVsZSB8fCAhKHNjaGVkdWxlID0gc2NoZWR1bGVbaWRdKSkgdGhyb3cgbmV3IEVycm9yKFwidHJhbnNpdGlvbiBub3QgZm91bmRcIik7XG4gIHJldHVybiBzY2hlZHVsZTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlKG5vZGUsIGlkLCBzZWxmKSB7XG4gIHZhciBzY2hlZHVsZXMgPSBub2RlLl9fdHJhbnNpdGlvbixcbiAgICAgIHR3ZWVuO1xuXG4gIC8vIEluaXRpYWxpemUgdGhlIHNlbGYgdGltZXIgd2hlbiB0aGUgdHJhbnNpdGlvbiBpcyBjcmVhdGVkLlxuICAvLyBOb3RlIHRoZSBhY3R1YWwgZGVsYXkgaXMgbm90IGtub3duIHVudGlsIHRoZSBmaXJzdCBjYWxsYmFjayFcbiAgc2NoZWR1bGVzW2lkXSA9IHNlbGY7XG4gIHNlbGYudGltZXIgPSB0aW1lcihzY2hlZHVsZSwgMCwgc2VsZi50aW1lKTtcblxuICBmdW5jdGlvbiBzY2hlZHVsZShlbGFwc2VkKSB7XG4gICAgc2VsZi5zdGF0ZSA9IFNDSEVEVUxFRDtcbiAgICBzZWxmLnRpbWVyLnJlc3RhcnQoc3RhcnQsIHNlbGYuZGVsYXksIHNlbGYudGltZSk7XG5cbiAgICAvLyBJZiB0aGUgZWxhcHNlZCBkZWxheSBpcyBsZXNzIHRoYW4gb3VyIGZpcnN0IHNsZWVwLCBzdGFydCBpbW1lZGlhdGVseS5cbiAgICBpZiAoc2VsZi5kZWxheSA8PSBlbGFwc2VkKSBzdGFydChlbGFwc2VkIC0gc2VsZi5kZWxheSk7XG4gIH1cblxuICBmdW5jdGlvbiBzdGFydChlbGFwc2VkKSB7XG4gICAgdmFyIGksIGosIG4sIG87XG5cbiAgICAvLyBJZiB0aGUgc3RhdGUgaXMgbm90IFNDSEVEVUxFRCwgdGhlbiB3ZSBwcmV2aW91c2x5IGVycm9yZWQgb24gc3RhcnQuXG4gICAgaWYgKHNlbGYuc3RhdGUgIT09IFNDSEVEVUxFRCkgcmV0dXJuIHN0b3AoKTtcblxuICAgIGZvciAoaSBpbiBzY2hlZHVsZXMpIHtcbiAgICAgIG8gPSBzY2hlZHVsZXNbaV07XG4gICAgICBpZiAoby5uYW1lICE9PSBzZWxmLm5hbWUpIGNvbnRpbnVlO1xuXG4gICAgICAvLyBXaGlsZSB0aGlzIGVsZW1lbnQgYWxyZWFkeSBoYXMgYSBzdGFydGluZyB0cmFuc2l0aW9uIGR1cmluZyB0aGlzIGZyYW1lLFxuICAgICAgLy8gZGVmZXIgc3RhcnRpbmcgYW4gaW50ZXJydXB0aW5nIHRyYW5zaXRpb24gdW50aWwgdGhhdCB0cmFuc2l0aW9uIGhhcyBhXG4gICAgICAvLyBjaGFuY2UgdG8gdGljayAoYW5kIHBvc3NpYmx5IGVuZCk7IHNlZSBkMy9kMy10cmFuc2l0aW9uIzU0IVxuICAgICAgaWYgKG8uc3RhdGUgPT09IFNUQVJURUQpIHJldHVybiB0aW1lb3V0KHN0YXJ0KTtcblxuICAgICAgLy8gSW50ZXJydXB0IHRoZSBhY3RpdmUgdHJhbnNpdGlvbiwgaWYgYW55LlxuICAgICAgaWYgKG8uc3RhdGUgPT09IFJVTk5JTkcpIHtcbiAgICAgICAgby5zdGF0ZSA9IEVOREVEO1xuICAgICAgICBvLnRpbWVyLnN0b3AoKTtcbiAgICAgICAgby5vbi5jYWxsKFwiaW50ZXJydXB0XCIsIG5vZGUsIG5vZGUuX19kYXRhX18sIG8uaW5kZXgsIG8uZ3JvdXApO1xuICAgICAgICBkZWxldGUgc2NoZWR1bGVzW2ldO1xuICAgICAgfVxuXG4gICAgICAvLyBDYW5jZWwgYW55IHByZS1lbXB0ZWQgdHJhbnNpdGlvbnMuXG4gICAgICBlbHNlIGlmICgraSA8IGlkKSB7XG4gICAgICAgIG8uc3RhdGUgPSBFTkRFRDtcbiAgICAgICAgby50aW1lci5zdG9wKCk7XG4gICAgICAgIG8ub24uY2FsbChcImNhbmNlbFwiLCBub2RlLCBub2RlLl9fZGF0YV9fLCBvLmluZGV4LCBvLmdyb3VwKTtcbiAgICAgICAgZGVsZXRlIHNjaGVkdWxlc1tpXTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBEZWZlciB0aGUgZmlyc3QgdGljayB0byBlbmQgb2YgdGhlIGN1cnJlbnQgZnJhbWU7IHNlZSBkMy9kMyMxNTc2LlxuICAgIC8vIE5vdGUgdGhlIHRyYW5zaXRpb24gbWF5IGJlIGNhbmNlbGVkIGFmdGVyIHN0YXJ0IGFuZCBiZWZvcmUgdGhlIGZpcnN0IHRpY2shXG4gICAgLy8gTm90ZSB0aGlzIG11c3QgYmUgc2NoZWR1bGVkIGJlZm9yZSB0aGUgc3RhcnQgZXZlbnQ7IHNlZSBkMy9kMy10cmFuc2l0aW9uIzE2IVxuICAgIC8vIEFzc3VtaW5nIHRoaXMgaXMgc3VjY2Vzc2Z1bCwgc3Vic2VxdWVudCBjYWxsYmFja3MgZ28gc3RyYWlnaHQgdG8gdGljay5cbiAgICB0aW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgaWYgKHNlbGYuc3RhdGUgPT09IFNUQVJURUQpIHtcbiAgICAgICAgc2VsZi5zdGF0ZSA9IFJVTk5JTkc7XG4gICAgICAgIHNlbGYudGltZXIucmVzdGFydCh0aWNrLCBzZWxmLmRlbGF5LCBzZWxmLnRpbWUpO1xuICAgICAgICB0aWNrKGVsYXBzZWQpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgLy8gRGlzcGF0Y2ggdGhlIHN0YXJ0IGV2ZW50LlxuICAgIC8vIE5vdGUgdGhpcyBtdXN0IGJlIGRvbmUgYmVmb3JlIHRoZSB0d2VlbiBhcmUgaW5pdGlhbGl6ZWQuXG4gICAgc2VsZi5zdGF0ZSA9IFNUQVJUSU5HO1xuICAgIHNlbGYub24uY2FsbChcInN0YXJ0XCIsIG5vZGUsIG5vZGUuX19kYXRhX18sIHNlbGYuaW5kZXgsIHNlbGYuZ3JvdXApO1xuICAgIGlmIChzZWxmLnN0YXRlICE9PSBTVEFSVElORykgcmV0dXJuOyAvLyBpbnRlcnJ1cHRlZFxuICAgIHNlbGYuc3RhdGUgPSBTVEFSVEVEO1xuXG4gICAgLy8gSW5pdGlhbGl6ZSB0aGUgdHdlZW4sIGRlbGV0aW5nIG51bGwgdHdlZW4uXG4gICAgdHdlZW4gPSBuZXcgQXJyYXkobiA9IHNlbGYudHdlZW4ubGVuZ3RoKTtcbiAgICBmb3IgKGkgPSAwLCBqID0gLTE7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmIChvID0gc2VsZi50d2VlbltpXS52YWx1ZS5jYWxsKG5vZGUsIG5vZGUuX19kYXRhX18sIHNlbGYuaW5kZXgsIHNlbGYuZ3JvdXApKSB7XG4gICAgICAgIHR3ZWVuWysral0gPSBvO1xuICAgICAgfVxuICAgIH1cbiAgICB0d2Vlbi5sZW5ndGggPSBqICsgMTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHRpY2soZWxhcHNlZCkge1xuICAgIHZhciB0ID0gZWxhcHNlZCA8IHNlbGYuZHVyYXRpb24gPyBzZWxmLmVhc2UuY2FsbChudWxsLCBlbGFwc2VkIC8gc2VsZi5kdXJhdGlvbikgOiAoc2VsZi50aW1lci5yZXN0YXJ0KHN0b3ApLCBzZWxmLnN0YXRlID0gRU5ESU5HLCAxKSxcbiAgICAgICAgaSA9IC0xLFxuICAgICAgICBuID0gdHdlZW4ubGVuZ3RoO1xuXG4gICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgIHR3ZWVuW2ldLmNhbGwobm9kZSwgdCk7XG4gICAgfVxuXG4gICAgLy8gRGlzcGF0Y2ggdGhlIGVuZCBldmVudC5cbiAgICBpZiAoc2VsZi5zdGF0ZSA9PT0gRU5ESU5HKSB7XG4gICAgICBzZWxmLm9uLmNhbGwoXCJlbmRcIiwgbm9kZSwgbm9kZS5fX2RhdGFfXywgc2VsZi5pbmRleCwgc2VsZi5ncm91cCk7XG4gICAgICBzdG9wKCk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gc3RvcCgpIHtcbiAgICBzZWxmLnN0YXRlID0gRU5ERUQ7XG4gICAgc2VsZi50aW1lci5zdG9wKCk7XG4gICAgZGVsZXRlIHNjaGVkdWxlc1tpZF07XG4gICAgZm9yICh2YXIgaSBpbiBzY2hlZHVsZXMpIHJldHVybjsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFyc1xuICAgIGRlbGV0ZSBub2RlLl9fdHJhbnNpdGlvbjtcbiAgfVxufVxuIiwiaW1wb3J0IHtTVEFSVElORywgRU5ESU5HLCBFTkRFRH0gZnJvbSBcIi4vdHJhbnNpdGlvbi9zY2hlZHVsZS5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihub2RlLCBuYW1lKSB7XG4gIHZhciBzY2hlZHVsZXMgPSBub2RlLl9fdHJhbnNpdGlvbixcbiAgICAgIHNjaGVkdWxlLFxuICAgICAgYWN0aXZlLFxuICAgICAgZW1wdHkgPSB0cnVlLFxuICAgICAgaTtcblxuICBpZiAoIXNjaGVkdWxlcykgcmV0dXJuO1xuXG4gIG5hbWUgPSBuYW1lID09IG51bGwgPyBudWxsIDogbmFtZSArIFwiXCI7XG5cbiAgZm9yIChpIGluIHNjaGVkdWxlcykge1xuICAgIGlmICgoc2NoZWR1bGUgPSBzY2hlZHVsZXNbaV0pLm5hbWUgIT09IG5hbWUpIHsgZW1wdHkgPSBmYWxzZTsgY29udGludWU7IH1cbiAgICBhY3RpdmUgPSBzY2hlZHVsZS5zdGF0ZSA+IFNUQVJUSU5HICYmIHNjaGVkdWxlLnN0YXRlIDwgRU5ESU5HO1xuICAgIHNjaGVkdWxlLnN0YXRlID0gRU5ERUQ7XG4gICAgc2NoZWR1bGUudGltZXIuc3RvcCgpO1xuICAgIHNjaGVkdWxlLm9uLmNhbGwoYWN0aXZlID8gXCJpbnRlcnJ1cHRcIiA6IFwiY2FuY2VsXCIsIG5vZGUsIG5vZGUuX19kYXRhX18sIHNjaGVkdWxlLmluZGV4LCBzY2hlZHVsZS5ncm91cCk7XG4gICAgZGVsZXRlIHNjaGVkdWxlc1tpXTtcbiAgfVxuXG4gIGlmIChlbXB0eSkgZGVsZXRlIG5vZGUuX190cmFuc2l0aW9uO1xufVxuIiwiaW1wb3J0IGludGVycnVwdCBmcm9tIFwiLi4vaW50ZXJydXB0LmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5hbWUpIHtcbiAgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpIHtcbiAgICBpbnRlcnJ1cHQodGhpcywgbmFtZSk7XG4gIH0pO1xufVxuIiwiaW1wb3J0IHtnZXQsIHNldH0gZnJvbSBcIi4vc2NoZWR1bGUuanNcIjtcblxuZnVuY3Rpb24gdHdlZW5SZW1vdmUoaWQsIG5hbWUpIHtcbiAgdmFyIHR3ZWVuMCwgdHdlZW4xO1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHNjaGVkdWxlID0gc2V0KHRoaXMsIGlkKSxcbiAgICAgICAgdHdlZW4gPSBzY2hlZHVsZS50d2VlbjtcblxuICAgIC8vIElmIHRoaXMgbm9kZSBzaGFyZWQgdHdlZW4gd2l0aCB0aGUgcHJldmlvdXMgbm9kZSxcbiAgICAvLyBqdXN0IGFzc2lnbiB0aGUgdXBkYXRlZCBzaGFyZWQgdHdlZW4gYW5kIHdl4oCZcmUgZG9uZSFcbiAgICAvLyBPdGhlcndpc2UsIGNvcHktb24td3JpdGUuXG4gICAgaWYgKHR3ZWVuICE9PSB0d2VlbjApIHtcbiAgICAgIHR3ZWVuMSA9IHR3ZWVuMCA9IHR3ZWVuO1xuICAgICAgZm9yICh2YXIgaSA9IDAsIG4gPSB0d2VlbjEubGVuZ3RoOyBpIDwgbjsgKytpKSB7XG4gICAgICAgIGlmICh0d2VlbjFbaV0ubmFtZSA9PT0gbmFtZSkge1xuICAgICAgICAgIHR3ZWVuMSA9IHR3ZWVuMS5zbGljZSgpO1xuICAgICAgICAgIHR3ZWVuMS5zcGxpY2UoaSwgMSk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBzY2hlZHVsZS50d2VlbiA9IHR3ZWVuMTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gdHdlZW5GdW5jdGlvbihpZCwgbmFtZSwgdmFsdWUpIHtcbiAgdmFyIHR3ZWVuMCwgdHdlZW4xO1xuICBpZiAodHlwZW9mIHZhbHVlICE9PSBcImZ1bmN0aW9uXCIpIHRocm93IG5ldyBFcnJvcjtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciBzY2hlZHVsZSA9IHNldCh0aGlzLCBpZCksXG4gICAgICAgIHR3ZWVuID0gc2NoZWR1bGUudHdlZW47XG5cbiAgICAvLyBJZiB0aGlzIG5vZGUgc2hhcmVkIHR3ZWVuIHdpdGggdGhlIHByZXZpb3VzIG5vZGUsXG4gICAgLy8ganVzdCBhc3NpZ24gdGhlIHVwZGF0ZWQgc2hhcmVkIHR3ZWVuIGFuZCB3ZeKAmXJlIGRvbmUhXG4gICAgLy8gT3RoZXJ3aXNlLCBjb3B5LW9uLXdyaXRlLlxuICAgIGlmICh0d2VlbiAhPT0gdHdlZW4wKSB7XG4gICAgICB0d2VlbjEgPSAodHdlZW4wID0gdHdlZW4pLnNsaWNlKCk7XG4gICAgICBmb3IgKHZhciB0ID0ge25hbWU6IG5hbWUsIHZhbHVlOiB2YWx1ZX0sIGkgPSAwLCBuID0gdHdlZW4xLmxlbmd0aDsgaSA8IG47ICsraSkge1xuICAgICAgICBpZiAodHdlZW4xW2ldLm5hbWUgPT09IG5hbWUpIHtcbiAgICAgICAgICB0d2VlbjFbaV0gPSB0O1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoaSA9PT0gbikgdHdlZW4xLnB1c2godCk7XG4gICAgfVxuXG4gICAgc2NoZWR1bGUudHdlZW4gPSB0d2VlbjE7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5hbWUsIHZhbHVlKSB7XG4gIHZhciBpZCA9IHRoaXMuX2lkO1xuXG4gIG5hbWUgKz0gXCJcIjtcblxuICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHtcbiAgICB2YXIgdHdlZW4gPSBnZXQodGhpcy5ub2RlKCksIGlkKS50d2VlbjtcbiAgICBmb3IgKHZhciBpID0gMCwgbiA9IHR3ZWVuLmxlbmd0aCwgdDsgaSA8IG47ICsraSkge1xuICAgICAgaWYgKCh0ID0gdHdlZW5baV0pLm5hbWUgPT09IG5hbWUpIHtcbiAgICAgICAgcmV0dXJuIHQudmFsdWU7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgcmV0dXJuIHRoaXMuZWFjaCgodmFsdWUgPT0gbnVsbCA/IHR3ZWVuUmVtb3ZlIDogdHdlZW5GdW5jdGlvbikoaWQsIG5hbWUsIHZhbHVlKSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0d2VlblZhbHVlKHRyYW5zaXRpb24sIG5hbWUsIHZhbHVlKSB7XG4gIHZhciBpZCA9IHRyYW5zaXRpb24uX2lkO1xuXG4gIHRyYW5zaXRpb24uZWFjaChmdW5jdGlvbigpIHtcbiAgICB2YXIgc2NoZWR1bGUgPSBzZXQodGhpcywgaWQpO1xuICAgIChzY2hlZHVsZS52YWx1ZSB8fCAoc2NoZWR1bGUudmFsdWUgPSB7fSkpW25hbWVdID0gdmFsdWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgfSk7XG5cbiAgcmV0dXJuIGZ1bmN0aW9uKG5vZGUpIHtcbiAgICByZXR1cm4gZ2V0KG5vZGUsIGlkKS52YWx1ZVtuYW1lXTtcbiAgfTtcbn1cbiIsImltcG9ydCB7Y29sb3J9IGZyb20gXCJkMy1jb2xvclwiO1xuaW1wb3J0IHtpbnRlcnBvbGF0ZU51bWJlciwgaW50ZXJwb2xhdGVSZ2IsIGludGVycG9sYXRlU3RyaW5nfSBmcm9tIFwiZDMtaW50ZXJwb2xhdGVcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oYSwgYikge1xuICB2YXIgYztcbiAgcmV0dXJuICh0eXBlb2YgYiA9PT0gXCJudW1iZXJcIiA/IGludGVycG9sYXRlTnVtYmVyXG4gICAgICA6IGIgaW5zdGFuY2VvZiBjb2xvciA/IGludGVycG9sYXRlUmdiXG4gICAgICA6IChjID0gY29sb3IoYikpID8gKGIgPSBjLCBpbnRlcnBvbGF0ZVJnYilcbiAgICAgIDogaW50ZXJwb2xhdGVTdHJpbmcpKGEsIGIpO1xufVxuIiwiaW1wb3J0IHtpbnRlcnBvbGF0ZVRyYW5zZm9ybVN2ZyBhcyBpbnRlcnBvbGF0ZVRyYW5zZm9ybX0gZnJvbSBcImQzLWludGVycG9sYXRlXCI7XG5pbXBvcnQge25hbWVzcGFjZX0gZnJvbSBcImQzLXNlbGVjdGlvblwiO1xuaW1wb3J0IHt0d2VlblZhbHVlfSBmcm9tIFwiLi90d2Vlbi5qc1wiO1xuaW1wb3J0IGludGVycG9sYXRlIGZyb20gXCIuL2ludGVycG9sYXRlLmpzXCI7XG5cbmZ1bmN0aW9uIGF0dHJSZW1vdmUobmFtZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5yZW1vdmVBdHRyaWJ1dGUobmFtZSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGF0dHJSZW1vdmVOUyhmdWxsbmFtZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5yZW1vdmVBdHRyaWJ1dGVOUyhmdWxsbmFtZS5zcGFjZSwgZnVsbG5hbWUubG9jYWwpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBhdHRyQ29uc3RhbnQobmFtZSwgaW50ZXJwb2xhdGUsIHZhbHVlMSkge1xuICB2YXIgc3RyaW5nMDAsXG4gICAgICBzdHJpbmcxID0gdmFsdWUxICsgXCJcIixcbiAgICAgIGludGVycG9sYXRlMDtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciBzdHJpbmcwID0gdGhpcy5nZXRBdHRyaWJ1dGUobmFtZSk7XG4gICAgcmV0dXJuIHN0cmluZzAgPT09IHN0cmluZzEgPyBudWxsXG4gICAgICAgIDogc3RyaW5nMCA9PT0gc3RyaW5nMDAgPyBpbnRlcnBvbGF0ZTBcbiAgICAgICAgOiBpbnRlcnBvbGF0ZTAgPSBpbnRlcnBvbGF0ZShzdHJpbmcwMCA9IHN0cmluZzAsIHZhbHVlMSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGF0dHJDb25zdGFudE5TKGZ1bGxuYW1lLCBpbnRlcnBvbGF0ZSwgdmFsdWUxKSB7XG4gIHZhciBzdHJpbmcwMCxcbiAgICAgIHN0cmluZzEgPSB2YWx1ZTEgKyBcIlwiLFxuICAgICAgaW50ZXJwb2xhdGUwO1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHN0cmluZzAgPSB0aGlzLmdldEF0dHJpYnV0ZU5TKGZ1bGxuYW1lLnNwYWNlLCBmdWxsbmFtZS5sb2NhbCk7XG4gICAgcmV0dXJuIHN0cmluZzAgPT09IHN0cmluZzEgPyBudWxsXG4gICAgICAgIDogc3RyaW5nMCA9PT0gc3RyaW5nMDAgPyBpbnRlcnBvbGF0ZTBcbiAgICAgICAgOiBpbnRlcnBvbGF0ZTAgPSBpbnRlcnBvbGF0ZShzdHJpbmcwMCA9IHN0cmluZzAsIHZhbHVlMSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGF0dHJGdW5jdGlvbihuYW1lLCBpbnRlcnBvbGF0ZSwgdmFsdWUpIHtcbiAgdmFyIHN0cmluZzAwLFxuICAgICAgc3RyaW5nMTAsXG4gICAgICBpbnRlcnBvbGF0ZTA7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgc3RyaW5nMCwgdmFsdWUxID0gdmFsdWUodGhpcyksIHN0cmluZzE7XG4gICAgaWYgKHZhbHVlMSA9PSBudWxsKSByZXR1cm4gdm9pZCB0aGlzLnJlbW92ZUF0dHJpYnV0ZShuYW1lKTtcbiAgICBzdHJpbmcwID0gdGhpcy5nZXRBdHRyaWJ1dGUobmFtZSk7XG4gICAgc3RyaW5nMSA9IHZhbHVlMSArIFwiXCI7XG4gICAgcmV0dXJuIHN0cmluZzAgPT09IHN0cmluZzEgPyBudWxsXG4gICAgICAgIDogc3RyaW5nMCA9PT0gc3RyaW5nMDAgJiYgc3RyaW5nMSA9PT0gc3RyaW5nMTAgPyBpbnRlcnBvbGF0ZTBcbiAgICAgICAgOiAoc3RyaW5nMTAgPSBzdHJpbmcxLCBpbnRlcnBvbGF0ZTAgPSBpbnRlcnBvbGF0ZShzdHJpbmcwMCA9IHN0cmluZzAsIHZhbHVlMSkpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBhdHRyRnVuY3Rpb25OUyhmdWxsbmFtZSwgaW50ZXJwb2xhdGUsIHZhbHVlKSB7XG4gIHZhciBzdHJpbmcwMCxcbiAgICAgIHN0cmluZzEwLFxuICAgICAgaW50ZXJwb2xhdGUwO1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHN0cmluZzAsIHZhbHVlMSA9IHZhbHVlKHRoaXMpLCBzdHJpbmcxO1xuICAgIGlmICh2YWx1ZTEgPT0gbnVsbCkgcmV0dXJuIHZvaWQgdGhpcy5yZW1vdmVBdHRyaWJ1dGVOUyhmdWxsbmFtZS5zcGFjZSwgZnVsbG5hbWUubG9jYWwpO1xuICAgIHN0cmluZzAgPSB0aGlzLmdldEF0dHJpYnV0ZU5TKGZ1bGxuYW1lLnNwYWNlLCBmdWxsbmFtZS5sb2NhbCk7XG4gICAgc3RyaW5nMSA9IHZhbHVlMSArIFwiXCI7XG4gICAgcmV0dXJuIHN0cmluZzAgPT09IHN0cmluZzEgPyBudWxsXG4gICAgICAgIDogc3RyaW5nMCA9PT0gc3RyaW5nMDAgJiYgc3RyaW5nMSA9PT0gc3RyaW5nMTAgPyBpbnRlcnBvbGF0ZTBcbiAgICAgICAgOiAoc3RyaW5nMTAgPSBzdHJpbmcxLCBpbnRlcnBvbGF0ZTAgPSBpbnRlcnBvbGF0ZShzdHJpbmcwMCA9IHN0cmluZzAsIHZhbHVlMSkpO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihuYW1lLCB2YWx1ZSkge1xuICB2YXIgZnVsbG5hbWUgPSBuYW1lc3BhY2UobmFtZSksIGkgPSBmdWxsbmFtZSA9PT0gXCJ0cmFuc2Zvcm1cIiA/IGludGVycG9sYXRlVHJhbnNmb3JtIDogaW50ZXJwb2xhdGU7XG4gIHJldHVybiB0aGlzLmF0dHJUd2VlbihuYW1lLCB0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIlxuICAgICAgPyAoZnVsbG5hbWUubG9jYWwgPyBhdHRyRnVuY3Rpb25OUyA6IGF0dHJGdW5jdGlvbikoZnVsbG5hbWUsIGksIHR3ZWVuVmFsdWUodGhpcywgXCJhdHRyLlwiICsgbmFtZSwgdmFsdWUpKVxuICAgICAgOiB2YWx1ZSA9PSBudWxsID8gKGZ1bGxuYW1lLmxvY2FsID8gYXR0clJlbW92ZU5TIDogYXR0clJlbW92ZSkoZnVsbG5hbWUpXG4gICAgICA6IChmdWxsbmFtZS5sb2NhbCA/IGF0dHJDb25zdGFudE5TIDogYXR0ckNvbnN0YW50KShmdWxsbmFtZSwgaSwgdmFsdWUpKTtcbn1cbiIsImltcG9ydCB7bmFtZXNwYWNlfSBmcm9tIFwiZDMtc2VsZWN0aW9uXCI7XG5cbmZ1bmN0aW9uIGF0dHJJbnRlcnBvbGF0ZShuYW1lLCBpKSB7XG4gIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgdGhpcy5zZXRBdHRyaWJ1dGUobmFtZSwgaS5jYWxsKHRoaXMsIHQpKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYXR0ckludGVycG9sYXRlTlMoZnVsbG5hbWUsIGkpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICB0aGlzLnNldEF0dHJpYnV0ZU5TKGZ1bGxuYW1lLnNwYWNlLCBmdWxsbmFtZS5sb2NhbCwgaS5jYWxsKHRoaXMsIHQpKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYXR0clR3ZWVuTlMoZnVsbG5hbWUsIHZhbHVlKSB7XG4gIHZhciB0MCwgaTA7XG4gIGZ1bmN0aW9uIHR3ZWVuKCkge1xuICAgIHZhciBpID0gdmFsdWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICBpZiAoaSAhPT0gaTApIHQwID0gKGkwID0gaSkgJiYgYXR0ckludGVycG9sYXRlTlMoZnVsbG5hbWUsIGkpO1xuICAgIHJldHVybiB0MDtcbiAgfVxuICB0d2Vlbi5fdmFsdWUgPSB2YWx1ZTtcbiAgcmV0dXJuIHR3ZWVuO1xufVxuXG5mdW5jdGlvbiBhdHRyVHdlZW4obmFtZSwgdmFsdWUpIHtcbiAgdmFyIHQwLCBpMDtcbiAgZnVuY3Rpb24gdHdlZW4oKSB7XG4gICAgdmFyIGkgPSB2YWx1ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIGlmIChpICE9PSBpMCkgdDAgPSAoaTAgPSBpKSAmJiBhdHRySW50ZXJwb2xhdGUobmFtZSwgaSk7XG4gICAgcmV0dXJuIHQwO1xuICB9XG4gIHR3ZWVuLl92YWx1ZSA9IHZhbHVlO1xuICByZXR1cm4gdHdlZW47XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5hbWUsIHZhbHVlKSB7XG4gIHZhciBrZXkgPSBcImF0dHIuXCIgKyBuYW1lO1xuICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHJldHVybiAoa2V5ID0gdGhpcy50d2VlbihrZXkpKSAmJiBrZXkuX3ZhbHVlO1xuICBpZiAodmFsdWUgPT0gbnVsbCkgcmV0dXJuIHRoaXMudHdlZW4oa2V5LCBudWxsKTtcbiAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gXCJmdW5jdGlvblwiKSB0aHJvdyBuZXcgRXJyb3I7XG4gIHZhciBmdWxsbmFtZSA9IG5hbWVzcGFjZShuYW1lKTtcbiAgcmV0dXJuIHRoaXMudHdlZW4oa2V5LCAoZnVsbG5hbWUubG9jYWwgPyBhdHRyVHdlZW5OUyA6IGF0dHJUd2VlbikoZnVsbG5hbWUsIHZhbHVlKSk7XG59XG4iLCJpbXBvcnQge2dldCwgaW5pdH0gZnJvbSBcIi4vc2NoZWR1bGUuanNcIjtcblxuZnVuY3Rpb24gZGVsYXlGdW5jdGlvbihpZCwgdmFsdWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIGluaXQodGhpcywgaWQpLmRlbGF5ID0gK3ZhbHVlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGRlbGF5Q29uc3RhbnQoaWQsIHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSA9ICt2YWx1ZSwgZnVuY3Rpb24oKSB7XG4gICAgaW5pdCh0aGlzLCBpZCkuZGVsYXkgPSB2YWx1ZTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWUpIHtcbiAgdmFyIGlkID0gdGhpcy5faWQ7XG5cbiAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGhcbiAgICAgID8gdGhpcy5lYWNoKCh0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIlxuICAgICAgICAgID8gZGVsYXlGdW5jdGlvblxuICAgICAgICAgIDogZGVsYXlDb25zdGFudCkoaWQsIHZhbHVlKSlcbiAgICAgIDogZ2V0KHRoaXMubm9kZSgpLCBpZCkuZGVsYXk7XG59XG4iLCJpbXBvcnQge2dldCwgc2V0fSBmcm9tIFwiLi9zY2hlZHVsZS5qc1wiO1xuXG5mdW5jdGlvbiBkdXJhdGlvbkZ1bmN0aW9uKGlkLCB2YWx1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgc2V0KHRoaXMsIGlkKS5kdXJhdGlvbiA9ICt2YWx1ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBkdXJhdGlvbkNvbnN0YW50KGlkLCB2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgPSArdmFsdWUsIGZ1bmN0aW9uKCkge1xuICAgIHNldCh0aGlzLCBpZCkuZHVyYXRpb24gPSB2YWx1ZTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWUpIHtcbiAgdmFyIGlkID0gdGhpcy5faWQ7XG5cbiAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGhcbiAgICAgID8gdGhpcy5lYWNoKCh0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIlxuICAgICAgICAgID8gZHVyYXRpb25GdW5jdGlvblxuICAgICAgICAgIDogZHVyYXRpb25Db25zdGFudCkoaWQsIHZhbHVlKSlcbiAgICAgIDogZ2V0KHRoaXMubm9kZSgpLCBpZCkuZHVyYXRpb247XG59XG4iLCJpbXBvcnQge2dldCwgc2V0fSBmcm9tIFwiLi9zY2hlZHVsZS5qc1wiO1xuXG5mdW5jdGlvbiBlYXNlQ29uc3RhbnQoaWQsIHZhbHVlKSB7XG4gIGlmICh0eXBlb2YgdmFsdWUgIT09IFwiZnVuY3Rpb25cIikgdGhyb3cgbmV3IEVycm9yO1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgc2V0KHRoaXMsIGlkKS5lYXNlID0gdmFsdWU7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIHZhciBpZCA9IHRoaXMuX2lkO1xuXG4gIHJldHVybiBhcmd1bWVudHMubGVuZ3RoXG4gICAgICA/IHRoaXMuZWFjaChlYXNlQ29uc3RhbnQoaWQsIHZhbHVlKSlcbiAgICAgIDogZ2V0KHRoaXMubm9kZSgpLCBpZCkuZWFzZTtcbn1cbiIsImltcG9ydCB7c2V0fSBmcm9tIFwiLi9zY2hlZHVsZS5qc1wiO1xuXG5mdW5jdGlvbiBlYXNlVmFyeWluZyhpZCwgdmFsdWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciB2ID0gdmFsdWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICBpZiAodHlwZW9mIHYgIT09IFwiZnVuY3Rpb25cIikgdGhyb3cgbmV3IEVycm9yO1xuICAgIHNldCh0aGlzLCBpZCkuZWFzZSA9IHY7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIGlmICh0eXBlb2YgdmFsdWUgIT09IFwiZnVuY3Rpb25cIikgdGhyb3cgbmV3IEVycm9yO1xuICByZXR1cm4gdGhpcy5lYWNoKGVhc2VWYXJ5aW5nKHRoaXMuX2lkLCB2YWx1ZSkpO1xufVxuIiwiaW1wb3J0IHttYXRjaGVyfSBmcm9tIFwiZDMtc2VsZWN0aW9uXCI7XG5pbXBvcnQge1RyYW5zaXRpb259IGZyb20gXCIuL2luZGV4LmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG1hdGNoKSB7XG4gIGlmICh0eXBlb2YgbWF0Y2ggIT09IFwiZnVuY3Rpb25cIikgbWF0Y2ggPSBtYXRjaGVyKG1hdGNoKTtcblxuICBmb3IgKHZhciBncm91cHMgPSB0aGlzLl9ncm91cHMsIG0gPSBncm91cHMubGVuZ3RoLCBzdWJncm91cHMgPSBuZXcgQXJyYXkobSksIGogPSAwOyBqIDwgbTsgKytqKSB7XG4gICAgZm9yICh2YXIgZ3JvdXAgPSBncm91cHNbal0sIG4gPSBncm91cC5sZW5ndGgsIHN1Ymdyb3VwID0gc3ViZ3JvdXBzW2pdID0gW10sIG5vZGUsIGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICBpZiAoKG5vZGUgPSBncm91cFtpXSkgJiYgbWF0Y2guY2FsbChub2RlLCBub2RlLl9fZGF0YV9fLCBpLCBncm91cCkpIHtcbiAgICAgICAgc3ViZ3JvdXAucHVzaChub2RlKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gbmV3IFRyYW5zaXRpb24oc3ViZ3JvdXBzLCB0aGlzLl9wYXJlbnRzLCB0aGlzLl9uYW1lLCB0aGlzLl9pZCk7XG59XG4iLCJpbXBvcnQge1RyYW5zaXRpb259IGZyb20gXCIuL2luZGV4LmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHRyYW5zaXRpb24pIHtcbiAgaWYgKHRyYW5zaXRpb24uX2lkICE9PSB0aGlzLl9pZCkgdGhyb3cgbmV3IEVycm9yO1xuXG4gIGZvciAodmFyIGdyb3VwczAgPSB0aGlzLl9ncm91cHMsIGdyb3VwczEgPSB0cmFuc2l0aW9uLl9ncm91cHMsIG0wID0gZ3JvdXBzMC5sZW5ndGgsIG0xID0gZ3JvdXBzMS5sZW5ndGgsIG0gPSBNYXRoLm1pbihtMCwgbTEpLCBtZXJnZXMgPSBuZXcgQXJyYXkobTApLCBqID0gMDsgaiA8IG07ICsraikge1xuICAgIGZvciAodmFyIGdyb3VwMCA9IGdyb3VwczBbal0sIGdyb3VwMSA9IGdyb3VwczFbal0sIG4gPSBncm91cDAubGVuZ3RoLCBtZXJnZSA9IG1lcmdlc1tqXSA9IG5ldyBBcnJheShuKSwgbm9kZSwgaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmIChub2RlID0gZ3JvdXAwW2ldIHx8IGdyb3VwMVtpXSkge1xuICAgICAgICBtZXJnZVtpXSA9IG5vZGU7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZm9yICg7IGogPCBtMDsgKytqKSB7XG4gICAgbWVyZ2VzW2pdID0gZ3JvdXBzMFtqXTtcbiAgfVxuXG4gIHJldHVybiBuZXcgVHJhbnNpdGlvbihtZXJnZXMsIHRoaXMuX3BhcmVudHMsIHRoaXMuX25hbWUsIHRoaXMuX2lkKTtcbn1cbiIsImltcG9ydCB7Z2V0LCBzZXQsIGluaXR9IGZyb20gXCIuL3NjaGVkdWxlLmpzXCI7XG5cbmZ1bmN0aW9uIHN0YXJ0KG5hbWUpIHtcbiAgcmV0dXJuIChuYW1lICsgXCJcIikudHJpbSgpLnNwbGl0KC9efFxccysvKS5ldmVyeShmdW5jdGlvbih0KSB7XG4gICAgdmFyIGkgPSB0LmluZGV4T2YoXCIuXCIpO1xuICAgIGlmIChpID49IDApIHQgPSB0LnNsaWNlKDAsIGkpO1xuICAgIHJldHVybiAhdCB8fCB0ID09PSBcInN0YXJ0XCI7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBvbkZ1bmN0aW9uKGlkLCBuYW1lLCBsaXN0ZW5lcikge1xuICB2YXIgb24wLCBvbjEsIHNpdCA9IHN0YXJ0KG5hbWUpID8gaW5pdCA6IHNldDtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciBzY2hlZHVsZSA9IHNpdCh0aGlzLCBpZCksXG4gICAgICAgIG9uID0gc2NoZWR1bGUub247XG5cbiAgICAvLyBJZiB0aGlzIG5vZGUgc2hhcmVkIGEgZGlzcGF0Y2ggd2l0aCB0aGUgcHJldmlvdXMgbm9kZSxcbiAgICAvLyBqdXN0IGFzc2lnbiB0aGUgdXBkYXRlZCBzaGFyZWQgZGlzcGF0Y2ggYW5kIHdl4oCZcmUgZG9uZSFcbiAgICAvLyBPdGhlcndpc2UsIGNvcHktb24td3JpdGUuXG4gICAgaWYgKG9uICE9PSBvbjApIChvbjEgPSAob24wID0gb24pLmNvcHkoKSkub24obmFtZSwgbGlzdGVuZXIpO1xuXG4gICAgc2NoZWR1bGUub24gPSBvbjE7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5hbWUsIGxpc3RlbmVyKSB7XG4gIHZhciBpZCA9IHRoaXMuX2lkO1xuXG4gIHJldHVybiBhcmd1bWVudHMubGVuZ3RoIDwgMlxuICAgICAgPyBnZXQodGhpcy5ub2RlKCksIGlkKS5vbi5vbihuYW1lKVxuICAgICAgOiB0aGlzLmVhY2gob25GdW5jdGlvbihpZCwgbmFtZSwgbGlzdGVuZXIpKTtcbn1cbiIsImZ1bmN0aW9uIHJlbW92ZUZ1bmN0aW9uKGlkKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgcGFyZW50ID0gdGhpcy5wYXJlbnROb2RlO1xuICAgIGZvciAodmFyIGkgaW4gdGhpcy5fX3RyYW5zaXRpb24pIGlmICgraSAhPT0gaWQpIHJldHVybjtcbiAgICBpZiAocGFyZW50KSBwYXJlbnQucmVtb3ZlQ2hpbGQodGhpcyk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcy5vbihcImVuZC5yZW1vdmVcIiwgcmVtb3ZlRnVuY3Rpb24odGhpcy5faWQpKTtcbn1cbiIsImltcG9ydCB7c2VsZWN0b3J9IGZyb20gXCJkMy1zZWxlY3Rpb25cIjtcbmltcG9ydCB7VHJhbnNpdGlvbn0gZnJvbSBcIi4vaW5kZXguanNcIjtcbmltcG9ydCBzY2hlZHVsZSwge2dldH0gZnJvbSBcIi4vc2NoZWR1bGUuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc2VsZWN0KSB7XG4gIHZhciBuYW1lID0gdGhpcy5fbmFtZSxcbiAgICAgIGlkID0gdGhpcy5faWQ7XG5cbiAgaWYgKHR5cGVvZiBzZWxlY3QgIT09IFwiZnVuY3Rpb25cIikgc2VsZWN0ID0gc2VsZWN0b3Ioc2VsZWN0KTtcblxuICBmb3IgKHZhciBncm91cHMgPSB0aGlzLl9ncm91cHMsIG0gPSBncm91cHMubGVuZ3RoLCBzdWJncm91cHMgPSBuZXcgQXJyYXkobSksIGogPSAwOyBqIDwgbTsgKytqKSB7XG4gICAgZm9yICh2YXIgZ3JvdXAgPSBncm91cHNbal0sIG4gPSBncm91cC5sZW5ndGgsIHN1Ymdyb3VwID0gc3ViZ3JvdXBzW2pdID0gbmV3IEFycmF5KG4pLCBub2RlLCBzdWJub2RlLCBpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgaWYgKChub2RlID0gZ3JvdXBbaV0pICYmIChzdWJub2RlID0gc2VsZWN0LmNhbGwobm9kZSwgbm9kZS5fX2RhdGFfXywgaSwgZ3JvdXApKSkge1xuICAgICAgICBpZiAoXCJfX2RhdGFfX1wiIGluIG5vZGUpIHN1Ym5vZGUuX19kYXRhX18gPSBub2RlLl9fZGF0YV9fO1xuICAgICAgICBzdWJncm91cFtpXSA9IHN1Ym5vZGU7XG4gICAgICAgIHNjaGVkdWxlKHN1Ymdyb3VwW2ldLCBuYW1lLCBpZCwgaSwgc3ViZ3JvdXAsIGdldChub2RlLCBpZCkpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBuZXcgVHJhbnNpdGlvbihzdWJncm91cHMsIHRoaXMuX3BhcmVudHMsIG5hbWUsIGlkKTtcbn1cbiIsImltcG9ydCB7c2VsZWN0b3JBbGx9IGZyb20gXCJkMy1zZWxlY3Rpb25cIjtcbmltcG9ydCB7VHJhbnNpdGlvbn0gZnJvbSBcIi4vaW5kZXguanNcIjtcbmltcG9ydCBzY2hlZHVsZSwge2dldH0gZnJvbSBcIi4vc2NoZWR1bGUuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc2VsZWN0KSB7XG4gIHZhciBuYW1lID0gdGhpcy5fbmFtZSxcbiAgICAgIGlkID0gdGhpcy5faWQ7XG5cbiAgaWYgKHR5cGVvZiBzZWxlY3QgIT09IFwiZnVuY3Rpb25cIikgc2VsZWN0ID0gc2VsZWN0b3JBbGwoc2VsZWN0KTtcblxuICBmb3IgKHZhciBncm91cHMgPSB0aGlzLl9ncm91cHMsIG0gPSBncm91cHMubGVuZ3RoLCBzdWJncm91cHMgPSBbXSwgcGFyZW50cyA9IFtdLCBqID0gMDsgaiA8IG07ICsraikge1xuICAgIGZvciAodmFyIGdyb3VwID0gZ3JvdXBzW2pdLCBuID0gZ3JvdXAubGVuZ3RoLCBub2RlLCBpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgaWYgKG5vZGUgPSBncm91cFtpXSkge1xuICAgICAgICBmb3IgKHZhciBjaGlsZHJlbiA9IHNlbGVjdC5jYWxsKG5vZGUsIG5vZGUuX19kYXRhX18sIGksIGdyb3VwKSwgY2hpbGQsIGluaGVyaXQgPSBnZXQobm9kZSwgaWQpLCBrID0gMCwgbCA9IGNoaWxkcmVuLmxlbmd0aDsgayA8IGw7ICsraykge1xuICAgICAgICAgIGlmIChjaGlsZCA9IGNoaWxkcmVuW2tdKSB7XG4gICAgICAgICAgICBzY2hlZHVsZShjaGlsZCwgbmFtZSwgaWQsIGssIGNoaWxkcmVuLCBpbmhlcml0KTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgc3ViZ3JvdXBzLnB1c2goY2hpbGRyZW4pO1xuICAgICAgICBwYXJlbnRzLnB1c2gobm9kZSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG5ldyBUcmFuc2l0aW9uKHN1Ymdyb3VwcywgcGFyZW50cywgbmFtZSwgaWQpO1xufVxuIiwiaW1wb3J0IHtzZWxlY3Rpb259IGZyb20gXCJkMy1zZWxlY3Rpb25cIjtcblxudmFyIFNlbGVjdGlvbiA9IHNlbGVjdGlvbi5wcm90b3R5cGUuY29uc3RydWN0b3I7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gbmV3IFNlbGVjdGlvbih0aGlzLl9ncm91cHMsIHRoaXMuX3BhcmVudHMpO1xufVxuIiwiaW1wb3J0IHtpbnRlcnBvbGF0ZVRyYW5zZm9ybUNzcyBhcyBpbnRlcnBvbGF0ZVRyYW5zZm9ybX0gZnJvbSBcImQzLWludGVycG9sYXRlXCI7XG5pbXBvcnQge3N0eWxlfSBmcm9tIFwiZDMtc2VsZWN0aW9uXCI7XG5pbXBvcnQge3NldH0gZnJvbSBcIi4vc2NoZWR1bGUuanNcIjtcbmltcG9ydCB7dHdlZW5WYWx1ZX0gZnJvbSBcIi4vdHdlZW4uanNcIjtcbmltcG9ydCBpbnRlcnBvbGF0ZSBmcm9tIFwiLi9pbnRlcnBvbGF0ZS5qc1wiO1xuXG5mdW5jdGlvbiBzdHlsZU51bGwobmFtZSwgaW50ZXJwb2xhdGUpIHtcbiAgdmFyIHN0cmluZzAwLFxuICAgICAgc3RyaW5nMTAsXG4gICAgICBpbnRlcnBvbGF0ZTA7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgc3RyaW5nMCA9IHN0eWxlKHRoaXMsIG5hbWUpLFxuICAgICAgICBzdHJpbmcxID0gKHRoaXMuc3R5bGUucmVtb3ZlUHJvcGVydHkobmFtZSksIHN0eWxlKHRoaXMsIG5hbWUpKTtcbiAgICByZXR1cm4gc3RyaW5nMCA9PT0gc3RyaW5nMSA/IG51bGxcbiAgICAgICAgOiBzdHJpbmcwID09PSBzdHJpbmcwMCAmJiBzdHJpbmcxID09PSBzdHJpbmcxMCA/IGludGVycG9sYXRlMFxuICAgICAgICA6IGludGVycG9sYXRlMCA9IGludGVycG9sYXRlKHN0cmluZzAwID0gc3RyaW5nMCwgc3RyaW5nMTAgPSBzdHJpbmcxKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gc3R5bGVSZW1vdmUobmFtZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5zdHlsZS5yZW1vdmVQcm9wZXJ0eShuYW1lKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gc3R5bGVDb25zdGFudChuYW1lLCBpbnRlcnBvbGF0ZSwgdmFsdWUxKSB7XG4gIHZhciBzdHJpbmcwMCxcbiAgICAgIHN0cmluZzEgPSB2YWx1ZTEgKyBcIlwiLFxuICAgICAgaW50ZXJwb2xhdGUwO1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHN0cmluZzAgPSBzdHlsZSh0aGlzLCBuYW1lKTtcbiAgICByZXR1cm4gc3RyaW5nMCA9PT0gc3RyaW5nMSA/IG51bGxcbiAgICAgICAgOiBzdHJpbmcwID09PSBzdHJpbmcwMCA/IGludGVycG9sYXRlMFxuICAgICAgICA6IGludGVycG9sYXRlMCA9IGludGVycG9sYXRlKHN0cmluZzAwID0gc3RyaW5nMCwgdmFsdWUxKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gc3R5bGVGdW5jdGlvbihuYW1lLCBpbnRlcnBvbGF0ZSwgdmFsdWUpIHtcbiAgdmFyIHN0cmluZzAwLFxuICAgICAgc3RyaW5nMTAsXG4gICAgICBpbnRlcnBvbGF0ZTA7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgc3RyaW5nMCA9IHN0eWxlKHRoaXMsIG5hbWUpLFxuICAgICAgICB2YWx1ZTEgPSB2YWx1ZSh0aGlzKSxcbiAgICAgICAgc3RyaW5nMSA9IHZhbHVlMSArIFwiXCI7XG4gICAgaWYgKHZhbHVlMSA9PSBudWxsKSBzdHJpbmcxID0gdmFsdWUxID0gKHRoaXMuc3R5bGUucmVtb3ZlUHJvcGVydHkobmFtZSksIHN0eWxlKHRoaXMsIG5hbWUpKTtcbiAgICByZXR1cm4gc3RyaW5nMCA9PT0gc3RyaW5nMSA/IG51bGxcbiAgICAgICAgOiBzdHJpbmcwID09PSBzdHJpbmcwMCAmJiBzdHJpbmcxID09PSBzdHJpbmcxMCA/IGludGVycG9sYXRlMFxuICAgICAgICA6IChzdHJpbmcxMCA9IHN0cmluZzEsIGludGVycG9sYXRlMCA9IGludGVycG9sYXRlKHN0cmluZzAwID0gc3RyaW5nMCwgdmFsdWUxKSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIHN0eWxlTWF5YmVSZW1vdmUoaWQsIG5hbWUpIHtcbiAgdmFyIG9uMCwgb24xLCBsaXN0ZW5lcjAsIGtleSA9IFwic3R5bGUuXCIgKyBuYW1lLCBldmVudCA9IFwiZW5kLlwiICsga2V5LCByZW1vdmU7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgc2NoZWR1bGUgPSBzZXQodGhpcywgaWQpLFxuICAgICAgICBvbiA9IHNjaGVkdWxlLm9uLFxuICAgICAgICBsaXN0ZW5lciA9IHNjaGVkdWxlLnZhbHVlW2tleV0gPT0gbnVsbCA/IHJlbW92ZSB8fCAocmVtb3ZlID0gc3R5bGVSZW1vdmUobmFtZSkpIDogdW5kZWZpbmVkO1xuXG4gICAgLy8gSWYgdGhpcyBub2RlIHNoYXJlZCBhIGRpc3BhdGNoIHdpdGggdGhlIHByZXZpb3VzIG5vZGUsXG4gICAgLy8ganVzdCBhc3NpZ24gdGhlIHVwZGF0ZWQgc2hhcmVkIGRpc3BhdGNoIGFuZCB3ZeKAmXJlIGRvbmUhXG4gICAgLy8gT3RoZXJ3aXNlLCBjb3B5LW9uLXdyaXRlLlxuICAgIGlmIChvbiAhPT0gb24wIHx8IGxpc3RlbmVyMCAhPT0gbGlzdGVuZXIpIChvbjEgPSAob24wID0gb24pLmNvcHkoKSkub24oZXZlbnQsIGxpc3RlbmVyMCA9IGxpc3RlbmVyKTtcblxuICAgIHNjaGVkdWxlLm9uID0gb24xO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihuYW1lLCB2YWx1ZSwgcHJpb3JpdHkpIHtcbiAgdmFyIGkgPSAobmFtZSArPSBcIlwiKSA9PT0gXCJ0cmFuc2Zvcm1cIiA/IGludGVycG9sYXRlVHJhbnNmb3JtIDogaW50ZXJwb2xhdGU7XG4gIHJldHVybiB2YWx1ZSA9PSBudWxsID8gdGhpc1xuICAgICAgLnN0eWxlVHdlZW4obmFtZSwgc3R5bGVOdWxsKG5hbWUsIGkpKVxuICAgICAgLm9uKFwiZW5kLnN0eWxlLlwiICsgbmFtZSwgc3R5bGVSZW1vdmUobmFtZSkpXG4gICAgOiB0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIiA/IHRoaXNcbiAgICAgIC5zdHlsZVR3ZWVuKG5hbWUsIHN0eWxlRnVuY3Rpb24obmFtZSwgaSwgdHdlZW5WYWx1ZSh0aGlzLCBcInN0eWxlLlwiICsgbmFtZSwgdmFsdWUpKSlcbiAgICAgIC5lYWNoKHN0eWxlTWF5YmVSZW1vdmUodGhpcy5faWQsIG5hbWUpKVxuICAgIDogdGhpc1xuICAgICAgLnN0eWxlVHdlZW4obmFtZSwgc3R5bGVDb25zdGFudChuYW1lLCBpLCB2YWx1ZSksIHByaW9yaXR5KVxuICAgICAgLm9uKFwiZW5kLnN0eWxlLlwiICsgbmFtZSwgbnVsbCk7XG59XG4iLCJmdW5jdGlvbiBzdHlsZUludGVycG9sYXRlKG5hbWUsIGksIHByaW9yaXR5KSB7XG4gIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgdGhpcy5zdHlsZS5zZXRQcm9wZXJ0eShuYW1lLCBpLmNhbGwodGhpcywgdCksIHByaW9yaXR5KTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gc3R5bGVUd2VlbihuYW1lLCB2YWx1ZSwgcHJpb3JpdHkpIHtcbiAgdmFyIHQsIGkwO1xuICBmdW5jdGlvbiB0d2VlbigpIHtcbiAgICB2YXIgaSA9IHZhbHVlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgaWYgKGkgIT09IGkwKSB0ID0gKGkwID0gaSkgJiYgc3R5bGVJbnRlcnBvbGF0ZShuYW1lLCBpLCBwcmlvcml0eSk7XG4gICAgcmV0dXJuIHQ7XG4gIH1cbiAgdHdlZW4uX3ZhbHVlID0gdmFsdWU7XG4gIHJldHVybiB0d2Vlbjtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obmFtZSwgdmFsdWUsIHByaW9yaXR5KSB7XG4gIHZhciBrZXkgPSBcInN0eWxlLlwiICsgKG5hbWUgKz0gXCJcIik7XG4gIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMikgcmV0dXJuIChrZXkgPSB0aGlzLnR3ZWVuKGtleSkpICYmIGtleS5fdmFsdWU7XG4gIGlmICh2YWx1ZSA9PSBudWxsKSByZXR1cm4gdGhpcy50d2VlbihrZXksIG51bGwpO1xuICBpZiAodHlwZW9mIHZhbHVlICE9PSBcImZ1bmN0aW9uXCIpIHRocm93IG5ldyBFcnJvcjtcbiAgcmV0dXJuIHRoaXMudHdlZW4oa2V5LCBzdHlsZVR3ZWVuKG5hbWUsIHZhbHVlLCBwcmlvcml0eSA9PSBudWxsID8gXCJcIiA6IHByaW9yaXR5KSk7XG59XG4iLCJpbXBvcnQge3R3ZWVuVmFsdWV9IGZyb20gXCIuL3R3ZWVuLmpzXCI7XG5cbmZ1bmN0aW9uIHRleHRDb25zdGFudCh2YWx1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy50ZXh0Q29udGVudCA9IHZhbHVlO1xuICB9O1xufVxuXG5mdW5jdGlvbiB0ZXh0RnVuY3Rpb24odmFsdWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciB2YWx1ZTEgPSB2YWx1ZSh0aGlzKTtcbiAgICB0aGlzLnRleHRDb250ZW50ID0gdmFsdWUxID09IG51bGwgPyBcIlwiIDogdmFsdWUxO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih2YWx1ZSkge1xuICByZXR1cm4gdGhpcy50d2VlbihcInRleHRcIiwgdHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCJcbiAgICAgID8gdGV4dEZ1bmN0aW9uKHR3ZWVuVmFsdWUodGhpcywgXCJ0ZXh0XCIsIHZhbHVlKSlcbiAgICAgIDogdGV4dENvbnN0YW50KHZhbHVlID09IG51bGwgPyBcIlwiIDogdmFsdWUgKyBcIlwiKSk7XG59XG4iLCJmdW5jdGlvbiB0ZXh0SW50ZXJwb2xhdGUoaSkge1xuICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgIHRoaXMudGV4dENvbnRlbnQgPSBpLmNhbGwodGhpcywgdCk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIHRleHRUd2Vlbih2YWx1ZSkge1xuICB2YXIgdDAsIGkwO1xuICBmdW5jdGlvbiB0d2VlbigpIHtcbiAgICB2YXIgaSA9IHZhbHVlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgaWYgKGkgIT09IGkwKSB0MCA9IChpMCA9IGkpICYmIHRleHRJbnRlcnBvbGF0ZShpKTtcbiAgICByZXR1cm4gdDA7XG4gIH1cbiAgdHdlZW4uX3ZhbHVlID0gdmFsdWU7XG4gIHJldHVybiB0d2Vlbjtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWUpIHtcbiAgdmFyIGtleSA9IFwidGV4dFwiO1xuICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDEpIHJldHVybiAoa2V5ID0gdGhpcy50d2VlbihrZXkpKSAmJiBrZXkuX3ZhbHVlO1xuICBpZiAodmFsdWUgPT0gbnVsbCkgcmV0dXJuIHRoaXMudHdlZW4oa2V5LCBudWxsKTtcbiAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gXCJmdW5jdGlvblwiKSB0aHJvdyBuZXcgRXJyb3I7XG4gIHJldHVybiB0aGlzLnR3ZWVuKGtleSwgdGV4dFR3ZWVuKHZhbHVlKSk7XG59XG4iLCJpbXBvcnQge1RyYW5zaXRpb24sIG5ld0lkfSBmcm9tIFwiLi9pbmRleC5qc1wiO1xuaW1wb3J0IHNjaGVkdWxlLCB7Z2V0fSBmcm9tIFwiLi9zY2hlZHVsZS5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIG5hbWUgPSB0aGlzLl9uYW1lLFxuICAgICAgaWQwID0gdGhpcy5faWQsXG4gICAgICBpZDEgPSBuZXdJZCgpO1xuXG4gIGZvciAodmFyIGdyb3VwcyA9IHRoaXMuX2dyb3VwcywgbSA9IGdyb3Vwcy5sZW5ndGgsIGogPSAwOyBqIDwgbTsgKytqKSB7XG4gICAgZm9yICh2YXIgZ3JvdXAgPSBncm91cHNbal0sIG4gPSBncm91cC5sZW5ndGgsIG5vZGUsIGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICBpZiAobm9kZSA9IGdyb3VwW2ldKSB7XG4gICAgICAgIHZhciBpbmhlcml0ID0gZ2V0KG5vZGUsIGlkMCk7XG4gICAgICAgIHNjaGVkdWxlKG5vZGUsIG5hbWUsIGlkMSwgaSwgZ3JvdXAsIHtcbiAgICAgICAgICB0aW1lOiBpbmhlcml0LnRpbWUgKyBpbmhlcml0LmRlbGF5ICsgaW5oZXJpdC5kdXJhdGlvbixcbiAgICAgICAgICBkZWxheTogMCxcbiAgICAgICAgICBkdXJhdGlvbjogaW5oZXJpdC5kdXJhdGlvbixcbiAgICAgICAgICBlYXNlOiBpbmhlcml0LmVhc2VcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG5ldyBUcmFuc2l0aW9uKGdyb3VwcywgdGhpcy5fcGFyZW50cywgbmFtZSwgaWQxKTtcbn1cbiIsImltcG9ydCB7c2V0fSBmcm9tIFwiLi9zY2hlZHVsZS5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIG9uMCwgb24xLCB0aGF0ID0gdGhpcywgaWQgPSB0aGF0Ll9pZCwgc2l6ZSA9IHRoYXQuc2l6ZSgpO1xuICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgdmFyIGNhbmNlbCA9IHt2YWx1ZTogcmVqZWN0fSxcbiAgICAgICAgZW5kID0ge3ZhbHVlOiBmdW5jdGlvbigpIHsgaWYgKC0tc2l6ZSA9PT0gMCkgcmVzb2x2ZSgpOyB9fTtcblxuICAgIHRoYXQuZWFjaChmdW5jdGlvbigpIHtcbiAgICAgIHZhciBzY2hlZHVsZSA9IHNldCh0aGlzLCBpZCksXG4gICAgICAgICAgb24gPSBzY2hlZHVsZS5vbjtcblxuICAgICAgLy8gSWYgdGhpcyBub2RlIHNoYXJlZCBhIGRpc3BhdGNoIHdpdGggdGhlIHByZXZpb3VzIG5vZGUsXG4gICAgICAvLyBqdXN0IGFzc2lnbiB0aGUgdXBkYXRlZCBzaGFyZWQgZGlzcGF0Y2ggYW5kIHdl4oCZcmUgZG9uZSFcbiAgICAgIC8vIE90aGVyd2lzZSwgY29weS1vbi13cml0ZS5cbiAgICAgIGlmIChvbiAhPT0gb24wKSB7XG4gICAgICAgIG9uMSA9IChvbjAgPSBvbikuY29weSgpO1xuICAgICAgICBvbjEuXy5jYW5jZWwucHVzaChjYW5jZWwpO1xuICAgICAgICBvbjEuXy5pbnRlcnJ1cHQucHVzaChjYW5jZWwpO1xuICAgICAgICBvbjEuXy5lbmQucHVzaChlbmQpO1xuICAgICAgfVxuXG4gICAgICBzY2hlZHVsZS5vbiA9IG9uMTtcbiAgICB9KTtcblxuICAgIC8vIFRoZSBzZWxlY3Rpb24gd2FzIGVtcHR5LCByZXNvbHZlIGVuZCBpbW1lZGlhdGVseVxuICAgIGlmIChzaXplID09PSAwKSByZXNvbHZlKCk7XG4gIH0pO1xufVxuIiwiaW1wb3J0IHtzZWxlY3Rpb259IGZyb20gXCJkMy1zZWxlY3Rpb25cIjtcbmltcG9ydCB0cmFuc2l0aW9uX2F0dHIgZnJvbSBcIi4vYXR0ci5qc1wiO1xuaW1wb3J0IHRyYW5zaXRpb25fYXR0clR3ZWVuIGZyb20gXCIuL2F0dHJUd2Vlbi5qc1wiO1xuaW1wb3J0IHRyYW5zaXRpb25fZGVsYXkgZnJvbSBcIi4vZGVsYXkuanNcIjtcbmltcG9ydCB0cmFuc2l0aW9uX2R1cmF0aW9uIGZyb20gXCIuL2R1cmF0aW9uLmpzXCI7XG5pbXBvcnQgdHJhbnNpdGlvbl9lYXNlIGZyb20gXCIuL2Vhc2UuanNcIjtcbmltcG9ydCB0cmFuc2l0aW9uX2Vhc2VWYXJ5aW5nIGZyb20gXCIuL2Vhc2VWYXJ5aW5nLmpzXCI7XG5pbXBvcnQgdHJhbnNpdGlvbl9maWx0ZXIgZnJvbSBcIi4vZmlsdGVyLmpzXCI7XG5pbXBvcnQgdHJhbnNpdGlvbl9tZXJnZSBmcm9tIFwiLi9tZXJnZS5qc1wiO1xuaW1wb3J0IHRyYW5zaXRpb25fb24gZnJvbSBcIi4vb24uanNcIjtcbmltcG9ydCB0cmFuc2l0aW9uX3JlbW92ZSBmcm9tIFwiLi9yZW1vdmUuanNcIjtcbmltcG9ydCB0cmFuc2l0aW9uX3NlbGVjdCBmcm9tIFwiLi9zZWxlY3QuanNcIjtcbmltcG9ydCB0cmFuc2l0aW9uX3NlbGVjdEFsbCBmcm9tIFwiLi9zZWxlY3RBbGwuanNcIjtcbmltcG9ydCB0cmFuc2l0aW9uX3NlbGVjdGlvbiBmcm9tIFwiLi9zZWxlY3Rpb24uanNcIjtcbmltcG9ydCB0cmFuc2l0aW9uX3N0eWxlIGZyb20gXCIuL3N0eWxlLmpzXCI7XG5pbXBvcnQgdHJhbnNpdGlvbl9zdHlsZVR3ZWVuIGZyb20gXCIuL3N0eWxlVHdlZW4uanNcIjtcbmltcG9ydCB0cmFuc2l0aW9uX3RleHQgZnJvbSBcIi4vdGV4dC5qc1wiO1xuaW1wb3J0IHRyYW5zaXRpb25fdGV4dFR3ZWVuIGZyb20gXCIuL3RleHRUd2Vlbi5qc1wiO1xuaW1wb3J0IHRyYW5zaXRpb25fdHJhbnNpdGlvbiBmcm9tIFwiLi90cmFuc2l0aW9uLmpzXCI7XG5pbXBvcnQgdHJhbnNpdGlvbl90d2VlbiBmcm9tIFwiLi90d2Vlbi5qc1wiO1xuaW1wb3J0IHRyYW5zaXRpb25fZW5kIGZyb20gXCIuL2VuZC5qc1wiO1xuXG52YXIgaWQgPSAwO1xuXG5leHBvcnQgZnVuY3Rpb24gVHJhbnNpdGlvbihncm91cHMsIHBhcmVudHMsIG5hbWUsIGlkKSB7XG4gIHRoaXMuX2dyb3VwcyA9IGdyb3VwcztcbiAgdGhpcy5fcGFyZW50cyA9IHBhcmVudHM7XG4gIHRoaXMuX25hbWUgPSBuYW1lO1xuICB0aGlzLl9pZCA9IGlkO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB0cmFuc2l0aW9uKG5hbWUpIHtcbiAgcmV0dXJuIHNlbGVjdGlvbigpLnRyYW5zaXRpb24obmFtZSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBuZXdJZCgpIHtcbiAgcmV0dXJuICsraWQ7XG59XG5cbnZhciBzZWxlY3Rpb25fcHJvdG90eXBlID0gc2VsZWN0aW9uLnByb3RvdHlwZTtcblxuVHJhbnNpdGlvbi5wcm90b3R5cGUgPSB0cmFuc2l0aW9uLnByb3RvdHlwZSA9IHtcbiAgY29uc3RydWN0b3I6IFRyYW5zaXRpb24sXG4gIHNlbGVjdDogdHJhbnNpdGlvbl9zZWxlY3QsXG4gIHNlbGVjdEFsbDogdHJhbnNpdGlvbl9zZWxlY3RBbGwsXG4gIHNlbGVjdENoaWxkOiBzZWxlY3Rpb25fcHJvdG90eXBlLnNlbGVjdENoaWxkLFxuICBzZWxlY3RDaGlsZHJlbjogc2VsZWN0aW9uX3Byb3RvdHlwZS5zZWxlY3RDaGlsZHJlbixcbiAgZmlsdGVyOiB0cmFuc2l0aW9uX2ZpbHRlcixcbiAgbWVyZ2U6IHRyYW5zaXRpb25fbWVyZ2UsXG4gIHNlbGVjdGlvbjogdHJhbnNpdGlvbl9zZWxlY3Rpb24sXG4gIHRyYW5zaXRpb246IHRyYW5zaXRpb25fdHJhbnNpdGlvbixcbiAgY2FsbDogc2VsZWN0aW9uX3Byb3RvdHlwZS5jYWxsLFxuICBub2Rlczogc2VsZWN0aW9uX3Byb3RvdHlwZS5ub2RlcyxcbiAgbm9kZTogc2VsZWN0aW9uX3Byb3RvdHlwZS5ub2RlLFxuICBzaXplOiBzZWxlY3Rpb25fcHJvdG90eXBlLnNpemUsXG4gIGVtcHR5OiBzZWxlY3Rpb25fcHJvdG90eXBlLmVtcHR5LFxuICBlYWNoOiBzZWxlY3Rpb25fcHJvdG90eXBlLmVhY2gsXG4gIG9uOiB0cmFuc2l0aW9uX29uLFxuICBhdHRyOiB0cmFuc2l0aW9uX2F0dHIsXG4gIGF0dHJUd2VlbjogdHJhbnNpdGlvbl9hdHRyVHdlZW4sXG4gIHN0eWxlOiB0cmFuc2l0aW9uX3N0eWxlLFxuICBzdHlsZVR3ZWVuOiB0cmFuc2l0aW9uX3N0eWxlVHdlZW4sXG4gIHRleHQ6IHRyYW5zaXRpb25fdGV4dCxcbiAgdGV4dFR3ZWVuOiB0cmFuc2l0aW9uX3RleHRUd2VlbixcbiAgcmVtb3ZlOiB0cmFuc2l0aW9uX3JlbW92ZSxcbiAgdHdlZW46IHRyYW5zaXRpb25fdHdlZW4sXG4gIGRlbGF5OiB0cmFuc2l0aW9uX2RlbGF5LFxuICBkdXJhdGlvbjogdHJhbnNpdGlvbl9kdXJhdGlvbixcbiAgZWFzZTogdHJhbnNpdGlvbl9lYXNlLFxuICBlYXNlVmFyeWluZzogdHJhbnNpdGlvbl9lYXNlVmFyeWluZyxcbiAgZW5kOiB0cmFuc2l0aW9uX2VuZCxcbiAgW1N5bWJvbC5pdGVyYXRvcl06IHNlbGVjdGlvbl9wcm90b3R5cGVbU3ltYm9sLml0ZXJhdG9yXVxufTtcbiIsImV4cG9ydCBjb25zdCBsaW5lYXIgPSB0ID0+ICt0O1xuIiwiZXhwb3J0IGZ1bmN0aW9uIGN1YmljSW4odCkge1xuICByZXR1cm4gdCAqIHQgKiB0O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY3ViaWNPdXQodCkge1xuICByZXR1cm4gLS10ICogdCAqIHQgKyAxO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY3ViaWNJbk91dCh0KSB7XG4gIHJldHVybiAoKHQgKj0gMikgPD0gMSA/IHQgKiB0ICogdCA6ICh0IC09IDIpICogdCAqIHQgKyAyKSAvIDI7XG59XG4iLCJpbXBvcnQge1RyYW5zaXRpb24sIG5ld0lkfSBmcm9tIFwiLi4vdHJhbnNpdGlvbi9pbmRleC5qc1wiO1xuaW1wb3J0IHNjaGVkdWxlIGZyb20gXCIuLi90cmFuc2l0aW9uL3NjaGVkdWxlLmpzXCI7XG5pbXBvcnQge2Vhc2VDdWJpY0luT3V0fSBmcm9tIFwiZDMtZWFzZVwiO1xuaW1wb3J0IHtub3d9IGZyb20gXCJkMy10aW1lclwiO1xuXG52YXIgZGVmYXVsdFRpbWluZyA9IHtcbiAgdGltZTogbnVsbCwgLy8gU2V0IG9uIHVzZS5cbiAgZGVsYXk6IDAsXG4gIGR1cmF0aW9uOiAyNTAsXG4gIGVhc2U6IGVhc2VDdWJpY0luT3V0XG59O1xuXG5mdW5jdGlvbiBpbmhlcml0KG5vZGUsIGlkKSB7XG4gIHZhciB0aW1pbmc7XG4gIHdoaWxlICghKHRpbWluZyA9IG5vZGUuX190cmFuc2l0aW9uKSB8fCAhKHRpbWluZyA9IHRpbWluZ1tpZF0pKSB7XG4gICAgaWYgKCEobm9kZSA9IG5vZGUucGFyZW50Tm9kZSkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgdHJhbnNpdGlvbiAke2lkfSBub3QgZm91bmRgKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRpbWluZztcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obmFtZSkge1xuICB2YXIgaWQsXG4gICAgICB0aW1pbmc7XG5cbiAgaWYgKG5hbWUgaW5zdGFuY2VvZiBUcmFuc2l0aW9uKSB7XG4gICAgaWQgPSBuYW1lLl9pZCwgbmFtZSA9IG5hbWUuX25hbWU7XG4gIH0gZWxzZSB7XG4gICAgaWQgPSBuZXdJZCgpLCAodGltaW5nID0gZGVmYXVsdFRpbWluZykudGltZSA9IG5vdygpLCBuYW1lID0gbmFtZSA9PSBudWxsID8gbnVsbCA6IG5hbWUgKyBcIlwiO1xuICB9XG5cbiAgZm9yICh2YXIgZ3JvdXBzID0gdGhpcy5fZ3JvdXBzLCBtID0gZ3JvdXBzLmxlbmd0aCwgaiA9IDA7IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHZhciBncm91cCA9IGdyb3Vwc1tqXSwgbiA9IGdyb3VwLmxlbmd0aCwgbm9kZSwgaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmIChub2RlID0gZ3JvdXBbaV0pIHtcbiAgICAgICAgc2NoZWR1bGUobm9kZSwgbmFtZSwgaWQsIGksIGdyb3VwLCB0aW1pbmcgfHwgaW5oZXJpdChub2RlLCBpZCkpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBuZXcgVHJhbnNpdGlvbihncm91cHMsIHRoaXMuX3BhcmVudHMsIG5hbWUsIGlkKTtcbn1cbiIsImltcG9ydCB7c2VsZWN0aW9ufSBmcm9tIFwiZDMtc2VsZWN0aW9uXCI7XG5pbXBvcnQgc2VsZWN0aW9uX2ludGVycnVwdCBmcm9tIFwiLi9pbnRlcnJ1cHQuanNcIjtcbmltcG9ydCBzZWxlY3Rpb25fdHJhbnNpdGlvbiBmcm9tIFwiLi90cmFuc2l0aW9uLmpzXCI7XG5cbnNlbGVjdGlvbi5wcm90b3R5cGUuaW50ZXJydXB0ID0gc2VsZWN0aW9uX2ludGVycnVwdDtcbnNlbGVjdGlvbi5wcm90b3R5cGUudHJhbnNpdGlvbiA9IHNlbGVjdGlvbl90cmFuc2l0aW9uO1xuIiwiZXhwb3J0IGZ1bmN0aW9uIFRyYW5zZm9ybShrLCB4LCB5KSB7XG4gIHRoaXMuayA9IGs7XG4gIHRoaXMueCA9IHg7XG4gIHRoaXMueSA9IHk7XG59XG5cblRyYW5zZm9ybS5wcm90b3R5cGUgPSB7XG4gIGNvbnN0cnVjdG9yOiBUcmFuc2Zvcm0sXG4gIHNjYWxlOiBmdW5jdGlvbihrKSB7XG4gICAgcmV0dXJuIGsgPT09IDEgPyB0aGlzIDogbmV3IFRyYW5zZm9ybSh0aGlzLmsgKiBrLCB0aGlzLngsIHRoaXMueSk7XG4gIH0sXG4gIHRyYW5zbGF0ZTogZnVuY3Rpb24oeCwgeSkge1xuICAgIHJldHVybiB4ID09PSAwICYgeSA9PT0gMCA/IHRoaXMgOiBuZXcgVHJhbnNmb3JtKHRoaXMuaywgdGhpcy54ICsgdGhpcy5rICogeCwgdGhpcy55ICsgdGhpcy5rICogeSk7XG4gIH0sXG4gIGFwcGx5OiBmdW5jdGlvbihwb2ludCkge1xuICAgIHJldHVybiBbcG9pbnRbMF0gKiB0aGlzLmsgKyB0aGlzLngsIHBvaW50WzFdICogdGhpcy5rICsgdGhpcy55XTtcbiAgfSxcbiAgYXBwbHlYOiBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIHggKiB0aGlzLmsgKyB0aGlzLng7XG4gIH0sXG4gIGFwcGx5WTogZnVuY3Rpb24oeSkge1xuICAgIHJldHVybiB5ICogdGhpcy5rICsgdGhpcy55O1xuICB9LFxuICBpbnZlcnQ6IGZ1bmN0aW9uKGxvY2F0aW9uKSB7XG4gICAgcmV0dXJuIFsobG9jYXRpb25bMF0gLSB0aGlzLngpIC8gdGhpcy5rLCAobG9jYXRpb25bMV0gLSB0aGlzLnkpIC8gdGhpcy5rXTtcbiAgfSxcbiAgaW52ZXJ0WDogZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiAoeCAtIHRoaXMueCkgLyB0aGlzLms7XG4gIH0sXG4gIGludmVydFk6IGZ1bmN0aW9uKHkpIHtcbiAgICByZXR1cm4gKHkgLSB0aGlzLnkpIC8gdGhpcy5rO1xuICB9LFxuICByZXNjYWxlWDogZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiB4LmNvcHkoKS5kb21haW4oeC5yYW5nZSgpLm1hcCh0aGlzLmludmVydFgsIHRoaXMpLm1hcCh4LmludmVydCwgeCkpO1xuICB9LFxuICByZXNjYWxlWTogZnVuY3Rpb24oeSkge1xuICAgIHJldHVybiB5LmNvcHkoKS5kb21haW4oeS5yYW5nZSgpLm1hcCh0aGlzLmludmVydFksIHRoaXMpLm1hcCh5LmludmVydCwgeSkpO1xuICB9LFxuICB0b1N0cmluZzogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIFwidHJhbnNsYXRlKFwiICsgdGhpcy54ICsgXCIsXCIgKyB0aGlzLnkgKyBcIikgc2NhbGUoXCIgKyB0aGlzLmsgKyBcIilcIjtcbiAgfVxufTtcblxuZXhwb3J0IHZhciBpZGVudGl0eSA9IG5ldyBUcmFuc2Zvcm0oMSwgMCwgMCk7XG5cbnRyYW5zZm9ybS5wcm90b3R5cGUgPSBUcmFuc2Zvcm0ucHJvdG90eXBlO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB0cmFuc2Zvcm0obm9kZSkge1xuICB3aGlsZSAoIW5vZGUuX196b29tKSBpZiAoIShub2RlID0gbm9kZS5wYXJlbnROb2RlKSkgcmV0dXJuIGlkZW50aXR5O1xuICByZXR1cm4gbm9kZS5fX3pvb207XG59XG4iLCJleHBvcnQgY29uc3Qgc3ZnbnMgPSBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI7XG5cbmV4cG9ydCBjb25zdCBxdWVyeVNlbGVjdG9yID0gPFQgZXh0ZW5kcyBFbGVtZW50PihcbiAgc2VsZWN0b3I6IHN0cmluZyxcbiAgdHlwZT86IG5ldyAoKSA9PiBUXG4pOiBUID0+IHtcbiAgY29uc3QgZWx0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3Rvcik7XG4gIGlmIChlbHQgPT09IG51bGwpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBzZWxlY3RvciBcIiArIHNlbGVjdG9yKTtcbiAgfVxuICBpZiAodHlwZSAhPT0gdW5kZWZpbmVkICYmICEoZWx0IGluc3RhbmNlb2YgdHlwZSkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYFNlbGVjdG9yICR7c2VsZWN0b3J9IG5vdCBvZiB0eXBlICR7dHlwZX1gKTtcbiAgfVxuICByZXR1cm4gZWx0IGFzIFQ7XG59O1xuIiwiaW1wb3J0IHsgU1ZHVG9vbCB9IGZyb20gXCIuL1NWR1Rvb2xcIjtcbmltcG9ydCB7IGZpdHRzIH0gZnJvbSBcIi4vc3Zncy9maXR0c1wiO1xuaW1wb3J0IHsgcHVycG9zZSB9IGZyb20gXCIuL3N2Z3MvcHVycG9zZVwiO1xuaW1wb3J0IHsgaGljayB9IGZyb20gXCIuL3N2Z3MvaGlja1wiO1xuaW1wb3J0IHsgamFrb2IgfSBmcm9tIFwiLi9zdmdzL2pha29iXCI7XG5pbXBvcnQgeyBncmFkaWVudCB9IGZyb20gXCIuL3N2Z3MvZ3JhZGllbnRcIjtcbmltcG9ydCB7IGdlc3RhbHQgfSBmcm9tIFwiLi9zdmdzL2dlc3RhbHRcIjtcbmltcG9ydCB7IHByb3hpbWl0eSB9IGZyb20gXCIuL3N2Z3MvcHJveGltaXR5XCI7XG5pbXBvcnQgeyBzaW1pbGFyaXR5IH0gZnJvbSBcIi4vc3Zncy9zaW1pbGFyaXR5XCI7XG5cbmV4cG9ydCBjb25zdCBjb25maWc6IHsgW2tleTogc3RyaW5nXTogKCh0OiBTVkdUb29sKSA9PiB2b2lkKVtdIH0gPSB7XG4gIFwiMDItZml0dHNcIjogW2ZpdHRzXSxcbiAgXCIwMS1wdXJwb3NlXCI6IFtwdXJwb3NlXSxcbiAgXCIwMy1oaWNrXCI6IFtoaWNrXSxcbiAgXCIwNC1qYWtvYlwiOiBbamFrb2JdLFxuICBcIjA3LWdvYWwtZ3JhZGllbnRcIjogW2dyYWRpZW50XSxcbiAgXCIwOC1nZXN0YWx0XCI6IFtnZXN0YWx0XSxcbiAgXCIwOS1sYXctb2YtcHJveGltaXR5XCI6IFtwcm94aW1pdHldLFxuICBcIjEwLWxhdy1vZi1zaW1pbGFyaXR5XCI6IFtzaW1pbGFyaXR5XSxcbn07XG5cbmNvbnN0IHNldCA9IG5ldyBTZXQ8KHQ6IFNWR1Rvb2wpID0+IHZvaWQ+KCk7XG5mb3IgKGNvbnN0IHZhbHVlcyBvZiBPYmplY3QudmFsdWVzKGNvbmZpZykpIHtcbiAgZm9yIChjb25zdCB2YWx1ZSBvZiB2YWx1ZXMpIHtcbiAgICBzZXQuYWRkKHZhbHVlKTtcbiAgfVxufVxuZXhwb3J0IGNvbnN0IGFsbCA9IFsuLi5zZXRdO1xuIiwiaW1wb3J0IHsgcXVlcnlTZWxlY3RvciB9IGZyb20gXCIuLi9taXNjXCI7XG5pbXBvcnQgeyBTVkdUb29sIH0gZnJvbSBcIi4uL1NWR1Rvb2xcIjtcblxuZXhwb3J0IGNvbnN0IGZpdHRzID0gKHQ6IFNWR1Rvb2wpID0+IHtcbiAgY29uc3QgYmlnVGFyZ2V0MSA9IHF1ZXJ5U2VsZWN0b3IoXCJzdmcuZml0dHMgZy5iaWctdGFyZ2V0MVwiLCBTVkdHRWxlbWVudCk7XG4gIHQuY3JlYXRlQ2lyY2xlKGJpZ1RhcmdldDEsIDQwLCA1MCwgMzUpO1xuICB0LmNyZWF0ZUNpcmNsZShiaWdUYXJnZXQxLCA0MCwgNTAsIDI1KTtcbiAgdC5jcmVhdGVDaXJjbGUoYmlnVGFyZ2V0MSwgNDAsIDUwLCAxNSk7XG4gIHQuY3JlYXRlQ2lyY2xlKGJpZ1RhcmdldDEsIDQwLCA1MCwgNSk7XG4gIGNvbnN0IGJpZ1RhcmdldDIgPSBxdWVyeVNlbGVjdG9yKFwic3ZnLmZpdHRzIGcuYmlnLXRhcmdldDJcIiwgU1ZHR0VsZW1lbnQpO1xuICB0LmNyZWF0ZUNpcmNsZShiaWdUYXJnZXQyLCA0MCwgNTAsIDM1KTtcbiAgdC5jcmVhdGVDaXJjbGUoYmlnVGFyZ2V0MiwgNDAsIDUwLCAyNSk7XG4gIHQuY3JlYXRlQ2lyY2xlKGJpZ1RhcmdldDIsIDQwLCA1MCwgMTUpO1xuICB0LmNyZWF0ZUNpcmNsZShiaWdUYXJnZXQyLCA0MCwgNTAsIDUpO1xuICBjb25zdCBzbWFsbFRhcmdldCA9IHF1ZXJ5U2VsZWN0b3IoXCJzdmcuZml0dHMgZy5zbWFsbC10YXJnZXRcIiwgU1ZHR0VsZW1lbnQpO1xuICB0LmNyZWF0ZUNpcmNsZShzbWFsbFRhcmdldCwgNDAsIDUwLCA1KTtcbn07XG4iLCJpbXBvcnQgeyBxdWVyeVNlbGVjdG9yIH0gZnJvbSBcIi4uL21pc2NcIjtcbmltcG9ydCB7IFNWR1Rvb2wgfSBmcm9tIFwiLi4vU1ZHVG9vbFwiO1xuXG5leHBvcnQgY29uc3QgcHVycG9zZSA9ICh0OiBTVkdUb29sKSA9PiB7XG4gIGNvbnN0IGJpZ1RhcmdldDEgPSBxdWVyeVNlbGVjdG9yKFwic3ZnLnB1cnBvc2UgZy50YXJnZXRcIiwgU1ZHR0VsZW1lbnQpO1xuICB0LmNyZWF0ZUNpcmNsZShiaWdUYXJnZXQxLCAxNTAsIDUwLCA0MCk7XG4gIHQuY3JlYXRlQ2lyY2xlKGJpZ1RhcmdldDEsIDE1MCwgNTAsIDMwKTtcbiAgdC5jcmVhdGVDaXJjbGUoYmlnVGFyZ2V0MSwgMTUwLCA1MCwgMjApO1xuICB0LmNyZWF0ZUNpcmNsZShiaWdUYXJnZXQxLCAxNTAsIDUwLCAxMCk7XG4gIHQuY3JlYXRlQ2lyY2xlKGJpZ1RhcmdldDEsIDE1MCwgNTAsIDEpO1xufTtcbiIsImltcG9ydCB7IHF1ZXJ5U2VsZWN0b3IgfSBmcm9tIFwiLi4vbWlzY1wiO1xuaW1wb3J0IHsgU1ZHVG9vbCB9IGZyb20gXCIuLi9TVkdUb29sXCI7XG5cbmV4cG9ydCBjb25zdCBoaWNrID0gKHQ6IFNWR1Rvb2wpID0+IHtcbiAgY29uc3QgZzEgPSBxdWVyeVNlbGVjdG9yKFwic3ZnLmhpY2sgZy5jaG9pY2UtMDFcIiwgU1ZHR0VsZW1lbnQpO1xuICB0LmNyZWF0ZUZvcm0oXG4gICAgZzEsXG4gICAgXCJwb2x5Z29uXCIsXG4gICAgeyBwb2ludHM6IFwiMCwwIDAsMCAwLDAgMCwwXCIgfSxcbiAgICB7IHBvaW50czogXCIwLDAgMCw0MCA0MCw0MFwiIH0sXG4gICAge1xuICAgICAgZHVyYXRpb246IDMwMCxcbiAgICAgIGRlbGF5OiB0LmdldERlbGF5KCksXG4gICAgfVxuICApO1xuICBjb25zdCBnMiA9IHF1ZXJ5U2VsZWN0b3IoXCJzdmcuaGljayBnLmNob2ljZS0wMlwiLCBTVkdHRWxlbWVudCk7XG4gIHQuY3JlYXRlRm9ybShcbiAgICBnMixcbiAgICBcInBvbHlnb25cIixcbiAgICB7IHBvaW50czogXCIwLDAgMCwwIDAsMCAwLDBcIiB9LFxuICAgIHsgcG9pbnRzOiBcIjAsMCAwLDQwIDQwLDQwIDQwLDBcIiB9LFxuICAgIHtcbiAgICAgIGR1cmF0aW9uOiAzMDAsXG4gICAgICBkZWxheTogdC5nZXREZWxheSgpLFxuICAgIH1cbiAgKTtcbiAgY29uc3QgZzMgPSBxdWVyeVNlbGVjdG9yKFwic3ZnLmhpY2sgZy5jaG9pY2UtMDNcIiwgU1ZHR0VsZW1lbnQpO1xuICB0LmNyZWF0ZUZvcm0oXG4gICAgZzMsXG4gICAgXCJwb2x5Z29uXCIsXG4gICAgeyBwb2ludHM6IFwiMCwwIDAsMCAwLDAgMCwwXCIgfSxcbiAgICB7IHBvaW50czogXCIwLDQwIDQwLDQwIDQwLDBcIiB9LFxuICAgIHtcbiAgICAgIGR1cmF0aW9uOiAzMDAsXG4gICAgICBkZWxheTogdC5nZXREZWxheSgpLFxuICAgIH1cbiAgKTtcbiAgY29uc3QgZzQgPSBxdWVyeVNlbGVjdG9yKFwic3ZnLmhpY2sgZy5jaG9pY2UtMDRcIiwgU1ZHR0VsZW1lbnQpO1xuICB0LmNyZWF0ZUZvcm0oXG4gICAgZzQsXG4gICAgXCJwb2x5Z29uXCIsXG4gICAgeyBwb2ludHM6IFwiMCwwIDAsMCAwLDAgMCwwXCIgfSxcbiAgICB7IHBvaW50czogXCIwLDAgMjAsNDAgNDAsMFwiIH0sXG4gICAge1xuICAgICAgZHVyYXRpb246IDMwMCxcbiAgICAgIGRlbGF5OiB0LmdldERlbGF5KCksXG4gICAgfVxuICApO1xuICBjb25zdCBnNSA9IHF1ZXJ5U2VsZWN0b3IoXCJzdmcuaGljayBnLmNob2ljZS0wNVwiLCBTVkdHRWxlbWVudCk7XG4gIHQuY3JlYXRlRm9ybShcbiAgICBnNSxcbiAgICBcInBvbHlnb25cIixcbiAgICB7IHBvaW50czogXCIwLDAgMCwwIDAsMCAwLDBcIiB9LFxuICAgIHsgcG9pbnRzOiBcIjAsMCAwLDQwIDQwLDIwXCIgfSxcbiAgICB7XG4gICAgICBkdXJhdGlvbjogMzAwLFxuICAgICAgZGVsYXk6IHQuZ2V0RGVsYXkoKSxcbiAgICB9XG4gICk7XG4gIGNvbnN0IGc2ID0gcXVlcnlTZWxlY3RvcihcInN2Zy5oaWNrIGcuY2hvaWNlLTA2XCIsIFNWR0dFbGVtZW50KTtcbiAgdC5jcmVhdGVGb3JtKFxuICAgIGc2LFxuICAgIFwicG9seWdvblwiLFxuICAgIHsgcG9pbnRzOiBcIjAsMCAwLDAgMCwwIDAsMFwiIH0sXG4gICAgeyBwb2ludHM6IFwiMCw0MCA0MCw0MCAyMCwwXCIgfSxcbiAgICB7XG4gICAgICBkdXJhdGlvbjogMzAwLFxuICAgICAgZGVsYXk6IHQuZ2V0RGVsYXkoKSxcbiAgICB9XG4gICk7XG59O1xuIiwiaW1wb3J0IHsgcXVlcnlTZWxlY3RvciB9IGZyb20gXCIuLi9taXNjXCI7XG5pbXBvcnQgeyBTVkdUb29sIH0gZnJvbSBcIi4uL1NWR1Rvb2xcIjtcblxuZXhwb3J0IGNvbnN0IGpha29iID0gKHQ6IFNWR1Rvb2wpID0+IHtcbiAgY29uc3QgYXBwMSA9IHF1ZXJ5U2VsZWN0b3IoXCJzdmcuamFrb2IgZy5hcHAtMVwiLCBTVkdHRWxlbWVudCk7XG4gIHQuY3JlYXRlQ2lyY2xlKGFwcDEsIDQwLCA1MCwgMzUpO1xuICBjb25zdCBhcHAyID0gcXVlcnlTZWxlY3RvcihcInN2Zy5qYWtvYiBnLmFwcC0yXCIsIFNWR0dFbGVtZW50KTtcbiAgdC5jcmVhdGVDaXJjbGUoYXBwMiwgNDAsIDUwLCAzNSk7XG4gIGNvbnN0IHlvdXJBcHAgPSBxdWVyeVNlbGVjdG9yKFwic3ZnLmpha29iIGcueW91ci1hcHBcIiwgU1ZHR0VsZW1lbnQpO1xuICB0LmNyZWF0ZUNpcmNsZSh5b3VyQXBwLCA0MCwgNTAsIDM1KTtcbn07XG4iLCJpbXBvcnQgeyBxdWVyeVNlbGVjdG9yIH0gZnJvbSBcIi4uL21pc2NcIjtcbmltcG9ydCB7IFNWR1Rvb2wgfSBmcm9tIFwiLi4vU1ZHVG9vbFwiO1xuXG5leHBvcnQgY29uc3QgZ3JhZGllbnQgPSAodDogU1ZHVG9vbCkgPT4ge1xuICBjb25zdCBnID0gcXVlcnlTZWxlY3RvcihcInN2Zy5ncmFkaWVudCBnXCIsIFNWR0dFbGVtZW50KTtcbiAgdC5jcmVhdGVSZWN0KGcsIDUsIDMwLCA0MCwgNDAsIDEpO1xuICB0LmNyZWF0ZVJlY3QoZywgNTAsIDMwLCA0MCwgNDAsIDIpO1xuICB0LmNyZWF0ZVJlY3QoZywgOTUsIDMwLCA0MCwgNDAsIDMpO1xuICB0LmNyZWF0ZVJlY3QoZywgMTQwLCAzMCwgNDAsIDQwLCA0KTtcbiAgdC5jcmVhdGVSZWN0KGcsIDE4NSwgMzAsIDQwLCA0MCwgNSk7XG4gIHQuY3JlYXRlUmVjdChnLCAyMzAsIDMwLCA0MCwgNDAsIDYpO1xufTtcbiIsImltcG9ydCB7IHF1ZXJ5U2VsZWN0b3IgfSBmcm9tIFwiLi4vbWlzY1wiO1xuaW1wb3J0IHsgU1ZHVG9vbCB9IGZyb20gXCIuLi9TVkdUb29sXCI7XG5cbmV4cG9ydCBjb25zdCBnZXN0YWx0ID0gKHQ6IFNWR1Rvb2wpID0+IHtcbiAgY29uc3QgZyA9IHF1ZXJ5U2VsZWN0b3IoXCJzdmcuZ2VzdGFsdCBnXCIsIFNWR0dFbGVtZW50KTtcbiAgZm9yIChsZXQgeCA9IDA7IHggPCA1OyB4KyspIHtcbiAgICBmb3IgKGxldCB5ID0gMDsgeSA8IDQ7IHkrKykge1xuICAgICAgdC5jcmVhdGVDaXJjbGUoZywgeCAqIDIwICsgMTAwLCB5ICogMjAgKyAyMCwgNSwge1xuICAgICAgICBjbGFzczogXCJmdWxsXCIsXG4gICAgICAgIGRlbGF5OiAwLFxuICAgICAgICBkdXJhdGlvbjogMzAwLFxuICAgICAgfSk7XG4gICAgfVxuICB9XG59O1xuIiwiaW1wb3J0IHsgcXVlcnlTZWxlY3RvciB9IGZyb20gXCIuLi9taXNjXCI7XG5pbXBvcnQgeyBTVkdUb29sIH0gZnJvbSBcIi4uL1NWR1Rvb2xcIjtcblxuZXhwb3J0IGNvbnN0IHByb3hpbWl0eSA9ICh0OiBTVkdUb29sKSA9PiB7XG4gIGNvbnN0IGcgPSBxdWVyeVNlbGVjdG9yKFwic3ZnLnByb3hpbWl0eSBnXCIsIFNWR0dFbGVtZW50KTtcbiAgZm9yIChsZXQgeCA9IDA7IHggPCA1OyB4KyspIHtcbiAgICBmb3IgKGxldCB5ID0gMDsgeSA8IDQ7IHkrKykge1xuICAgICAgY29uc3Qgb2Zmc2V0ID0geCA+IDEgJiYgeSA8IDIgPyA4IDogMDtcbiAgICAgIHQuY3JlYXRlQ2lyY2xlKGcsIHggKiAyMCArIDEwMCArIG9mZnNldCwgeSAqIDIwICsgMjAgLSBvZmZzZXQsIDUsIHtcbiAgICAgICAgY2xhc3M6IFwiZnVsbFwiLFxuICAgICAgICBkZWxheTogMCxcbiAgICAgICAgZHVyYXRpb246IDMwMCxcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxufTtcbiIsImltcG9ydCB7IHF1ZXJ5U2VsZWN0b3IgfSBmcm9tIFwiLi4vbWlzY1wiO1xuaW1wb3J0IHsgU1ZHVG9vbCB9IGZyb20gXCIuLi9TVkdUb29sXCI7XG5cbmV4cG9ydCBjb25zdCBzaW1pbGFyaXR5ID0gKHQ6IFNWR1Rvb2wpID0+IHtcbiAgY29uc3QgZyA9IHF1ZXJ5U2VsZWN0b3IoXCJzdmcuc2ltaWxhcml0eSBnXCIsIFNWR0dFbGVtZW50KTtcbiAgZm9yIChsZXQgeCA9IDA7IHggPCA1OyB4KyspIHtcbiAgICBmb3IgKGxldCB5ID0gMDsgeSA8IDQ7IHkrKykge1xuICAgICAgY29uc3QgbXlDbGFzcyA9IHggPiAxICYmIHkgPCAyID8gXCJcIiA6IFwiZnVsbFwiO1xuICAgICAgdC5jcmVhdGVDaXJjbGUoZywgeCAqIDIwICsgMTAwLCB5ICogMjAgKyAyMCwgNSwge1xuICAgICAgICBjbGFzczogbXlDbGFzcyxcbiAgICAgICAgZGVsYXk6IDAsXG4gICAgICAgIGR1cmF0aW9uOiAzMDAsXG4gICAgICB9KTtcbiAgICB9XG4gIH1cbn07XG4iLCJpbXBvcnQgKiBhcyBkMyBmcm9tIFwiZDNcIjtcbmltcG9ydCB7IFRyYW5zaXRpb25PcHRpb25zIH0gZnJvbSBcIi4vaW50ZXJmYWNlcy9UcmFuc2l0aW9uT3B0aW9uc1wiO1xuaW1wb3J0IHsgY29uZmlnLCBhbGwgfSBmcm9tIFwiLi9zdmdDb25maWdcIjtcblxuZXhwb3J0IGNsYXNzIFNWR1Rvb2wge1xuICBkZWxheUNvdW50ZXIgPSAwO1xuICBkZWxheUluY3JlbWVudCA9IDEwMDtcbiAgdXNlVHJhbnNpdGlvbiA9IGZhbHNlO1xuXG4gIHN2Z05hbWU6IHN0cmluZyB8IHVuZGVmaW5lZCA9IHVuZGVmaW5lZDtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5pbml0U3ZnTmFtZSgpO1xuICB9XG5cbiAgaW5pdFN2Z05hbWUoKSB7XG4gICAgY29uc3QgcmVnZXggPSB3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUubWF0Y2goL14uKlxcL2NhcmRzXFwvKC4qKSguaHRtbCkkLyk7XG4gICAgY29uc29sZS5sb2coXCJyZWdleDogXCIsIHJlZ2V4KTtcbiAgICBpZiAocmVnZXggaW5zdGFuY2VvZiBBcnJheSAmJiByZWdleC5sZW5ndGggPiAyKSB7XG4gICAgICB0aGlzLnN2Z05hbWUgPSByZWdleFsxXTtcbiAgICAgIHRoaXMudXNlVHJhbnNpdGlvbiA9IHRydWU7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMudXNlVHJhbnNpdGlvbiA9IGZhbHNlO1xuICB9XG5cbiAgaW5pdFN2ZygpIHtcbiAgICBjb25zdCBsaXN0ID0gdGhpcy5zdmdOYW1lID8gY29uZmlnW3RoaXMuc3ZnTmFtZV0gOiBhbGw7XG4gICAgaWYgKGxpc3QgPT09IHVuZGVmaW5lZCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBmb3IgKGNvbnN0IGYgb2YgbGlzdCkge1xuICAgICAgZih0aGlzKTtcbiAgICB9XG4gIH1cblxuICBnZXREZWxheSgpIHtcbiAgICB0aGlzLmRlbGF5Q291bnRlciArPSB0aGlzLmRlbGF5SW5jcmVtZW50O1xuICAgIHJldHVybiB0aGlzLmRlbGF5Q291bnRlcjtcbiAgfVxuXG4gIGNyZWF0ZUNpcmNsZShcbiAgICBncm91cDogU1ZHR0VsZW1lbnQsXG4gICAgY3g6IG51bWJlcixcbiAgICBjeTogbnVtYmVyLFxuICAgIHI6IG51bWJlcixcbiAgICBvcHRpb25zPzogUGFydGlhbDxUcmFuc2l0aW9uT3B0aW9ucz5cbiAgKSB7XG4gICAgY29uc3Qgb3B0cyA9IHtcbiAgICAgIGR1cmF0aW9uOiAzMDAsXG4gICAgICBkZWxheTogdGhpcy5nZXREZWxheSgpLFxuICAgICAgLi4ub3B0aW9ucyxcbiAgICB9O1xuICAgIHJldHVybiB0aGlzLmNyZWF0ZUZvcm0oXG4gICAgICBncm91cCxcbiAgICAgIFwiY2lyY2xlXCIsXG4gICAgICB7XG4gICAgICAgIGN4LFxuICAgICAgICBjeSxcbiAgICAgICAgcjogMCxcbiAgICAgIH0sXG4gICAgICB7IHIgfSxcbiAgICAgIG9wdHNcbiAgICApO1xuICB9XG5cbiAgY3JlYXRlUG9seWdvbihncm91cDogU1ZHR0VsZW1lbnQsIHBvaW50czogc3RyaW5nKSB7XG4gICAgcmV0dXJuIHRoaXMuY3JlYXRlRm9ybShcbiAgICAgIGdyb3VwLFxuICAgICAgXCJwb2x5Z29uXCIsXG4gICAgICB7IHBvaW50czogXCJcIiB9LFxuICAgICAgeyBwb2ludHM6IHBvaW50cyB9LFxuICAgICAge1xuICAgICAgICBkdXJhdGlvbjogMzAwLFxuICAgICAgICBkZWxheTogdGhpcy5nZXREZWxheSgpLFxuICAgICAgfVxuICAgICk7XG4gIH1cblxuICBjcmVhdGVQb2x5bGluZShncm91cDogU1ZHR0VsZW1lbnQsIHBvaW50czogc3RyaW5nKSB7XG4gICAgcmV0dXJuIHRoaXMuY3JlYXRlRm9ybShcbiAgICAgIGdyb3VwLFxuICAgICAgXCJwb2x5bGluZVwiLFxuICAgICAgeyBwb2ludHM6IFwiXCIgfSxcbiAgICAgIHsgcG9pbnRzOiBwb2ludHMgfSxcbiAgICAgIHtcbiAgICAgICAgZHVyYXRpb246IDMwMCxcbiAgICAgICAgZGVsYXk6IHRoaXMuZ2V0RGVsYXkoKSxcbiAgICAgIH1cbiAgICApO1xuICB9XG5cbiAgY3JlYXRlUmVjdChcbiAgICBncm91cDogU1ZHR0VsZW1lbnQsXG4gICAgeDogbnVtYmVyLFxuICAgIHk6IG51bWJlcixcbiAgICB3aWR0aDogbnVtYmVyLFxuICAgIGhlaWdodDogbnVtYmVyLFxuICAgIGludGVuc2l0eSA9IDBcbiAgKSB7XG4gICAgcmV0dXJuIHRoaXMuY3JlYXRlRm9ybShcbiAgICAgIGdyb3VwLFxuICAgICAgXCJyZWN0XCIsXG4gICAgICB7IHgsIHksIHdpZHRoLCBoZWlnaHQ6IDAsIG9wYWNpdHk6IGludGVuc2l0eSAqICgxLjAgLyA2KSB9LFxuICAgICAgeyBoZWlnaHQ6IGhlaWdodCB9LFxuICAgICAge1xuICAgICAgICBkdXJhdGlvbjogMzAwLFxuICAgICAgICBkZWxheTogdGhpcy5nZXREZWxheSgpLFxuICAgICAgfVxuICAgICk7XG4gIH1cblxuICBjcmVhdGVGb3JtID0gPFQgZXh0ZW5kcyB7IFtrZXk6IHN0cmluZ106IG51bWJlciB8IHN0cmluZyB9PihcbiAgICBjb250YWluZXI6IFNWR0dFbGVtZW50LFxuICAgIGVsdE5hbWU6IHN0cmluZyxcbiAgICBpbml0aWFsQXR0cmlidXRlczogVCxcbiAgICBmaW5hbEF0dHJpYnV0ZXM6IFBhcnRpYWw8VD4sXG4gICAgb3B0aW9ucz86IFBhcnRpYWw8VHJhbnNpdGlvbk9wdGlvbnM+XG4gICkgPT4ge1xuICAgIGNvbnN0IG9wdHM6IFRyYW5zaXRpb25PcHRpb25zID0ge1xuICAgICAgZHVyYXRpb246IDIwMDAsXG4gICAgICBkZWxheTogMTAwMCxcbiAgICAgIGNsYXNzOiBcIlwiLFxuICAgICAgLi4ub3B0aW9ucyxcbiAgICB9O1xuICAgIGlmICghdGhpcy51c2VUcmFuc2l0aW9uKSB7XG4gICAgICBvcHRzLmRlbGF5ID0gMDtcbiAgICAgIG9wdHMuZHVyYXRpb24gPSAwO1xuICAgIH1cbiAgICBjb25zdCBlbHQgPSBkMy5zZWxlY3QoY29udGFpbmVyKS5hcHBlbmQoZWx0TmFtZSk7XG5cbiAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhpbml0aWFsQXR0cmlidXRlcykpIHtcbiAgICAgIGVsdC5hdHRyKGtleSwgdmFsdWUpO1xuICAgIH1cbiAgICBpZiAob3B0cy5jbGFzcykge1xuICAgICAgZWx0LmF0dHIoXCJjbGFzc1wiLCBvcHRzLmNsYXNzKTtcbiAgICB9XG5cbiAgICBjb25zdCB0ID0gZWx0XG4gICAgICAudHJhbnNpdGlvbigpXG4gICAgICAuZHVyYXRpb24ob3B0cy5kdXJhdGlvbilcbiAgICAgIC5kZWxheShvcHRzLmRlbGF5KVxuICAgICAgLmVhc2UoZDMuZWFzZUxpbmVhcik7XG5cbiAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhmaW5hbEF0dHJpYnV0ZXMpKSB7XG4gICAgICB0LmF0dHIoa2V5LCB2YWx1ZSk7XG4gICAgfVxuICB9O1xufVxuIiwiZXhwb3J0IGNvbnN0IGluaXRUaGVtZSA9ICgpID0+IHtcbiAgY29uc3QgaXNEYXJrID1cbiAgICB3aW5kb3cubWF0Y2hNZWRpYSAmJlxuICAgIHdpbmRvdy5tYXRjaE1lZGlhKFwiKHByZWZlcnMtY29sb3Itc2NoZW1lOiBkYXJrKVwiKS5tYXRjaGVzO1xuXG4gIGNvbnN0IGNsID0gZG9jdW1lbnQuYm9keS5jbGFzc0xpc3Q7XG4gIGlzRGFyayA/IGNsLmFkZChcImRhcmtcIikgOiBjbC5hZGQoXCJsaWdodFwiKTtcblxuICB3aW5kb3dcbiAgICAubWF0Y2hNZWRpYShcIihwcmVmZXJzLWNvbG9yLXNjaGVtZTogZGFyaylcIilcbiAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNoYW5nZVwiLCAoZSkgPT4ge1xuICAgICAgY29uc3QgY29sb3JTY2hlbWUgPSBlLm1hdGNoZXMgPyBcImRhcmtcIiA6IFwibGlnaHRcIjtcbiAgICAgIGNvbnNvbGUubG9nKFwiY29sb3JTY2hlbWU6IFwiLCBjb2xvclNjaGVtZSk7XG5cbiAgICAgIGNsLnJlbW92ZShcImRhcmtcIik7XG4gICAgICBjbC5yZW1vdmUoXCJsaWdodFwiKTtcbiAgICAgIGlmIChjb2xvclNjaGVtZSA9PT0gXCJkYXJrXCIpIHtcbiAgICAgICAgY2wuYWRkKFwiZGFya1wiKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNsLmFkZChcImxpZ2h0XCIpO1xuICAgICAgfVxuICAgIH0pO1xufTtcbiIsImltcG9ydCBcIi4vc2Nzcy9zdHlsZXMuc2Nzc1wiO1xuaW1wb3J0IHsgU1ZHVG9vbCB9IGZyb20gXCIuL1NWR1Rvb2xcIjtcblxuaW1wb3J0IHsgaW5pdFRoZW1lIH0gZnJvbSBcIi4vdGhlbWVcIjtcblxuaW5pdFRoZW1lKCk7XG5cbmNvbnN0IHN2Z1Rvb2wgPSBuZXcgU1ZHVG9vbCgpO1xuc3ZnVG9vbC5pbml0U3ZnKCk7XG4iXSwibmFtZXMiOlsibm9vcCIsImRpc3BhdGNoIiwiaSIsIm4iLCJfIiwidCIsIkRpc3BhdGNoIiwicGFyc2VUeXBlbmFtZXMiLCJ0eXBlbmFtZXMiLCJ0eXBlcyIsIm5hbWUiLCJ0eXBlbmFtZSIsImNhbGxiYWNrIiwiVCIsImdldCIsInNldCIsImNvcHkiLCJ0eXBlIiwidGhhdCIsImFyZ3MiLCJjIiwieGh0bWwiLCJuYW1lc3BhY2VzIiwibmFtZXNwYWNlIiwicHJlZml4IiwiY3JlYXRvckluaGVyaXQiLCJkb2N1bWVudCIsInVyaSIsImNyZWF0b3JGaXhlZCIsImZ1bGxuYW1lIiwiY3JlYXRvciIsIm5vbmUiLCJzZWxlY3RvciIsInNlbGVjdGlvbl9zZWxlY3QiLCJzZWxlY3QiLCJncm91cHMiLCJtIiwic3ViZ3JvdXBzIiwiaiIsImdyb3VwIiwic3ViZ3JvdXAiLCJub2RlIiwic3Vibm9kZSIsIlNlbGVjdGlvbiIsImFycmF5IiwieCIsImVtcHR5Iiwic2VsZWN0b3JBbGwiLCJhcnJheUFsbCIsInNlbGVjdGlvbl9zZWxlY3RBbGwiLCJwYXJlbnRzIiwibWF0Y2hlciIsImNoaWxkTWF0Y2hlciIsImZpbmQiLCJjaGlsZEZpbmQiLCJtYXRjaCIsImNoaWxkRmlyc3QiLCJzZWxlY3Rpb25fc2VsZWN0Q2hpbGQiLCJmaWx0ZXIiLCJjaGlsZHJlbiIsImNoaWxkcmVuRmlsdGVyIiwic2VsZWN0aW9uX3NlbGVjdENoaWxkcmVuIiwic2VsZWN0aW9uX2ZpbHRlciIsInNwYXJzZSIsInVwZGF0ZSIsInNlbGVjdGlvbl9lbnRlciIsIkVudGVyTm9kZSIsInBhcmVudCIsImRhdHVtIiwiY2hpbGQiLCJuZXh0IiwiY29uc3RhbnQkMSIsImJpbmRJbmRleCIsImVudGVyIiwiZXhpdCIsImRhdGEiLCJncm91cExlbmd0aCIsImRhdGFMZW5ndGgiLCJiaW5kS2V5Iiwia2V5Iiwibm9kZUJ5S2V5VmFsdWUiLCJrZXlWYWx1ZXMiLCJrZXlWYWx1ZSIsInNlbGVjdGlvbl9kYXRhIiwidmFsdWUiLCJiaW5kIiwiY29uc3RhbnQiLCJhcnJheWxpa2UiLCJlbnRlckdyb3VwIiwidXBkYXRlR3JvdXAiLCJleGl0R3JvdXAiLCJpMCIsImkxIiwicHJldmlvdXMiLCJzZWxlY3Rpb25fZXhpdCIsInNlbGVjdGlvbl9qb2luIiwib25lbnRlciIsIm9udXBkYXRlIiwib25leGl0Iiwic2VsZWN0aW9uX21lcmdlIiwiY29udGV4dCIsInNlbGVjdGlvbiIsImdyb3VwczAiLCJncm91cHMxIiwibTAiLCJtMSIsIm1lcmdlcyIsImdyb3VwMCIsImdyb3VwMSIsIm1lcmdlIiwic2VsZWN0aW9uX29yZGVyIiwic2VsZWN0aW9uX3NvcnQiLCJjb21wYXJlIiwiYXNjZW5kaW5nIiwiY29tcGFyZU5vZGUiLCJhIiwiYiIsInNvcnRncm91cHMiLCJzb3J0Z3JvdXAiLCJzZWxlY3Rpb25fY2FsbCIsInNlbGVjdGlvbl9ub2RlcyIsInNlbGVjdGlvbl9ub2RlIiwic2VsZWN0aW9uX3NpemUiLCJzaXplIiwic2VsZWN0aW9uX2VtcHR5Iiwic2VsZWN0aW9uX2VhY2giLCJhdHRyUmVtb3ZlIiwiYXR0clJlbW92ZU5TIiwiYXR0ckNvbnN0YW50IiwiYXR0ckNvbnN0YW50TlMiLCJhdHRyRnVuY3Rpb24iLCJ2IiwiYXR0ckZ1bmN0aW9uTlMiLCJzZWxlY3Rpb25fYXR0ciIsImRlZmF1bHRWaWV3Iiwic3R5bGVSZW1vdmUiLCJzdHlsZUNvbnN0YW50IiwicHJpb3JpdHkiLCJzdHlsZUZ1bmN0aW9uIiwic2VsZWN0aW9uX3N0eWxlIiwic3R5bGVWYWx1ZSIsInByb3BlcnR5UmVtb3ZlIiwicHJvcGVydHlDb25zdGFudCIsInByb3BlcnR5RnVuY3Rpb24iLCJzZWxlY3Rpb25fcHJvcGVydHkiLCJjbGFzc0FycmF5Iiwic3RyaW5nIiwiY2xhc3NMaXN0IiwiQ2xhc3NMaXN0IiwiY2xhc3NlZEFkZCIsIm5hbWVzIiwibGlzdCIsImNsYXNzZWRSZW1vdmUiLCJjbGFzc2VkVHJ1ZSIsImNsYXNzZWRGYWxzZSIsImNsYXNzZWRGdW5jdGlvbiIsInNlbGVjdGlvbl9jbGFzc2VkIiwidGV4dFJlbW92ZSIsInRleHRDb25zdGFudCIsInRleHRGdW5jdGlvbiIsInNlbGVjdGlvbl90ZXh0IiwiaHRtbFJlbW92ZSIsImh0bWxDb25zdGFudCIsImh0bWxGdW5jdGlvbiIsInNlbGVjdGlvbl9odG1sIiwicmFpc2UiLCJzZWxlY3Rpb25fcmFpc2UiLCJsb3dlciIsInNlbGVjdGlvbl9sb3dlciIsInNlbGVjdGlvbl9hcHBlbmQiLCJjcmVhdGUiLCJjb25zdGFudE51bGwiLCJzZWxlY3Rpb25faW5zZXJ0IiwiYmVmb3JlIiwicmVtb3ZlIiwic2VsZWN0aW9uX3JlbW92ZSIsInNlbGVjdGlvbl9jbG9uZVNoYWxsb3ciLCJjbG9uZSIsInNlbGVjdGlvbl9jbG9uZURlZXAiLCJzZWxlY3Rpb25fY2xvbmUiLCJkZWVwIiwic2VsZWN0aW9uX2RhdHVtIiwiY29udGV4dExpc3RlbmVyIiwibGlzdGVuZXIiLCJldmVudCIsIm9uUmVtb3ZlIiwib24iLCJvbkFkZCIsIm9wdGlvbnMiLCJvIiwic2VsZWN0aW9uX29uIiwiZGlzcGF0Y2hFdmVudCIsInBhcmFtcyIsIndpbmRvdyIsImRpc3BhdGNoQ29uc3RhbnQiLCJkaXNwYXRjaEZ1bmN0aW9uIiwic2VsZWN0aW9uX2Rpc3BhdGNoIiwic2VsZWN0aW9uX2l0ZXJhdG9yIiwicm9vdCIsInNlbGVjdGlvbl9zZWxlY3Rpb24iLCJkZWZpbmUiLCJjb25zdHJ1Y3RvciIsImZhY3RvcnkiLCJwcm90b3R5cGUiLCJleHRlbmQiLCJkZWZpbml0aW9uIiwiQ29sb3IiLCJkYXJrZXIiLCJicmlnaHRlciIsInJlSSIsInJlTiIsInJlUCIsInJlSGV4IiwicmVSZ2JJbnRlZ2VyIiwicmVSZ2JQZXJjZW50IiwicmVSZ2JhSW50ZWdlciIsInJlUmdiYVBlcmNlbnQiLCJyZUhzbFBlcmNlbnQiLCJyZUhzbGFQZXJjZW50IiwibmFtZWQiLCJjb2xvciIsImNoYW5uZWxzIiwiY29sb3JfZm9ybWF0SGV4IiwiY29sb3JfZm9ybWF0SGV4OCIsImNvbG9yX2Zvcm1hdEhzbCIsImNvbG9yX2Zvcm1hdFJnYiIsImhzbENvbnZlcnQiLCJmb3JtYXQiLCJsIiwicmdibiIsIlJnYiIsInJnYmEiLCJoc2xhIiwiciIsImciLCJyZ2JDb252ZXJ0IiwicmdiIiwib3BhY2l0eSIsImsiLCJjbGFtcGkiLCJjbGFtcGEiLCJyZ2JfZm9ybWF0SGV4IiwicmdiX2Zvcm1hdEhleDgiLCJyZ2JfZm9ybWF0UmdiIiwiaGV4IiwiaCIsInMiLCJIc2wiLCJtaW4iLCJtYXgiLCJoc2wiLCJtMiIsImhzbDJyZ2IiLCJjbGFtcGgiLCJjbGFtcHQiLCJsaW5lYXIiLCJkIiwiZXhwb25lbnRpYWwiLCJ5IiwiZ2FtbWEiLCJub2dhbW1hIiwiaW50ZXJwb2xhdGVSZ2IiLCJyZ2JHYW1tYSIsInN0YXJ0IiwiZW5kIiwiY29sb3JSZ2IiLCJpbnRlcnBvbGF0ZU51bWJlciIsInJlQSIsInJlQiIsInplcm8iLCJvbmUiLCJpbnRlcnBvbGF0ZVN0cmluZyIsImJpIiwiYW0iLCJibSIsImJzIiwicSIsIm51bWJlciIsImRlZ3JlZXMiLCJpZGVudGl0eSIsImRlY29tcG9zZSIsImUiLCJmIiwic2NhbGVYIiwic2NhbGVZIiwic2tld1giLCJzdmdOb2RlIiwicGFyc2VDc3MiLCJwYXJzZVN2ZyIsImludGVycG9sYXRlVHJhbnNmb3JtIiwicGFyc2UiLCJweENvbW1hIiwicHhQYXJlbiIsImRlZ1BhcmVuIiwicG9wIiwidHJhbnNsYXRlIiwieGEiLCJ5YSIsInhiIiwieWIiLCJyb3RhdGUiLCJzY2FsZSIsImludGVycG9sYXRlVHJhbnNmb3JtQ3NzIiwiaW50ZXJwb2xhdGVUcmFuc2Zvcm1TdmciLCJmcmFtZSIsInRpbWVvdXQiLCJpbnRlcnZhbCIsInBva2VEZWxheSIsInRhc2tIZWFkIiwidGFza1RhaWwiLCJjbG9ja0xhc3QiLCJjbG9ja05vdyIsImNsb2NrU2tldyIsImNsb2NrIiwic2V0RnJhbWUiLCJub3ciLCJjbGVhck5vdyIsIlRpbWVyIiwidGltZXIiLCJkZWxheSIsInRpbWUiLCJzbGVlcCIsInRpbWVyRmx1c2giLCJ3YWtlIiwibmFwIiwicG9rZSIsInQwIiwidDEiLCJ0MiIsImVsYXBzZWQiLCJlbXB0eU9uIiwiZW1wdHlUd2VlbiIsIkNSRUFURUQiLCJTQ0hFRFVMRUQiLCJTVEFSVElORyIsIlNUQVJURUQiLCJSVU5OSU5HIiwiRU5ESU5HIiwiRU5ERUQiLCJzY2hlZHVsZSIsImlkIiwiaW5kZXgiLCJ0aW1pbmciLCJzY2hlZHVsZXMiLCJpbml0Iiwic2VsZiIsInR3ZWVuIiwic3RvcCIsInRpY2siLCJpbnRlcnJ1cHQiLCJhY3RpdmUiLCJzZWxlY3Rpb25faW50ZXJydXB0IiwidHdlZW5SZW1vdmUiLCJ0d2VlbjAiLCJ0d2VlbjEiLCJ0d2VlbkZ1bmN0aW9uIiwidHJhbnNpdGlvbl90d2VlbiIsInR3ZWVuVmFsdWUiLCJ0cmFuc2l0aW9uIiwiaW50ZXJwb2xhdGUiLCJ2YWx1ZTEiLCJzdHJpbmcwMCIsInN0cmluZzEiLCJpbnRlcnBvbGF0ZTAiLCJzdHJpbmcwIiwic3RyaW5nMTAiLCJ0cmFuc2l0aW9uX2F0dHIiLCJhdHRySW50ZXJwb2xhdGUiLCJhdHRySW50ZXJwb2xhdGVOUyIsImF0dHJUd2Vlbk5TIiwiYXR0clR3ZWVuIiwidHJhbnNpdGlvbl9hdHRyVHdlZW4iLCJkZWxheUZ1bmN0aW9uIiwiZGVsYXlDb25zdGFudCIsInRyYW5zaXRpb25fZGVsYXkiLCJkdXJhdGlvbkZ1bmN0aW9uIiwiZHVyYXRpb25Db25zdGFudCIsInRyYW5zaXRpb25fZHVyYXRpb24iLCJlYXNlQ29uc3RhbnQiLCJ0cmFuc2l0aW9uX2Vhc2UiLCJlYXNlVmFyeWluZyIsInRyYW5zaXRpb25fZWFzZVZhcnlpbmciLCJ0cmFuc2l0aW9uX2ZpbHRlciIsIlRyYW5zaXRpb24iLCJ0cmFuc2l0aW9uX21lcmdlIiwib25GdW5jdGlvbiIsIm9uMCIsIm9uMSIsInNpdCIsInRyYW5zaXRpb25fb24iLCJyZW1vdmVGdW5jdGlvbiIsInRyYW5zaXRpb25fcmVtb3ZlIiwidHJhbnNpdGlvbl9zZWxlY3QiLCJ0cmFuc2l0aW9uX3NlbGVjdEFsbCIsImluaGVyaXQiLCJ0cmFuc2l0aW9uX3NlbGVjdGlvbiIsInN0eWxlTnVsbCIsInN0eWxlIiwic3R5bGVNYXliZVJlbW92ZSIsImxpc3RlbmVyMCIsInRyYW5zaXRpb25fc3R5bGUiLCJzdHlsZUludGVycG9sYXRlIiwic3R5bGVUd2VlbiIsInRyYW5zaXRpb25fc3R5bGVUd2VlbiIsInRyYW5zaXRpb25fdGV4dCIsInRleHRJbnRlcnBvbGF0ZSIsInRleHRUd2VlbiIsInRyYW5zaXRpb25fdGV4dFR3ZWVuIiwidHJhbnNpdGlvbl90cmFuc2l0aW9uIiwiaWQwIiwiaWQxIiwibmV3SWQiLCJ0cmFuc2l0aW9uX2VuZCIsInJlc29sdmUiLCJyZWplY3QiLCJjYW5jZWwiLCJzZWxlY3Rpb25fcHJvdG90eXBlIiwiY3ViaWNJbk91dCIsImRlZmF1bHRUaW1pbmciLCJlYXNlQ3ViaWNJbk91dCIsInNlbGVjdGlvbl90cmFuc2l0aW9uIiwiVHJhbnNmb3JtIiwicG9pbnQiLCJsb2NhdGlvbiIsInF1ZXJ5U2VsZWN0b3IiLCJlbHQiLCJjb25maWciLCJiaWdUYXJnZXQxIiwiYmlnVGFyZ2V0MiIsInNtYWxsVGFyZ2V0IiwiZzEiLCJnMiIsImczIiwiZzQiLCJnNSIsImc2IiwiYXBwMSIsImFwcDIiLCJ5b3VyQXBwIiwib2Zmc2V0IiwibXlDbGFzcyIsInZhbHVlcyIsImFsbCIsIlNWR1Rvb2wiLCJfX3B1YmxpY0ZpZWxkIiwiY29udGFpbmVyIiwiZWx0TmFtZSIsImluaXRpYWxBdHRyaWJ1dGVzIiwiZmluYWxBdHRyaWJ1dGVzIiwib3B0cyIsImQzLnNlbGVjdCIsImQzLmVhc2VMaW5lYXIiLCJyZWdleCIsImN4IiwiY3kiLCJwb2ludHMiLCJ3aWR0aCIsImhlaWdodCIsImludGVuc2l0eSIsImlzRGFyayIsImNsIiwiY29sb3JTY2hlbWUiXSwibWFwcGluZ3MiOiJrUkFBQSxJQUFJQSxFQUFPLENBQUMsTUFBTyxJQUFNLENBQUEsQ0FBRSxFQUUzQixTQUFTQyxHQUFXLENBQ2xCLFFBQVNDLEVBQUksRUFBR0MsRUFBSSxVQUFVLE9BQVFDLEVBQUksQ0FBQSxFQUFJQyxFQUFHSCxFQUFJQyxFQUFHLEVBQUVELEVBQUcsQ0FDM0QsR0FBSSxFQUFFRyxFQUFJLFVBQVVILENBQUMsRUFBSSxLQUFRRyxLQUFLRCxHQUFNLFFBQVEsS0FBS0MsQ0FBQyxFQUFHLE1BQU0sSUFBSSxNQUFNLGlCQUFtQkEsQ0FBQyxFQUNqR0QsRUFBRUMsQ0FBQyxFQUFJLEVBQ1IsQ0FDRCxPQUFPLElBQUlDLEVBQVNGLENBQUMsQ0FDdkIsQ0FFQSxTQUFTRSxFQUFTRixFQUFHLENBQ25CLEtBQUssRUFBSUEsQ0FDWCxDQUVBLFNBQVNHLEdBQWVDLEVBQVdDLEVBQU8sQ0FDeEMsT0FBT0QsRUFBVSxPQUFPLE1BQU0sT0FBTyxFQUFFLElBQUksU0FBU0gsRUFBRyxD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
