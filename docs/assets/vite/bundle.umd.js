(function(N){typeof define=="function"&&define.amd?define(N):N()})(function(){"use strict";var qi=Object.defineProperty;var Hi=(N,k,A)=>k in N?qi(N,k,{enumerable:!0,configurable:!0,writable:!0,value:A}):N[k]=A;var D=(N,k,A)=>(Hi(N,typeof k!="symbol"?k+"":k,A),A);const N="";var k={value:()=>{}};function A(){for(var t=0,e=arguments.length,n={},r;t<e;++t){if(!(r=arguments[t]+"")||r in n||/[\s.]/.test(r))throw new Error("illegal type: "+r);n[r]=[]}return new K(n)}function K(t){this._=t}function ye(t,e){return t.trim().split(/^|\s+/).map(function(n){var r="",i=n.indexOf(".");if(i>=0&&(r=n.slice(i+1),n=n.slice(0,i)),n&&!e.hasOwnProperty(n))throw new Error("unknown type: "+n);return{type:n,name:r}})}K.prototype=A.prototype={constructor:K,on:function(t,e){var n=this._,r=ye(t+"",n),i,o=-1,s=r.length;if(arguments.length<2){for(;++o<s;)if((i=(t=r[o]).type)&&(i=_e(n[i],t.name)))return i;return}if(e!=null&&typeof e!="function")throw new Error("invalid callback: "+e);for(;++o<s;)if(i=(t=r[o]).type)n[i]=St(n[i],t.name,e);else if(e==null)for(i in n)n[i]=St(n[i],t.name,null);return this},copy:function(){var t={},e=this._;for(var n in e)t[n]=e[n].slice();return new K(t)},call:function(t,e){if((i=arguments.length-2)>0)for(var n=new Array(i),r=0,i,o;r<i;++r)n[r]=arguments[r+2];if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(o=this._[t],r=0,i=o.length;r<i;++r)o[r].value.apply(e,n)},apply:function(t,e,n){if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(var r=this._[t],i=0,o=r.length;i<o;++i)r[i].value.apply(e,n)}};function _e(t,e){for(var n=0,r=t.length,i;n<r;++n)if((i=t[n]).name===e)return i.value}function St(t,e,n){for(var r=0,i=t.length;r<i;++r)if(t[r].name===e){t[r]=k,t=t.slice(0,r).concat(t.slice(r+1));break}return n!=null&&t.push({name:e,value:n}),t}var ut="http://www.w3.org/1999/xhtml";const Et={svg:"http://www.w3.org/2000/svg",xhtml:ut,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};function W(t){var e=t+="",n=e.indexOf(":");return n>=0&&(e=t.slice(0,n))!=="xmlns"&&(t=t.slice(n+1)),Et.hasOwnProperty(e)?{space:Et[e],local:t}:t}function me(t){return function(){var e=this.ownerDocument,n=this.namespaceURI;return n===ut&&e.documentElement.namespaceURI===ut?e.createElement(t):e.createElementNS(n,t)}}function ve(t){return function(){return this.ownerDocument.createElementNS(t.space,t.local)}}function At(t){var e=W(t);return(e.local?ve:me)(e)}function we(){}function ft(t){return t==null?we:function(){return this.querySelector(t)}}function xe(t){typeof t!="function"&&(t=ft(t));for(var e=this._groups,n=e.length,r=new Array(n),i=0;i<n;++i)for(var o=e[i],s=o.length,a=r[i]=new Array(s),c,l,u=0;u<s;++u)(c=o[u])&&(l=t.call(c,c.__data__,u,o))&&("__data__"in c&&(l.__data__=c.__data__),a[u]=l);return new m(r,this._parents)}function be(t){return t==null?[]:Array.isArray(t)?t:Array.from(t)}function Ne(){return[]}function Ct(t){return t==null?Ne:function(){return this.querySelectorAll(t)}}function ke(t){return function(){return be(t.apply(this,arguments))}}function Se(t){typeof t=="function"?t=ke(t):t=Ct(t);for(var e=this._groups,n=e.length,r=[],i=[],o=0;o<n;++o)for(var s=e[o],a=s.length,c,l=0;l<a;++l)(c=s[l])&&(r.push(t.call(c,c.__data__,l,s)),i.push(c));return new m(r,i)}function $t(t){return function(){return this.matches(t)}}function Rt(t){return function(e){return e.matches(t)}}var Ee=Array.prototype.find;function Ae(t){return function(){return Ee.call(this.children,t)}}function Ce(){return this.firstElementChild}function $e(t){return this.select(t==null?Ce:Ae(typeof t=="function"?t:Rt(t)))}var Re=Array.prototype.filter;function Te(){return Array.from(this.children)}function Ge(t){return function(){return Re.call(this.children,t)}}function Me(t){return this.selectAll(t==null?Te:Ge(typeof t=="function"?t:Rt(t)))}function Fe(t){typeof t!="function"&&(t=$t(t));for(var e=this._groups,n=e.length,r=new Array(n),i=0;i<n;++i)for(var o=e[i],s=o.length,a=r[i]=[],c,l=0;l<s;++l)(c=o[l])&&t.call(c,c.__data__,l,o)&&a.push(c);return new m(r,this._parents)}function Tt(t){return new Array(t.length)}function Ve(){return new m(this._enter||this._groups.map(Tt),this._parents)}function J(t,e){this.ownerDocument=t.ownerDocument,this.namespaceURI=t.namespaceURI,this._next=null,this._parent=t,this.__data__=e}J.prototype={constructor:J,appendChild:function(t){return this._parent.insertBefore(t,this._next)},insertBefore:function(t,e){return this._parent.insertBefore(t,e)},querySelector:function(t){return this._parent.querySelector(t)},querySelectorAll:function(t){return this._parent.querySelectorAll(t)}};function De(t){return function(){return t}}function Ie(t,e,n,r,i,o){for(var s=0,a,c=e.length,l=o.length;s<l;++s)(a=e[s])?(a.__data__=o[s],r[s]=a):n[s]=new J(t,o[s]);for(;s<c;++s)(a=e[s])&&(i[s]=a)}function qe(t,e,n,r,i,o,s){var a,c,l=new Map,u=e.length,f=o.length,h=new Array(u),d;for(a=0;a<u;++a)(c=e[a])&&(h[a]=d=s.call(c,c.__data__,a,e)+"",l.has(d)?i[a]=c:l.set(d,c));for(a=0;a<f;++a)d=s.call(t,o[a],a,o)+"",(c=l.get(d))?(r[a]=c,c.__data__=o[a],l.delete(d)):n[a]=new J(t,o[a]);for(a=0;a<u;++a)(c=e[a])&&l.get(h[a])===c&&(i[a]=c)}function He(t){return t.__data__}function Pe(t,e){if(!arguments.length)return Array.from(this,He);var n=e?qe:Ie,r=this._parents,i=this._groups;typeof t!="function"&&(t=De(t));for(var o=i.length,s=new Array(o),a=new Array(o),c=new Array(o),l=0;l<o;++l){var u=r[l],f=i[l],h=f.length,d=Xe(t.call(u,u&&u.__data__,l,r)),g=d.length,y=a[l]=new Array(g),G=s[l]=new Array(g),Ii=c[l]=new Array(h);n(u,f,y,G,Ii,d,e);for(var U=0,lt=0,pe,ge;U<g;++U)if(pe=y[U]){for(U>=lt&&(lt=U+1);!(ge=G[lt])&&++lt<g;);pe._next=ge||null}}return s=new m(s,r),s._enter=a,s._exit=c,s}function Xe(t){return typeof t=="object"&&"length"in t?t:Array.from(t)}function Oe(){return new m(this._exit||this._groups.map(Tt),this._parents)}function Le(t,e,n){var r=this.enter(),i=this,o=this.exit();return typeof t=="function"?(r=t(r),r&&(r=r.selection())):r=r.append(t+""),e!=null&&(i=e(i),i&&(i=i.selection())),n==null?o.remove():n(o),r&&i?r.merge(i).order():i}function Ye(t){for(var e=t.selection?t.selection():t,n=this._groups,r=e._groups,i=n.length,o=r.length,s=Math.min(i,o),a=new Array(i),c=0;c<s;++c)for(var l=n[c],u=r[c],f=l.length,h=a[c]=new Array(f),d,g=0;g<f;++g)(d=l[g]||u[g])&&(h[g]=d);for(;c<i;++c)a[c]=n[c];return new m(a,this._parents)}function Be(){for(var t=this._groups,e=-1,n=t.length;++e<n;)for(var r=t[e],i=r.length-1,o=r[i],s;--i>=0;)(s=r[i])&&(o&&s.compareDocumentPosition(o)^4&&o.parentNode.insertBefore(s,o),o=s);return this}function ze(t){t||(t=Ue);function e(f,h){return f&&h?t(f.__data__,h.__data__):!f-!h}for(var n=this._groups,r=n.length,i=new Array(r),o=0;o<r;++o){for(var s=n[o],a=s.length,c=i[o]=new Array(a),l,u=0;u<a;++u)(l=s[u])&&(c[u]=l);c.sort(e)}return new m(i,this._parents).order()}function Ue(t,e){return t<e?-1:t>e?1:t>=e?0:NaN}function Ke(){var t=arguments[0];return arguments[0]=this,t.apply(null,arguments),this}function We(){return Array.from(this)}function Je(){for(var t=this._groups,e=0,n=t.length;e<n;++e)for(var r=t[e],i=0,o=r.length;i<o;++i){var s=r[i];if(s)return s}return null}function Qe(){let t=0;for(const e of this)++t;return t}function Ze(){return!this.node()}function je(t){for(var e=this._groups,n=0,r=e.length;n<r;++n)for(var i=e[n],o=0,s=i.length,a;o<s;++o)(a=i[o])&&t.call(a,a.__data__,o,i);return this}function tn(t){return function(){this.removeAttribute(t)}}function en(t){return function(){this.removeAttributeNS(t.space,t.local)}}function nn(t,e){return function(){this.setAttribute(t,e)}}function rn(t,e){return function(){this.setAttributeNS(t.space,t.local,e)}}function on(t,e){return function(){var n=e.apply(this,arguments);n==null?this.removeAttribute(t):this.setAttribute(t,n)}}function sn(t,e){return function(){var n=e.apply(this,arguments);n==null?this.removeAttributeNS(t.space,t.local):this.setAttributeNS(t.space,t.local,n)}}function an(t,e){var n=W(t);if(arguments.length<2){var r=this.node();return n.local?r.getAttributeNS(n.space,n.local):r.getAttribute(n)}return this.each((e==null?n.local?en:tn:typeof e=="function"?n.local?sn:on:n.local?rn:nn)(n,e))}function Gt(t){return t.ownerDocument&&t.ownerDocument.defaultView||t.document&&t||t.defaultView}function cn(t){return function(){this.style.removeProperty(t)}}function ln(t,e,n){return function(){this.style.setProperty(t,e,n)}}function un(t,e,n){return function(){var r=e.apply(this,arguments);r==null?this.style.removeProperty(t):this.style.setProperty(t,r,n)}}function fn(t,e,n){return arguments.length>1?this.each((e==null?cn:typeof e=="function"?un:ln)(t,e,n??"")):M(this.node(),t)}function M(t,e){return t.style.getPropertyValue(e)||Gt(t).getComputedStyle(t,null).getPropertyValue(e)}function hn(t){return function(){delete this[t]}}function dn(t,e){return function(){this[t]=e}}function pn(t,e){return function(){var n=e.apply(this,arguments);n==null?delete this[t]:this[t]=n}}function gn(t,e){return arguments.length>1?this.each((e==null?hn:typeof e=="function"?pn:dn)(t,e)):this.node()[t]}function Mt(t){return t.trim().split(/^|\s+/)}function ht(t){return t.classList||new Ft(t)}function Ft(t){this._node=t,this._names=Mt(t.getAttribute("class")||"")}Ft.prototype={add:function(t){var e=this._names.indexOf(t);e<0&&(this._names.push(t),this._node.setAttribute("class",this._names.join(" ")))},remove:function(t){var e=this._names.indexOf(t);e>=0&&(this._names.splice(e,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(t){return this._names.indexOf(t)>=0}};function Vt(t,e){for(var n=ht(t),r=-1,i=e.length;++r<i;)n.add(e[r])}function Dt(t,e){for(var n=ht(t),r=-1,i=e.length;++r<i;)n.remove(e[r])}function yn(t){return function(){Vt(this,t)}}function _n(t){return function(){Dt(this,t)}}function mn(t,e){return function(){(e.apply(this,arguments)?Vt:Dt)(this,t)}}function vn(t,e){var n=Mt(t+"");if(arguments.length<2){for(var r=ht(this.node()),i=-1,o=n.length;++i<o;)if(!r.contains(n[i]))return!1;return!0}return this.each((typeof e=="function"?mn:e?yn:_n)(n,e))}function wn(){this.textContent=""}function xn(t){return function(){this.textContent=t}}function bn(t){return function(){var e=t.apply(this,arguments);this.textContent=e??""}}function Nn(t){return arguments.length?this.each(t==null?wn:(typeof t=="function"?bn:xn)(t)):this.node().textContent}function kn(){this.innerHTML=""}function Sn(t){return function(){this.innerHTML=t}}function En(t){return function(){var e=t.apply(this,arguments);this.innerHTML=e??""}}function An(t){return arguments.length?this.each(t==null?kn:(typeof t=="function"?En:Sn)(t)):this.node().innerHTML}function Cn(){this.nextSibling&&this.parentNode.appendChild(this)}function $n(){return this.each(Cn)}function Rn(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function Tn(){return this.each(Rn)}function Gn(t){var e=typeof t=="function"?t:At(t);return this.select(function(){return this.appendChild(e.apply(this,arguments))})}function Mn(){return null}function Fn(t,e){var n=typeof t=="function"?t:At(t),r=e==null?Mn:typeof e=="function"?e:ft(e);return this.select(function(){return this.insertBefore(n.apply(this,arguments),r.apply(this,arguments)||null)})}function Vn(){var t=this.parentNode;t&&t.removeChild(this)}function Dn(){return this.each(Vn)}function In(){var t=this.cloneNode(!1),e=this.parentNode;return e?e.insertBefore(t,this.nextSibling):t}function qn(){var t=this.cloneNode(!0),e=this.parentNode;return e?e.insertBefore(t,this.nextSibling):t}function Hn(t){return this.select(t?qn:In)}function Pn(t){return arguments.length?this.property("__data__",t):this.node().__data__}function Xn(t){return function(e){t.call(this,e,this.__data__)}}function On(t){return t.trim().split(/^|\s+/).map(function(e){var n="",r=e.indexOf(".");return r>=0&&(n=e.slice(r+1),e=e.slice(0,r)),{type:e,name:n}})}function Ln(t){return function(){var e=this.__on;if(e){for(var n=0,r=-1,i=e.length,o;n<i;++n)o=e[n],(!t.type||o.type===t.type)&&o.name===t.name?this.removeEventListener(o.type,o.listener,o.options):e[++r]=o;++r?e.length=r:delete this.__on}}}function Yn(t,e,n){return function(){var r=this.__on,i,o=Xn(e);if(r){for(var s=0,a=r.length;s<a;++s)if((i=r[s]).type===t.type&&i.name===t.name){this.removeEventListener(i.type,i.listener,i.options),this.addEventListener(i.type,i.listener=o,i.options=n),i.value=e;return}}this.addEventListener(t.type,o,n),i={type:t.type,name:t.name,value:e,listener:o,options:n},r?r.push(i):this.__on=[i]}}function Bn(t,e,n){var r=On(t+""),i,o=r.length,s;if(arguments.length<2){var a=this.node().__on;if(a){for(var c=0,l=a.length,u;c<l;++c)for(i=0,u=a[c];i<o;++i)if((s=r[i]).type===u.type&&s.name===u.name)return u.value}return}for(a=e?Yn:Ln,i=0;i<o;++i)this.each(a(r[i],e,n));return this}function It(t,e,n){var r=Gt(t),i=r.CustomEvent;typeof i=="function"?i=new i(e,n):(i=r.document.createEvent("Event"),n?(i.initEvent(e,n.bubbles,n.cancelable),i.detail=n.detail):i.initEvent(e,!1,!1)),t.dispatchEvent(i)}function zn(t,e){return function(){return It(this,t,e)}}function Un(t,e){return function(){return It(this,t,e.apply(this,arguments))}}function Kn(t,e){return this.each((typeof e=="function"?Un:zn)(t,e))}function*Wn(){for(var t=this._groups,e=0,n=t.length;e<n;++e)for(var r=t[e],i=0,o=r.length,s;i<o;++i)(s=r[i])&&(yield s)}var qt=[null];function m(t,e){this._groups=t,this._parents=e}function I(){return new m([[document.documentElement]],qt)}function Jn(){return this}m.prototype=I.prototype={constructor:m,select:xe,selectAll:Se,selectChild:$e,selectChildren:Me,filter:Fe,data:Pe,enter:Ve,exit:Oe,join:Le,merge:Ye,selection:Jn,order:Be,sort:ze,call:Ke,nodes:We,node:Je,size:Qe,empty:Ze,each:je,attr:an,style:fn,property:gn,classed:vn,text:Nn,html:An,raise:$n,lower:Tn,append:Gn,insert:Fn,remove:Dn,clone:Hn,datum:Pn,on:Bn,dispatch:Kn,[Symbol.iterator]:Wn};function Qn(t){return typeof t=="string"?new m([[document.querySelector(t)]],[document.documentElement]):new m([[t]],qt)}function dt(t,e,n){t.prototype=e.prototype=n,n.constructor=t}function Ht(t,e){var n=Object.create(t.prototype);for(var r in e)n[r]=e[r];return n}function q(){}var H=.7,Q=1/H,F="\\s*([+-]?\\d+)\\s*",P="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*",x="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*",Zn=/^#([0-9a-f]{3,8})$/,jn=new RegExp(`^rgb\\(${F},${F},${F}\\)$`),tr=new RegExp(`^rgb\\(${x},${x},${x}\\)$`),er=new RegExp(`^rgba\\(${F},${F},${F},${P}\\)$`),nr=new RegExp(`^rgba\\(${x},${x},${x},${P}\\)$`),rr=new RegExp(`^hsl\\(${P},${x},${x}\\)$`),ir=new RegExp(`^hsla\\(${P},${x},${x},${P}\\)$`),Pt={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};dt(q,X,{copy(t){return Object.assign(new this.constructor,this,t)},displayable(){return this.rgb().displayable()},hex:Xt,formatHex:Xt,formatHex8:or,formatHsl:sr,formatRgb:Ot,toString:Ot});function Xt(){return this.rgb().formatHex()}function or(){return this.rgb().formatHex8()}function sr(){return Ut(this).formatHsl()}function Ot(){return this.rgb().formatRgb()}function X(t){var e,n;return t=(t+"").trim().toLowerCase(),(e=Zn.exec(t))?(n=e[1].length,e=parseInt(e[1],16),n===6?Lt(e):n===3?new _(e>>8&15|e>>4&240,e>>4&15|e&240,(e&15)<<4|e&15,1):n===8?Z(e>>24&255,e>>16&255,e>>8&255,(e&255)/255):n===4?Z(e>>12&15|e>>8&240,e>>8&15|e>>4&240,e>>4&15|e&240,((e&15)<<4|e&15)/255):null):(e=jn.exec(t))?new _(e[1],e[2],e[3],1):(e=tr.exec(t))?new _(e[1]*255/100,e[2]*255/100,e[3]*255/100,1):(e=er.exec(t))?Z(e[1],e[2],e[3],e[4]):(e=nr.exec(t))?Z(e[1]*255/100,e[2]*255/100,e[3]*255/100,e[4]):(e=rr.exec(t))?zt(e[1],e[2]/100,e[3]/100,1):(e=ir.exec(t))?zt(e[1],e[2]/100,e[3]/100,e[4]):Pt.hasOwnProperty(t)?Lt(Pt[t]):t==="transparent"?new _(NaN,NaN,NaN,0):null}function Lt(t){return new _(t>>16&255,t>>8&255,t&255,1)}function Z(t,e,n,r){return r<=0&&(t=e=n=NaN),new _(t,e,n,r)}function ar(t){return t instanceof q||(t=X(t)),t?(t=t.rgb(),new _(t.r,t.g,t.b,t.opacity)):new _}function pt(t,e,n,r){return arguments.length===1?ar(t):new _(t,e,n,r??1)}function _(t,e,n,r){this.r=+t,this.g=+e,this.b=+n,this.opacity=+r}dt(_,pt,Ht(q,{brighter(t){return t=t==null?Q:Math.pow(Q,t),new _(this.r*t,this.g*t,this.b*t,this.opacity)},darker(t){return t=t==null?H:Math.pow(H,t),new _(this.r*t,this.g*t,this.b*t,this.opacity)},rgb(){return this},clamp(){return new _($(this.r),$(this.g),$(this.b),j(this.opacity))},displayable(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:Yt,formatHex:Yt,formatHex8:cr,formatRgb:Bt,toString:Bt}));function Yt(){return`#${R(this.r)}${R(this.g)}${R(this.b)}`}function cr(){return`#${R(this.r)}${R(this.g)}${R(this.b)}${R((isNaN(this.opacity)?1:this.opacity)*255)}`}function Bt(){const t=j(this.opacity);return`${t===1?"rgb(":"rgba("}${$(this.r)}, ${$(this.g)}, ${$(this.b)}${t===1?")":`, ${t})`}`}function j(t){return isNaN(t)?1:Math.max(0,Math.min(1,t))}function $(t){return Math.max(0,Math.min(255,Math.round(t)||0))}function R(t){return t=$(t),(t<16?"0":"")+t.toString(16)}function zt(t,e,n,r){return r<=0?t=e=n=NaN:n<=0||n>=1?t=e=NaN:e<=0&&(t=NaN),new v(t,e,n,r)}function Ut(t){if(t instanceof v)return new v(t.h,t.s,t.l,t.opacity);if(t instanceof q||(t=X(t)),!t)return new v;if(t instanceof v)return t;t=t.rgb();var e=t.r/255,n=t.g/255,r=t.b/255,i=Math.min(e,n,r),o=Math.max(e,n,r),s=NaN,a=o-i,c=(o+i)/2;return a?(e===o?s=(n-r)/a+(n<r)*6:n===o?s=(r-e)/a+2:s=(e-n)/a+4,a/=c<.5?o+i:2-o-i,s*=60):a=c>0&&c<1?0:s,new v(s,a,c,t.opacity)}function lr(t,e,n,r){return arguments.length===1?Ut(t):new v(t,e,n,r??1)}function v(t,e,n,r){this.h=+t,this.s=+e,this.l=+n,this.opacity=+r}dt(v,lr,Ht(q,{brighter(t){return t=t==null?Q:Math.pow(Q,t),new v(this.h,this.s,this.l*t,this.opacity)},darker(t){return t=t==null?H:Math.pow(H,t),new v(this.h,this.s,this.l*t,this.opacity)},rgb(){var t=this.h%360+(this.h<0)*360,e=isNaN(t)||isNaN(this.s)?0:this.s,n=this.l,r=n+(n<.5?n:1-n)*e,i=2*n-r;return new _(gt(t>=240?t-240:t+120,i,r),gt(t,i,r),gt(t<120?t+240:t-120,i,r),this.opacity)},clamp(){return new v(Kt(this.h),tt(this.s),tt(this.l),j(this.opacity))},displayable(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl(){const t=j(this.opacity);return`${t===1?"hsl(":"hsla("}${Kt(this.h)}, ${tt(this.s)*100}%, ${tt(this.l)*100}%${t===1?")":`, ${t})`}`}}));function Kt(t){return t=(t||0)%360,t<0?t+360:t}function tt(t){return Math.max(0,Math.min(1,t||0))}function gt(t,e,n){return(t<60?e+(n-e)*t/60:t<180?n:t<240?e+(n-e)*(240-t)/60:e)*255}const Wt=t=>()=>t;function ur(t,e){return function(n){return t+n*e}}function fr(t,e,n){return t=Math.pow(t,n),e=Math.pow(e,n)-t,n=1/n,function(r){return Math.pow(t+r*e,n)}}function hr(t){return(t=+t)==1?Jt:function(e,n){return n-e?fr(e,n,t):Wt(isNaN(e)?n:e)}}function Jt(t,e){var n=e-t;return n?ur(t,n):Wt(isNaN(t)?e:t)}const Qt=function t(e){var n=hr(e);function r(i,o){var s=n((i=pt(i)).r,(o=pt(o)).r),a=n(i.g,o.g),c=n(i.b,o.b),l=Jt(i.opacity,o.opacity);return function(u){return i.r=s(u),i.g=a(u),i.b=c(u),i.opacity=l(u),i+""}}return r.gamma=t,r}(1);function C(t,e){return t=+t,e=+e,function(n){return t*(1-n)+e*n}}var yt=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,_t=new RegExp(yt.source,"g");function dr(t){return function(){return t}}function pr(t){return function(e){return t(e)+""}}function gr(t,e){var n=yt.lastIndex=_t.lastIndex=0,r,i,o,s=-1,a=[],c=[];for(t=t+"",e=e+"";(r=yt.exec(t))&&(i=_t.exec(e));)(o=i.index)>n&&(o=e.slice(n,o),a[s]?a[s]+=o:a[++s]=o),(r=r[0])===(i=i[0])?a[s]?a[s]+=i:a[++s]=i:(a[++s]=null,c.push({i:s,x:C(r,i)})),n=_t.lastIndex;return n<e.length&&(o=e.slice(n),a[s]?a[s]+=o:a[++s]=o),a.length<2?c[0]?pr(c[0].x):dr(e):(e=c.length,function(l){for(var u=0,f;u<e;++u)a[(f=c[u]).i]=f.x(l);return a.join("")})}var Zt=180/Math.PI,mt={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1};function jt(t,e,n,r,i,o){var s,a,c;return(s=Math.sqrt(t*t+e*e))&&(t/=s,e/=s),(c=t*n+e*r)&&(n-=t*c,r-=e*c),(a=Math.sqrt(n*n+r*r))&&(n/=a,r/=a,c/=a),t*r<e*n&&(t=-t,e=-e,c=-c,s=-s),{translateX:i,translateY:o,rotate:Math.atan2(e,t)*Zt,skewX:Math.atan(c)*Zt,scaleX:s,scaleY:a}}var et;function yr(t){const e=new(typeof DOMMatrix=="function"?DOMMatrix:WebKitCSSMatrix)(t+"");return e.isIdentity?mt:jt(e.a,e.b,e.c,e.d,e.e,e.f)}function _r(t){return t==null||(et||(et=document.createElementNS("http://www.w3.org/2000/svg","g")),et.setAttribute("transform",t),!(t=et.transform.baseVal.consolidate()))?mt:(t=t.matrix,jt(t.a,t.b,t.c,t.d,t.e,t.f))}function te(t,e,n,r){function i(l){return l.length?l.pop()+" ":""}function o(l,u,f,h,d,g){if(l!==f||u!==h){var y=d.push("translate(",null,e,null,n);g.push({i:y-4,x:C(l,f)},{i:y-2,x:C(u,h)})}else(f||h)&&d.push("translate("+f+e+h+n)}function s(l,u,f,h){l!==u?(l-u>180?u+=360:u-l>180&&(l+=360),h.push({i:f.push(i(f)+"rotate(",null,r)-2,x:C(l,u)})):u&&f.push(i(f)+"rotate("+u+r)}function a(l,u,f,h){l!==u?h.push({i:f.push(i(f)+"skewX(",null,r)-2,x:C(l,u)}):u&&f.push(i(f)+"skewX("+u+r)}function c(l,u,f,h,d,g){if(l!==f||u!==h){var y=d.push(i(d)+"scale(",null,",",null,")");g.push({i:y-4,x:C(l,f)},{i:y-2,x:C(u,h)})}else(f!==1||h!==1)&&d.push(i(d)+"scale("+f+","+h+")")}return function(l,u){var f=[],h=[];return l=t(l),u=t(u),o(l.translateX,l.translateY,u.translateX,u.translateY,f,h),s(l.rotate,u.rotate,f,h),a(l.skewX,u.skewX,f,h),c(l.scaleX,l.scaleY,u.scaleX,u.scaleY,f,h),l=u=null,function(d){for(var g=-1,y=h.length,G;++g<y;)f[(G=h[g]).i]=G.x(d);return f.join("")}}}var mr=te(yr,"px, ","px)","deg)"),vr=te(_r,", ",")",")"),V=0,O=0,L=0,ee=1e3,nt,Y,rt=0,T=0,it=0,B=typeof performance=="object"&&performance.now?performance:Date,ne=typeof window=="object"&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(t){setTimeout(t,17)};function vt(){return T||(ne(wr),T=B.now()+it)}function wr(){T=0}function ot(){this._call=this._time=this._next=null}ot.prototype=re.prototype={constructor:ot,restart:function(t,e,n){if(typeof t!="function")throw new TypeError("callback is not a function");n=(n==null?vt():+n)+(e==null?0:+e),!this._next&&Y!==this&&(Y?Y._next=this:nt=this,Y=this),this._call=t,this._time=n,wt()},stop:function(){this._call&&(this._call=null,this._time=1/0,wt())}};function re(t,e,n){var r=new ot;return r.restart(t,e,n),r}function xr(){vt(),++V;for(var t=nt,e;t;)(e=T-t._time)>=0&&t._call.call(void 0,e),t=t._next;--V}function ie(){T=(rt=B.now())+it,V=O=0;try{xr()}finally{V=0,Nr(),T=0}}function br(){var t=B.now(),e=t-rt;e>ee&&(it-=e,rt=t)}function Nr(){for(var t,e=nt,n,r=1/0;e;)e._call?(r>e._time&&(r=e._time),t=e,e=e._next):(n=e._next,e._next=null,e=t?t._next=n:nt=n);Y=t,wt(r)}function wt(t){if(!V){O&&(O=clearTimeout(O));var e=t-T;e>24?(t<1/0&&(O=setTimeout(ie,t-B.now()-it)),L&&(L=clearInterval(L))):(L||(rt=B.now(),L=setInterval(br,ee)),V=1,ne(ie))}}function oe(t,e,n){var r=new ot;return e=e==null?0:+e,r.restart(i=>{r.stop(),t(i+e)},e,n),r}var kr=A("start","end","cancel","interrupt"),Sr=[],se=0,ae=1,xt=2,st=3,ce=4,bt=5,at=6;function ct(t,e,n,r,i,o){var s=t.__transition;if(!s)t.__transition={};else if(n in s)return;Er(t,n,{name:e,index:r,group:i,on:kr,tween:Sr,time:o.time,delay:o.delay,duration:o.duration,ease:o.ease,timer:null,state:se})}function Nt(t,e){var n=w(t,e);if(n.state>se)throw new Error("too late; already scheduled");return n}function b(t,e){var n=w(t,e);if(n.state>st)throw new Error("too late; already running");return n}function w(t,e){var n=t.__transition;if(!n||!(n=n[e]))throw new Error("transition not found");return n}function Er(t,e,n){var r=t.__transition,i;r[e]=n,n.timer=re(o,0,n.time);function o(l){n.state=ae,n.timer.restart(s,n.delay,n.time),n.delay<=l&&s(l-n.delay)}function s(l){var u,f,h,d;if(n.state!==ae)return c();for(u in r)if(d=r[u],d.name===n.name){if(d.state===st)return oe(s);d.state===ce?(d.state=at,d.timer.stop(),d.on.call("interrupt",t,t.__data__,d.index,d.group),delete r[u]):+u<e&&(d.state=at,d.timer.stop(),d.on.call("cancel",t,t.__data__,d.index,d.group),delete r[u])}if(oe(function(){n.state===st&&(n.state=ce,n.timer.restart(a,n.delay,n.time),a(l))}),n.state=xt,n.on.call("start",t,t.__data__,n.index,n.group),n.state===xt){for(n.state=st,i=new Array(h=n.tween.length),u=0,f=-1;u<h;++u)(d=n.tween[u].value.call(t,t.__data__,n.index,n.group))&&(i[++f]=d);i.length=f+1}}function a(l){for(var u=l<n.duration?n.ease.call(null,l/n.duration):(n.timer.restart(c),n.state=bt,1),f=-1,h=i.length;++f<h;)i[f].call(t,u);n.state===bt&&(n.on.call("end",t,t.__data__,n.index,n.group),c())}function c(){n.state=at,n.timer.stop(),delete r[e];for(var l in r)return;delete t.__transition}}function Ar(t,e){var n=t.__transition,r,i,o=!0,s;if(n){e=e==null?null:e+"";for(s in n){if((r=n[s]).name!==e){o=!1;continue}i=r.state>xt&&r.state<bt,r.state=at,r.timer.stop(),r.on.call(i?"interrupt":"cancel",t,t.__data__,r.index,r.group),delete n[s]}o&&delete t.__transition}}function Cr(t){return this.each(function(){Ar(this,t)})}function $r(t,e){var n,r;return function(){var i=b(this,t),o=i.tween;if(o!==n){r=n=o;for(var s=0,a=r.length;s<a;++s)if(r[s].name===e){r=r.slice(),r.splice(s,1);break}}i.tween=r}}function Rr(t,e,n){var r,i;if(typeof n!="function")throw new Error;return function(){var o=b(this,t),s=o.tween;if(s!==r){i=(r=s).slice();for(var a={name:e,value:n},c=0,l=i.length;c<l;++c)if(i[c].name===e){i[c]=a;break}c===l&&i.push(a)}o.tween=i}}function Tr(t,e){var n=this._id;if(t+="",arguments.length<2){for(var r=w(this.node(),n).tween,i=0,o=r.length,s;i<o;++i)if((s=r[i]).name===t)return s.value;return null}return this.each((e==null?$r:Rr)(n,t,e))}function kt(t,e,n){var r=t._id;return t.each(function(){var i=b(this,r);(i.value||(i.value={}))[e]=n.apply(this,arguments)}),function(i){return w(i,r).value[e]}}function le(t,e){var n;return(typeof e=="number"?C:e instanceof X?Qt:(n=X(e))?(e=n,Qt):gr)(t,e)}function Gr(t){return function(){this.removeAttribute(t)}}function Mr(t){return function(){this.removeAttributeNS(t.space,t.local)}}function Fr(t,e,n){var r,i=n+"",o;return function(){var s=this.getAttribute(t);return s===i?null:s===r?o:o=e(r=s,n)}}function Vr(t,e,n){var r,i=n+"",o;return function(){var s=this.getAttributeNS(t.space,t.local);return s===i?null:s===r?o:o=e(r=s,n)}}function Dr(t,e,n){var r,i,o;return function(){var s,a=n(this),c;return a==null?void this.removeAttribute(t):(s=this.getAttribute(t),c=a+"",s===c?null:s===r&&c===i?o:(i=c,o=e(r=s,a)))}}function Ir(t,e,n){var r,i,o;return function(){var s,a=n(this),c;return a==null?void this.removeAttributeNS(t.space,t.local):(s=this.getAttributeNS(t.space,t.local),c=a+"",s===c?null:s===r&&c===i?o:(i=c,o=e(r=s,a)))}}function qr(t,e){var n=W(t),r=n==="transform"?vr:le;return this.attrTween(t,typeof e=="function"?(n.local?Ir:Dr)(n,r,kt(this,"attr."+t,e)):e==null?(n.local?Mr:Gr)(n):(n.local?Vr:Fr)(n,r,e))}function Hr(t,e){return function(n){this.setAttribute(t,e.call(this,n))}}function Pr(t,e){return function(n){this.setAttributeNS(t.space,t.local,e.call(this,n))}}function Xr(t,e){var n,r;function i(){var o=e.apply(this,arguments);return o!==r&&(n=(r=o)&&Pr(t,o)),n}return i._value=e,i}function Or(t,e){var n,r;function i(){var o=e.apply(this,arguments);return o!==r&&(n=(r=o)&&Hr(t,o)),n}return i._value=e,i}function Lr(t,e){var n="attr."+t;if(arguments.length<2)return(n=this.tween(n))&&n._value;if(e==null)return this.tween(n,null);if(typeof e!="function")throw new Error;var r=W(t);return this.tween(n,(r.local?Xr:Or)(r,e))}function Yr(t,e){return function(){Nt(this,t).delay=+e.apply(this,arguments)}}function Br(t,e){return e=+e,function(){Nt(this,t).delay=e}}function zr(t){var e=this._id;return arguments.length?this.each((typeof t=="function"?Yr:Br)(e,t)):w(this.node(),e).delay}function Ur(t,e){return function(){b(this,t).duration=+e.apply(this,arguments)}}function Kr(t,e){return e=+e,function(){b(this,t).duration=e}}function Wr(t){var e=this._id;return arguments.length?this.each((typeof t=="function"?Ur:Kr)(e,t)):w(this.node(),e).duration}function Jr(t,e){if(typeof e!="function")throw new Error;return function(){b(this,t).ease=e}}function Qr(t){var e=this._id;return arguments.length?this.each(Jr(e,t)):w(this.node(),e).ease}function Zr(t,e){return function(){var n=e.apply(this,arguments);if(typeof n!="function")throw new Error;b(this,t).ease=n}}function jr(t){if(typeof t!="function")throw new Error;return this.each(Zr(this._id,t))}function ti(t){typeof t!="function"&&(t=$t(t));for(var e=this._groups,n=e.length,r=new Array(n),i=0;i<n;++i)for(var o=e[i],s=o.length,a=r[i]=[],c,l=0;l<s;++l)(c=o[l])&&t.call(c,c.__data__,l,o)&&a.push(c);return new S(r,this._parents,this._name,this._id)}function ei(t){if(t._id!==this._id)throw new Error;for(var e=this._groups,n=t._groups,r=e.length,i=n.length,o=Math.min(r,i),s=new Array(r),a=0;a<o;++a)for(var c=e[a],l=n[a],u=c.length,f=s[a]=new Array(u),h,d=0;d<u;++d)(h=c[d]||l[d])&&(f[d]=h);for(;a<r;++a)s[a]=e[a];return new S(s,this._parents,this._name,this._id)}function ni(t){return(t+"").trim().split(/^|\s+/).every(function(e){var n=e.indexOf(".");return n>=0&&(e=e.slice(0,n)),!e||e==="start"})}function ri(t,e,n){var r,i,o=ni(e)?Nt:b;return function(){var s=o(this,t),a=s.on;a!==r&&(i=(r=a).copy()).on(e,n),s.on=i}}function ii(t,e){var n=this._id;return arguments.length<2?w(this.node(),n).on.on(t):this.each(ri(n,t,e))}function oi(t){return function(){var e=this.parentNode;for(var n in this.__transition)if(+n!==t)return;e&&e.removeChild(this)}}function si(){return this.on("end.remove",oi(this._id))}function ai(t){var e=this._name,n=this._id;typeof t!="function"&&(t=ft(t));for(var r=this._groups,i=r.length,o=new Array(i),s=0;s<i;++s)for(var a=r[s],c=a.length,l=o[s]=new Array(c),u,f,h=0;h<c;++h)(u=a[h])&&(f=t.call(u,u.__data__,h,a))&&("__data__"in u&&(f.__data__=u.__data__),l[h]=f,ct(l[h],e,n,h,l,w(u,n)));return new S(o,this._parents,e,n)}function ci(t){var e=this._name,n=this._id;typeof t!="function"&&(t=Ct(t));for(var r=this._groups,i=r.length,o=[],s=[],a=0;a<i;++a)for(var c=r[a],l=c.length,u,f=0;f<l;++f)if(u=c[f]){for(var h=t.call(u,u.__data__,f,c),d,g=w(u,n),y=0,G=h.length;y<G;++y)(d=h[y])&&ct(d,e,n,y,h,g);o.push(h),s.push(u)}return new S(o,s,e,n)}var li=I.prototype.constructor;function ui(){return new li(this._groups,this._parents)}function fi(t,e){var n,r,i;return function(){var o=M(this,t),s=(this.style.removeProperty(t),M(this,t));return o===s?null:o===n&&s===r?i:i=e(n=o,r=s)}}function ue(t){return function(){this.style.removeProperty(t)}}function hi(t,e,n){var r,i=n+"",o;return function(){var s=M(this,t);return s===i?null:s===r?o:o=e(r=s,n)}}function di(t,e,n){var r,i,o;return function(){var s=M(this,t),a=n(this),c=a+"";return a==null&&(c=a=(this.style.removeProperty(t),M(this,t))),s===c?null:s===r&&c===i?o:(i=c,o=e(r=s,a))}}function pi(t,e){var n,r,i,o="style."+e,s="end."+o,a;return function(){var c=b(this,t),l=c.on,u=c.value[o]==null?a||(a=ue(e)):void 0;(l!==n||i!==u)&&(r=(n=l).copy()).on(s,i=u),c.on=r}}function gi(t,e,n){var r=(t+="")=="transform"?mr:le;return e==null?this.styleTween(t,fi(t,r)).on("end.style."+t,ue(t)):typeof e=="function"?this.styleTween(t,di(t,r,kt(this,"style."+t,e))).each(pi(this._id,t)):this.styleTween(t,hi(t,r,e),n).on("end.style."+t,null)}function yi(t,e,n){return function(r){this.style.setProperty(t,e.call(this,r),n)}}function _i(t,e,n){var r,i;function o(){var s=e.apply(this,arguments);return s!==i&&(r=(i=s)&&yi(t,s,n)),r}return o._value=e,o}function mi(t,e,n){var r="style."+(t+="");if(arguments.length<2)return(r=this.tween(r))&&r._value;if(e==null)return this.tween(r,null);if(typeof e!="function")throw new Error;return this.tween(r,_i(t,e,n??""))}function vi(t){return function(){this.textContent=t}}function wi(t){return function(){var e=t(this);this.textContent=e??""}}function xi(t){return this.tween("text",typeof t=="function"?wi(kt(this,"text",t)):vi(t==null?"":t+""))}function bi(t){return function(e){this.textContent=t.call(this,e)}}function Ni(t){var e,n;function r(){var i=t.apply(this,arguments);return i!==n&&(e=(n=i)&&bi(i)),e}return r._value=t,r}function ki(t){var e="text";if(arguments.length<1)return(e=this.tween(e))&&e._value;if(t==null)return this.tween(e,null);if(typeof t!="function")throw new Error;return this.tween(e,Ni(t))}function Si(){for(var t=this._name,e=this._id,n=fe(),r=this._groups,i=r.length,o=0;o<i;++o)for(var s=r[o],a=s.length,c,l=0;l<a;++l)if(c=s[l]){var u=w(c,e);ct(c,t,n,l,s,{time:u.time+u.delay+u.duration,delay:0,duration:u.duration,ease:u.ease})}return new S(r,this._parents,t,n)}function Ei(){var t,e,n=this,r=n._id,i=n.size();return new Promise(function(o,s){var a={value:s},c={value:function(){--i===0&&o()}};n.each(function(){var l=b(this,r),u=l.on;u!==t&&(e=(t=u).copy(),e._.cancel.push(a),e._.interrupt.push(a),e._.end.push(c)),l.on=e}),i===0&&o()})}var Ai=0;function S(t,e,n,r){this._groups=t,this._parents=e,this._name=n,this._id=r}function fe(){return++Ai}var E=I.prototype;S.prototype={constructor:S,select:ai,selectAll:ci,selectChild:E.selectChild,selectChildren:E.selectChildren,filter:ti,merge:ei,selection:ui,transition:Si,call:E.call,nodes:E.nodes,node:E.node,size:E.size,empty:E.empty,each:E.each,on:ii,attr:qr,attrTween:Lr,style:gi,styleTween:mi,text:xi,textTween:ki,remove:si,tween:Tr,delay:zr,duration:Wr,ease:Qr,easeVarying:jr,end:Ei,[Symbol.iterator]:E[Symbol.iterator]};const Ci=t=>+t;function $i(t){return((t*=2)<=1?t*t*t:(t-=2)*t*t+2)/2}var Ri={time:null,delay:0,duration:250,ease:$i};function Ti(t,e){for(var n;!(n=t.__transition)||!(n=n[e]);)if(!(t=t.parentNode))throw new Error(`transition ${e} not found`);return n}function Gi(t){var e,n;t instanceof S?(e=t._id,t=t._name):(e=fe(),(n=Ri).time=vt(),t=t==null?null:t+"");for(var r=this._groups,i=r.length,o=0;o<i;++o)for(var s=r[o],a=s.length,c,l=0;l<a;++l)(c=s[l])&&ct(c,t,e,l,s,n||Ti(c,e));return new S(r,this._parents,t,e)}I.prototype.interrupt=Cr,I.prototype.transition=Gi;function z(t,e,n){this.k=t,this.x=e,this.y=n}z.prototype={constructor:z,scale:function(t){return t===1?this:new z(this.k*t,this.x,this.y)},translate:function(t,e){return t===0&e===0?this:new z(this.k,this.x+this.k*t,this.y+this.k*e)},apply:function(t){return[t[0]*this.k+this.x,t[1]*this.k+this.y]},applyX:function(t){return t*this.k+this.x},applyY:function(t){return t*this.k+this.y},invert:function(t){return[(t[0]-this.x)/this.k,(t[1]-this.y)/this.k]},invertX:function(t){return(t-this.x)/this.k},invertY:function(t){return(t-this.y)/this.k},rescaleX:function(t){return t.copy().domain(t.range().map(this.invertX,this).map(t.invert,t))},rescaleY:function(t){return t.copy().domain(t.range().map(this.invertY,this).map(t.invert,t))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}},z.prototype;const p=(t,e)=>{const n=document.querySelector(t);if(n===null)throw new Error("Cannot find selector "+t);if(e!==void 0&&!(n instanceof e))throw new Error(`Selector ${t} not of type ${e}`);return n},he={fitts:[t=>{const e=p("svg.fitts g.big-target1",SVGGElement);t.createCircle(e,40,50,35),t.createCircle(e,40,50,25),t.createCircle(e,40,50,15),t.createCircle(e,40,50,5);const n=p("svg.fitts g.big-target2",SVGGElement);t.createCircle(n,40,50,35),t.createCircle(n,40,50,25),t.createCircle(n,40,50,15),t.createCircle(n,40,50,5);const r=p("svg.fitts g.small-target",SVGGElement);t.createCircle(r,40,50,5)}],purpose:[t=>{const e=p("svg.purpose g.target",SVGGElement);t.createCircle(e,150,50,40),t.createCircle(e,150,50,30),t.createCircle(e,150,50,20),t.createCircle(e,150,50,10),t.createCircle(e,150,50,1)}],hick:[t=>{const e=p("svg.hick g.choice-01",SVGGElement);t.createForm(e,"polygon",{points:"0,0 0,0 0,0 0,0"},{points:"0,0 0,40 40,40"},{duration:300,delay:t.getDelay()});const n=p("svg.hick g.choice-02",SVGGElement);t.createForm(n,"polygon",{points:"0,0 0,0 0,0 0,0"},{points:"0,0 0,40 40,40 40,0"},{duration:300,delay:t.getDelay()});const r=p("svg.hick g.choice-03",SVGGElement);t.createForm(r,"polygon",{points:"0,0 0,0 0,0 0,0"},{points:"0,40 40,40 40,0"},{duration:300,delay:t.getDelay()});const i=p("svg.hick g.choice-04",SVGGElement);t.createForm(i,"polygon",{points:"0,0 0,0 0,0 0,0"},{points:"0,0 20,40 40,0"},{duration:300,delay:t.getDelay()});const o=p("svg.hick g.choice-05",SVGGElement);t.createForm(o,"polygon",{points:"0,0 0,0 0,0 0,0"},{points:"0,0 0,40 40,20"},{duration:300,delay:t.getDelay()});const s=p("svg.hick g.choice-06",SVGGElement);t.createForm(s,"polygon",{points:"0,0 0,0 0,0 0,0"},{points:"0,40 40,40 20,0"},{duration:300,delay:t.getDelay()})}],jakob:[t=>{const e=p("svg.jakob g.app-1",SVGGElement);t.createCircle(e,40,50,35);const n=p("svg.jakob g.app-2",SVGGElement);t.createCircle(n,40,50,35);const r=p("svg.jakob g.your-app",SVGGElement);t.createCircle(r,40,50,35)}],gradient:[t=>{const e=p("svg.gradient g",SVGGElement);t.createRect(e,5,30,40,40,1),t.createRect(e,50,30,40,40,2),t.createRect(e,95,30,40,40,3),t.createRect(e,140,30,40,40,4),t.createRect(e,185,30,40,40,5),t.createRect(e,230,30,40,40,6)}],gestalt:[t=>{const e=p("svg.gestalt g",SVGGElement);for(let n=0;n<5;n++)for(let r=0;r<4;r++)t.createCircle(e,n*20+100,r*20+20,5,{class:"full",delay:0,duration:300})}],proximity:[t=>{const e=p("svg.proximity g",SVGGElement);for(let n=0;n<5;n++)for(let r=0;r<4;r++){const i=n>1&&r<2?8:0;t.createCircle(e,n*20+100+i,r*20+20-i,5,{class:"full",delay:0,duration:300})}}],similarity:[t=>{const e=p("svg.similarity g",SVGGElement);for(let n=0;n<5;n++)for(let r=0;r<4;r++){const i=n>1&&r<2?"xxx":"full";t.createCircle(e,n*20+100,r*20+20,5,{class:i,delay:0,duration:300})}}],commonRegion:[t=>{const e=p("svg.commonRegion g",SVGGElement);t.createRect(e,100+32,12,57,37,2);for(let n=0;n<5;n++)for(let r=0;r<4;r++)t.createCircle(e,n*20+100,r*20+20,5,{class:"full",delay:0,duration:300})}],simplicity:[t=>{const e=p("svg.simplicity g",SVGGElement);t.createRect(e,100+32,12,57,37,2),t.createRect(e,100-8,12,97,77,2)}]},de=new Set;for(const t of Object.values(he))for(const e of t)de.add(e);const Mi=[...de];class Fi{constructor(){D(this,"delayCounter",0);D(this,"delayIncrement",100);D(this,"useTransition",!1);D(this,"svgName");D(this,"createForm",(e,n,r,i,o)=>{const s={duration:2e3,delay:1e3,class:"",...o};this.useTransition||(s.delay=0,s.duration=0);const a=Qn(e).append(n);for(const[l,u]of Object.entries(r))a.attr(l,u);s.class&&a.attr("class",s.class);const c=a.transition().duration(s.duration).delay(s.delay).ease(Ci);for(const[l,u]of Object.entries(i))c.attr(l,u)});this.initSvgName()}initSvgName(){const e=window.uxlawImageName;if(e){this.svgName=e,this.useTransition=!0;return}this.useTransition=!1}initSvg(){const e=this.svgName?he[this.svgName]:Mi;if(e!==void 0)for(const n of e)n(this)}getDelay(){return this.delayCounter+=this.delayIncrement,this.delayCounter}createCircle(e,n,r,i,o){const s={duration:300,delay:this.getDelay(),...o};return this.createForm(e,"circle",{cx:n,cy:r,r:0},{r:i},s)}createPolygon(e,n){return this.createForm(e,"polygon",{points:""},{points:n},{duration:300,delay:this.getDelay()})}createPolyline(e,n){return this.createForm(e,"polyline",{points:""},{points:n},{duration:300,delay:this.getDelay()})}createRect(e,n,r,i,o,s=0){return this.createForm(e,"rect",{x:n,y:r,width:i,height:0,opacity:s*(1/6)},{height:o},{duration:300,delay:this.getDelay()})}}const Vi=()=>{Di(),document.documentElement.style.setProperty("--primary-color","hsl(120, 100%, 25%)"),document.documentElement.style.setProperty("--fill-color","hsla(120, 100%, 25%, 0.1)")},Di=()=>{const t=window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches,e=document.body.classList;t?e.add("dark"):e.add("light"),window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change",n=>{const r=n.matches?"dark":"light";console.log("colorScheme: ",r),e.remove("dark"),e.remove("light"),r==="dark"?e.add("dark"):e.add("light")})};Vi(),new Fi().initSvg()});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
