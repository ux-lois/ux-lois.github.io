(function(S){typeof define=="function"&&define.amd?define(S):S()})(function(){"use strict";var no=Object.defineProperty;var ro=(S,E,k)=>E in S?no(S,E,{enumerable:!0,configurable:!0,writable:!0,value:k}):S[E]=k;var I=(S,E,k)=>(ro(S,typeof E!="symbol"?E+"":E,k),k);const S="";var E={value:()=>{}};function k(){for(var t=0,e=arguments.length,n={},r;t<e;++t){if(!(r=arguments[t]+"")||r in n||/[\s.]/.test(r))throw new Error("illegal type: "+r);n[r]=[]}return new K(n)}function K(t){this._=t}function _e(t,e){return t.trim().split(/^|\s+/).map(function(n){var r="",i=n.indexOf(".");if(i>=0&&(r=n.slice(i+1),n=n.slice(0,i)),n&&!e.hasOwnProperty(n))throw new Error("unknown type: "+n);return{type:n,name:r}})}K.prototype=k.prototype={constructor:K,on:function(t,e){var n=this._,r=_e(t+"",n),i,o=-1,s=r.length;if(arguments.length<2){for(;++o<s;)if((i=(t=r[o]).type)&&(i=ve(n[i],t.name)))return i;return}if(e!=null&&typeof e!="function")throw new Error("invalid callback: "+e);for(;++o<s;)if(i=(t=r[o]).type)n[i]=Nt(n[i],t.name,e);else if(e==null)for(i in n)n[i]=Nt(n[i],t.name,null);return this},copy:function(){var t={},e=this._;for(var n in e)t[n]=e[n].slice();return new K(t)},call:function(t,e){if((i=arguments.length-2)>0)for(var n=new Array(i),r=0,i,o;r<i;++r)n[r]=arguments[r+2];if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(o=this._[t],r=0,i=o.length;r<i;++r)o[r].value.apply(e,n)},apply:function(t,e,n){if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(var r=this._[t],i=0,o=r.length;i<o;++i)r[i].value.apply(e,n)}};function ve(t,e){for(var n=0,r=t.length,i;n<r;++n)if((i=t[n]).name===e)return i.value}function Nt(t,e,n){for(var r=0,i=t.length;r<i;++r)if(t[r].name===e){t[r]=E,t=t.slice(0,r).concat(t.slice(r+1));break}return n!=null&&t.push({name:e,value:n}),t}var ft="http://www.w3.org/1999/xhtml";const kt={svg:"http://www.w3.org/2000/svg",xhtml:ft,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};function W(t){var e=t+="",n=e.indexOf(":");return n>=0&&(e=t.slice(0,n))!=="xmlns"&&(t=t.slice(n+1)),kt.hasOwnProperty(e)?{space:kt[e],local:t}:t}function we(t){return function(){var e=this.ownerDocument,n=this.namespaceURI;return n===ft&&e.documentElement.namespaceURI===ft?e.createElement(t):e.createElementNS(n,t)}}function xe(t){return function(){return this.ownerDocument.createElementNS(t.space,t.local)}}function At(t){var e=W(t);return(e.local?xe:we)(e)}function be(){}function ht(t){return t==null?be:function(){return this.querySelector(t)}}function Se(t){typeof t!="function"&&(t=ht(t));for(var e=this._groups,n=e.length,r=new Array(n),i=0;i<n;++i)for(var o=e[i],s=o.length,a=r[i]=new Array(s),l,c,u=0;u<s;++u)(l=o[u])&&(c=t.call(l,l.__data__,u,o))&&("__data__"in l&&(c.__data__=l.__data__),a[u]=c);return new _(r,this._parents)}function Ee(t){return t==null?[]:Array.isArray(t)?t:Array.from(t)}function Ce(){return[]}function $t(t){return t==null?Ce:function(){return this.querySelectorAll(t)}}function Ne(t){return function(){return Ee(t.apply(this,arguments))}}function ke(t){typeof t=="function"?t=Ne(t):t=$t(t);for(var e=this._groups,n=e.length,r=[],i=[],o=0;o<n;++o)for(var s=e[o],a=s.length,l,c=0;c<a;++c)(l=s[c])&&(r.push(t.call(l,l.__data__,c,s)),i.push(l));return new _(r,i)}function Gt(t){return function(){return this.matches(t)}}function Rt(t){return function(e){return e.matches(t)}}var Ae=Array.prototype.find;function $e(t){return function(){return Ae.call(this.children,t)}}function Ge(){return this.firstElementChild}function Re(t){return this.select(t==null?Ge:$e(typeof t=="function"?t:Rt(t)))}var Te=Array.prototype.filter;function Ve(){return Array.from(this.children)}function Me(t){return function(){return Te.call(this.children,t)}}function Fe(t){return this.selectAll(t==null?Ve:Me(typeof t=="function"?t:Rt(t)))}function Ie(t){typeof t!="function"&&(t=Gt(t));for(var e=this._groups,n=e.length,r=new Array(n),i=0;i<n;++i)for(var o=e[i],s=o.length,a=r[i]=[],l,c=0;c<s;++c)(l=o[c])&&t.call(l,l.__data__,c,o)&&a.push(l);return new _(r,this._parents)}function Tt(t){return new Array(t.length)}function De(){return new _(this._enter||this._groups.map(Tt),this._parents)}function J(t,e){this.ownerDocument=t.ownerDocument,this.namespaceURI=t.namespaceURI,this._next=null,this._parent=t,this.__data__=e}J.prototype={constructor:J,appendChild:function(t){return this._parent.insertBefore(t,this._next)},insertBefore:function(t,e){return this._parent.insertBefore(t,e)},querySelector:function(t){return this._parent.querySelector(t)},querySelectorAll:function(t){return this._parent.querySelectorAll(t)}};function Pe(t){return function(){return t}}function qe(t,e,n,r,i,o){for(var s=0,a,l=e.length,c=o.length;s<c;++s)(a=e[s])?(a.__data__=o[s],r[s]=a):n[s]=new J(t,o[s]);for(;s<l;++s)(a=e[s])&&(i[s]=a)}function He(t,e,n,r,i,o,s){var a,l,c=new Map,u=e.length,f=o.length,h=new Array(u),g;for(a=0;a<u;++a)(l=e[a])&&(h[a]=g=s.call(l,l.__data__,a,e)+"",c.has(g)?i[a]=l:c.set(g,l));for(a=0;a<f;++a)g=s.call(t,o[a],a,o)+"",(l=c.get(g))?(r[a]=l,l.__data__=o[a],c.delete(g)):n[a]=new J(t,o[a]);for(a=0;a<u;++a)(l=e[a])&&c.get(h[a])===l&&(i[a]=l)}function Le(t){return t.__data__}function Xe(t,e){if(!arguments.length)return Array.from(this,Le);var n=e?He:qe,r=this._parents,i=this._groups;typeof t!="function"&&(t=Pe(t));for(var o=i.length,s=new Array(o),a=new Array(o),l=new Array(o),c=0;c<o;++c){var u=r[c],f=i[c],h=f.length,g=Oe(t.call(u,u&&u.__data__,c,r)),p=g.length,y=a[c]=new Array(p),T=s[c]=new Array(p),eo=l[c]=new Array(h);n(u,f,y,T,eo,g,e);for(var U=0,ut=0,ye,me;U<p;++U)if(ye=y[U]){for(U>=ut&&(ut=U+1);!(me=T[ut])&&++ut<p;);ye._next=me||null}}return s=new _(s,r),s._enter=a,s._exit=l,s}function Oe(t){return typeof t=="object"&&"length"in t?t:Array.from(t)}function Ye(){return new _(this._exit||this._groups.map(Tt),this._parents)}function ze(t,e,n){var r=this.enter(),i=this,o=this.exit();return typeof t=="function"?(r=t(r),r&&(r=r.selection())):r=r.append(t+""),e!=null&&(i=e(i),i&&(i=i.selection())),n==null?o.remove():n(o),r&&i?r.merge(i).order():i}function Be(t){for(var e=t.selection?t.selection():t,n=this._groups,r=e._groups,i=n.length,o=r.length,s=Math.min(i,o),a=new Array(i),l=0;l<s;++l)for(var c=n[l],u=r[l],f=c.length,h=a[l]=new Array(f),g,p=0;p<f;++p)(g=c[p]||u[p])&&(h[p]=g);for(;l<i;++l)a[l]=n[l];return new _(a,this._parents)}function Ue(){for(var t=this._groups,e=-1,n=t.length;++e<n;)for(var r=t[e],i=r.length-1,o=r[i],s;--i>=0;)(s=r[i])&&(o&&s.compareDocumentPosition(o)^4&&o.parentNode.insertBefore(s,o),o=s);return this}function Ke(t){t||(t=We);function e(f,h){return f&&h?t(f.__data__,h.__data__):!f-!h}for(var n=this._groups,r=n.length,i=new Array(r),o=0;o<r;++o){for(var s=n[o],a=s.length,l=i[o]=new Array(a),c,u=0;u<a;++u)(c=s[u])&&(l[u]=c);l.sort(e)}return new _(i,this._parents).order()}function We(t,e){return t<e?-1:t>e?1:t>=e?0:NaN}function Je(){var t=arguments[0];return arguments[0]=this,t.apply(null,arguments),this}function Qe(){return Array.from(this)}function Ze(){for(var t=this._groups,e=0,n=t.length;e<n;++e)for(var r=t[e],i=0,o=r.length;i<o;++i){var s=r[i];if(s)return s}return null}function je(){let t=0;for(const e of this)++t;return t}function tn(){return!this.node()}function en(t){for(var e=this._groups,n=0,r=e.length;n<r;++n)for(var i=e[n],o=0,s=i.length,a;o<s;++o)(a=i[o])&&t.call(a,a.__data__,o,i);return this}function nn(t){return function(){this.removeAttribute(t)}}function rn(t){return function(){this.removeAttributeNS(t.space,t.local)}}function on(t,e){return function(){this.setAttribute(t,e)}}function sn(t,e){return function(){this.setAttributeNS(t.space,t.local,e)}}function an(t,e){return function(){var n=e.apply(this,arguments);n==null?this.removeAttribute(t):this.setAttribute(t,n)}}function ln(t,e){return function(){var n=e.apply(this,arguments);n==null?this.removeAttributeNS(t.space,t.local):this.setAttributeNS(t.space,t.local,n)}}function cn(t,e){var n=W(t);if(arguments.length<2){var r=this.node();return n.local?r.getAttributeNS(n.space,n.local):r.getAttribute(n)}return this.each((e==null?n.local?rn:nn:typeof e=="function"?n.local?ln:an:n.local?sn:on)(n,e))}function Vt(t){return t.ownerDocument&&t.ownerDocument.defaultView||t.document&&t||t.defaultView}function un(t){return function(){this.style.removeProperty(t)}}function fn(t,e,n){return function(){this.style.setProperty(t,e,n)}}function hn(t,e,n){return function(){var r=e.apply(this,arguments);r==null?this.style.removeProperty(t):this.style.setProperty(t,r,n)}}function gn(t,e,n){return arguments.length>1?this.each((e==null?un:typeof e=="function"?hn:fn)(t,e,n??"")):V(this.node(),t)}function V(t,e){return t.style.getPropertyValue(e)||Vt(t).getComputedStyle(t,null).getPropertyValue(e)}function dn(t){return function(){delete this[t]}}function pn(t,e){return function(){this[t]=e}}function yn(t,e){return function(){var n=e.apply(this,arguments);n==null?delete this[t]:this[t]=n}}function mn(t,e){return arguments.length>1?this.each((e==null?dn:typeof e=="function"?yn:pn)(t,e)):this.node()[t]}function Mt(t){return t.trim().split(/^|\s+/)}function gt(t){return t.classList||new Ft(t)}function Ft(t){this._node=t,this._names=Mt(t.getAttribute("class")||"")}Ft.prototype={add:function(t){var e=this._names.indexOf(t);e<0&&(this._names.push(t),this._node.setAttribute("class",this._names.join(" ")))},remove:function(t){var e=this._names.indexOf(t);e>=0&&(this._names.splice(e,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(t){return this._names.indexOf(t)>=0}};function It(t,e){for(var n=gt(t),r=-1,i=e.length;++r<i;)n.add(e[r])}function Dt(t,e){for(var n=gt(t),r=-1,i=e.length;++r<i;)n.remove(e[r])}function _n(t){return function(){It(this,t)}}function vn(t){return function(){Dt(this,t)}}function wn(t,e){return function(){(e.apply(this,arguments)?It:Dt)(this,t)}}function xn(t,e){var n=Mt(t+"");if(arguments.length<2){for(var r=gt(this.node()),i=-1,o=n.length;++i<o;)if(!r.contains(n[i]))return!1;return!0}return this.each((typeof e=="function"?wn:e?_n:vn)(n,e))}function bn(){this.textContent=""}function Sn(t){return function(){this.textContent=t}}function En(t){return function(){var e=t.apply(this,arguments);this.textContent=e??""}}function Cn(t){return arguments.length?this.each(t==null?bn:(typeof t=="function"?En:Sn)(t)):this.node().textContent}function Nn(){this.innerHTML=""}function kn(t){return function(){this.innerHTML=t}}function An(t){return function(){var e=t.apply(this,arguments);this.innerHTML=e??""}}function $n(t){return arguments.length?this.each(t==null?Nn:(typeof t=="function"?An:kn)(t)):this.node().innerHTML}function Gn(){this.nextSibling&&this.parentNode.appendChild(this)}function Rn(){return this.each(Gn)}function Tn(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function Vn(){return this.each(Tn)}function Mn(t){var e=typeof t=="function"?t:At(t);return this.select(function(){return this.appendChild(e.apply(this,arguments))})}function Fn(){return null}function In(t,e){var n=typeof t=="function"?t:At(t),r=e==null?Fn:typeof e=="function"?e:ht(e);return this.select(function(){return this.insertBefore(n.apply(this,arguments),r.apply(this,arguments)||null)})}function Dn(){var t=this.parentNode;t&&t.removeChild(this)}function Pn(){return this.each(Dn)}function qn(){var t=this.cloneNode(!1),e=this.parentNode;return e?e.insertBefore(t,this.nextSibling):t}function Hn(){var t=this.cloneNode(!0),e=this.parentNode;return e?e.insertBefore(t,this.nextSibling):t}function Ln(t){return this.select(t?Hn:qn)}function Xn(t){return arguments.length?this.property("__data__",t):this.node().__data__}function On(t){return function(e){t.call(this,e,this.__data__)}}function Yn(t){return t.trim().split(/^|\s+/).map(function(e){var n="",r=e.indexOf(".");return r>=0&&(n=e.slice(r+1),e=e.slice(0,r)),{type:e,name:n}})}function zn(t){return function(){var e=this.__on;if(e){for(var n=0,r=-1,i=e.length,o;n<i;++n)o=e[n],(!t.type||o.type===t.type)&&o.name===t.name?this.removeEventListener(o.type,o.listener,o.options):e[++r]=o;++r?e.length=r:delete this.__on}}}function Bn(t,e,n){return function(){var r=this.__on,i,o=On(e);if(r){for(var s=0,a=r.length;s<a;++s)if((i=r[s]).type===t.type&&i.name===t.name){this.removeEventListener(i.type,i.listener,i.options),this.addEventListener(i.type,i.listener=o,i.options=n),i.value=e;return}}this.addEventListener(t.type,o,n),i={type:t.type,name:t.name,value:e,listener:o,options:n},r?r.push(i):this.__on=[i]}}function Un(t,e,n){var r=Yn(t+""),i,o=r.length,s;if(arguments.length<2){var a=this.node().__on;if(a){for(var l=0,c=a.length,u;l<c;++l)for(i=0,u=a[l];i<o;++i)if((s=r[i]).type===u.type&&s.name===u.name)return u.value}return}for(a=e?Bn:zn,i=0;i<o;++i)this.each(a(r[i],e,n));return this}function Pt(t,e,n){var r=Vt(t),i=r.CustomEvent;typeof i=="function"?i=new i(e,n):(i=r.document.createEvent("Event"),n?(i.initEvent(e,n.bubbles,n.cancelable),i.detail=n.detail):i.initEvent(e,!1,!1)),t.dispatchEvent(i)}function Kn(t,e){return function(){return Pt(this,t,e)}}function Wn(t,e){return function(){return Pt(this,t,e.apply(this,arguments))}}function Jn(t,e){return this.each((typeof e=="function"?Wn:Kn)(t,e))}function*Qn(){for(var t=this._groups,e=0,n=t.length;e<n;++e)for(var r=t[e],i=0,o=r.length,s;i<o;++i)(s=r[i])&&(yield s)}var qt=[null];function _(t,e){this._groups=t,this._parents=e}function D(){return new _([[document.documentElement]],qt)}function Zn(){return this}_.prototype=D.prototype={constructor:_,select:Se,selectAll:ke,selectChild:Re,selectChildren:Fe,filter:Ie,data:Xe,enter:De,exit:Ye,join:ze,merge:Be,selection:Zn,order:Ue,sort:Ke,call:Je,nodes:Qe,node:Ze,size:je,empty:tn,each:en,attr:cn,style:gn,property:mn,classed:xn,text:Cn,html:$n,raise:Rn,lower:Vn,append:Mn,insert:In,remove:Pn,clone:Ln,datum:Xn,on:Un,dispatch:Jn,[Symbol.iterator]:Qn};function jn(t){return typeof t=="string"?new _([[document.querySelector(t)]],[document.documentElement]):new _([[t]],qt)}function dt(t,e,n){t.prototype=e.prototype=n,n.constructor=t}function Ht(t,e){var n=Object.create(t.prototype);for(var r in e)n[r]=e[r];return n}function P(){}var q=.7,Q=1/q,M="\\s*([+-]?\\d+)\\s*",H="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*",x="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*",tr=/^#([0-9a-f]{3,8})$/,er=new RegExp(`^rgb\\(${M},${M},${M}\\)$`),nr=new RegExp(`^rgb\\(${x},${x},${x}\\)$`),rr=new RegExp(`^rgba\\(${M},${M},${M},${H}\\)$`),ir=new RegExp(`^rgba\\(${x},${x},${x},${H}\\)$`),or=new RegExp(`^hsl\\(${H},${x},${x}\\)$`),sr=new RegExp(`^hsla\\(${H},${x},${x},${H}\\)$`),Lt={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};dt(P,L,{copy(t){return Object.assign(new this.constructor,this,t)},displayable(){return this.rgb().displayable()},hex:Xt,formatHex:Xt,formatHex8:ar,formatHsl:lr,formatRgb:Ot,toString:Ot});function Xt(){return this.rgb().formatHex()}function ar(){return this.rgb().formatHex8()}function lr(){return Kt(this).formatHsl()}function Ot(){return this.rgb().formatRgb()}function L(t){var e,n;return t=(t+"").trim().toLowerCase(),(e=tr.exec(t))?(n=e[1].length,e=parseInt(e[1],16),n===6?Yt(e):n===3?new m(e>>8&15|e>>4&240,e>>4&15|e&240,(e&15)<<4|e&15,1):n===8?Z(e>>24&255,e>>16&255,e>>8&255,(e&255)/255):n===4?Z(e>>12&15|e>>8&240,e>>8&15|e>>4&240,e>>4&15|e&240,((e&15)<<4|e&15)/255):null):(e=er.exec(t))?new m(e[1],e[2],e[3],1):(e=nr.exec(t))?new m(e[1]*255/100,e[2]*255/100,e[3]*255/100,1):(e=rr.exec(t))?Z(e[1],e[2],e[3],e[4]):(e=ir.exec(t))?Z(e[1]*255/100,e[2]*255/100,e[3]*255/100,e[4]):(e=or.exec(t))?Ut(e[1],e[2]/100,e[3]/100,1):(e=sr.exec(t))?Ut(e[1],e[2]/100,e[3]/100,e[4]):Lt.hasOwnProperty(t)?Yt(Lt[t]):t==="transparent"?new m(NaN,NaN,NaN,0):null}function Yt(t){return new m(t>>16&255,t>>8&255,t&255,1)}function Z(t,e,n,r){return r<=0&&(t=e=n=NaN),new m(t,e,n,r)}function cr(t){return t instanceof P||(t=L(t)),t?(t=t.rgb(),new m(t.r,t.g,t.b,t.opacity)):new m}function pt(t,e,n,r){return arguments.length===1?cr(t):new m(t,e,n,r??1)}function m(t,e,n,r){this.r=+t,this.g=+e,this.b=+n,this.opacity=+r}dt(m,pt,Ht(P,{brighter(t){return t=t==null?Q:Math.pow(Q,t),new m(this.r*t,this.g*t,this.b*t,this.opacity)},darker(t){return t=t==null?q:Math.pow(q,t),new m(this.r*t,this.g*t,this.b*t,this.opacity)},rgb(){return this},clamp(){return new m($(this.r),$(this.g),$(this.b),j(this.opacity))},displayable(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:zt,formatHex:zt,formatHex8:ur,formatRgb:Bt,toString:Bt}));function zt(){return`#${G(this.r)}${G(this.g)}${G(this.b)}`}function ur(){return`#${G(this.r)}${G(this.g)}${G(this.b)}${G((isNaN(this.opacity)?1:this.opacity)*255)}`}function Bt(){const t=j(this.opacity);return`${t===1?"rgb(":"rgba("}${$(this.r)}, ${$(this.g)}, ${$(this.b)}${t===1?")":`, ${t})`}`}function j(t){return isNaN(t)?1:Math.max(0,Math.min(1,t))}function $(t){return Math.max(0,Math.min(255,Math.round(t)||0))}function G(t){return t=$(t),(t<16?"0":"")+t.toString(16)}function Ut(t,e,n,r){return r<=0?t=e=n=NaN:n<=0||n>=1?t=e=NaN:e<=0&&(t=NaN),new v(t,e,n,r)}function Kt(t){if(t instanceof v)return new v(t.h,t.s,t.l,t.opacity);if(t instanceof P||(t=L(t)),!t)return new v;if(t instanceof v)return t;t=t.rgb();var e=t.r/255,n=t.g/255,r=t.b/255,i=Math.min(e,n,r),o=Math.max(e,n,r),s=NaN,a=o-i,l=(o+i)/2;return a?(e===o?s=(n-r)/a+(n<r)*6:n===o?s=(r-e)/a+2:s=(e-n)/a+4,a/=l<.5?o+i:2-o-i,s*=60):a=l>0&&l<1?0:s,new v(s,a,l,t.opacity)}function fr(t,e,n,r){return arguments.length===1?Kt(t):new v(t,e,n,r??1)}function v(t,e,n,r){this.h=+t,this.s=+e,this.l=+n,this.opacity=+r}dt(v,fr,Ht(P,{brighter(t){return t=t==null?Q:Math.pow(Q,t),new v(this.h,this.s,this.l*t,this.opacity)},darker(t){return t=t==null?q:Math.pow(q,t),new v(this.h,this.s,this.l*t,this.opacity)},rgb(){var t=this.h%360+(this.h<0)*360,e=isNaN(t)||isNaN(this.s)?0:this.s,n=this.l,r=n+(n<.5?n:1-n)*e,i=2*n-r;return new m(yt(t>=240?t-240:t+120,i,r),yt(t,i,r),yt(t<120?t+240:t-120,i,r),this.opacity)},clamp(){return new v(Wt(this.h),tt(this.s),tt(this.l),j(this.opacity))},displayable(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl(){const t=j(this.opacity);return`${t===1?"hsl(":"hsla("}${Wt(this.h)}, ${tt(this.s)*100}%, ${tt(this.l)*100}%${t===1?")":`, ${t})`}`}}));function Wt(t){return t=(t||0)%360,t<0?t+360:t}function tt(t){return Math.max(0,Math.min(1,t||0))}function yt(t,e,n){return(t<60?e+(n-e)*t/60:t<180?n:t<240?e+(n-e)*(240-t)/60:e)*255}const Jt=t=>()=>t;function hr(t,e){return function(n){return t+n*e}}function gr(t,e,n){return t=Math.pow(t,n),e=Math.pow(e,n)-t,n=1/n,function(r){return Math.pow(t+r*e,n)}}function dr(t){return(t=+t)==1?Qt:function(e,n){return n-e?gr(e,n,t):Jt(isNaN(e)?n:e)}}function Qt(t,e){var n=e-t;return n?hr(t,n):Jt(isNaN(t)?e:t)}const Zt=function t(e){var n=dr(e);function r(i,o){var s=n((i=pt(i)).r,(o=pt(o)).r),a=n(i.g,o.g),l=n(i.b,o.b),c=Qt(i.opacity,o.opacity);return function(u){return i.r=s(u),i.g=a(u),i.b=l(u),i.opacity=c(u),i+""}}return r.gamma=t,r}(1);function A(t,e){return t=+t,e=+e,function(n){return t*(1-n)+e*n}}var mt=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,_t=new RegExp(mt.source,"g");function pr(t){return function(){return t}}function yr(t){return function(e){return t(e)+""}}function mr(t,e){var n=mt.lastIndex=_t.lastIndex=0,r,i,o,s=-1,a=[],l=[];for(t=t+"",e=e+"";(r=mt.exec(t))&&(i=_t.exec(e));)(o=i.index)>n&&(o=e.slice(n,o),a[s]?a[s]+=o:a[++s]=o),(r=r[0])===(i=i[0])?a[s]?a[s]+=i:a[++s]=i:(a[++s]=null,l.push({i:s,x:A(r,i)})),n=_t.lastIndex;return n<e.length&&(o=e.slice(n),a[s]?a[s]+=o:a[++s]=o),a.length<2?l[0]?yr(l[0].x):pr(e):(e=l.length,function(c){for(var u=0,f;u<e;++u)a[(f=l[u]).i]=f.x(c);return a.join("")})}var jt=180/Math.PI,vt={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1};function te(t,e,n,r,i,o){var s,a,l;return(s=Math.sqrt(t*t+e*e))&&(t/=s,e/=s),(l=t*n+e*r)&&(n-=t*l,r-=e*l),(a=Math.sqrt(n*n+r*r))&&(n/=a,r/=a,l/=a),t*r<e*n&&(t=-t,e=-e,l=-l,s=-s),{translateX:i,translateY:o,rotate:Math.atan2(e,t)*jt,skewX:Math.atan(l)*jt,scaleX:s,scaleY:a}}var et;function _r(t){const e=new(typeof DOMMatrix=="function"?DOMMatrix:WebKitCSSMatrix)(t+"");return e.isIdentity?vt:te(e.a,e.b,e.c,e.d,e.e,e.f)}function vr(t){return t==null||(et||(et=document.createElementNS("http://www.w3.org/2000/svg","g")),et.setAttribute("transform",t),!(t=et.transform.baseVal.consolidate()))?vt:(t=t.matrix,te(t.a,t.b,t.c,t.d,t.e,t.f))}function ee(t,e,n,r){function i(c){return c.length?c.pop()+" ":""}function o(c,u,f,h,g,p){if(c!==f||u!==h){var y=g.push("translate(",null,e,null,n);p.push({i:y-4,x:A(c,f)},{i:y-2,x:A(u,h)})}else(f||h)&&g.push("translate("+f+e+h+n)}function s(c,u,f,h){c!==u?(c-u>180?u+=360:u-c>180&&(c+=360),h.push({i:f.push(i(f)+"rotate(",null,r)-2,x:A(c,u)})):u&&f.push(i(f)+"rotate("+u+r)}function a(c,u,f,h){c!==u?h.push({i:f.push(i(f)+"skewX(",null,r)-2,x:A(c,u)}):u&&f.push(i(f)+"skewX("+u+r)}function l(c,u,f,h,g,p){if(c!==f||u!==h){var y=g.push(i(g)+"scale(",null,",",null,")");p.push({i:y-4,x:A(c,f)},{i:y-2,x:A(u,h)})}else(f!==1||h!==1)&&g.push(i(g)+"scale("+f+","+h+")")}return function(c,u){var f=[],h=[];return c=t(c),u=t(u),o(c.translateX,c.translateY,u.translateX,u.translateY,f,h),s(c.rotate,u.rotate,f,h),a(c.skewX,u.skewX,f,h),l(c.scaleX,c.scaleY,u.scaleX,u.scaleY,f,h),c=u=null,function(g){for(var p=-1,y=h.length,T;++p<y;)f[(T=h[p]).i]=T.x(g);return f.join("")}}}var wr=ee(_r,"px, ","px)","deg)"),xr=ee(vr,", ",")",")"),F=0,X=0,O=0,ne=1e3,nt,Y,rt=0,R=0,it=0,z=typeof performance=="object"&&performance.now?performance:Date,re=typeof window=="object"&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(t){setTimeout(t,17)};function wt(){return R||(re(br),R=z.now()+it)}function br(){R=0}function ot(){this._call=this._time=this._next=null}ot.prototype=ie.prototype={constructor:ot,restart:function(t,e,n){if(typeof t!="function")throw new TypeError("callback is not a function");n=(n==null?wt():+n)+(e==null?0:+e),!this._next&&Y!==this&&(Y?Y._next=this:nt=this,Y=this),this._call=t,this._time=n,xt()},stop:function(){this._call&&(this._call=null,this._time=1/0,xt())}};function ie(t,e,n){var r=new ot;return r.restart(t,e,n),r}function Sr(){wt(),++F;for(var t=nt,e;t;)(e=R-t._time)>=0&&t._call.call(void 0,e),t=t._next;--F}function oe(){R=(rt=z.now())+it,F=X=0;try{Sr()}finally{F=0,Cr(),R=0}}function Er(){var t=z.now(),e=t-rt;e>ne&&(it-=e,rt=t)}function Cr(){for(var t,e=nt,n,r=1/0;e;)e._call?(r>e._time&&(r=e._time),t=e,e=e._next):(n=e._next,e._next=null,e=t?t._next=n:nt=n);Y=t,xt(r)}function xt(t){if(!F){X&&(X=clearTimeout(X));var e=t-R;e>24?(t<1/0&&(X=setTimeout(oe,t-z.now()-it)),O&&(O=clearInterval(O))):(O||(rt=z.now(),O=setInterval(Er,ne)),F=1,re(oe))}}function se(t,e,n){var r=new ot;return e=e==null?0:+e,r.restart(i=>{r.stop(),t(i+e)},e,n),r}var Nr=k("start","end","cancel","interrupt"),kr=[],ae=0,le=1,bt=2,st=3,ce=4,St=5,at=6;function lt(t,e,n,r,i,o){var s=t.__transition;if(!s)t.__transition={};else if(n in s)return;Ar(t,n,{name:e,index:r,group:i,on:Nr,tween:kr,time:o.time,delay:o.delay,duration:o.duration,ease:o.ease,timer:null,state:ae})}function Et(t,e){var n=w(t,e);if(n.state>ae)throw new Error("too late; already scheduled");return n}function b(t,e){var n=w(t,e);if(n.state>st)throw new Error("too late; already running");return n}function w(t,e){var n=t.__transition;if(!n||!(n=n[e]))throw new Error("transition not found");return n}function Ar(t,e,n){var r=t.__transition,i;r[e]=n,n.timer=ie(o,0,n.time);function o(c){n.state=le,n.timer.restart(s,n.delay,n.time),n.delay<=c&&s(c-n.delay)}function s(c){var u,f,h,g;if(n.state!==le)return l();for(u in r)if(g=r[u],g.name===n.name){if(g.state===st)return se(s);g.state===ce?(g.state=at,g.timer.stop(),g.on.call("interrupt",t,t.__data__,g.index,g.group),delete r[u]):+u<e&&(g.state=at,g.timer.stop(),g.on.call("cancel",t,t.__data__,g.index,g.group),delete r[u])}if(se(function(){n.state===st&&(n.state=ce,n.timer.restart(a,n.delay,n.time),a(c))}),n.state=bt,n.on.call("start",t,t.__data__,n.index,n.group),n.state===bt){for(n.state=st,i=new Array(h=n.tween.length),u=0,f=-1;u<h;++u)(g=n.tween[u].value.call(t,t.__data__,n.index,n.group))&&(i[++f]=g);i.length=f+1}}function a(c){for(var u=c<n.duration?n.ease.call(null,c/n.duration):(n.timer.restart(l),n.state=St,1),f=-1,h=i.length;++f<h;)i[f].call(t,u);n.state===St&&(n.on.call("end",t,t.__data__,n.index,n.group),l())}function l(){n.state=at,n.timer.stop(),delete r[e];for(var c in r)return;delete t.__transition}}function $r(t,e){var n=t.__transition,r,i,o=!0,s;if(n){e=e==null?null:e+"";for(s in n){if((r=n[s]).name!==e){o=!1;continue}i=r.state>bt&&r.state<St,r.state=at,r.timer.stop(),r.on.call(i?"interrupt":"cancel",t,t.__data__,r.index,r.group),delete n[s]}o&&delete t.__transition}}function Gr(t){return this.each(function(){$r(this,t)})}function Rr(t,e){var n,r;return function(){var i=b(this,t),o=i.tween;if(o!==n){r=n=o;for(var s=0,a=r.length;s<a;++s)if(r[s].name===e){r=r.slice(),r.splice(s,1);break}}i.tween=r}}function Tr(t,e,n){var r,i;if(typeof n!="function")throw new Error;return function(){var o=b(this,t),s=o.tween;if(s!==r){i=(r=s).slice();for(var a={name:e,value:n},l=0,c=i.length;l<c;++l)if(i[l].name===e){i[l]=a;break}l===c&&i.push(a)}o.tween=i}}function Vr(t,e){var n=this._id;if(t+="",arguments.length<2){for(var r=w(this.node(),n).tween,i=0,o=r.length,s;i<o;++i)if((s=r[i]).name===t)return s.value;return null}return this.each((e==null?Rr:Tr)(n,t,e))}function Ct(t,e,n){var r=t._id;return t.each(function(){var i=b(this,r);(i.value||(i.value={}))[e]=n.apply(this,arguments)}),function(i){return w(i,r).value[e]}}function ue(t,e){var n;return(typeof e=="number"?A:e instanceof L?Zt:(n=L(e))?(e=n,Zt):mr)(t,e)}function Mr(t){return function(){this.removeAttribute(t)}}function Fr(t){return function(){this.removeAttributeNS(t.space,t.local)}}function Ir(t,e,n){var r,i=n+"",o;return function(){var s=this.getAttribute(t);return s===i?null:s===r?o:o=e(r=s,n)}}function Dr(t,e,n){var r,i=n+"",o;return function(){var s=this.getAttributeNS(t.space,t.local);return s===i?null:s===r?o:o=e(r=s,n)}}function Pr(t,e,n){var r,i,o;return function(){var s,a=n(this),l;return a==null?void this.removeAttribute(t):(s=this.getAttribute(t),l=a+"",s===l?null:s===r&&l===i?o:(i=l,o=e(r=s,a)))}}function qr(t,e,n){var r,i,o;return function(){var s,a=n(this),l;return a==null?void this.removeAttributeNS(t.space,t.local):(s=this.getAttributeNS(t.space,t.local),l=a+"",s===l?null:s===r&&l===i?o:(i=l,o=e(r=s,a)))}}function Hr(t,e){var n=W(t),r=n==="transform"?xr:ue;return this.attrTween(t,typeof e=="function"?(n.local?qr:Pr)(n,r,Ct(this,"attr."+t,e)):e==null?(n.local?Fr:Mr)(n):(n.local?Dr:Ir)(n,r,e))}function Lr(t,e){return function(n){this.setAttribute(t,e.call(this,n))}}function Xr(t,e){return function(n){this.setAttributeNS(t.space,t.local,e.call(this,n))}}function Or(t,e){var n,r;function i(){var o=e.apply(this,arguments);return o!==r&&(n=(r=o)&&Xr(t,o)),n}return i._value=e,i}function Yr(t,e){var n,r;function i(){var o=e.apply(this,arguments);return o!==r&&(n=(r=o)&&Lr(t,o)),n}return i._value=e,i}function zr(t,e){var n="attr."+t;if(arguments.length<2)return(n=this.tween(n))&&n._value;if(e==null)return this.tween(n,null);if(typeof e!="function")throw new Error;var r=W(t);return this.tween(n,(r.local?Or:Yr)(r,e))}function Br(t,e){return function(){Et(this,t).delay=+e.apply(this,arguments)}}function Ur(t,e){return e=+e,function(){Et(this,t).delay=e}}function Kr(t){var e=this._id;return arguments.length?this.each((typeof t=="function"?Br:Ur)(e,t)):w(this.node(),e).delay}function Wr(t,e){return function(){b(this,t).duration=+e.apply(this,arguments)}}function Jr(t,e){return e=+e,function(){b(this,t).duration=e}}function Qr(t){var e=this._id;return arguments.length?this.each((typeof t=="function"?Wr:Jr)(e,t)):w(this.node(),e).duration}function Zr(t,e){if(typeof e!="function")throw new Error;return function(){b(this,t).ease=e}}function jr(t){var e=this._id;return arguments.length?this.each(Zr(e,t)):w(this.node(),e).ease}function ti(t,e){return function(){var n=e.apply(this,arguments);if(typeof n!="function")throw new Error;b(this,t).ease=n}}function ei(t){if(typeof t!="function")throw new Error;return this.each(ti(this._id,t))}function ni(t){typeof t!="function"&&(t=Gt(t));for(var e=this._groups,n=e.length,r=new Array(n),i=0;i<n;++i)for(var o=e[i],s=o.length,a=r[i]=[],l,c=0;c<s;++c)(l=o[c])&&t.call(l,l.__data__,c,o)&&a.push(l);return new C(r,this._parents,this._name,this._id)}function ri(t){if(t._id!==this._id)throw new Error;for(var e=this._groups,n=t._groups,r=e.length,i=n.length,o=Math.min(r,i),s=new Array(r),a=0;a<o;++a)for(var l=e[a],c=n[a],u=l.length,f=s[a]=new Array(u),h,g=0;g<u;++g)(h=l[g]||c[g])&&(f[g]=h);for(;a<r;++a)s[a]=e[a];return new C(s,this._parents,this._name,this._id)}function ii(t){return(t+"").trim().split(/^|\s+/).every(function(e){var n=e.indexOf(".");return n>=0&&(e=e.slice(0,n)),!e||e==="start"})}function oi(t,e,n){var r,i,o=ii(e)?Et:b;return function(){var s=o(this,t),a=s.on;a!==r&&(i=(r=a).copy()).on(e,n),s.on=i}}function si(t,e){var n=this._id;return arguments.length<2?w(this.node(),n).on.on(t):this.each(oi(n,t,e))}function ai(t){return function(){var e=this.parentNode;for(var n in this.__transition)if(+n!==t)return;e&&e.removeChild(this)}}function li(){return this.on("end.remove",ai(this._id))}function ci(t){var e=this._name,n=this._id;typeof t!="function"&&(t=ht(t));for(var r=this._groups,i=r.length,o=new Array(i),s=0;s<i;++s)for(var a=r[s],l=a.length,c=o[s]=new Array(l),u,f,h=0;h<l;++h)(u=a[h])&&(f=t.call(u,u.__data__,h,a))&&("__data__"in u&&(f.__data__=u.__data__),c[h]=f,lt(c[h],e,n,h,c,w(u,n)));return new C(o,this._parents,e,n)}function ui(t){var e=this._name,n=this._id;typeof t!="function"&&(t=$t(t));for(var r=this._groups,i=r.length,o=[],s=[],a=0;a<i;++a)for(var l=r[a],c=l.length,u,f=0;f<c;++f)if(u=l[f]){for(var h=t.call(u,u.__data__,f,l),g,p=w(u,n),y=0,T=h.length;y<T;++y)(g=h[y])&&lt(g,e,n,y,h,p);o.push(h),s.push(u)}return new C(o,s,e,n)}var fi=D.prototype.constructor;function hi(){return new fi(this._groups,this._parents)}function gi(t,e){var n,r,i;return function(){var o=V(this,t),s=(this.style.removeProperty(t),V(this,t));return o===s?null:o===n&&s===r?i:i=e(n=o,r=s)}}function fe(t){return function(){this.style.removeProperty(t)}}function di(t,e,n){var r,i=n+"",o;return function(){var s=V(this,t);return s===i?null:s===r?o:o=e(r=s,n)}}function pi(t,e,n){var r,i,o;return function(){var s=V(this,t),a=n(this),l=a+"";return a==null&&(l=a=(this.style.removeProperty(t),V(this,t))),s===l?null:s===r&&l===i?o:(i=l,o=e(r=s,a))}}function yi(t,e){var n,r,i,o="style."+e,s="end."+o,a;return function(){var l=b(this,t),c=l.on,u=l.value[o]==null?a||(a=fe(e)):void 0;(c!==n||i!==u)&&(r=(n=c).copy()).on(s,i=u),l.on=r}}function mi(t,e,n){var r=(t+="")=="transform"?wr:ue;return e==null?this.styleTween(t,gi(t,r)).on("end.style."+t,fe(t)):typeof e=="function"?this.styleTween(t,pi(t,r,Ct(this,"style."+t,e))).each(yi(this._id,t)):this.styleTween(t,di(t,r,e),n).on("end.style."+t,null)}function _i(t,e,n){return function(r){this.style.setProperty(t,e.call(this,r),n)}}function vi(t,e,n){var r,i;function o(){var s=e.apply(this,arguments);return s!==i&&(r=(i=s)&&_i(t,s,n)),r}return o._value=e,o}function wi(t,e,n){var r="style."+(t+="");if(arguments.length<2)return(r=this.tween(r))&&r._value;if(e==null)return this.tween(r,null);if(typeof e!="function")throw new Error;return this.tween(r,vi(t,e,n??""))}function xi(t){return function(){this.textContent=t}}function bi(t){return function(){var e=t(this);this.textContent=e??""}}function Si(t){return this.tween("text",typeof t=="function"?bi(Ct(this,"text",t)):xi(t==null?"":t+""))}function Ei(t){return function(e){this.textContent=t.call(this,e)}}function Ci(t){var e,n;function r(){var i=t.apply(this,arguments);return i!==n&&(e=(n=i)&&Ei(i)),e}return r._value=t,r}function Ni(t){var e="text";if(arguments.length<1)return(e=this.tween(e))&&e._value;if(t==null)return this.tween(e,null);if(typeof t!="function")throw new Error;return this.tween(e,Ci(t))}function ki(){for(var t=this._name,e=this._id,n=he(),r=this._groups,i=r.length,o=0;o<i;++o)for(var s=r[o],a=s.length,l,c=0;c<a;++c)if(l=s[c]){var u=w(l,e);lt(l,t,n,c,s,{time:u.time+u.delay+u.duration,delay:0,duration:u.duration,ease:u.ease})}return new C(r,this._parents,t,n)}function Ai(){var t,e,n=this,r=n._id,i=n.size();return new Promise(function(o,s){var a={value:s},l={value:function(){--i===0&&o()}};n.each(function(){var c=b(this,r),u=c.on;u!==t&&(e=(t=u).copy(),e._.cancel.push(a),e._.interrupt.push(a),e._.end.push(l)),c.on=e}),i===0&&o()})}var $i=0;function C(t,e,n,r){this._groups=t,this._parents=e,this._name=n,this._id=r}function he(){return++$i}var N=D.prototype;C.prototype={constructor:C,select:ci,selectAll:ui,selectChild:N.selectChild,selectChildren:N.selectChildren,filter:ni,merge:ri,selection:hi,transition:ki,call:N.call,nodes:N.nodes,node:N.node,size:N.size,empty:N.empty,each:N.each,on:si,attr:Hr,attrTween:zr,style:mi,styleTween:wi,text:Si,textTween:Ni,remove:li,tween:Vr,delay:Kr,duration:Qr,ease:jr,easeVarying:ei,end:Ai,[Symbol.iterator]:N[Symbol.iterator]};const Gi=t=>+t;function Ri(t){return((t*=2)<=1?t*t*t:(t-=2)*t*t+2)/2}var Ti={time:null,delay:0,duration:250,ease:Ri};function Vi(t,e){for(var n;!(n=t.__transition)||!(n=n[e]);)if(!(t=t.parentNode))throw new Error(`transition ${e} not found`);return n}function Mi(t){var e,n;t instanceof C?(e=t._id,t=t._name):(e=he(),(n=Ti).time=wt(),t=t==null?null:t+"");for(var r=this._groups,i=r.length,o=0;o<i;++o)for(var s=r[o],a=s.length,l,c=0;c<a;++c)(l=s[c])&&lt(l,t,e,c,s,n||Vi(l,e));return new C(r,this._parents,t,e)}D.prototype.interrupt=Gr,D.prototype.transition=Mi;function B(t,e,n){this.k=t,this.x=e,this.y=n}B.prototype={constructor:B,scale:function(t){return t===1?this:new B(this.k*t,this.x,this.y)},translate:function(t,e){return t===0&e===0?this:new B(this.k,this.x+this.k*t,this.y+this.k*e)},apply:function(t){return[t[0]*this.k+this.x,t[1]*this.k+this.y]},applyX:function(t){return t*this.k+this.x},applyY:function(t){return t*this.k+this.y},invert:function(t){return[(t[0]-this.x)/this.k,(t[1]-this.y)/this.k]},invertX:function(t){return(t-this.x)/this.k},invertY:function(t){return(t-this.y)/this.k},rescaleX:function(t){return t.copy().domain(t.range().map(this.invertX,this).map(t.invert,t))},rescaleY:function(t){return t.copy().domain(t.range().map(this.invertY,this).map(t.invert,t))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}},B.prototype;const d=(t,e)=>{const n=document.querySelector(t);if(n===null)throw new Error("Cannot find selector "+t);if(e!==void 0&&!(n instanceof e))throw new Error(`Selector ${t} not of type ${e}`);return n},Fi=t=>{const e=d("svg.fitts g.big-target1",SVGGElement);t.createCircle(e,40,50,35),t.createCircle(e,40,50,25),t.createCircle(e,40,50,15),t.createCircle(e,40,50,5);const n=d("svg.fitts g.big-target2",SVGGElement);t.createCircle(n,40,50,35),t.createCircle(n,40,50,25),t.createCircle(n,40,50,15),t.createCircle(n,40,50,5);const r=d("svg.fitts g.small-target",SVGGElement);t.createCircle(r,40,50,5)},Ii=t=>{const e=d("svg.purpose g.target",SVGGElement);t.createCircle(e,150,50,40),t.createCircle(e,150,50,30),t.createCircle(e,150,50,20),t.createCircle(e,150,50,10),t.createCircle(e,150,50,1)},Di=t=>{const e=d("svg.hick g.choice-01",SVGGElement);t.createForm(e,"polygon",{points:"0,0 0,0 0,0 0,0"},{points:"0,0 0,40 40,40"},{duration:300,delay:t.getDelay()});const n=d("svg.hick g.choice-02",SVGGElement);t.createForm(n,"polygon",{points:"0,0 0,0 0,0 0,0"},{points:"0,0 0,40 40,40 40,0"},{duration:300,delay:t.getDelay()});const r=d("svg.hick g.choice-03",SVGGElement);t.createForm(r,"polygon",{points:"0,0 0,0 0,0 0,0"},{points:"0,40 40,40 40,0"},{duration:300,delay:t.getDelay()});const i=d("svg.hick g.choice-04",SVGGElement);t.createForm(i,"polygon",{points:"0,0 0,0 0,0 0,0"},{points:"0,0 20,40 40,0"},{duration:300,delay:t.getDelay()});const o=d("svg.hick g.choice-05",SVGGElement);t.createForm(o,"polygon",{points:"0,0 0,0 0,0 0,0"},{points:"0,0 0,40 40,20"},{duration:300,delay:t.getDelay()});const s=d("svg.hick g.choice-06",SVGGElement);t.createForm(s,"polygon",{points:"0,0 0,0 0,0 0,0"},{points:"0,40 40,40 20,0"},{duration:300,delay:t.getDelay()})},Pi=t=>{const e=d("svg.jakob g.app-1",SVGGElement);t.createCircle(e,40,50,35);const n=d("svg.jakob g.app-2",SVGGElement);t.createCircle(n,40,50,35);const r=d("svg.jakob g.your-app",SVGGElement);t.createCircle(r,40,50,35)},qi=t=>{const e=d("svg.gradient g",SVGGElement);t.createRect(e,5,30,40,40,1),t.createRect(e,50,30,40,40,2),t.createRect(e,95,30,40,40,3),t.createRect(e,140,30,40,40,4),t.createRect(e,185,30,40,40,5),t.createRect(e,230,30,40,40,6)},Hi=t=>{const e=d("svg.gestalt g",SVGGElement);for(let n=0;n<5;n++)for(let r=0;r<4;r++)t.createCircle(e,n*20+100,r*20+20,5,{class:"full",delay:0,duration:300})},Li=t=>{const e=d("svg.proximity g",SVGGElement);for(let n=0;n<5;n++)for(let r=0;r<4;r++){const i=n>1&&r<2?8:0;t.createCircle(e,n*20+100+i,r*20+20-i,5,{class:"full",delay:0,duration:300})}},Xi=t=>{const e=d("svg.similarity g",SVGGElement);for(let n=0;n<5;n++)for(let r=0;r<4;r++){const i=n>1&&r<2?"xxx":"full";t.createCircle(e,n*20+100,r*20+20,5,{class:i,delay:0,duration:300})}},Oi=t=>{const e=d("svg.commonRegion g",SVGGElement);t.createRect(e,100+32,12,57,37,2);for(let n=0;n<5;n++)for(let r=0;r<4;r++)t.createCircle(e,n*20+100,r*20+20,5,{class:"full",delay:0,duration:300})},Yi=t=>{const e=d("svg.simplicity g",SVGGElement);t.createRect(e,100+32,12,57,37,2),t.createRect(e,100-8,12,97,77,2)},zi=t=>{const e=d("svg.miller g",SVGGElement);t.createCircle(e,130,20,5,{class:"full"}),t.createCircle(e,150,20,5,{class:"full"}),t.createCircle(e,170,20,5,{class:"full"}),t.createCircle(e,170,40,5,{class:"full"}),t.createCircle(e,170,60,5,{class:"full"}),t.createCircle(e,170,80,5,{class:"full"})},Bi=t=>{const e=d("svg.tesler g",SVGGElement);for(let n=0;n<6;n++)t.createCircle(e,100+n*20,20,5,{class:n>=3?"empty":"full"});for(let n=0;n<6;n++)t.createCircle(e,100+n*20,50,5,{class:n%2?"empty":"full"});for(let n=0;n<6;n++)t.createCircle(e,100+n*20,80,5,{class:n<3?"empty":"full"})},Ui=t=>{const e=d("svg.postel g",SVGGElement);t.createCircle(e,80,50,35,{class:"full"}),t.createCircle(e,220,50,35,{class:"empty"})},Ki=t=>{const e=d("svg.zeigarnik g",SVGGElement);for(let n=1;n<5;n++)t.createRect(e,50,n*15,200,10,6,"emptyrect");t.createRect(e,50,5*15,150,10,6,"fullrect")},Wi=t=>{const e=d("svg.vonRestorff g",SVGGElement);for(let n=0;n<5;n++)for(let r=0;r<4;r++){const i=n===2&&r===2?"xxx":"full";t.createCircle(e,n*20+100,r*20+20,5,{class:i,delay:0,duration:300})}},ct="20,10, 20,20 10,30, 20,40 20,50, 10,50 10,60 20,60 20,70 20,80 10,90",ge={fitts:[Fi],purpose:[Ii],hick:[Di],jakob:[Pi],gradient:[qi],gestalt:[Hi],proximity:[Li],similarity:[Xi],commonRegion:[Oi],simplicity:[Yi],miller:[zi],tesler:[Bi],postel:[Ui],zeigarnik:[Ki],vonRestorff:[Wi],symetrie:[t=>{const e=d(".symetrie svg g",SVGGElement);e.innerHTML=`
<g class="p1" transform="translate(60)"></g>
<g class="p2" transform="translate(80)"></g>
<g class="p3" transform="translate(180)"></g>
<g class="p4" transform="translate(230) scale(-1, 1)"></g>
`;const n=d(".symetrie svg g.p1",SVGGElement);t.createPolyline(n,ct,"empty");const r=d(".symetrie svg g.p2",SVGGElement);t.createPolyline(r,ct,"empty");const i=d(".symetrie svg g.p3",SVGGElement);t.createPolyline(i,ct,"empty");const o=d(".symetrie svg g.p4",SVGGElement);t.createPolyline(o,ct,"empty")}],serialPosition:[t=>{const e=d(".serialPosition svg g",SVGGElement);for(let n=0;n<7;n++){const r=n===0||n===6?"full":"empty";t.createCircle(e,n*40+30,50,20,{class:r,delay:0,duration:300})}}],pareto:[t=>{const e=d(".pareto svg g",SVGGElement);t.createRect(e,50,40,50,20,6,"empty"),t.createRect(e,150,10,100,80,6,"empty")}],peakEnd:[t=>{const e=d(".peakEnd svg g",SVGGElement);for(let n=0;n<5;n++)for(let r=0;r<4;r++){const i=n===1&&r===1||n===4&&r===3?"empty":"full";t.createCircle(e,n*20+100,r*20+20,5,{class:i})}}]},de=new Set;for(const t of Object.values(ge))for(const e of t)de.add(e);const Ji=[...de];class Qi{constructor(){I(this,"delayCounter",0);I(this,"delayIncrement",100);I(this,"useTransition",!1);I(this,"svgName");I(this,"createForm",(e,n,r,i,o)=>{const s={duration:2e3,delay:1e3,class:"",...o};this.useTransition||(s.delay=0,s.duration=0);const a=jn(e).append(n);for(const[c,u]of Object.entries(r))a.attr(c,u);s.class&&a.attr("class",s.class);const l=a.transition().duration(s.duration).delay(s.delay).ease(Gi);for(const[c,u]of Object.entries(i))l.attr(c,u)});this.initSvgName()}initSvgName(){const e=window.uxlawImageName,n=window.uxlawClassName,r=e==="default"?n:e;if(r){this.svgName=r,this.useTransition=!0;return}this.useTransition=!1}initSvg(){const e=this.svgName?ge[this.svgName]:Ji;if(e!==void 0)for(const n of e)n(this)}getDelay(){return this.delayCounter+=this.delayIncrement,this.delayCounter}createCircle(e,n,r,i,o){const s={duration:300,delay:this.getDelay(),...o};return this.createForm(e,"circle",{cx:n,cy:r,r:0},{r:i},s)}createPolygon(e,n){return this.createForm(e,"polygon",{points:""},{points:n},{duration:300,delay:this.getDelay()})}createPolyline(e,n,r="full"){return this.createForm(e,"polyline",{points:""},{points:n},{duration:300,delay:this.getDelay(),class:r})}createRect(e,n,r,i,o,s=6,a="empty"){return this.createForm(e,"rect",{x:n,y:r,width:i,height:0,opacity:s*(1/6)},{height:o},{duration:300,delay:this.getDelay(),class:a})}}const Zi=()=>{ji(),document.documentElement.style.setProperty("--primary-color","hsl(120, 100%, 25%)"),document.documentElement.style.setProperty("--fill-color","hsla(120, 0%, 25%, 0.1)"),to()},ji=()=>{const t=window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches,e=document.body.classList;t?e.add("dark"):e.add("light"),window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change",n=>{const r=n.matches?"dark":"light";console.log("colorScheme: ",r),e.remove("dark"),e.remove("light"),r==="dark"?e.add("dark"):e.add("light")})};window.toggleUglyTheme=()=>{let t=localStorage.getItem("theme");t=t!=="ugly"?"ugly":"default",localStorage.setItem("theme",t),console.log("update theme to "+t),document.body.classList.remove("ugly"),document.body.classList.remove("default"),document.body.classList.add(t),pe()};const to=()=>{let t=localStorage.getItem("theme");t=t!=="ugly"?"default":"ugly",document.body.classList.add(t),pe()},pe=()=>{let t=localStorage.getItem("theme");const e=t==="ugly"?"Remettre l'esthétique":"Enlever l'esthétique",n=document.querySelector("button.toggle-theme");n&&(n.innerHTML=e);const r=d("header div.ugly-theme");r.innerHTML=t!=="ugly"?"":`
<button onClick="window.toggleUglyTheme()"> 
  Remettre l'esthétique
</button>
    `};Zi(),new Qi().initSvg()});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLnVtZC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2QzLWRpc3BhdGNoL3NyYy9kaXNwYXRjaC5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL25hbWVzcGFjZXMuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9uYW1lc3BhY2UuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9jcmVhdG9yLmpzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0b3IuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vc2VsZWN0LmpzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvYXJyYXkuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3RvckFsbC5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9zZWxlY3RBbGwuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9tYXRjaGVyLmpzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL3NlbGVjdENoaWxkLmpzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL3NlbGVjdENoaWxkcmVuLmpzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL2ZpbHRlci5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9zcGFyc2UuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vZW50ZXIuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9jb25zdGFudC5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9kYXRhLmpzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL2V4aXQuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vam9pbi5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9tZXJnZS5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9vcmRlci5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9zb3J0LmpzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL2NhbGwuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vbm9kZXMuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vbm9kZS5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9zaXplLmpzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL2VtcHR5LmpzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL2VhY2guanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vYXR0ci5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3dpbmRvdy5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9zdHlsZS5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9wcm9wZXJ0eS5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9jbGFzc2VkLmpzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL3RleHQuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vaHRtbC5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9yYWlzZS5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9sb3dlci5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9hcHBlbmQuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vaW5zZXJ0LmpzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL3JlbW92ZS5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9jbG9uZS5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9kYXR1bS5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9vbi5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9kaXNwYXRjaC5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9pdGVyYXRvci5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9pbmRleC5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdC5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1jb2xvci9zcmMvZGVmaW5lLmpzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2QzLWNvbG9yL3NyYy9jb2xvci5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvY29uc3RhbnQuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtaW50ZXJwb2xhdGUvc3JjL2NvbG9yLmpzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2QzLWludGVycG9sYXRlL3NyYy9yZ2IuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtaW50ZXJwb2xhdGUvc3JjL251bWJlci5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvc3RyaW5nLmpzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2QzLWludGVycG9sYXRlL3NyYy90cmFuc2Zvcm0vZGVjb21wb3NlLmpzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2QzLWludGVycG9sYXRlL3NyYy90cmFuc2Zvcm0vcGFyc2UuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtaW50ZXJwb2xhdGUvc3JjL3RyYW5zZm9ybS9pbmRleC5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy10aW1lci9zcmMvdGltZXIuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtdGltZXIvc3JjL3RpbWVvdXQuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi9zY2hlZHVsZS5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy9pbnRlcnJ1cHQuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvc2VsZWN0aW9uL2ludGVycnVwdC5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy90cmFuc2l0aW9uL3R3ZWVuLmpzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vaW50ZXJwb2xhdGUuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi9hdHRyLmpzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vYXR0clR3ZWVuLmpzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vZGVsYXkuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi9kdXJhdGlvbi5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy90cmFuc2l0aW9uL2Vhc2UuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi9lYXNlVmFyeWluZy5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy90cmFuc2l0aW9uL2ZpbHRlci5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy90cmFuc2l0aW9uL21lcmdlLmpzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vb24uanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi9yZW1vdmUuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi9zZWxlY3QuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi9zZWxlY3RBbGwuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi9zZWxlY3Rpb24uanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi9zdHlsZS5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy90cmFuc2l0aW9uL3N0eWxlVHdlZW4uanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi90ZXh0LmpzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vdGV4dFR3ZWVuLmpzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vdHJhbnNpdGlvbi5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy90cmFuc2l0aW9uL2VuZC5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy90cmFuc2l0aW9uL2luZGV4LmpzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2QzLWVhc2Uvc3JjL2xpbmVhci5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy1lYXNlL3NyYy9jdWJpYy5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy9zZWxlY3Rpb24vdHJhbnNpdGlvbi5qcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy9zZWxlY3Rpb24vaW5kZXguanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZDMtem9vbS9zcmMvdHJhbnNmb3JtLmpzIiwiLi4vLi4vLi4vc3JjL21pc2MudHMiLCIuLi8uLi8uLi9zcmMvc3Zncy9maXR0cy50cyIsIi4uLy4uLy4uL3NyYy9zdmdzL3B1cnBvc2UudHMiLCIuLi8uLi8uLi9zcmMvc3Zncy9oaWNrLnRzIiwiLi4vLi4vLi4vc3JjL3N2Z3MvamFrb2IudHMiLCIuLi8uLi8uLi9zcmMvc3Zncy9ncmFkaWVudC50cyIsIi4uLy4uLy4uL3NyYy9zdmdzL2dlc3RhbHQudHMiLCIuLi8uLi8uLi9zcmMvc3Zncy9wcm94aW1pdHkudHMiLCIuLi8uLi8uLi9zcmMvc3Zncy9zaW1pbGFyaXR5LnRzIiwiLi4vLi4vLi4vc3JjL3N2Z3MvY29tbW9uUmVnaW9uLnRzIiwiLi4vLi4vLi4vc3JjL3N2Z3Mvc2ltcGxpY2l0eS50cyIsIi4uLy4uLy4uL3NyYy9zdmdzL21pbGxlci50cyIsIi4uLy4uLy4uL3NyYy9zdmdzL3Rlc2xlci50cyIsIi4uLy4uLy4uL3NyYy9zdmdzL3Bvc3RlbC50cyIsIi4uLy4uLy4uL3NyYy9zdmdzL3plaWdhcm5pay50cyIsIi4uLy4uLy4uL3NyYy9zdmdzL3ZvblJlc3RvcmZmLnRzIiwiLi4vLi4vLi4vc3JjL3N2Z3Mvc3ltZXRyaWUudHMiLCIuLi8uLi8uLi9zcmMvc3ZnQ29uZmlnLnRzIiwiLi4vLi4vLi4vc3JjL3N2Z3Mvc2VyaWFsUG9zaXRpb24udHMiLCIuLi8uLi8uLi9zcmMvc3Zncy9wYXJldG8udHMiLCIuLi8uLi8uLi9zcmMvc3Zncy9wZWFrRW5kLnRzIiwiLi4vLi4vLi4vc3JjL1NWR1Rvb2wudHMiLCIuLi8uLi8uLi9zcmMvdGhlbWUudHMiLCIuLi8uLi8uLi9zcmMvbWFpbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbm9vcCA9IHt2YWx1ZTogKCkgPT4ge319O1xuXG5mdW5jdGlvbiBkaXNwYXRjaCgpIHtcbiAgZm9yICh2YXIgaSA9IDAsIG4gPSBhcmd1bWVudHMubGVuZ3RoLCBfID0ge30sIHQ7IGkgPCBuOyArK2kpIHtcbiAgICBpZiAoISh0ID0gYXJndW1lbnRzW2ldICsgXCJcIikgfHwgKHQgaW4gXykgfHwgL1tcXHMuXS8udGVzdCh0KSkgdGhyb3cgbmV3IEVycm9yKFwiaWxsZWdhbCB0eXBlOiBcIiArIHQpO1xuICAgIF9bdF0gPSBbXTtcbiAgfVxuICByZXR1cm4gbmV3IERpc3BhdGNoKF8pO1xufVxuXG5mdW5jdGlvbiBEaXNwYXRjaChfKSB7XG4gIHRoaXMuXyA9IF87XG59XG5cbmZ1bmN0aW9uIHBhcnNlVHlwZW5hbWVzKHR5cGVuYW1lcywgdHlwZXMpIHtcbiAgcmV0dXJuIHR5cGVuYW1lcy50cmltKCkuc3BsaXQoL158XFxzKy8pLm1hcChmdW5jdGlvbih0KSB7XG4gICAgdmFyIG5hbWUgPSBcIlwiLCBpID0gdC5pbmRleE9mKFwiLlwiKTtcbiAgICBpZiAoaSA+PSAwKSBuYW1lID0gdC5zbGljZShpICsgMSksIHQgPSB0LnNsaWNlKDAsIGkpO1xuICAgIGlmICh0ICYmICF0eXBlcy5oYXNPd25Qcm9wZXJ0eSh0KSkgdGhyb3cgbmV3IEVycm9yKFwidW5rbm93biB0eXBlOiBcIiArIHQpO1xuICAgIHJldHVybiB7dHlwZTogdCwgbmFtZTogbmFtZX07XG4gIH0pO1xufVxuXG5EaXNwYXRjaC5wcm90b3R5cGUgPSBkaXNwYXRjaC5wcm90b3R5cGUgPSB7XG4gIGNvbnN0cnVjdG9yOiBEaXNwYXRjaCxcbiAgb246IGZ1bmN0aW9uKHR5cGVuYW1lLCBjYWxsYmFjaykge1xuICAgIHZhciBfID0gdGhpcy5fLFxuICAgICAgICBUID0gcGFyc2VUeXBlbmFtZXModHlwZW5hbWUgKyBcIlwiLCBfKSxcbiAgICAgICAgdCxcbiAgICAgICAgaSA9IC0xLFxuICAgICAgICBuID0gVC5sZW5ndGg7XG5cbiAgICAvLyBJZiBubyBjYWxsYmFjayB3YXMgc3BlY2lmaWVkLCByZXR1cm4gdGhlIGNhbGxiYWNrIG9mIHRoZSBnaXZlbiB0eXBlIGFuZCBuYW1lLlxuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMikge1xuICAgICAgd2hpbGUgKCsraSA8IG4pIGlmICgodCA9ICh0eXBlbmFtZSA9IFRbaV0pLnR5cGUpICYmICh0ID0gZ2V0KF9bdF0sIHR5cGVuYW1lLm5hbWUpKSkgcmV0dXJuIHQ7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gSWYgYSB0eXBlIHdhcyBzcGVjaWZpZWQsIHNldCB0aGUgY2FsbGJhY2sgZm9yIHRoZSBnaXZlbiB0eXBlIGFuZCBuYW1lLlxuICAgIC8vIE90aGVyd2lzZSwgaWYgYSBudWxsIGNhbGxiYWNrIHdhcyBzcGVjaWZpZWQsIHJlbW92ZSBjYWxsYmFja3Mgb2YgdGhlIGdpdmVuIG5hbWUuXG4gICAgaWYgKGNhbGxiYWNrICE9IG51bGwgJiYgdHlwZW9mIGNhbGxiYWNrICE9PSBcImZ1bmN0aW9uXCIpIHRocm93IG5ldyBFcnJvcihcImludmFsaWQgY2FsbGJhY2s6IFwiICsgY2FsbGJhY2spO1xuICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICBpZiAodCA9ICh0eXBlbmFtZSA9IFRbaV0pLnR5cGUpIF9bdF0gPSBzZXQoX1t0XSwgdHlwZW5hbWUubmFtZSwgY2FsbGJhY2spO1xuICAgICAgZWxzZSBpZiAoY2FsbGJhY2sgPT0gbnVsbCkgZm9yICh0IGluIF8pIF9bdF0gPSBzZXQoX1t0XSwgdHlwZW5hbWUubmFtZSwgbnVsbCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH0sXG4gIGNvcHk6IGZ1bmN0aW9uKCkge1xuICAgIHZhciBjb3B5ID0ge30sIF8gPSB0aGlzLl87XG4gICAgZm9yICh2YXIgdCBpbiBfKSBjb3B5W3RdID0gX1t0XS5zbGljZSgpO1xuICAgIHJldHVybiBuZXcgRGlzcGF0Y2goY29weSk7XG4gIH0sXG4gIGNhbGw6IGZ1bmN0aW9uKHR5cGUsIHRoYXQpIHtcbiAgICBpZiAoKG4gPSBhcmd1bWVudHMubGVuZ3RoIC0gMikgPiAwKSBmb3IgKHZhciBhcmdzID0gbmV3IEFycmF5KG4pLCBpID0gMCwgbiwgdDsgaSA8IG47ICsraSkgYXJnc1tpXSA9IGFyZ3VtZW50c1tpICsgMl07XG4gICAgaWYgKCF0aGlzLl8uaGFzT3duUHJvcGVydHkodHlwZSkpIHRocm93IG5ldyBFcnJvcihcInVua25vd24gdHlwZTogXCIgKyB0eXBlKTtcbiAgICBmb3IgKHQgPSB0aGlzLl9bdHlwZV0sIGkgPSAwLCBuID0gdC5sZW5ndGg7IGkgPCBuOyArK2kpIHRbaV0udmFsdWUuYXBwbHkodGhhdCwgYXJncyk7XG4gIH0sXG4gIGFwcGx5OiBmdW5jdGlvbih0eXBlLCB0aGF0LCBhcmdzKSB7XG4gICAgaWYgKCF0aGlzLl8uaGFzT3duUHJvcGVydHkodHlwZSkpIHRocm93IG5ldyBFcnJvcihcInVua25vd24gdHlwZTogXCIgKyB0eXBlKTtcbiAgICBmb3IgKHZhciB0ID0gdGhpcy5fW3R5cGVdLCBpID0gMCwgbiA9IHQubGVuZ3RoOyBpIDwgbjsgKytpKSB0W2ldLnZhbHVlLmFwcGx5KHRoYXQsIGFyZ3MpO1xuICB9XG59O1xuXG5mdW5jdGlvbiBnZXQodHlwZSwgbmFtZSkge1xuICBmb3IgKHZhciBpID0gMCwgbiA9IHR5cGUubGVuZ3RoLCBjOyBpIDwgbjsgKytpKSB7XG4gICAgaWYgKChjID0gdHlwZVtpXSkubmFtZSA9PT0gbmFtZSkge1xuICAgICAgcmV0dXJuIGMudmFsdWU7XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIHNldCh0eXBlLCBuYW1lLCBjYWxsYmFjaykge1xuICBmb3IgKHZhciBpID0gMCwgbiA9IHR5cGUubGVuZ3RoOyBpIDwgbjsgKytpKSB7XG4gICAgaWYgKHR5cGVbaV0ubmFtZSA9PT0gbmFtZSkge1xuICAgICAgdHlwZVtpXSA9IG5vb3AsIHR5cGUgPSB0eXBlLnNsaWNlKDAsIGkpLmNvbmNhdCh0eXBlLnNsaWNlKGkgKyAxKSk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgaWYgKGNhbGxiYWNrICE9IG51bGwpIHR5cGUucHVzaCh7bmFtZTogbmFtZSwgdmFsdWU6IGNhbGxiYWNrfSk7XG4gIHJldHVybiB0eXBlO1xufVxuXG5leHBvcnQgZGVmYXVsdCBkaXNwYXRjaDtcbiIsImV4cG9ydCB2YXIgeGh0bWwgPSBcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIjtcblxuZXhwb3J0IGRlZmF1bHQge1xuICBzdmc6IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIixcbiAgeGh0bWw6IHhodG1sLFxuICB4bGluazogXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIsXG4gIHhtbDogXCJodHRwOi8vd3d3LnczLm9yZy9YTUwvMTk5OC9uYW1lc3BhY2VcIixcbiAgeG1sbnM6IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC94bWxucy9cIlxufTtcbiIsImltcG9ydCBuYW1lc3BhY2VzIGZyb20gXCIuL25hbWVzcGFjZXMuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obmFtZSkge1xuICB2YXIgcHJlZml4ID0gbmFtZSArPSBcIlwiLCBpID0gcHJlZml4LmluZGV4T2YoXCI6XCIpO1xuICBpZiAoaSA+PSAwICYmIChwcmVmaXggPSBuYW1lLnNsaWNlKDAsIGkpKSAhPT0gXCJ4bWxuc1wiKSBuYW1lID0gbmFtZS5zbGljZShpICsgMSk7XG4gIHJldHVybiBuYW1lc3BhY2VzLmhhc093blByb3BlcnR5KHByZWZpeCkgPyB7c3BhY2U6IG5hbWVzcGFjZXNbcHJlZml4XSwgbG9jYWw6IG5hbWV9IDogbmFtZTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1wcm90b3R5cGUtYnVpbHRpbnNcbn1cbiIsImltcG9ydCBuYW1lc3BhY2UgZnJvbSBcIi4vbmFtZXNwYWNlLmpzXCI7XG5pbXBvcnQge3hodG1sfSBmcm9tIFwiLi9uYW1lc3BhY2VzLmpzXCI7XG5cbmZ1bmN0aW9uIGNyZWF0b3JJbmhlcml0KG5hbWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciBkb2N1bWVudCA9IHRoaXMub3duZXJEb2N1bWVudCxcbiAgICAgICAgdXJpID0gdGhpcy5uYW1lc3BhY2VVUkk7XG4gICAgcmV0dXJuIHVyaSA9PT0geGh0bWwgJiYgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50Lm5hbWVzcGFjZVVSSSA9PT0geGh0bWxcbiAgICAgICAgPyBkb2N1bWVudC5jcmVhdGVFbGVtZW50KG5hbWUpXG4gICAgICAgIDogZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHVyaSwgbmFtZSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGNyZWF0b3JGaXhlZChmdWxsbmFtZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMub3duZXJEb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoZnVsbG5hbWUuc3BhY2UsIGZ1bGxuYW1lLmxvY2FsKTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obmFtZSkge1xuICB2YXIgZnVsbG5hbWUgPSBuYW1lc3BhY2UobmFtZSk7XG4gIHJldHVybiAoZnVsbG5hbWUubG9jYWxcbiAgICAgID8gY3JlYXRvckZpeGVkXG4gICAgICA6IGNyZWF0b3JJbmhlcml0KShmdWxsbmFtZSk7XG59XG4iLCJmdW5jdGlvbiBub25lKCkge31cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc2VsZWN0b3IpIHtcbiAgcmV0dXJuIHNlbGVjdG9yID09IG51bGwgPyBub25lIDogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMucXVlcnlTZWxlY3RvcihzZWxlY3Rvcik7XG4gIH07XG59XG4iLCJpbXBvcnQge1NlbGVjdGlvbn0gZnJvbSBcIi4vaW5kZXguanNcIjtcbmltcG9ydCBzZWxlY3RvciBmcm9tIFwiLi4vc2VsZWN0b3IuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc2VsZWN0KSB7XG4gIGlmICh0eXBlb2Ygc2VsZWN0ICE9PSBcImZ1bmN0aW9uXCIpIHNlbGVjdCA9IHNlbGVjdG9yKHNlbGVjdCk7XG5cbiAgZm9yICh2YXIgZ3JvdXBzID0gdGhpcy5fZ3JvdXBzLCBtID0gZ3JvdXBzLmxlbmd0aCwgc3ViZ3JvdXBzID0gbmV3IEFycmF5KG0pLCBqID0gMDsgaiA8IG07ICsraikge1xuICAgIGZvciAodmFyIGdyb3VwID0gZ3JvdXBzW2pdLCBuID0gZ3JvdXAubGVuZ3RoLCBzdWJncm91cCA9IHN1Ymdyb3Vwc1tqXSA9IG5ldyBBcnJheShuKSwgbm9kZSwgc3Vibm9kZSwgaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmICgobm9kZSA9IGdyb3VwW2ldKSAmJiAoc3Vibm9kZSA9IHNlbGVjdC5jYWxsKG5vZGUsIG5vZGUuX19kYXRhX18sIGksIGdyb3VwKSkpIHtcbiAgICAgICAgaWYgKFwiX19kYXRhX19cIiBpbiBub2RlKSBzdWJub2RlLl9fZGF0YV9fID0gbm9kZS5fX2RhdGFfXztcbiAgICAgICAgc3ViZ3JvdXBbaV0gPSBzdWJub2RlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBuZXcgU2VsZWN0aW9uKHN1Ymdyb3VwcywgdGhpcy5fcGFyZW50cyk7XG59XG4iLCIvLyBHaXZlbiBzb21ldGhpbmcgYXJyYXkgbGlrZSAob3IgbnVsbCksIHJldHVybnMgc29tZXRoaW5nIHRoYXQgaXMgc3RyaWN0bHkgYW5cbi8vIGFycmF5LiBUaGlzIGlzIHVzZWQgdG8gZW5zdXJlIHRoYXQgYXJyYXktbGlrZSBvYmplY3RzIHBhc3NlZCB0byBkMy5zZWxlY3RBbGxcbi8vIG9yIHNlbGVjdGlvbi5zZWxlY3RBbGwgYXJlIGNvbnZlcnRlZCBpbnRvIHByb3BlciBhcnJheXMgd2hlbiBjcmVhdGluZyBhXG4vLyBzZWxlY3Rpb247IHdlIGRvbuKAmXQgZXZlciB3YW50IHRvIGNyZWF0ZSBhIHNlbGVjdGlvbiBiYWNrZWQgYnkgYSBsaXZlXG4vLyBIVE1MQ29sbGVjdGlvbiBvciBOb2RlTGlzdC4gSG93ZXZlciwgbm90ZSB0aGF0IHNlbGVjdGlvbi5zZWxlY3RBbGwgd2lsbCB1c2UgYVxuLy8gc3RhdGljIE5vZGVMaXN0IGFzIGEgZ3JvdXAsIHNpbmNlIGl0IHNhZmVseSBkZXJpdmVkIGZyb20gcXVlcnlTZWxlY3RvckFsbC5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGFycmF5KHgpIHtcbiAgcmV0dXJuIHggPT0gbnVsbCA/IFtdIDogQXJyYXkuaXNBcnJheSh4KSA/IHggOiBBcnJheS5mcm9tKHgpO1xufVxuIiwiZnVuY3Rpb24gZW1wdHkoKSB7XG4gIHJldHVybiBbXTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc2VsZWN0b3IpIHtcbiAgcmV0dXJuIHNlbGVjdG9yID09IG51bGwgPyBlbXB0eSA6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLnF1ZXJ5U2VsZWN0b3JBbGwoc2VsZWN0b3IpO1xuICB9O1xufVxuIiwiaW1wb3J0IHtTZWxlY3Rpb259IGZyb20gXCIuL2luZGV4LmpzXCI7XG5pbXBvcnQgYXJyYXkgZnJvbSBcIi4uL2FycmF5LmpzXCI7XG5pbXBvcnQgc2VsZWN0b3JBbGwgZnJvbSBcIi4uL3NlbGVjdG9yQWxsLmpzXCI7XG5cbmZ1bmN0aW9uIGFycmF5QWxsKHNlbGVjdCkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGFycmF5KHNlbGVjdC5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc2VsZWN0KSB7XG4gIGlmICh0eXBlb2Ygc2VsZWN0ID09PSBcImZ1bmN0aW9uXCIpIHNlbGVjdCA9IGFycmF5QWxsKHNlbGVjdCk7XG4gIGVsc2Ugc2VsZWN0ID0gc2VsZWN0b3JBbGwoc2VsZWN0KTtcblxuICBmb3IgKHZhciBncm91cHMgPSB0aGlzLl9ncm91cHMsIG0gPSBncm91cHMubGVuZ3RoLCBzdWJncm91cHMgPSBbXSwgcGFyZW50cyA9IFtdLCBqID0gMDsgaiA8IG07ICsraikge1xuICAgIGZvciAodmFyIGdyb3VwID0gZ3JvdXBzW2pdLCBuID0gZ3JvdXAubGVuZ3RoLCBub2RlLCBpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgaWYgKG5vZGUgPSBncm91cFtpXSkge1xuICAgICAgICBzdWJncm91cHMucHVzaChzZWxlY3QuY2FsbChub2RlLCBub2RlLl9fZGF0YV9fLCBpLCBncm91cCkpO1xuICAgICAgICBwYXJlbnRzLnB1c2gobm9kZSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG5ldyBTZWxlY3Rpb24oc3ViZ3JvdXBzLCBwYXJlbnRzKTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHNlbGVjdG9yKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5tYXRjaGVzKHNlbGVjdG9yKTtcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNoaWxkTWF0Y2hlcihzZWxlY3Rvcikge1xuICByZXR1cm4gZnVuY3Rpb24obm9kZSkge1xuICAgIHJldHVybiBub2RlLm1hdGNoZXMoc2VsZWN0b3IpO1xuICB9O1xufVxuXG4iLCJpbXBvcnQge2NoaWxkTWF0Y2hlcn0gZnJvbSBcIi4uL21hdGNoZXIuanNcIjtcblxudmFyIGZpbmQgPSBBcnJheS5wcm90b3R5cGUuZmluZDtcblxuZnVuY3Rpb24gY2hpbGRGaW5kKG1hdGNoKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZmluZC5jYWxsKHRoaXMuY2hpbGRyZW4sIG1hdGNoKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gY2hpbGRGaXJzdCgpIHtcbiAgcmV0dXJuIHRoaXMuZmlyc3RFbGVtZW50Q2hpbGQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG1hdGNoKSB7XG4gIHJldHVybiB0aGlzLnNlbGVjdChtYXRjaCA9PSBudWxsID8gY2hpbGRGaXJzdFxuICAgICAgOiBjaGlsZEZpbmQodHlwZW9mIG1hdGNoID09PSBcImZ1bmN0aW9uXCIgPyBtYXRjaCA6IGNoaWxkTWF0Y2hlcihtYXRjaCkpKTtcbn1cbiIsImltcG9ydCB7Y2hpbGRNYXRjaGVyfSBmcm9tIFwiLi4vbWF0Y2hlci5qc1wiO1xuXG52YXIgZmlsdGVyID0gQXJyYXkucHJvdG90eXBlLmZpbHRlcjtcblxuZnVuY3Rpb24gY2hpbGRyZW4oKSB7XG4gIHJldHVybiBBcnJheS5mcm9tKHRoaXMuY2hpbGRyZW4pO1xufVxuXG5mdW5jdGlvbiBjaGlsZHJlbkZpbHRlcihtYXRjaCkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGZpbHRlci5jYWxsKHRoaXMuY2hpbGRyZW4sIG1hdGNoKTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obWF0Y2gpIHtcbiAgcmV0dXJuIHRoaXMuc2VsZWN0QWxsKG1hdGNoID09IG51bGwgPyBjaGlsZHJlblxuICAgICAgOiBjaGlsZHJlbkZpbHRlcih0eXBlb2YgbWF0Y2ggPT09IFwiZnVuY3Rpb25cIiA/IG1hdGNoIDogY2hpbGRNYXRjaGVyKG1hdGNoKSkpO1xufVxuIiwiaW1wb3J0IHtTZWxlY3Rpb259IGZyb20gXCIuL2luZGV4LmpzXCI7XG5pbXBvcnQgbWF0Y2hlciBmcm9tIFwiLi4vbWF0Y2hlci5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihtYXRjaCkge1xuICBpZiAodHlwZW9mIG1hdGNoICE9PSBcImZ1bmN0aW9uXCIpIG1hdGNoID0gbWF0Y2hlcihtYXRjaCk7XG5cbiAgZm9yICh2YXIgZ3JvdXBzID0gdGhpcy5fZ3JvdXBzLCBtID0gZ3JvdXBzLmxlbmd0aCwgc3ViZ3JvdXBzID0gbmV3IEFycmF5KG0pLCBqID0gMDsgaiA8IG07ICsraikge1xuICAgIGZvciAodmFyIGdyb3VwID0gZ3JvdXBzW2pdLCBuID0gZ3JvdXAubGVuZ3RoLCBzdWJncm91cCA9IHN1Ymdyb3Vwc1tqXSA9IFtdLCBub2RlLCBpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgaWYgKChub2RlID0gZ3JvdXBbaV0pICYmIG1hdGNoLmNhbGwobm9kZSwgbm9kZS5fX2RhdGFfXywgaSwgZ3JvdXApKSB7XG4gICAgICAgIHN1Ymdyb3VwLnB1c2gobm9kZSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG5ldyBTZWxlY3Rpb24oc3ViZ3JvdXBzLCB0aGlzLl9wYXJlbnRzKTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHVwZGF0ZSkge1xuICByZXR1cm4gbmV3IEFycmF5KHVwZGF0ZS5sZW5ndGgpO1xufVxuIiwiaW1wb3J0IHNwYXJzZSBmcm9tIFwiLi9zcGFyc2UuanNcIjtcbmltcG9ydCB7U2VsZWN0aW9ufSBmcm9tIFwiLi9pbmRleC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIG5ldyBTZWxlY3Rpb24odGhpcy5fZW50ZXIgfHwgdGhpcy5fZ3JvdXBzLm1hcChzcGFyc2UpLCB0aGlzLl9wYXJlbnRzKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIEVudGVyTm9kZShwYXJlbnQsIGRhdHVtKSB7XG4gIHRoaXMub3duZXJEb2N1bWVudCA9IHBhcmVudC5vd25lckRvY3VtZW50O1xuICB0aGlzLm5hbWVzcGFjZVVSSSA9IHBhcmVudC5uYW1lc3BhY2VVUkk7XG4gIHRoaXMuX25leHQgPSBudWxsO1xuICB0aGlzLl9wYXJlbnQgPSBwYXJlbnQ7XG4gIHRoaXMuX19kYXRhX18gPSBkYXR1bTtcbn1cblxuRW50ZXJOb2RlLnByb3RvdHlwZSA9IHtcbiAgY29uc3RydWN0b3I6IEVudGVyTm9kZSxcbiAgYXBwZW5kQ2hpbGQ6IGZ1bmN0aW9uKGNoaWxkKSB7IHJldHVybiB0aGlzLl9wYXJlbnQuaW5zZXJ0QmVmb3JlKGNoaWxkLCB0aGlzLl9uZXh0KTsgfSxcbiAgaW5zZXJ0QmVmb3JlOiBmdW5jdGlvbihjaGlsZCwgbmV4dCkgeyByZXR1cm4gdGhpcy5fcGFyZW50Lmluc2VydEJlZm9yZShjaGlsZCwgbmV4dCk7IH0sXG4gIHF1ZXJ5U2VsZWN0b3I6IGZ1bmN0aW9uKHNlbGVjdG9yKSB7IHJldHVybiB0aGlzLl9wYXJlbnQucXVlcnlTZWxlY3RvcihzZWxlY3Rvcik7IH0sXG4gIHF1ZXJ5U2VsZWN0b3JBbGw6IGZ1bmN0aW9uKHNlbGVjdG9yKSB7IHJldHVybiB0aGlzLl9wYXJlbnQucXVlcnlTZWxlY3RvckFsbChzZWxlY3Rvcik7IH1cbn07XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4KSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4geDtcbiAgfTtcbn1cbiIsImltcG9ydCB7U2VsZWN0aW9ufSBmcm9tIFwiLi9pbmRleC5qc1wiO1xuaW1wb3J0IHtFbnRlck5vZGV9IGZyb20gXCIuL2VudGVyLmpzXCI7XG5pbXBvcnQgY29uc3RhbnQgZnJvbSBcIi4uL2NvbnN0YW50LmpzXCI7XG5cbmZ1bmN0aW9uIGJpbmRJbmRleChwYXJlbnQsIGdyb3VwLCBlbnRlciwgdXBkYXRlLCBleGl0LCBkYXRhKSB7XG4gIHZhciBpID0gMCxcbiAgICAgIG5vZGUsXG4gICAgICBncm91cExlbmd0aCA9IGdyb3VwLmxlbmd0aCxcbiAgICAgIGRhdGFMZW5ndGggPSBkYXRhLmxlbmd0aDtcblxuICAvLyBQdXQgYW55IG5vbi1udWxsIG5vZGVzIHRoYXQgZml0IGludG8gdXBkYXRlLlxuICAvLyBQdXQgYW55IG51bGwgbm9kZXMgaW50byBlbnRlci5cbiAgLy8gUHV0IGFueSByZW1haW5pbmcgZGF0YSBpbnRvIGVudGVyLlxuICBmb3IgKDsgaSA8IGRhdGFMZW5ndGg7ICsraSkge1xuICAgIGlmIChub2RlID0gZ3JvdXBbaV0pIHtcbiAgICAgIG5vZGUuX19kYXRhX18gPSBkYXRhW2ldO1xuICAgICAgdXBkYXRlW2ldID0gbm9kZTtcbiAgICB9IGVsc2Uge1xuICAgICAgZW50ZXJbaV0gPSBuZXcgRW50ZXJOb2RlKHBhcmVudCwgZGF0YVtpXSk7XG4gICAgfVxuICB9XG5cbiAgLy8gUHV0IGFueSBub24tbnVsbCBub2RlcyB0aGF0IGRvbuKAmXQgZml0IGludG8gZXhpdC5cbiAgZm9yICg7IGkgPCBncm91cExlbmd0aDsgKytpKSB7XG4gICAgaWYgKG5vZGUgPSBncm91cFtpXSkge1xuICAgICAgZXhpdFtpXSA9IG5vZGU7XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIGJpbmRLZXkocGFyZW50LCBncm91cCwgZW50ZXIsIHVwZGF0ZSwgZXhpdCwgZGF0YSwga2V5KSB7XG4gIHZhciBpLFxuICAgICAgbm9kZSxcbiAgICAgIG5vZGVCeUtleVZhbHVlID0gbmV3IE1hcCxcbiAgICAgIGdyb3VwTGVuZ3RoID0gZ3JvdXAubGVuZ3RoLFxuICAgICAgZGF0YUxlbmd0aCA9IGRhdGEubGVuZ3RoLFxuICAgICAga2V5VmFsdWVzID0gbmV3IEFycmF5KGdyb3VwTGVuZ3RoKSxcbiAgICAgIGtleVZhbHVlO1xuXG4gIC8vIENvbXB1dGUgdGhlIGtleSBmb3IgZWFjaCBub2RlLlxuICAvLyBJZiBtdWx0aXBsZSBub2RlcyBoYXZlIHRoZSBzYW1lIGtleSwgdGhlIGR1cGxpY2F0ZXMgYXJlIGFkZGVkIHRvIGV4aXQuXG4gIGZvciAoaSA9IDA7IGkgPCBncm91cExlbmd0aDsgKytpKSB7XG4gICAgaWYgKG5vZGUgPSBncm91cFtpXSkge1xuICAgICAga2V5VmFsdWVzW2ldID0ga2V5VmFsdWUgPSBrZXkuY2FsbChub2RlLCBub2RlLl9fZGF0YV9fLCBpLCBncm91cCkgKyBcIlwiO1xuICAgICAgaWYgKG5vZGVCeUtleVZhbHVlLmhhcyhrZXlWYWx1ZSkpIHtcbiAgICAgICAgZXhpdFtpXSA9IG5vZGU7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBub2RlQnlLZXlWYWx1ZS5zZXQoa2V5VmFsdWUsIG5vZGUpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8vIENvbXB1dGUgdGhlIGtleSBmb3IgZWFjaCBkYXR1bS5cbiAgLy8gSWYgdGhlcmUgYSBub2RlIGFzc29jaWF0ZWQgd2l0aCB0aGlzIGtleSwgam9pbiBhbmQgYWRkIGl0IHRvIHVwZGF0ZS5cbiAgLy8gSWYgdGhlcmUgaXMgbm90IChvciB0aGUga2V5IGlzIGEgZHVwbGljYXRlKSwgYWRkIGl0IHRvIGVudGVyLlxuICBmb3IgKGkgPSAwOyBpIDwgZGF0YUxlbmd0aDsgKytpKSB7XG4gICAga2V5VmFsdWUgPSBrZXkuY2FsbChwYXJlbnQsIGRhdGFbaV0sIGksIGRhdGEpICsgXCJcIjtcbiAgICBpZiAobm9kZSA9IG5vZGVCeUtleVZhbHVlLmdldChrZXlWYWx1ZSkpIHtcbiAgICAgIHVwZGF0ZVtpXSA9IG5vZGU7XG4gICAgICBub2RlLl9fZGF0YV9fID0gZGF0YVtpXTtcbiAgICAgIG5vZGVCeUtleVZhbHVlLmRlbGV0ZShrZXlWYWx1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGVudGVyW2ldID0gbmV3IEVudGVyTm9kZShwYXJlbnQsIGRhdGFbaV0pO1xuICAgIH1cbiAgfVxuXG4gIC8vIEFkZCBhbnkgcmVtYWluaW5nIG5vZGVzIHRoYXQgd2VyZSBub3QgYm91bmQgdG8gZGF0YSB0byBleGl0LlxuICBmb3IgKGkgPSAwOyBpIDwgZ3JvdXBMZW5ndGg7ICsraSkge1xuICAgIGlmICgobm9kZSA9IGdyb3VwW2ldKSAmJiAobm9kZUJ5S2V5VmFsdWUuZ2V0KGtleVZhbHVlc1tpXSkgPT09IG5vZGUpKSB7XG4gICAgICBleGl0W2ldID0gbm9kZTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gZGF0dW0obm9kZSkge1xuICByZXR1cm4gbm9kZS5fX2RhdGFfXztcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWUsIGtleSkge1xuICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBBcnJheS5mcm9tKHRoaXMsIGRhdHVtKTtcblxuICB2YXIgYmluZCA9IGtleSA/IGJpbmRLZXkgOiBiaW5kSW5kZXgsXG4gICAgICBwYXJlbnRzID0gdGhpcy5fcGFyZW50cyxcbiAgICAgIGdyb3VwcyA9IHRoaXMuX2dyb3VwcztcblxuICBpZiAodHlwZW9mIHZhbHVlICE9PSBcImZ1bmN0aW9uXCIpIHZhbHVlID0gY29uc3RhbnQodmFsdWUpO1xuXG4gIGZvciAodmFyIG0gPSBncm91cHMubGVuZ3RoLCB1cGRhdGUgPSBuZXcgQXJyYXkobSksIGVudGVyID0gbmV3IEFycmF5KG0pLCBleGl0ID0gbmV3IEFycmF5KG0pLCBqID0gMDsgaiA8IG07ICsraikge1xuICAgIHZhciBwYXJlbnQgPSBwYXJlbnRzW2pdLFxuICAgICAgICBncm91cCA9IGdyb3Vwc1tqXSxcbiAgICAgICAgZ3JvdXBMZW5ndGggPSBncm91cC5sZW5ndGgsXG4gICAgICAgIGRhdGEgPSBhcnJheWxpa2UodmFsdWUuY2FsbChwYXJlbnQsIHBhcmVudCAmJiBwYXJlbnQuX19kYXRhX18sIGosIHBhcmVudHMpKSxcbiAgICAgICAgZGF0YUxlbmd0aCA9IGRhdGEubGVuZ3RoLFxuICAgICAgICBlbnRlckdyb3VwID0gZW50ZXJbal0gPSBuZXcgQXJyYXkoZGF0YUxlbmd0aCksXG4gICAgICAgIHVwZGF0ZUdyb3VwID0gdXBkYXRlW2pdID0gbmV3IEFycmF5KGRhdGFMZW5ndGgpLFxuICAgICAgICBleGl0R3JvdXAgPSBleGl0W2pdID0gbmV3IEFycmF5KGdyb3VwTGVuZ3RoKTtcblxuICAgIGJpbmQocGFyZW50LCBncm91cCwgZW50ZXJHcm91cCwgdXBkYXRlR3JvdXAsIGV4aXRHcm91cCwgZGF0YSwga2V5KTtcblxuICAgIC8vIE5vdyBjb25uZWN0IHRoZSBlbnRlciBub2RlcyB0byB0aGVpciBmb2xsb3dpbmcgdXBkYXRlIG5vZGUsIHN1Y2ggdGhhdFxuICAgIC8vIGFwcGVuZENoaWxkIGNhbiBpbnNlcnQgdGhlIG1hdGVyaWFsaXplZCBlbnRlciBub2RlIGJlZm9yZSB0aGlzIG5vZGUsXG4gICAgLy8gcmF0aGVyIHRoYW4gYXQgdGhlIGVuZCBvZiB0aGUgcGFyZW50IG5vZGUuXG4gICAgZm9yICh2YXIgaTAgPSAwLCBpMSA9IDAsIHByZXZpb3VzLCBuZXh0OyBpMCA8IGRhdGFMZW5ndGg7ICsraTApIHtcbiAgICAgIGlmIChwcmV2aW91cyA9IGVudGVyR3JvdXBbaTBdKSB7XG4gICAgICAgIGlmIChpMCA+PSBpMSkgaTEgPSBpMCArIDE7XG4gICAgICAgIHdoaWxlICghKG5leHQgPSB1cGRhdGVHcm91cFtpMV0pICYmICsraTEgPCBkYXRhTGVuZ3RoKTtcbiAgICAgICAgcHJldmlvdXMuX25leHQgPSBuZXh0IHx8IG51bGw7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgdXBkYXRlID0gbmV3IFNlbGVjdGlvbih1cGRhdGUsIHBhcmVudHMpO1xuICB1cGRhdGUuX2VudGVyID0gZW50ZXI7XG4gIHVwZGF0ZS5fZXhpdCA9IGV4aXQ7XG4gIHJldHVybiB1cGRhdGU7XG59XG5cbi8vIEdpdmVuIHNvbWUgZGF0YSwgdGhpcyByZXR1cm5zIGFuIGFycmF5LWxpa2UgdmlldyBvZiBpdDogYW4gb2JqZWN0IHRoYXRcbi8vIGV4cG9zZXMgYSBsZW5ndGggcHJvcGVydHkgYW5kIGFsbG93cyBudW1lcmljIGluZGV4aW5nLiBOb3RlIHRoYXQgdW5saWtlXG4vLyBzZWxlY3RBbGwsIHRoaXMgaXNu4oCZdCB3b3JyaWVkIGFib3V0IOKAnGxpdmXigJ0gY29sbGVjdGlvbnMgYmVjYXVzZSB0aGUgcmVzdWx0aW5nXG4vLyBhcnJheSB3aWxsIG9ubHkgYmUgdXNlZCBicmllZmx5IHdoaWxlIGRhdGEgaXMgYmVpbmcgYm91bmQuIChJdCBpcyBwb3NzaWJsZSB0b1xuLy8gY2F1c2UgdGhlIGRhdGEgdG8gY2hhbmdlIHdoaWxlIGl0ZXJhdGluZyBieSB1c2luZyBhIGtleSBmdW5jdGlvbiwgYnV0IHBsZWFzZVxuLy8gZG9u4oCZdDsgd2XigJlkIHJhdGhlciBhdm9pZCBhIGdyYXR1aXRvdXMgY29weS4pXG5mdW5jdGlvbiBhcnJheWxpa2UoZGF0YSkge1xuICByZXR1cm4gdHlwZW9mIGRhdGEgPT09IFwib2JqZWN0XCIgJiYgXCJsZW5ndGhcIiBpbiBkYXRhXG4gICAgPyBkYXRhIC8vIEFycmF5LCBUeXBlZEFycmF5LCBOb2RlTGlzdCwgYXJyYXktbGlrZVxuICAgIDogQXJyYXkuZnJvbShkYXRhKTsgLy8gTWFwLCBTZXQsIGl0ZXJhYmxlLCBzdHJpbmcsIG9yIGFueXRoaW5nIGVsc2Vcbn1cbiIsImltcG9ydCBzcGFyc2UgZnJvbSBcIi4vc3BhcnNlLmpzXCI7XG5pbXBvcnQge1NlbGVjdGlvbn0gZnJvbSBcIi4vaW5kZXguanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiBuZXcgU2VsZWN0aW9uKHRoaXMuX2V4aXQgfHwgdGhpcy5fZ3JvdXBzLm1hcChzcGFyc2UpLCB0aGlzLl9wYXJlbnRzKTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG9uZW50ZXIsIG9udXBkYXRlLCBvbmV4aXQpIHtcbiAgdmFyIGVudGVyID0gdGhpcy5lbnRlcigpLCB1cGRhdGUgPSB0aGlzLCBleGl0ID0gdGhpcy5leGl0KCk7XG4gIGlmICh0eXBlb2Ygb25lbnRlciA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgZW50ZXIgPSBvbmVudGVyKGVudGVyKTtcbiAgICBpZiAoZW50ZXIpIGVudGVyID0gZW50ZXIuc2VsZWN0aW9uKCk7XG4gIH0gZWxzZSB7XG4gICAgZW50ZXIgPSBlbnRlci5hcHBlbmQob25lbnRlciArIFwiXCIpO1xuICB9XG4gIGlmIChvbnVwZGF0ZSAhPSBudWxsKSB7XG4gICAgdXBkYXRlID0gb251cGRhdGUodXBkYXRlKTtcbiAgICBpZiAodXBkYXRlKSB1cGRhdGUgPSB1cGRhdGUuc2VsZWN0aW9uKCk7XG4gIH1cbiAgaWYgKG9uZXhpdCA9PSBudWxsKSBleGl0LnJlbW92ZSgpOyBlbHNlIG9uZXhpdChleGl0KTtcbiAgcmV0dXJuIGVudGVyICYmIHVwZGF0ZSA/IGVudGVyLm1lcmdlKHVwZGF0ZSkub3JkZXIoKSA6IHVwZGF0ZTtcbn1cbiIsImltcG9ydCB7U2VsZWN0aW9ufSBmcm9tIFwiLi9pbmRleC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihjb250ZXh0KSB7XG4gIHZhciBzZWxlY3Rpb24gPSBjb250ZXh0LnNlbGVjdGlvbiA/IGNvbnRleHQuc2VsZWN0aW9uKCkgOiBjb250ZXh0O1xuXG4gIGZvciAodmFyIGdyb3VwczAgPSB0aGlzLl9ncm91cHMsIGdyb3VwczEgPSBzZWxlY3Rpb24uX2dyb3VwcywgbTAgPSBncm91cHMwLmxlbmd0aCwgbTEgPSBncm91cHMxLmxlbmd0aCwgbSA9IE1hdGgubWluKG0wLCBtMSksIG1lcmdlcyA9IG5ldyBBcnJheShtMCksIGogPSAwOyBqIDwgbTsgKytqKSB7XG4gICAgZm9yICh2YXIgZ3JvdXAwID0gZ3JvdXBzMFtqXSwgZ3JvdXAxID0gZ3JvdXBzMVtqXSwgbiA9IGdyb3VwMC5sZW5ndGgsIG1lcmdlID0gbWVyZ2VzW2pdID0gbmV3IEFycmF5KG4pLCBub2RlLCBpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgaWYgKG5vZGUgPSBncm91cDBbaV0gfHwgZ3JvdXAxW2ldKSB7XG4gICAgICAgIG1lcmdlW2ldID0gbm9kZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBmb3IgKDsgaiA8IG0wOyArK2opIHtcbiAgICBtZXJnZXNbal0gPSBncm91cHMwW2pdO1xuICB9XG5cbiAgcmV0dXJuIG5ldyBTZWxlY3Rpb24obWVyZ2VzLCB0aGlzLl9wYXJlbnRzKTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuXG4gIGZvciAodmFyIGdyb3VwcyA9IHRoaXMuX2dyb3VwcywgaiA9IC0xLCBtID0gZ3JvdXBzLmxlbmd0aDsgKytqIDwgbTspIHtcbiAgICBmb3IgKHZhciBncm91cCA9IGdyb3Vwc1tqXSwgaSA9IGdyb3VwLmxlbmd0aCAtIDEsIG5leHQgPSBncm91cFtpXSwgbm9kZTsgLS1pID49IDA7KSB7XG4gICAgICBpZiAobm9kZSA9IGdyb3VwW2ldKSB7XG4gICAgICAgIGlmIChuZXh0ICYmIG5vZGUuY29tcGFyZURvY3VtZW50UG9zaXRpb24obmV4dCkgXiA0KSBuZXh0LnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKG5vZGUsIG5leHQpO1xuICAgICAgICBuZXh0ID0gbm9kZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gdGhpcztcbn1cbiIsImltcG9ydCB7U2VsZWN0aW9ufSBmcm9tIFwiLi9pbmRleC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihjb21wYXJlKSB7XG4gIGlmICghY29tcGFyZSkgY29tcGFyZSA9IGFzY2VuZGluZztcblxuICBmdW5jdGlvbiBjb21wYXJlTm9kZShhLCBiKSB7XG4gICAgcmV0dXJuIGEgJiYgYiA/IGNvbXBhcmUoYS5fX2RhdGFfXywgYi5fX2RhdGFfXykgOiAhYSAtICFiO1xuICB9XG5cbiAgZm9yICh2YXIgZ3JvdXBzID0gdGhpcy5fZ3JvdXBzLCBtID0gZ3JvdXBzLmxlbmd0aCwgc29ydGdyb3VwcyA9IG5ldyBBcnJheShtKSwgaiA9IDA7IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHZhciBncm91cCA9IGdyb3Vwc1tqXSwgbiA9IGdyb3VwLmxlbmd0aCwgc29ydGdyb3VwID0gc29ydGdyb3Vwc1tqXSA9IG5ldyBBcnJheShuKSwgbm9kZSwgaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmIChub2RlID0gZ3JvdXBbaV0pIHtcbiAgICAgICAgc29ydGdyb3VwW2ldID0gbm9kZTtcbiAgICAgIH1cbiAgICB9XG4gICAgc29ydGdyb3VwLnNvcnQoY29tcGFyZU5vZGUpO1xuICB9XG5cbiAgcmV0dXJuIG5ldyBTZWxlY3Rpb24oc29ydGdyb3VwcywgdGhpcy5fcGFyZW50cykub3JkZXIoKTtcbn1cblxuZnVuY3Rpb24gYXNjZW5kaW5nKGEsIGIpIHtcbiAgcmV0dXJuIGEgPCBiID8gLTEgOiBhID4gYiA/IDEgOiBhID49IGIgPyAwIDogTmFOO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciBjYWxsYmFjayA9IGFyZ3VtZW50c1swXTtcbiAgYXJndW1lbnRzWzBdID0gdGhpcztcbiAgY2FsbGJhY2suYXBwbHkobnVsbCwgYXJndW1lbnRzKTtcbiAgcmV0dXJuIHRoaXM7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIEFycmF5LmZyb20odGhpcyk7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcblxuICBmb3IgKHZhciBncm91cHMgPSB0aGlzLl9ncm91cHMsIGogPSAwLCBtID0gZ3JvdXBzLmxlbmd0aDsgaiA8IG07ICsraikge1xuICAgIGZvciAodmFyIGdyb3VwID0gZ3JvdXBzW2pdLCBpID0gMCwgbiA9IGdyb3VwLmxlbmd0aDsgaSA8IG47ICsraSkge1xuICAgICAgdmFyIG5vZGUgPSBncm91cFtpXTtcbiAgICAgIGlmIChub2RlKSByZXR1cm4gbm9kZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbnVsbDtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICBsZXQgc2l6ZSA9IDA7XG4gIGZvciAoY29uc3Qgbm9kZSBvZiB0aGlzKSArK3NpemU7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnNcbiAgcmV0dXJuIHNpemU7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuICF0aGlzLm5vZGUoKTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG5cbiAgZm9yICh2YXIgZ3JvdXBzID0gdGhpcy5fZ3JvdXBzLCBqID0gMCwgbSA9IGdyb3Vwcy5sZW5ndGg7IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHZhciBncm91cCA9IGdyb3Vwc1tqXSwgaSA9IDAsIG4gPSBncm91cC5sZW5ndGgsIG5vZGU7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmIChub2RlID0gZ3JvdXBbaV0pIGNhbGxiYWNrLmNhbGwobm9kZSwgbm9kZS5fX2RhdGFfXywgaSwgZ3JvdXApO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0aGlzO1xufVxuIiwiaW1wb3J0IG5hbWVzcGFjZSBmcm9tIFwiLi4vbmFtZXNwYWNlLmpzXCI7XG5cbmZ1bmN0aW9uIGF0dHJSZW1vdmUobmFtZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5yZW1vdmVBdHRyaWJ1dGUobmFtZSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGF0dHJSZW1vdmVOUyhmdWxsbmFtZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5yZW1vdmVBdHRyaWJ1dGVOUyhmdWxsbmFtZS5zcGFjZSwgZnVsbG5hbWUubG9jYWwpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBhdHRyQ29uc3RhbnQobmFtZSwgdmFsdWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuc2V0QXR0cmlidXRlKG5hbWUsIHZhbHVlKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYXR0ckNvbnN0YW50TlMoZnVsbG5hbWUsIHZhbHVlKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLnNldEF0dHJpYnV0ZU5TKGZ1bGxuYW1lLnNwYWNlLCBmdWxsbmFtZS5sb2NhbCwgdmFsdWUpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBhdHRyRnVuY3Rpb24obmFtZSwgdmFsdWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciB2ID0gdmFsdWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICBpZiAodiA9PSBudWxsKSB0aGlzLnJlbW92ZUF0dHJpYnV0ZShuYW1lKTtcbiAgICBlbHNlIHRoaXMuc2V0QXR0cmlidXRlKG5hbWUsIHYpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBhdHRyRnVuY3Rpb25OUyhmdWxsbmFtZSwgdmFsdWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciB2ID0gdmFsdWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICBpZiAodiA9PSBudWxsKSB0aGlzLnJlbW92ZUF0dHJpYnV0ZU5TKGZ1bGxuYW1lLnNwYWNlLCBmdWxsbmFtZS5sb2NhbCk7XG4gICAgZWxzZSB0aGlzLnNldEF0dHJpYnV0ZU5TKGZ1bGxuYW1lLnNwYWNlLCBmdWxsbmFtZS5sb2NhbCwgdik7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5hbWUsIHZhbHVlKSB7XG4gIHZhciBmdWxsbmFtZSA9IG5hbWVzcGFjZShuYW1lKTtcblxuICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHtcbiAgICB2YXIgbm9kZSA9IHRoaXMubm9kZSgpO1xuICAgIHJldHVybiBmdWxsbmFtZS5sb2NhbFxuICAgICAgICA/IG5vZGUuZ2V0QXR0cmlidXRlTlMoZnVsbG5hbWUuc3BhY2UsIGZ1bGxuYW1lLmxvY2FsKVxuICAgICAgICA6IG5vZGUuZ2V0QXR0cmlidXRlKGZ1bGxuYW1lKTtcbiAgfVxuXG4gIHJldHVybiB0aGlzLmVhY2goKHZhbHVlID09IG51bGxcbiAgICAgID8gKGZ1bGxuYW1lLmxvY2FsID8gYXR0clJlbW92ZU5TIDogYXR0clJlbW92ZSkgOiAodHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCJcbiAgICAgID8gKGZ1bGxuYW1lLmxvY2FsID8gYXR0ckZ1bmN0aW9uTlMgOiBhdHRyRnVuY3Rpb24pXG4gICAgICA6IChmdWxsbmFtZS5sb2NhbCA/IGF0dHJDb25zdGFudE5TIDogYXR0ckNvbnN0YW50KSkpKGZ1bGxuYW1lLCB2YWx1ZSkpO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obm9kZSkge1xuICByZXR1cm4gKG5vZGUub3duZXJEb2N1bWVudCAmJiBub2RlLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXcpIC8vIG5vZGUgaXMgYSBOb2RlXG4gICAgICB8fCAobm9kZS5kb2N1bWVudCAmJiBub2RlKSAvLyBub2RlIGlzIGEgV2luZG93XG4gICAgICB8fCBub2RlLmRlZmF1bHRWaWV3OyAvLyBub2RlIGlzIGEgRG9jdW1lbnRcbn1cbiIsImltcG9ydCBkZWZhdWx0VmlldyBmcm9tIFwiLi4vd2luZG93LmpzXCI7XG5cbmZ1bmN0aW9uIHN0eWxlUmVtb3ZlKG5hbWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuc3R5bGUucmVtb3ZlUHJvcGVydHkobmFtZSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIHN0eWxlQ29uc3RhbnQobmFtZSwgdmFsdWUsIHByaW9yaXR5KSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLnN0eWxlLnNldFByb3BlcnR5KG5hbWUsIHZhbHVlLCBwcmlvcml0eSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIHN0eWxlRnVuY3Rpb24obmFtZSwgdmFsdWUsIHByaW9yaXR5KSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgdiA9IHZhbHVlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgaWYgKHYgPT0gbnVsbCkgdGhpcy5zdHlsZS5yZW1vdmVQcm9wZXJ0eShuYW1lKTtcbiAgICBlbHNlIHRoaXMuc3R5bGUuc2V0UHJvcGVydHkobmFtZSwgdiwgcHJpb3JpdHkpO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihuYW1lLCB2YWx1ZSwgcHJpb3JpdHkpIHtcbiAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPiAxXG4gICAgICA/IHRoaXMuZWFjaCgodmFsdWUgPT0gbnVsbFxuICAgICAgICAgICAgPyBzdHlsZVJlbW92ZSA6IHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiXG4gICAgICAgICAgICA/IHN0eWxlRnVuY3Rpb25cbiAgICAgICAgICAgIDogc3R5bGVDb25zdGFudCkobmFtZSwgdmFsdWUsIHByaW9yaXR5ID09IG51bGwgPyBcIlwiIDogcHJpb3JpdHkpKVxuICAgICAgOiBzdHlsZVZhbHVlKHRoaXMubm9kZSgpLCBuYW1lKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHN0eWxlVmFsdWUobm9kZSwgbmFtZSkge1xuICByZXR1cm4gbm9kZS5zdHlsZS5nZXRQcm9wZXJ0eVZhbHVlKG5hbWUpXG4gICAgICB8fCBkZWZhdWx0Vmlldyhub2RlKS5nZXRDb21wdXRlZFN0eWxlKG5vZGUsIG51bGwpLmdldFByb3BlcnR5VmFsdWUobmFtZSk7XG59XG4iLCJmdW5jdGlvbiBwcm9wZXJ0eVJlbW92ZShuYW1lKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICBkZWxldGUgdGhpc1tuYW1lXTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gcHJvcGVydHlDb25zdGFudChuYW1lLCB2YWx1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdGhpc1tuYW1lXSA9IHZhbHVlO1xuICB9O1xufVxuXG5mdW5jdGlvbiBwcm9wZXJ0eUZ1bmN0aW9uKG5hbWUsIHZhbHVlKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgdiA9IHZhbHVlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgaWYgKHYgPT0gbnVsbCkgZGVsZXRlIHRoaXNbbmFtZV07XG4gICAgZWxzZSB0aGlzW25hbWVdID0gdjtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obmFtZSwgdmFsdWUpIHtcbiAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPiAxXG4gICAgICA/IHRoaXMuZWFjaCgodmFsdWUgPT0gbnVsbFxuICAgICAgICAgID8gcHJvcGVydHlSZW1vdmUgOiB0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIlxuICAgICAgICAgID8gcHJvcGVydHlGdW5jdGlvblxuICAgICAgICAgIDogcHJvcGVydHlDb25zdGFudCkobmFtZSwgdmFsdWUpKVxuICAgICAgOiB0aGlzLm5vZGUoKVtuYW1lXTtcbn1cbiIsImZ1bmN0aW9uIGNsYXNzQXJyYXkoc3RyaW5nKSB7XG4gIHJldHVybiBzdHJpbmcudHJpbSgpLnNwbGl0KC9efFxccysvKTtcbn1cblxuZnVuY3Rpb24gY2xhc3NMaXN0KG5vZGUpIHtcbiAgcmV0dXJuIG5vZGUuY2xhc3NMaXN0IHx8IG5ldyBDbGFzc0xpc3Qobm9kZSk7XG59XG5cbmZ1bmN0aW9uIENsYXNzTGlzdChub2RlKSB7XG4gIHRoaXMuX25vZGUgPSBub2RlO1xuICB0aGlzLl9uYW1lcyA9IGNsYXNzQXJyYXkobm9kZS5nZXRBdHRyaWJ1dGUoXCJjbGFzc1wiKSB8fCBcIlwiKTtcbn1cblxuQ2xhc3NMaXN0LnByb3RvdHlwZSA9IHtcbiAgYWRkOiBmdW5jdGlvbihuYW1lKSB7XG4gICAgdmFyIGkgPSB0aGlzLl9uYW1lcy5pbmRleE9mKG5hbWUpO1xuICAgIGlmIChpIDwgMCkge1xuICAgICAgdGhpcy5fbmFtZXMucHVzaChuYW1lKTtcbiAgICAgIHRoaXMuX25vZGUuc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgdGhpcy5fbmFtZXMuam9pbihcIiBcIikpO1xuICAgIH1cbiAgfSxcbiAgcmVtb3ZlOiBmdW5jdGlvbihuYW1lKSB7XG4gICAgdmFyIGkgPSB0aGlzLl9uYW1lcy5pbmRleE9mKG5hbWUpO1xuICAgIGlmIChpID49IDApIHtcbiAgICAgIHRoaXMuX25hbWVzLnNwbGljZShpLCAxKTtcbiAgICAgIHRoaXMuX25vZGUuc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgdGhpcy5fbmFtZXMuam9pbihcIiBcIikpO1xuICAgIH1cbiAgfSxcbiAgY29udGFpbnM6IGZ1bmN0aW9uKG5hbWUpIHtcbiAgICByZXR1cm4gdGhpcy5fbmFtZXMuaW5kZXhPZihuYW1lKSA+PSAwO1xuICB9XG59O1xuXG5mdW5jdGlvbiBjbGFzc2VkQWRkKG5vZGUsIG5hbWVzKSB7XG4gIHZhciBsaXN0ID0gY2xhc3NMaXN0KG5vZGUpLCBpID0gLTEsIG4gPSBuYW1lcy5sZW5ndGg7XG4gIHdoaWxlICgrK2kgPCBuKSBsaXN0LmFkZChuYW1lc1tpXSk7XG59XG5cbmZ1bmN0aW9uIGNsYXNzZWRSZW1vdmUobm9kZSwgbmFtZXMpIHtcbiAgdmFyIGxpc3QgPSBjbGFzc0xpc3Qobm9kZSksIGkgPSAtMSwgbiA9IG5hbWVzLmxlbmd0aDtcbiAgd2hpbGUgKCsraSA8IG4pIGxpc3QucmVtb3ZlKG5hbWVzW2ldKTtcbn1cblxuZnVuY3Rpb24gY2xhc3NlZFRydWUobmFtZXMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIGNsYXNzZWRBZGQodGhpcywgbmFtZXMpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBjbGFzc2VkRmFsc2UobmFtZXMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIGNsYXNzZWRSZW1vdmUodGhpcywgbmFtZXMpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBjbGFzc2VkRnVuY3Rpb24obmFtZXMsIHZhbHVlKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAodmFsdWUuYXBwbHkodGhpcywgYXJndW1lbnRzKSA/IGNsYXNzZWRBZGQgOiBjbGFzc2VkUmVtb3ZlKSh0aGlzLCBuYW1lcyk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5hbWUsIHZhbHVlKSB7XG4gIHZhciBuYW1lcyA9IGNsYXNzQXJyYXkobmFtZSArIFwiXCIpO1xuXG4gIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMikge1xuICAgIHZhciBsaXN0ID0gY2xhc3NMaXN0KHRoaXMubm9kZSgpKSwgaSA9IC0xLCBuID0gbmFtZXMubGVuZ3RoO1xuICAgIHdoaWxlICgrK2kgPCBuKSBpZiAoIWxpc3QuY29udGFpbnMobmFtZXNbaV0pKSByZXR1cm4gZmFsc2U7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICByZXR1cm4gdGhpcy5lYWNoKCh0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIlxuICAgICAgPyBjbGFzc2VkRnVuY3Rpb24gOiB2YWx1ZVxuICAgICAgPyBjbGFzc2VkVHJ1ZVxuICAgICAgOiBjbGFzc2VkRmFsc2UpKG5hbWVzLCB2YWx1ZSkpO1xufVxuIiwiZnVuY3Rpb24gdGV4dFJlbW92ZSgpIHtcbiAgdGhpcy50ZXh0Q29udGVudCA9IFwiXCI7XG59XG5cbmZ1bmN0aW9uIHRleHRDb25zdGFudCh2YWx1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy50ZXh0Q29udGVudCA9IHZhbHVlO1xuICB9O1xufVxuXG5mdW5jdGlvbiB0ZXh0RnVuY3Rpb24odmFsdWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciB2ID0gdmFsdWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICB0aGlzLnRleHRDb250ZW50ID0gdiA9PSBudWxsID8gXCJcIiA6IHY7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIHJldHVybiBhcmd1bWVudHMubGVuZ3RoXG4gICAgICA/IHRoaXMuZWFjaCh2YWx1ZSA9PSBudWxsXG4gICAgICAgICAgPyB0ZXh0UmVtb3ZlIDogKHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiXG4gICAgICAgICAgPyB0ZXh0RnVuY3Rpb25cbiAgICAgICAgICA6IHRleHRDb25zdGFudCkodmFsdWUpKVxuICAgICAgOiB0aGlzLm5vZGUoKS50ZXh0Q29udGVudDtcbn1cbiIsImZ1bmN0aW9uIGh0bWxSZW1vdmUoKSB7XG4gIHRoaXMuaW5uZXJIVE1MID0gXCJcIjtcbn1cblxuZnVuY3Rpb24gaHRtbENvbnN0YW50KHZhbHVlKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLmlubmVySFRNTCA9IHZhbHVlO1xuICB9O1xufVxuXG5mdW5jdGlvbiBodG1sRnVuY3Rpb24odmFsdWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciB2ID0gdmFsdWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICB0aGlzLmlubmVySFRNTCA9IHYgPT0gbnVsbCA/IFwiXCIgOiB2O1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih2YWx1ZSkge1xuICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aFxuICAgICAgPyB0aGlzLmVhY2godmFsdWUgPT0gbnVsbFxuICAgICAgICAgID8gaHRtbFJlbW92ZSA6ICh0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIlxuICAgICAgICAgID8gaHRtbEZ1bmN0aW9uXG4gICAgICAgICAgOiBodG1sQ29uc3RhbnQpKHZhbHVlKSlcbiAgICAgIDogdGhpcy5ub2RlKCkuaW5uZXJIVE1MO1xufVxuIiwiZnVuY3Rpb24gcmFpc2UoKSB7XG4gIGlmICh0aGlzLm5leHRTaWJsaW5nKSB0aGlzLnBhcmVudE5vZGUuYXBwZW5kQ2hpbGQodGhpcyk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcy5lYWNoKHJhaXNlKTtcbn1cbiIsImZ1bmN0aW9uIGxvd2VyKCkge1xuICBpZiAodGhpcy5wcmV2aW91c1NpYmxpbmcpIHRoaXMucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUodGhpcywgdGhpcy5wYXJlbnROb2RlLmZpcnN0Q2hpbGQpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHRoaXMuZWFjaChsb3dlcik7XG59XG4iLCJpbXBvcnQgY3JlYXRvciBmcm9tIFwiLi4vY3JlYXRvci5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihuYW1lKSB7XG4gIHZhciBjcmVhdGUgPSB0eXBlb2YgbmFtZSA9PT0gXCJmdW5jdGlvblwiID8gbmFtZSA6IGNyZWF0b3IobmFtZSk7XG4gIHJldHVybiB0aGlzLnNlbGVjdChmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5hcHBlbmRDaGlsZChjcmVhdGUuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7XG4gIH0pO1xufVxuIiwiaW1wb3J0IGNyZWF0b3IgZnJvbSBcIi4uL2NyZWF0b3IuanNcIjtcbmltcG9ydCBzZWxlY3RvciBmcm9tIFwiLi4vc2VsZWN0b3IuanNcIjtcblxuZnVuY3Rpb24gY29uc3RhbnROdWxsKCkge1xuICByZXR1cm4gbnVsbDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obmFtZSwgYmVmb3JlKSB7XG4gIHZhciBjcmVhdGUgPSB0eXBlb2YgbmFtZSA9PT0gXCJmdW5jdGlvblwiID8gbmFtZSA6IGNyZWF0b3IobmFtZSksXG4gICAgICBzZWxlY3QgPSBiZWZvcmUgPT0gbnVsbCA/IGNvbnN0YW50TnVsbCA6IHR5cGVvZiBiZWZvcmUgPT09IFwiZnVuY3Rpb25cIiA/IGJlZm9yZSA6IHNlbGVjdG9yKGJlZm9yZSk7XG4gIHJldHVybiB0aGlzLnNlbGVjdChmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5pbnNlcnRCZWZvcmUoY3JlYXRlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyksIHNlbGVjdC5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IG51bGwpO1xuICB9KTtcbn1cbiIsImZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgdmFyIHBhcmVudCA9IHRoaXMucGFyZW50Tm9kZTtcbiAgaWYgKHBhcmVudCkgcGFyZW50LnJlbW92ZUNoaWxkKHRoaXMpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHRoaXMuZWFjaChyZW1vdmUpO1xufVxuIiwiZnVuY3Rpb24gc2VsZWN0aW9uX2Nsb25lU2hhbGxvdygpIHtcbiAgdmFyIGNsb25lID0gdGhpcy5jbG9uZU5vZGUoZmFsc2UpLCBwYXJlbnQgPSB0aGlzLnBhcmVudE5vZGU7XG4gIHJldHVybiBwYXJlbnQgPyBwYXJlbnQuaW5zZXJ0QmVmb3JlKGNsb25lLCB0aGlzLm5leHRTaWJsaW5nKSA6IGNsb25lO1xufVxuXG5mdW5jdGlvbiBzZWxlY3Rpb25fY2xvbmVEZWVwKCkge1xuICB2YXIgY2xvbmUgPSB0aGlzLmNsb25lTm9kZSh0cnVlKSwgcGFyZW50ID0gdGhpcy5wYXJlbnROb2RlO1xuICByZXR1cm4gcGFyZW50ID8gcGFyZW50Lmluc2VydEJlZm9yZShjbG9uZSwgdGhpcy5uZXh0U2libGluZykgOiBjbG9uZTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oZGVlcCkge1xuICByZXR1cm4gdGhpcy5zZWxlY3QoZGVlcCA/IHNlbGVjdGlvbl9jbG9uZURlZXAgOiBzZWxlY3Rpb25fY2xvbmVTaGFsbG93KTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIHJldHVybiBhcmd1bWVudHMubGVuZ3RoXG4gICAgICA/IHRoaXMucHJvcGVydHkoXCJfX2RhdGFfX1wiLCB2YWx1ZSlcbiAgICAgIDogdGhpcy5ub2RlKCkuX19kYXRhX187XG59XG4iLCJmdW5jdGlvbiBjb250ZXh0TGlzdGVuZXIobGlzdGVuZXIpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgbGlzdGVuZXIuY2FsbCh0aGlzLCBldmVudCwgdGhpcy5fX2RhdGFfXyk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIHBhcnNlVHlwZW5hbWVzKHR5cGVuYW1lcykge1xuICByZXR1cm4gdHlwZW5hbWVzLnRyaW0oKS5zcGxpdCgvXnxcXHMrLykubWFwKGZ1bmN0aW9uKHQpIHtcbiAgICB2YXIgbmFtZSA9IFwiXCIsIGkgPSB0LmluZGV4T2YoXCIuXCIpO1xuICAgIGlmIChpID49IDApIG5hbWUgPSB0LnNsaWNlKGkgKyAxKSwgdCA9IHQuc2xpY2UoMCwgaSk7XG4gICAgcmV0dXJuIHt0eXBlOiB0LCBuYW1lOiBuYW1lfTtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIG9uUmVtb3ZlKHR5cGVuYW1lKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgb24gPSB0aGlzLl9fb247XG4gICAgaWYgKCFvbikgcmV0dXJuO1xuICAgIGZvciAodmFyIGogPSAwLCBpID0gLTEsIG0gPSBvbi5sZW5ndGgsIG87IGogPCBtOyArK2opIHtcbiAgICAgIGlmIChvID0gb25bal0sICghdHlwZW5hbWUudHlwZSB8fCBvLnR5cGUgPT09IHR5cGVuYW1lLnR5cGUpICYmIG8ubmFtZSA9PT0gdHlwZW5hbWUubmFtZSkge1xuICAgICAgICB0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXIoby50eXBlLCBvLmxpc3RlbmVyLCBvLm9wdGlvbnMpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgb25bKytpXSA9IG87XG4gICAgICB9XG4gICAgfVxuICAgIGlmICgrK2kpIG9uLmxlbmd0aCA9IGk7XG4gICAgZWxzZSBkZWxldGUgdGhpcy5fX29uO1xuICB9O1xufVxuXG5mdW5jdGlvbiBvbkFkZCh0eXBlbmFtZSwgdmFsdWUsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciBvbiA9IHRoaXMuX19vbiwgbywgbGlzdGVuZXIgPSBjb250ZXh0TGlzdGVuZXIodmFsdWUpO1xuICAgIGlmIChvbikgZm9yICh2YXIgaiA9IDAsIG0gPSBvbi5sZW5ndGg7IGogPCBtOyArK2opIHtcbiAgICAgIGlmICgobyA9IG9uW2pdKS50eXBlID09PSB0eXBlbmFtZS50eXBlICYmIG8ubmFtZSA9PT0gdHlwZW5hbWUubmFtZSkge1xuICAgICAgICB0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXIoby50eXBlLCBvLmxpc3RlbmVyLCBvLm9wdGlvbnMpO1xuICAgICAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIoby50eXBlLCBvLmxpc3RlbmVyID0gbGlzdGVuZXIsIG8ub3B0aW9ucyA9IG9wdGlvbnMpO1xuICAgICAgICBvLnZhbHVlID0gdmFsdWU7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICB9XG4gICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKHR5cGVuYW1lLnR5cGUsIGxpc3RlbmVyLCBvcHRpb25zKTtcbiAgICBvID0ge3R5cGU6IHR5cGVuYW1lLnR5cGUsIG5hbWU6IHR5cGVuYW1lLm5hbWUsIHZhbHVlOiB2YWx1ZSwgbGlzdGVuZXI6IGxpc3RlbmVyLCBvcHRpb25zOiBvcHRpb25zfTtcbiAgICBpZiAoIW9uKSB0aGlzLl9fb24gPSBbb107XG4gICAgZWxzZSBvbi5wdXNoKG8pO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih0eXBlbmFtZSwgdmFsdWUsIG9wdGlvbnMpIHtcbiAgdmFyIHR5cGVuYW1lcyA9IHBhcnNlVHlwZW5hbWVzKHR5cGVuYW1lICsgXCJcIiksIGksIG4gPSB0eXBlbmFtZXMubGVuZ3RoLCB0O1xuXG4gIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMikge1xuICAgIHZhciBvbiA9IHRoaXMubm9kZSgpLl9fb247XG4gICAgaWYgKG9uKSBmb3IgKHZhciBqID0gMCwgbSA9IG9uLmxlbmd0aCwgbzsgaiA8IG07ICsraikge1xuICAgICAgZm9yIChpID0gMCwgbyA9IG9uW2pdOyBpIDwgbjsgKytpKSB7XG4gICAgICAgIGlmICgodCA9IHR5cGVuYW1lc1tpXSkudHlwZSA9PT0gby50eXBlICYmIHQubmFtZSA9PT0gby5uYW1lKSB7XG4gICAgICAgICAgcmV0dXJuIG8udmFsdWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgb24gPSB2YWx1ZSA/IG9uQWRkIDogb25SZW1vdmU7XG4gIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIHRoaXMuZWFjaChvbih0eXBlbmFtZXNbaV0sIHZhbHVlLCBvcHRpb25zKSk7XG4gIHJldHVybiB0aGlzO1xufVxuIiwiaW1wb3J0IGRlZmF1bHRWaWV3IGZyb20gXCIuLi93aW5kb3cuanNcIjtcblxuZnVuY3Rpb24gZGlzcGF0Y2hFdmVudChub2RlLCB0eXBlLCBwYXJhbXMpIHtcbiAgdmFyIHdpbmRvdyA9IGRlZmF1bHRWaWV3KG5vZGUpLFxuICAgICAgZXZlbnQgPSB3aW5kb3cuQ3VzdG9tRXZlbnQ7XG5cbiAgaWYgKHR5cGVvZiBldmVudCA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgZXZlbnQgPSBuZXcgZXZlbnQodHlwZSwgcGFyYW1zKTtcbiAgfSBlbHNlIHtcbiAgICBldmVudCA9IHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFdmVudChcIkV2ZW50XCIpO1xuICAgIGlmIChwYXJhbXMpIGV2ZW50LmluaXRFdmVudCh0eXBlLCBwYXJhbXMuYnViYmxlcywgcGFyYW1zLmNhbmNlbGFibGUpLCBldmVudC5kZXRhaWwgPSBwYXJhbXMuZGV0YWlsO1xuICAgIGVsc2UgZXZlbnQuaW5pdEV2ZW50KHR5cGUsIGZhbHNlLCBmYWxzZSk7XG4gIH1cblxuICBub2RlLmRpc3BhdGNoRXZlbnQoZXZlbnQpO1xufVxuXG5mdW5jdGlvbiBkaXNwYXRjaENvbnN0YW50KHR5cGUsIHBhcmFtcykge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGRpc3BhdGNoRXZlbnQodGhpcywgdHlwZSwgcGFyYW1zKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gZGlzcGF0Y2hGdW5jdGlvbih0eXBlLCBwYXJhbXMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkaXNwYXRjaEV2ZW50KHRoaXMsIHR5cGUsIHBhcmFtcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odHlwZSwgcGFyYW1zKSB7XG4gIHJldHVybiB0aGlzLmVhY2goKHR5cGVvZiBwYXJhbXMgPT09IFwiZnVuY3Rpb25cIlxuICAgICAgPyBkaXNwYXRjaEZ1bmN0aW9uXG4gICAgICA6IGRpc3BhdGNoQ29uc3RhbnQpKHR5cGUsIHBhcmFtcykpO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24qKCkge1xuICBmb3IgKHZhciBncm91cHMgPSB0aGlzLl9ncm91cHMsIGogPSAwLCBtID0gZ3JvdXBzLmxlbmd0aDsgaiA8IG07ICsraikge1xuICAgIGZvciAodmFyIGdyb3VwID0gZ3JvdXBzW2pdLCBpID0gMCwgbiA9IGdyb3VwLmxlbmd0aCwgbm9kZTsgaSA8IG47ICsraSkge1xuICAgICAgaWYgKG5vZGUgPSBncm91cFtpXSkgeWllbGQgbm9kZTtcbiAgICB9XG4gIH1cbn1cbiIsImltcG9ydCBzZWxlY3Rpb25fc2VsZWN0IGZyb20gXCIuL3NlbGVjdC5qc1wiO1xuaW1wb3J0IHNlbGVjdGlvbl9zZWxlY3RBbGwgZnJvbSBcIi4vc2VsZWN0QWxsLmpzXCI7XG5pbXBvcnQgc2VsZWN0aW9uX3NlbGVjdENoaWxkIGZyb20gXCIuL3NlbGVjdENoaWxkLmpzXCI7XG5pbXBvcnQgc2VsZWN0aW9uX3NlbGVjdENoaWxkcmVuIGZyb20gXCIuL3NlbGVjdENoaWxkcmVuLmpzXCI7XG5pbXBvcnQgc2VsZWN0aW9uX2ZpbHRlciBmcm9tIFwiLi9maWx0ZXIuanNcIjtcbmltcG9ydCBzZWxlY3Rpb25fZGF0YSBmcm9tIFwiLi9kYXRhLmpzXCI7XG5pbXBvcnQgc2VsZWN0aW9uX2VudGVyIGZyb20gXCIuL2VudGVyLmpzXCI7XG5pbXBvcnQgc2VsZWN0aW9uX2V4aXQgZnJvbSBcIi4vZXhpdC5qc1wiO1xuaW1wb3J0IHNlbGVjdGlvbl9qb2luIGZyb20gXCIuL2pvaW4uanNcIjtcbmltcG9ydCBzZWxlY3Rpb25fbWVyZ2UgZnJvbSBcIi4vbWVyZ2UuanNcIjtcbmltcG9ydCBzZWxlY3Rpb25fb3JkZXIgZnJvbSBcIi4vb3JkZXIuanNcIjtcbmltcG9ydCBzZWxlY3Rpb25fc29ydCBmcm9tIFwiLi9zb3J0LmpzXCI7XG5pbXBvcnQgc2VsZWN0aW9uX2NhbGwgZnJvbSBcIi4vY2FsbC5qc1wiO1xuaW1wb3J0IHNlbGVjdGlvbl9ub2RlcyBmcm9tIFwiLi9ub2Rlcy5qc1wiO1xuaW1wb3J0IHNlbGVjdGlvbl9ub2RlIGZyb20gXCIuL25vZGUuanNcIjtcbmltcG9ydCBzZWxlY3Rpb25fc2l6ZSBmcm9tIFwiLi9zaXplLmpzXCI7XG5pbXBvcnQgc2VsZWN0aW9uX2VtcHR5IGZyb20gXCIuL2VtcHR5LmpzXCI7XG5pbXBvcnQgc2VsZWN0aW9uX2VhY2ggZnJvbSBcIi4vZWFjaC5qc1wiO1xuaW1wb3J0IHNlbGVjdGlvbl9hdHRyIGZyb20gXCIuL2F0dHIuanNcIjtcbmltcG9ydCBzZWxlY3Rpb25fc3R5bGUgZnJvbSBcIi4vc3R5bGUuanNcIjtcbmltcG9ydCBzZWxlY3Rpb25fcHJvcGVydHkgZnJvbSBcIi4vcHJvcGVydHkuanNcIjtcbmltcG9ydCBzZWxlY3Rpb25fY2xhc3NlZCBmcm9tIFwiLi9jbGFzc2VkLmpzXCI7XG5pbXBvcnQgc2VsZWN0aW9uX3RleHQgZnJvbSBcIi4vdGV4dC5qc1wiO1xuaW1wb3J0IHNlbGVjdGlvbl9odG1sIGZyb20gXCIuL2h0bWwuanNcIjtcbmltcG9ydCBzZWxlY3Rpb25fcmFpc2UgZnJvbSBcIi4vcmFpc2UuanNcIjtcbmltcG9ydCBzZWxlY3Rpb25fbG93ZXIgZnJvbSBcIi4vbG93ZXIuanNcIjtcbmltcG9ydCBzZWxlY3Rpb25fYXBwZW5kIGZyb20gXCIuL2FwcGVuZC5qc1wiO1xuaW1wb3J0IHNlbGVjdGlvbl9pbnNlcnQgZnJvbSBcIi4vaW5zZXJ0LmpzXCI7XG5pbXBvcnQgc2VsZWN0aW9uX3JlbW92ZSBmcm9tIFwiLi9yZW1vdmUuanNcIjtcbmltcG9ydCBzZWxlY3Rpb25fY2xvbmUgZnJvbSBcIi4vY2xvbmUuanNcIjtcbmltcG9ydCBzZWxlY3Rpb25fZGF0dW0gZnJvbSBcIi4vZGF0dW0uanNcIjtcbmltcG9ydCBzZWxlY3Rpb25fb24gZnJvbSBcIi4vb24uanNcIjtcbmltcG9ydCBzZWxlY3Rpb25fZGlzcGF0Y2ggZnJvbSBcIi4vZGlzcGF0Y2guanNcIjtcbmltcG9ydCBzZWxlY3Rpb25faXRlcmF0b3IgZnJvbSBcIi4vaXRlcmF0b3IuanNcIjtcblxuZXhwb3J0IHZhciByb290ID0gW251bGxdO1xuXG5leHBvcnQgZnVuY3Rpb24gU2VsZWN0aW9uKGdyb3VwcywgcGFyZW50cykge1xuICB0aGlzLl9ncm91cHMgPSBncm91cHM7XG4gIHRoaXMuX3BhcmVudHMgPSBwYXJlbnRzO1xufVxuXG5mdW5jdGlvbiBzZWxlY3Rpb24oKSB7XG4gIHJldHVybiBuZXcgU2VsZWN0aW9uKFtbZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50XV0sIHJvb3QpO1xufVxuXG5mdW5jdGlvbiBzZWxlY3Rpb25fc2VsZWN0aW9uKCkge1xuICByZXR1cm4gdGhpcztcbn1cblxuU2VsZWN0aW9uLnByb3RvdHlwZSA9IHNlbGVjdGlvbi5wcm90b3R5cGUgPSB7XG4gIGNvbnN0cnVjdG9yOiBTZWxlY3Rpb24sXG4gIHNlbGVjdDogc2VsZWN0aW9uX3NlbGVjdCxcbiAgc2VsZWN0QWxsOiBzZWxlY3Rpb25fc2VsZWN0QWxsLFxuICBzZWxlY3RDaGlsZDogc2VsZWN0aW9uX3NlbGVjdENoaWxkLFxuICBzZWxlY3RDaGlsZHJlbjogc2VsZWN0aW9uX3NlbGVjdENoaWxkcmVuLFxuICBmaWx0ZXI6IHNlbGVjdGlvbl9maWx0ZXIsXG4gIGRhdGE6IHNlbGVjdGlvbl9kYXRhLFxuICBlbnRlcjogc2VsZWN0aW9uX2VudGVyLFxuICBleGl0OiBzZWxlY3Rpb25fZXhpdCxcbiAgam9pbjogc2VsZWN0aW9uX2pvaW4sXG4gIG1lcmdlOiBzZWxlY3Rpb25fbWVyZ2UsXG4gIHNlbGVjdGlvbjogc2VsZWN0aW9uX3NlbGVjdGlvbixcbiAgb3JkZXI6IHNlbGVjdGlvbl9vcmRlcixcbiAgc29ydDogc2VsZWN0aW9uX3NvcnQsXG4gIGNhbGw6IHNlbGVjdGlvbl9jYWxsLFxuICBub2Rlczogc2VsZWN0aW9uX25vZGVzLFxuICBub2RlOiBzZWxlY3Rpb25fbm9kZSxcbiAgc2l6ZTogc2VsZWN0aW9uX3NpemUsXG4gIGVtcHR5OiBzZWxlY3Rpb25fZW1wdHksXG4gIGVhY2g6IHNlbGVjdGlvbl9lYWNoLFxuICBhdHRyOiBzZWxlY3Rpb25fYXR0cixcbiAgc3R5bGU6IHNlbGVjdGlvbl9zdHlsZSxcbiAgcHJvcGVydHk6IHNlbGVjdGlvbl9wcm9wZXJ0eSxcbiAgY2xhc3NlZDogc2VsZWN0aW9uX2NsYXNzZWQsXG4gIHRleHQ6IHNlbGVjdGlvbl90ZXh0LFxuICBodG1sOiBzZWxlY3Rpb25faHRtbCxcbiAgcmFpc2U6IHNlbGVjdGlvbl9yYWlzZSxcbiAgbG93ZXI6IHNlbGVjdGlvbl9sb3dlcixcbiAgYXBwZW5kOiBzZWxlY3Rpb25fYXBwZW5kLFxuICBpbnNlcnQ6IHNlbGVjdGlvbl9pbnNlcnQsXG4gIHJlbW92ZTogc2VsZWN0aW9uX3JlbW92ZSxcbiAgY2xvbmU6IHNlbGVjdGlvbl9jbG9uZSxcbiAgZGF0dW06IHNlbGVjdGlvbl9kYXR1bSxcbiAgb246IHNlbGVjdGlvbl9vbixcbiAgZGlzcGF0Y2g6IHNlbGVjdGlvbl9kaXNwYXRjaCxcbiAgW1N5bWJvbC5pdGVyYXRvcl06IHNlbGVjdGlvbl9pdGVyYXRvclxufTtcblxuZXhwb3J0IGRlZmF1bHQgc2VsZWN0aW9uO1xuIiwiaW1wb3J0IHtTZWxlY3Rpb24sIHJvb3R9IGZyb20gXCIuL3NlbGVjdGlvbi9pbmRleC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzZWxlY3Rvcikge1xuICByZXR1cm4gdHlwZW9mIHNlbGVjdG9yID09PSBcInN0cmluZ1wiXG4gICAgICA/IG5ldyBTZWxlY3Rpb24oW1tkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yKV1dLCBbZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50XSlcbiAgICAgIDogbmV3IFNlbGVjdGlvbihbW3NlbGVjdG9yXV0sIHJvb3QpO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oY29uc3RydWN0b3IsIGZhY3RvcnksIHByb3RvdHlwZSkge1xuICBjb25zdHJ1Y3Rvci5wcm90b3R5cGUgPSBmYWN0b3J5LnByb3RvdHlwZSA9IHByb3RvdHlwZTtcbiAgcHJvdG90eXBlLmNvbnN0cnVjdG9yID0gY29uc3RydWN0b3I7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBleHRlbmQocGFyZW50LCBkZWZpbml0aW9uKSB7XG4gIHZhciBwcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHBhcmVudC5wcm90b3R5cGUpO1xuICBmb3IgKHZhciBrZXkgaW4gZGVmaW5pdGlvbikgcHJvdG90eXBlW2tleV0gPSBkZWZpbml0aW9uW2tleV07XG4gIHJldHVybiBwcm90b3R5cGU7XG59XG4iLCJpbXBvcnQgZGVmaW5lLCB7ZXh0ZW5kfSBmcm9tIFwiLi9kZWZpbmUuanNcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIENvbG9yKCkge31cblxuZXhwb3J0IHZhciBkYXJrZXIgPSAwLjc7XG5leHBvcnQgdmFyIGJyaWdodGVyID0gMSAvIGRhcmtlcjtcblxudmFyIHJlSSA9IFwiXFxcXHMqKFsrLV0/XFxcXGQrKVxcXFxzKlwiLFxuICAgIHJlTiA9IFwiXFxcXHMqKFsrLV0/KD86XFxcXGQqXFxcXC4pP1xcXFxkKyg/OltlRV1bKy1dP1xcXFxkKyk/KVxcXFxzKlwiLFxuICAgIHJlUCA9IFwiXFxcXHMqKFsrLV0/KD86XFxcXGQqXFxcXC4pP1xcXFxkKyg/OltlRV1bKy1dP1xcXFxkKyk/KSVcXFxccypcIixcbiAgICByZUhleCA9IC9eIyhbMC05YS1mXXszLDh9KSQvLFxuICAgIHJlUmdiSW50ZWdlciA9IG5ldyBSZWdFeHAoYF5yZ2JcXFxcKCR7cmVJfSwke3JlSX0sJHtyZUl9XFxcXCkkYCksXG4gICAgcmVSZ2JQZXJjZW50ID0gbmV3IFJlZ0V4cChgXnJnYlxcXFwoJHtyZVB9LCR7cmVQfSwke3JlUH1cXFxcKSRgKSxcbiAgICByZVJnYmFJbnRlZ2VyID0gbmV3IFJlZ0V4cChgXnJnYmFcXFxcKCR7cmVJfSwke3JlSX0sJHtyZUl9LCR7cmVOfVxcXFwpJGApLFxuICAgIHJlUmdiYVBlcmNlbnQgPSBuZXcgUmVnRXhwKGBecmdiYVxcXFwoJHtyZVB9LCR7cmVQfSwke3JlUH0sJHtyZU59XFxcXCkkYCksXG4gICAgcmVIc2xQZXJjZW50ID0gbmV3IFJlZ0V4cChgXmhzbFxcXFwoJHtyZU59LCR7cmVQfSwke3JlUH1cXFxcKSRgKSxcbiAgICByZUhzbGFQZXJjZW50ID0gbmV3IFJlZ0V4cChgXmhzbGFcXFxcKCR7cmVOfSwke3JlUH0sJHtyZVB9LCR7cmVOfVxcXFwpJGApO1xuXG52YXIgbmFtZWQgPSB7XG4gIGFsaWNlYmx1ZTogMHhmMGY4ZmYsXG4gIGFudGlxdWV3aGl0ZTogMHhmYWViZDcsXG4gIGFxdWE6IDB4MDBmZmZmLFxuICBhcXVhbWFyaW5lOiAweDdmZmZkNCxcbiAgYXp1cmU6IDB4ZjBmZmZmLFxuICBiZWlnZTogMHhmNWY1ZGMsXG4gIGJpc3F1ZTogMHhmZmU0YzQsXG4gIGJsYWNrOiAweDAwMDAwMCxcbiAgYmxhbmNoZWRhbG1vbmQ6IDB4ZmZlYmNkLFxuICBibHVlOiAweDAwMDBmZixcbiAgYmx1ZXZpb2xldDogMHg4YTJiZTIsXG4gIGJyb3duOiAweGE1MmEyYSxcbiAgYnVybHl3b29kOiAweGRlYjg4NyxcbiAgY2FkZXRibHVlOiAweDVmOWVhMCxcbiAgY2hhcnRyZXVzZTogMHg3ZmZmMDAsXG4gIGNob2NvbGF0ZTogMHhkMjY5MWUsXG4gIGNvcmFsOiAweGZmN2Y1MCxcbiAgY29ybmZsb3dlcmJsdWU6IDB4NjQ5NWVkLFxuICBjb3Juc2lsazogMHhmZmY4ZGMsXG4gIGNyaW1zb246IDB4ZGMxNDNjLFxuICBjeWFuOiAweDAwZmZmZixcbiAgZGFya2JsdWU6IDB4MDAwMDhiLFxuICBkYXJrY3lhbjogMHgwMDhiOGIsXG4gIGRhcmtnb2xkZW5yb2Q6IDB4Yjg4NjBiLFxuICBkYXJrZ3JheTogMHhhOWE5YTksXG4gIGRhcmtncmVlbjogMHgwMDY0MDAsXG4gIGRhcmtncmV5OiAweGE5YTlhOSxcbiAgZGFya2toYWtpOiAweGJkYjc2YixcbiAgZGFya21hZ2VudGE6IDB4OGIwMDhiLFxuICBkYXJrb2xpdmVncmVlbjogMHg1NTZiMmYsXG4gIGRhcmtvcmFuZ2U6IDB4ZmY4YzAwLFxuICBkYXJrb3JjaGlkOiAweDk5MzJjYyxcbiAgZGFya3JlZDogMHg4YjAwMDAsXG4gIGRhcmtzYWxtb246IDB4ZTk5NjdhLFxuICBkYXJrc2VhZ3JlZW46IDB4OGZiYzhmLFxuICBkYXJrc2xhdGVibHVlOiAweDQ4M2Q4YixcbiAgZGFya3NsYXRlZ3JheTogMHgyZjRmNGYsXG4gIGRhcmtzbGF0ZWdyZXk6IDB4MmY0ZjRmLFxuICBkYXJrdHVycXVvaXNlOiAweDAwY2VkMSxcbiAgZGFya3Zpb2xldDogMHg5NDAwZDMsXG4gIGRlZXBwaW5rOiAweGZmMTQ5MyxcbiAgZGVlcHNreWJsdWU6IDB4MDBiZmZmLFxuICBkaW1ncmF5OiAweDY5Njk2OSxcbiAgZGltZ3JleTogMHg2OTY5NjksXG4gIGRvZGdlcmJsdWU6IDB4MWU5MGZmLFxuICBmaXJlYnJpY2s6IDB4YjIyMjIyLFxuICBmbG9yYWx3aGl0ZTogMHhmZmZhZjAsXG4gIGZvcmVzdGdyZWVuOiAweDIyOGIyMixcbiAgZnVjaHNpYTogMHhmZjAwZmYsXG4gIGdhaW5zYm9ybzogMHhkY2RjZGMsXG4gIGdob3N0d2hpdGU6IDB4ZjhmOGZmLFxuICBnb2xkOiAweGZmZDcwMCxcbiAgZ29sZGVucm9kOiAweGRhYTUyMCxcbiAgZ3JheTogMHg4MDgwODAsXG4gIGdyZWVuOiAweDAwODAwMCxcbiAgZ3JlZW55ZWxsb3c6IDB4YWRmZjJmLFxuICBncmV5OiAweDgwODA4MCxcbiAgaG9uZXlkZXc6IDB4ZjBmZmYwLFxuICBob3RwaW5rOiAweGZmNjliNCxcbiAgaW5kaWFucmVkOiAweGNkNWM1YyxcbiAgaW5kaWdvOiAweDRiMDA4MixcbiAgaXZvcnk6IDB4ZmZmZmYwLFxuICBraGFraTogMHhmMGU2OGMsXG4gIGxhdmVuZGVyOiAweGU2ZTZmYSxcbiAgbGF2ZW5kZXJibHVzaDogMHhmZmYwZjUsXG4gIGxhd25ncmVlbjogMHg3Y2ZjMDAsXG4gIGxlbW9uY2hpZmZvbjogMHhmZmZhY2QsXG4gIGxpZ2h0Ymx1ZTogMHhhZGQ4ZTYsXG4gIGxpZ2h0Y29yYWw6IDB4ZjA4MDgwLFxuICBsaWdodGN5YW46IDB4ZTBmZmZmLFxuICBsaWdodGdvbGRlbnJvZHllbGxvdzogMHhmYWZhZDIsXG4gIGxpZ2h0Z3JheTogMHhkM2QzZDMsXG4gIGxpZ2h0Z3JlZW46IDB4OTBlZTkwLFxuICBsaWdodGdyZXk6IDB4ZDNkM2QzLFxuICBsaWdodHBpbms6IDB4ZmZiNmMxLFxuICBsaWdodHNhbG1vbjogMHhmZmEwN2EsXG4gIGxpZ2h0c2VhZ3JlZW46IDB4MjBiMmFhLFxuICBsaWdodHNreWJsdWU6IDB4ODdjZWZhLFxuICBsaWdodHNsYXRlZ3JheTogMHg3Nzg4OTksXG4gIGxpZ2h0c2xhdGVncmV5OiAweDc3ODg5OSxcbiAgbGlnaHRzdGVlbGJsdWU6IDB4YjBjNGRlLFxuICBsaWdodHllbGxvdzogMHhmZmZmZTAsXG4gIGxpbWU6IDB4MDBmZjAwLFxuICBsaW1lZ3JlZW46IDB4MzJjZDMyLFxuICBsaW5lbjogMHhmYWYwZTYsXG4gIG1hZ2VudGE6IDB4ZmYwMGZmLFxuICBtYXJvb246IDB4ODAwMDAwLFxuICBtZWRpdW1hcXVhbWFyaW5lOiAweDY2Y2RhYSxcbiAgbWVkaXVtYmx1ZTogMHgwMDAwY2QsXG4gIG1lZGl1bW9yY2hpZDogMHhiYTU1ZDMsXG4gIG1lZGl1bXB1cnBsZTogMHg5MzcwZGIsXG4gIG1lZGl1bXNlYWdyZWVuOiAweDNjYjM3MSxcbiAgbWVkaXVtc2xhdGVibHVlOiAweDdiNjhlZSxcbiAgbWVkaXVtc3ByaW5nZ3JlZW46IDB4MDBmYTlhLFxuICBtZWRpdW10dXJxdW9pc2U6IDB4NDhkMWNjLFxuICBtZWRpdW12aW9sZXRyZWQ6IDB4YzcxNTg1LFxuICBtaWRuaWdodGJsdWU6IDB4MTkxOTcwLFxuICBtaW50Y3JlYW06IDB4ZjVmZmZhLFxuICBtaXN0eXJvc2U6IDB4ZmZlNGUxLFxuICBtb2NjYXNpbjogMHhmZmU0YjUsXG4gIG5hdmFqb3doaXRlOiAweGZmZGVhZCxcbiAgbmF2eTogMHgwMDAwODAsXG4gIG9sZGxhY2U6IDB4ZmRmNWU2LFxuICBvbGl2ZTogMHg4MDgwMDAsXG4gIG9saXZlZHJhYjogMHg2YjhlMjMsXG4gIG9yYW5nZTogMHhmZmE1MDAsXG4gIG9yYW5nZXJlZDogMHhmZjQ1MDAsXG4gIG9yY2hpZDogMHhkYTcwZDYsXG4gIHBhbGVnb2xkZW5yb2Q6IDB4ZWVlOGFhLFxuICBwYWxlZ3JlZW46IDB4OThmYjk4LFxuICBwYWxldHVycXVvaXNlOiAweGFmZWVlZSxcbiAgcGFsZXZpb2xldHJlZDogMHhkYjcwOTMsXG4gIHBhcGF5YXdoaXA6IDB4ZmZlZmQ1LFxuICBwZWFjaHB1ZmY6IDB4ZmZkYWI5LFxuICBwZXJ1OiAweGNkODUzZixcbiAgcGluazogMHhmZmMwY2IsXG4gIHBsdW06IDB4ZGRhMGRkLFxuICBwb3dkZXJibHVlOiAweGIwZTBlNixcbiAgcHVycGxlOiAweDgwMDA4MCxcbiAgcmViZWNjYXB1cnBsZTogMHg2NjMzOTksXG4gIHJlZDogMHhmZjAwMDAsXG4gIHJvc3licm93bjogMHhiYzhmOGYsXG4gIHJveWFsYmx1ZTogMHg0MTY5ZTEsXG4gIHNhZGRsZWJyb3duOiAweDhiNDUxMyxcbiAgc2FsbW9uOiAweGZhODA3MixcbiAgc2FuZHlicm93bjogMHhmNGE0NjAsXG4gIHNlYWdyZWVuOiAweDJlOGI1NyxcbiAgc2Vhc2hlbGw6IDB4ZmZmNWVlLFxuICBzaWVubmE6IDB4YTA1MjJkLFxuICBzaWx2ZXI6IDB4YzBjMGMwLFxuICBza3libHVlOiAweDg3Y2VlYixcbiAgc2xhdGVibHVlOiAweDZhNWFjZCxcbiAgc2xhdGVncmF5OiAweDcwODA5MCxcbiAgc2xhdGVncmV5OiAweDcwODA5MCxcbiAgc25vdzogMHhmZmZhZmEsXG4gIHNwcmluZ2dyZWVuOiAweDAwZmY3ZixcbiAgc3RlZWxibHVlOiAweDQ2ODJiNCxcbiAgdGFuOiAweGQyYjQ4YyxcbiAgdGVhbDogMHgwMDgwODAsXG4gIHRoaXN0bGU6IDB4ZDhiZmQ4LFxuICB0b21hdG86IDB4ZmY2MzQ3LFxuICB0dXJxdW9pc2U6IDB4NDBlMGQwLFxuICB2aW9sZXQ6IDB4ZWU4MmVlLFxuICB3aGVhdDogMHhmNWRlYjMsXG4gIHdoaXRlOiAweGZmZmZmZixcbiAgd2hpdGVzbW9rZTogMHhmNWY1ZjUsXG4gIHllbGxvdzogMHhmZmZmMDAsXG4gIHllbGxvd2dyZWVuOiAweDlhY2QzMlxufTtcblxuZGVmaW5lKENvbG9yLCBjb2xvciwge1xuICBjb3B5KGNoYW5uZWxzKSB7XG4gICAgcmV0dXJuIE9iamVjdC5hc3NpZ24obmV3IHRoaXMuY29uc3RydWN0b3IsIHRoaXMsIGNoYW5uZWxzKTtcbiAgfSxcbiAgZGlzcGxheWFibGUoKSB7XG4gICAgcmV0dXJuIHRoaXMucmdiKCkuZGlzcGxheWFibGUoKTtcbiAgfSxcbiAgaGV4OiBjb2xvcl9mb3JtYXRIZXgsIC8vIERlcHJlY2F0ZWQhIFVzZSBjb2xvci5mb3JtYXRIZXguXG4gIGZvcm1hdEhleDogY29sb3JfZm9ybWF0SGV4LFxuICBmb3JtYXRIZXg4OiBjb2xvcl9mb3JtYXRIZXg4LFxuICBmb3JtYXRIc2w6IGNvbG9yX2Zvcm1hdEhzbCxcbiAgZm9ybWF0UmdiOiBjb2xvcl9mb3JtYXRSZ2IsXG4gIHRvU3RyaW5nOiBjb2xvcl9mb3JtYXRSZ2Jcbn0pO1xuXG5mdW5jdGlvbiBjb2xvcl9mb3JtYXRIZXgoKSB7XG4gIHJldHVybiB0aGlzLnJnYigpLmZvcm1hdEhleCgpO1xufVxuXG5mdW5jdGlvbiBjb2xvcl9mb3JtYXRIZXg4KCkge1xuICByZXR1cm4gdGhpcy5yZ2IoKS5mb3JtYXRIZXg4KCk7XG59XG5cbmZ1bmN0aW9uIGNvbG9yX2Zvcm1hdEhzbCgpIHtcbiAgcmV0dXJuIGhzbENvbnZlcnQodGhpcykuZm9ybWF0SHNsKCk7XG59XG5cbmZ1bmN0aW9uIGNvbG9yX2Zvcm1hdFJnYigpIHtcbiAgcmV0dXJuIHRoaXMucmdiKCkuZm9ybWF0UmdiKCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNvbG9yKGZvcm1hdCkge1xuICB2YXIgbSwgbDtcbiAgZm9ybWF0ID0gKGZvcm1hdCArIFwiXCIpLnRyaW0oKS50b0xvd2VyQ2FzZSgpO1xuICByZXR1cm4gKG0gPSByZUhleC5leGVjKGZvcm1hdCkpID8gKGwgPSBtWzFdLmxlbmd0aCwgbSA9IHBhcnNlSW50KG1bMV0sIDE2KSwgbCA9PT0gNiA/IHJnYm4obSkgLy8gI2ZmMDAwMFxuICAgICAgOiBsID09PSAzID8gbmV3IFJnYigobSA+PiA4ICYgMHhmKSB8IChtID4+IDQgJiAweGYwKSwgKG0gPj4gNCAmIDB4ZikgfCAobSAmIDB4ZjApLCAoKG0gJiAweGYpIDw8IDQpIHwgKG0gJiAweGYpLCAxKSAvLyAjZjAwXG4gICAgICA6IGwgPT09IDggPyByZ2JhKG0gPj4gMjQgJiAweGZmLCBtID4+IDE2ICYgMHhmZiwgbSA+PiA4ICYgMHhmZiwgKG0gJiAweGZmKSAvIDB4ZmYpIC8vICNmZjAwMDAwMFxuICAgICAgOiBsID09PSA0ID8gcmdiYSgobSA+PiAxMiAmIDB4ZikgfCAobSA+PiA4ICYgMHhmMCksIChtID4+IDggJiAweGYpIHwgKG0gPj4gNCAmIDB4ZjApLCAobSA+PiA0ICYgMHhmKSB8IChtICYgMHhmMCksICgoKG0gJiAweGYpIDw8IDQpIHwgKG0gJiAweGYpKSAvIDB4ZmYpIC8vICNmMDAwXG4gICAgICA6IG51bGwpIC8vIGludmFsaWQgaGV4XG4gICAgICA6IChtID0gcmVSZ2JJbnRlZ2VyLmV4ZWMoZm9ybWF0KSkgPyBuZXcgUmdiKG1bMV0sIG1bMl0sIG1bM10sIDEpIC8vIHJnYigyNTUsIDAsIDApXG4gICAgICA6IChtID0gcmVSZ2JQZXJjZW50LmV4ZWMoZm9ybWF0KSkgPyBuZXcgUmdiKG1bMV0gKiAyNTUgLyAxMDAsIG1bMl0gKiAyNTUgLyAxMDAsIG1bM10gKiAyNTUgLyAxMDAsIDEpIC8vIHJnYigxMDAlLCAwJSwgMCUpXG4gICAgICA6IChtID0gcmVSZ2JhSW50ZWdlci5leGVjKGZvcm1hdCkpID8gcmdiYShtWzFdLCBtWzJdLCBtWzNdLCBtWzRdKSAvLyByZ2JhKDI1NSwgMCwgMCwgMSlcbiAgICAgIDogKG0gPSByZVJnYmFQZXJjZW50LmV4ZWMoZm9ybWF0KSkgPyByZ2JhKG1bMV0gKiAyNTUgLyAxMDAsIG1bMl0gKiAyNTUgLyAxMDAsIG1bM10gKiAyNTUgLyAxMDAsIG1bNF0pIC8vIHJnYigxMDAlLCAwJSwgMCUsIDEpXG4gICAgICA6IChtID0gcmVIc2xQZXJjZW50LmV4ZWMoZm9ybWF0KSkgPyBoc2xhKG1bMV0sIG1bMl0gLyAxMDAsIG1bM10gLyAxMDAsIDEpIC8vIGhzbCgxMjAsIDUwJSwgNTAlKVxuICAgICAgOiAobSA9IHJlSHNsYVBlcmNlbnQuZXhlYyhmb3JtYXQpKSA/IGhzbGEobVsxXSwgbVsyXSAvIDEwMCwgbVszXSAvIDEwMCwgbVs0XSkgLy8gaHNsYSgxMjAsIDUwJSwgNTAlLCAxKVxuICAgICAgOiBuYW1lZC5oYXNPd25Qcm9wZXJ0eShmb3JtYXQpID8gcmdibihuYW1lZFtmb3JtYXRdKSAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXByb3RvdHlwZS1idWlsdGluc1xuICAgICAgOiBmb3JtYXQgPT09IFwidHJhbnNwYXJlbnRcIiA/IG5ldyBSZ2IoTmFOLCBOYU4sIE5hTiwgMClcbiAgICAgIDogbnVsbDtcbn1cblxuZnVuY3Rpb24gcmdibihuKSB7XG4gIHJldHVybiBuZXcgUmdiKG4gPj4gMTYgJiAweGZmLCBuID4+IDggJiAweGZmLCBuICYgMHhmZiwgMSk7XG59XG5cbmZ1bmN0aW9uIHJnYmEociwgZywgYiwgYSkge1xuICBpZiAoYSA8PSAwKSByID0gZyA9IGIgPSBOYU47XG4gIHJldHVybiBuZXcgUmdiKHIsIGcsIGIsIGEpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcmdiQ29udmVydChvKSB7XG4gIGlmICghKG8gaW5zdGFuY2VvZiBDb2xvcikpIG8gPSBjb2xvcihvKTtcbiAgaWYgKCFvKSByZXR1cm4gbmV3IFJnYjtcbiAgbyA9IG8ucmdiKCk7XG4gIHJldHVybiBuZXcgUmdiKG8uciwgby5nLCBvLmIsIG8ub3BhY2l0eSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZ2IociwgZywgYiwgb3BhY2l0eSkge1xuICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA9PT0gMSA/IHJnYkNvbnZlcnQocikgOiBuZXcgUmdiKHIsIGcsIGIsIG9wYWNpdHkgPT0gbnVsbCA/IDEgOiBvcGFjaXR5KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIFJnYihyLCBnLCBiLCBvcGFjaXR5KSB7XG4gIHRoaXMuciA9ICtyO1xuICB0aGlzLmcgPSArZztcbiAgdGhpcy5iID0gK2I7XG4gIHRoaXMub3BhY2l0eSA9ICtvcGFjaXR5O1xufVxuXG5kZWZpbmUoUmdiLCByZ2IsIGV4dGVuZChDb2xvciwge1xuICBicmlnaHRlcihrKSB7XG4gICAgayA9IGsgPT0gbnVsbCA/IGJyaWdodGVyIDogTWF0aC5wb3coYnJpZ2h0ZXIsIGspO1xuICAgIHJldHVybiBuZXcgUmdiKHRoaXMuciAqIGssIHRoaXMuZyAqIGssIHRoaXMuYiAqIGssIHRoaXMub3BhY2l0eSk7XG4gIH0sXG4gIGRhcmtlcihrKSB7XG4gICAgayA9IGsgPT0gbnVsbCA/IGRhcmtlciA6IE1hdGgucG93KGRhcmtlciwgayk7XG4gICAgcmV0dXJuIG5ldyBSZ2IodGhpcy5yICogaywgdGhpcy5nICogaywgdGhpcy5iICogaywgdGhpcy5vcGFjaXR5KTtcbiAgfSxcbiAgcmdiKCkge1xuICAgIHJldHVybiB0aGlzO1xuICB9LFxuICBjbGFtcCgpIHtcbiAgICByZXR1cm4gbmV3IFJnYihjbGFtcGkodGhpcy5yKSwgY2xhbXBpKHRoaXMuZyksIGNsYW1waSh0aGlzLmIpLCBjbGFtcGEodGhpcy5vcGFjaXR5KSk7XG4gIH0sXG4gIGRpc3BsYXlhYmxlKCkge1xuICAgIHJldHVybiAoLTAuNSA8PSB0aGlzLnIgJiYgdGhpcy5yIDwgMjU1LjUpXG4gICAgICAgICYmICgtMC41IDw9IHRoaXMuZyAmJiB0aGlzLmcgPCAyNTUuNSlcbiAgICAgICAgJiYgKC0wLjUgPD0gdGhpcy5iICYmIHRoaXMuYiA8IDI1NS41KVxuICAgICAgICAmJiAoMCA8PSB0aGlzLm9wYWNpdHkgJiYgdGhpcy5vcGFjaXR5IDw9IDEpO1xuICB9LFxuICBoZXg6IHJnYl9mb3JtYXRIZXgsIC8vIERlcHJlY2F0ZWQhIFVzZSBjb2xvci5mb3JtYXRIZXguXG4gIGZvcm1hdEhleDogcmdiX2Zvcm1hdEhleCxcbiAgZm9ybWF0SGV4ODogcmdiX2Zvcm1hdEhleDgsXG4gIGZvcm1hdFJnYjogcmdiX2Zvcm1hdFJnYixcbiAgdG9TdHJpbmc6IHJnYl9mb3JtYXRSZ2Jcbn0pKTtcblxuZnVuY3Rpb24gcmdiX2Zvcm1hdEhleCgpIHtcbiAgcmV0dXJuIGAjJHtoZXgodGhpcy5yKX0ke2hleCh0aGlzLmcpfSR7aGV4KHRoaXMuYil9YDtcbn1cblxuZnVuY3Rpb24gcmdiX2Zvcm1hdEhleDgoKSB7XG4gIHJldHVybiBgIyR7aGV4KHRoaXMucil9JHtoZXgodGhpcy5nKX0ke2hleCh0aGlzLmIpfSR7aGV4KChpc05hTih0aGlzLm9wYWNpdHkpID8gMSA6IHRoaXMub3BhY2l0eSkgKiAyNTUpfWA7XG59XG5cbmZ1bmN0aW9uIHJnYl9mb3JtYXRSZ2IoKSB7XG4gIGNvbnN0IGEgPSBjbGFtcGEodGhpcy5vcGFjaXR5KTtcbiAgcmV0dXJuIGAke2EgPT09IDEgPyBcInJnYihcIiA6IFwicmdiYShcIn0ke2NsYW1waSh0aGlzLnIpfSwgJHtjbGFtcGkodGhpcy5nKX0sICR7Y2xhbXBpKHRoaXMuYil9JHthID09PSAxID8gXCIpXCIgOiBgLCAke2F9KWB9YDtcbn1cblxuZnVuY3Rpb24gY2xhbXBhKG9wYWNpdHkpIHtcbiAgcmV0dXJuIGlzTmFOKG9wYWNpdHkpID8gMSA6IE1hdGgubWF4KDAsIE1hdGgubWluKDEsIG9wYWNpdHkpKTtcbn1cblxuZnVuY3Rpb24gY2xhbXBpKHZhbHVlKSB7XG4gIHJldHVybiBNYXRoLm1heCgwLCBNYXRoLm1pbigyNTUsIE1hdGgucm91bmQodmFsdWUpIHx8IDApKTtcbn1cblxuZnVuY3Rpb24gaGV4KHZhbHVlKSB7XG4gIHZhbHVlID0gY2xhbXBpKHZhbHVlKTtcbiAgcmV0dXJuICh2YWx1ZSA8IDE2ID8gXCIwXCIgOiBcIlwiKSArIHZhbHVlLnRvU3RyaW5nKDE2KTtcbn1cblxuZnVuY3Rpb24gaHNsYShoLCBzLCBsLCBhKSB7XG4gIGlmIChhIDw9IDApIGggPSBzID0gbCA9IE5hTjtcbiAgZWxzZSBpZiAobCA8PSAwIHx8IGwgPj0gMSkgaCA9IHMgPSBOYU47XG4gIGVsc2UgaWYgKHMgPD0gMCkgaCA9IE5hTjtcbiAgcmV0dXJuIG5ldyBIc2woaCwgcywgbCwgYSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBoc2xDb252ZXJ0KG8pIHtcbiAgaWYgKG8gaW5zdGFuY2VvZiBIc2wpIHJldHVybiBuZXcgSHNsKG8uaCwgby5zLCBvLmwsIG8ub3BhY2l0eSk7XG4gIGlmICghKG8gaW5zdGFuY2VvZiBDb2xvcikpIG8gPSBjb2xvcihvKTtcbiAgaWYgKCFvKSByZXR1cm4gbmV3IEhzbDtcbiAgaWYgKG8gaW5zdGFuY2VvZiBIc2wpIHJldHVybiBvO1xuICBvID0gby5yZ2IoKTtcbiAgdmFyIHIgPSBvLnIgLyAyNTUsXG4gICAgICBnID0gby5nIC8gMjU1LFxuICAgICAgYiA9IG8uYiAvIDI1NSxcbiAgICAgIG1pbiA9IE1hdGgubWluKHIsIGcsIGIpLFxuICAgICAgbWF4ID0gTWF0aC5tYXgociwgZywgYiksXG4gICAgICBoID0gTmFOLFxuICAgICAgcyA9IG1heCAtIG1pbixcbiAgICAgIGwgPSAobWF4ICsgbWluKSAvIDI7XG4gIGlmIChzKSB7XG4gICAgaWYgKHIgPT09IG1heCkgaCA9IChnIC0gYikgLyBzICsgKGcgPCBiKSAqIDY7XG4gICAgZWxzZSBpZiAoZyA9PT0gbWF4KSBoID0gKGIgLSByKSAvIHMgKyAyO1xuICAgIGVsc2UgaCA9IChyIC0gZykgLyBzICsgNDtcbiAgICBzIC89IGwgPCAwLjUgPyBtYXggKyBtaW4gOiAyIC0gbWF4IC0gbWluO1xuICAgIGggKj0gNjA7XG4gIH0gZWxzZSB7XG4gICAgcyA9IGwgPiAwICYmIGwgPCAxID8gMCA6IGg7XG4gIH1cbiAgcmV0dXJuIG5ldyBIc2woaCwgcywgbCwgby5vcGFjaXR5KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGhzbChoLCBzLCBsLCBvcGFjaXR5KSB7XG4gIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID09PSAxID8gaHNsQ29udmVydChoKSA6IG5ldyBIc2woaCwgcywgbCwgb3BhY2l0eSA9PSBudWxsID8gMSA6IG9wYWNpdHkpO1xufVxuXG5mdW5jdGlvbiBIc2woaCwgcywgbCwgb3BhY2l0eSkge1xuICB0aGlzLmggPSAraDtcbiAgdGhpcy5zID0gK3M7XG4gIHRoaXMubCA9ICtsO1xuICB0aGlzLm9wYWNpdHkgPSArb3BhY2l0eTtcbn1cblxuZGVmaW5lKEhzbCwgaHNsLCBleHRlbmQoQ29sb3IsIHtcbiAgYnJpZ2h0ZXIoaykge1xuICAgIGsgPSBrID09IG51bGwgPyBicmlnaHRlciA6IE1hdGgucG93KGJyaWdodGVyLCBrKTtcbiAgICByZXR1cm4gbmV3IEhzbCh0aGlzLmgsIHRoaXMucywgdGhpcy5sICogaywgdGhpcy5vcGFjaXR5KTtcbiAgfSxcbiAgZGFya2VyKGspIHtcbiAgICBrID0gayA9PSBudWxsID8gZGFya2VyIDogTWF0aC5wb3coZGFya2VyLCBrKTtcbiAgICByZXR1cm4gbmV3IEhzbCh0aGlzLmgsIHRoaXMucywgdGhpcy5sICogaywgdGhpcy5vcGFjaXR5KTtcbiAgfSxcbiAgcmdiKCkge1xuICAgIHZhciBoID0gdGhpcy5oICUgMzYwICsgKHRoaXMuaCA8IDApICogMzYwLFxuICAgICAgICBzID0gaXNOYU4oaCkgfHwgaXNOYU4odGhpcy5zKSA/IDAgOiB0aGlzLnMsXG4gICAgICAgIGwgPSB0aGlzLmwsXG4gICAgICAgIG0yID0gbCArIChsIDwgMC41ID8gbCA6IDEgLSBsKSAqIHMsXG4gICAgICAgIG0xID0gMiAqIGwgLSBtMjtcbiAgICByZXR1cm4gbmV3IFJnYihcbiAgICAgIGhzbDJyZ2IoaCA+PSAyNDAgPyBoIC0gMjQwIDogaCArIDEyMCwgbTEsIG0yKSxcbiAgICAgIGhzbDJyZ2IoaCwgbTEsIG0yKSxcbiAgICAgIGhzbDJyZ2IoaCA8IDEyMCA/IGggKyAyNDAgOiBoIC0gMTIwLCBtMSwgbTIpLFxuICAgICAgdGhpcy5vcGFjaXR5XG4gICAgKTtcbiAgfSxcbiAgY2xhbXAoKSB7XG4gICAgcmV0dXJuIG5ldyBIc2woY2xhbXBoKHRoaXMuaCksIGNsYW1wdCh0aGlzLnMpLCBjbGFtcHQodGhpcy5sKSwgY2xhbXBhKHRoaXMub3BhY2l0eSkpO1xuICB9LFxuICBkaXNwbGF5YWJsZSgpIHtcbiAgICByZXR1cm4gKDAgPD0gdGhpcy5zICYmIHRoaXMucyA8PSAxIHx8IGlzTmFOKHRoaXMucykpXG4gICAgICAgICYmICgwIDw9IHRoaXMubCAmJiB0aGlzLmwgPD0gMSlcbiAgICAgICAgJiYgKDAgPD0gdGhpcy5vcGFjaXR5ICYmIHRoaXMub3BhY2l0eSA8PSAxKTtcbiAgfSxcbiAgZm9ybWF0SHNsKCkge1xuICAgIGNvbnN0IGEgPSBjbGFtcGEodGhpcy5vcGFjaXR5KTtcbiAgICByZXR1cm4gYCR7YSA9PT0gMSA/IFwiaHNsKFwiIDogXCJoc2xhKFwifSR7Y2xhbXBoKHRoaXMuaCl9LCAke2NsYW1wdCh0aGlzLnMpICogMTAwfSUsICR7Y2xhbXB0KHRoaXMubCkgKiAxMDB9JSR7YSA9PT0gMSA/IFwiKVwiIDogYCwgJHthfSlgfWA7XG4gIH1cbn0pKTtcblxuZnVuY3Rpb24gY2xhbXBoKHZhbHVlKSB7XG4gIHZhbHVlID0gKHZhbHVlIHx8IDApICUgMzYwO1xuICByZXR1cm4gdmFsdWUgPCAwID8gdmFsdWUgKyAzNjAgOiB2YWx1ZTtcbn1cblxuZnVuY3Rpb24gY2xhbXB0KHZhbHVlKSB7XG4gIHJldHVybiBNYXRoLm1heCgwLCBNYXRoLm1pbigxLCB2YWx1ZSB8fCAwKSk7XG59XG5cbi8qIEZyb20gRnZEIDEzLjM3LCBDU1MgQ29sb3IgTW9kdWxlIExldmVsIDMgKi9cbmZ1bmN0aW9uIGhzbDJyZ2IoaCwgbTEsIG0yKSB7XG4gIHJldHVybiAoaCA8IDYwID8gbTEgKyAobTIgLSBtMSkgKiBoIC8gNjBcbiAgICAgIDogaCA8IDE4MCA/IG0yXG4gICAgICA6IGggPCAyNDAgPyBtMSArIChtMiAtIG0xKSAqICgyNDAgLSBoKSAvIDYwXG4gICAgICA6IG0xKSAqIDI1NTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IHggPT4gKCkgPT4geDtcbiIsImltcG9ydCBjb25zdGFudCBmcm9tIFwiLi9jb25zdGFudC5qc1wiO1xuXG5mdW5jdGlvbiBsaW5lYXIoYSwgZCkge1xuICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgIHJldHVybiBhICsgdCAqIGQ7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGV4cG9uZW50aWFsKGEsIGIsIHkpIHtcbiAgcmV0dXJuIGEgPSBNYXRoLnBvdyhhLCB5KSwgYiA9IE1hdGgucG93KGIsIHkpIC0gYSwgeSA9IDEgLyB5LCBmdW5jdGlvbih0KSB7XG4gICAgcmV0dXJuIE1hdGgucG93KGEgKyB0ICogYiwgeSk7XG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBodWUoYSwgYikge1xuICB2YXIgZCA9IGIgLSBhO1xuICByZXR1cm4gZCA/IGxpbmVhcihhLCBkID4gMTgwIHx8IGQgPCAtMTgwID8gZCAtIDM2MCAqIE1hdGgucm91bmQoZCAvIDM2MCkgOiBkKSA6IGNvbnN0YW50KGlzTmFOKGEpID8gYiA6IGEpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2FtbWEoeSkge1xuICByZXR1cm4gKHkgPSAreSkgPT09IDEgPyBub2dhbW1hIDogZnVuY3Rpb24oYSwgYikge1xuICAgIHJldHVybiBiIC0gYSA/IGV4cG9uZW50aWFsKGEsIGIsIHkpIDogY29uc3RhbnQoaXNOYU4oYSkgPyBiIDogYSk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG5vZ2FtbWEoYSwgYikge1xuICB2YXIgZCA9IGIgLSBhO1xuICByZXR1cm4gZCA/IGxpbmVhcihhLCBkKSA6IGNvbnN0YW50KGlzTmFOKGEpID8gYiA6IGEpO1xufVxuIiwiaW1wb3J0IHtyZ2IgYXMgY29sb3JSZ2J9IGZyb20gXCJkMy1jb2xvclwiO1xuaW1wb3J0IGJhc2lzIGZyb20gXCIuL2Jhc2lzLmpzXCI7XG5pbXBvcnQgYmFzaXNDbG9zZWQgZnJvbSBcIi4vYmFzaXNDbG9zZWQuanNcIjtcbmltcG9ydCBub2dhbW1hLCB7Z2FtbWF9IGZyb20gXCIuL2NvbG9yLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiByZ2JHYW1tYSh5KSB7XG4gIHZhciBjb2xvciA9IGdhbW1hKHkpO1xuXG4gIGZ1bmN0aW9uIHJnYihzdGFydCwgZW5kKSB7XG4gICAgdmFyIHIgPSBjb2xvcigoc3RhcnQgPSBjb2xvclJnYihzdGFydCkpLnIsIChlbmQgPSBjb2xvclJnYihlbmQpKS5yKSxcbiAgICAgICAgZyA9IGNvbG9yKHN0YXJ0LmcsIGVuZC5nKSxcbiAgICAgICAgYiA9IGNvbG9yKHN0YXJ0LmIsIGVuZC5iKSxcbiAgICAgICAgb3BhY2l0eSA9IG5vZ2FtbWEoc3RhcnQub3BhY2l0eSwgZW5kLm9wYWNpdHkpO1xuICAgIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgICBzdGFydC5yID0gcih0KTtcbiAgICAgIHN0YXJ0LmcgPSBnKHQpO1xuICAgICAgc3RhcnQuYiA9IGIodCk7XG4gICAgICBzdGFydC5vcGFjaXR5ID0gb3BhY2l0eSh0KTtcbiAgICAgIHJldHVybiBzdGFydCArIFwiXCI7XG4gICAgfTtcbiAgfVxuXG4gIHJnYi5nYW1tYSA9IHJnYkdhbW1hO1xuXG4gIHJldHVybiByZ2I7XG59KSgxKTtcblxuZnVuY3Rpb24gcmdiU3BsaW5lKHNwbGluZSkge1xuICByZXR1cm4gZnVuY3Rpb24oY29sb3JzKSB7XG4gICAgdmFyIG4gPSBjb2xvcnMubGVuZ3RoLFxuICAgICAgICByID0gbmV3IEFycmF5KG4pLFxuICAgICAgICBnID0gbmV3IEFycmF5KG4pLFxuICAgICAgICBiID0gbmV3IEFycmF5KG4pLFxuICAgICAgICBpLCBjb2xvcjtcbiAgICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICBjb2xvciA9IGNvbG9yUmdiKGNvbG9yc1tpXSk7XG4gICAgICByW2ldID0gY29sb3IuciB8fCAwO1xuICAgICAgZ1tpXSA9IGNvbG9yLmcgfHwgMDtcbiAgICAgIGJbaV0gPSBjb2xvci5iIHx8IDA7XG4gICAgfVxuICAgIHIgPSBzcGxpbmUocik7XG4gICAgZyA9IHNwbGluZShnKTtcbiAgICBiID0gc3BsaW5lKGIpO1xuICAgIGNvbG9yLm9wYWNpdHkgPSAxO1xuICAgIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgICBjb2xvci5yID0gcih0KTtcbiAgICAgIGNvbG9yLmcgPSBnKHQpO1xuICAgICAgY29sb3IuYiA9IGIodCk7XG4gICAgICByZXR1cm4gY29sb3IgKyBcIlwiO1xuICAgIH07XG4gIH07XG59XG5cbmV4cG9ydCB2YXIgcmdiQmFzaXMgPSByZ2JTcGxpbmUoYmFzaXMpO1xuZXhwb3J0IHZhciByZ2JCYXNpc0Nsb3NlZCA9IHJnYlNwbGluZShiYXNpc0Nsb3NlZCk7XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihhLCBiKSB7XG4gIHJldHVybiBhID0gK2EsIGIgPSArYiwgZnVuY3Rpb24odCkge1xuICAgIHJldHVybiBhICogKDEgLSB0KSArIGIgKiB0O1xuICB9O1xufVxuIiwiaW1wb3J0IG51bWJlciBmcm9tIFwiLi9udW1iZXIuanNcIjtcblxudmFyIHJlQSA9IC9bLStdPyg/OlxcZCtcXC4/XFxkKnxcXC4/XFxkKykoPzpbZUVdWy0rXT9cXGQrKT8vZyxcbiAgICByZUIgPSBuZXcgUmVnRXhwKHJlQS5zb3VyY2UsIFwiZ1wiKTtcblxuZnVuY3Rpb24gemVybyhiKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gYjtcbiAgfTtcbn1cblxuZnVuY3Rpb24gb25lKGIpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICByZXR1cm4gYih0KSArIFwiXCI7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGEsIGIpIHtcbiAgdmFyIGJpID0gcmVBLmxhc3RJbmRleCA9IHJlQi5sYXN0SW5kZXggPSAwLCAvLyBzY2FuIGluZGV4IGZvciBuZXh0IG51bWJlciBpbiBiXG4gICAgICBhbSwgLy8gY3VycmVudCBtYXRjaCBpbiBhXG4gICAgICBibSwgLy8gY3VycmVudCBtYXRjaCBpbiBiXG4gICAgICBicywgLy8gc3RyaW5nIHByZWNlZGluZyBjdXJyZW50IG51bWJlciBpbiBiLCBpZiBhbnlcbiAgICAgIGkgPSAtMSwgLy8gaW5kZXggaW4gc1xuICAgICAgcyA9IFtdLCAvLyBzdHJpbmcgY29uc3RhbnRzIGFuZCBwbGFjZWhvbGRlcnNcbiAgICAgIHEgPSBbXTsgLy8gbnVtYmVyIGludGVycG9sYXRvcnNcblxuICAvLyBDb2VyY2UgaW5wdXRzIHRvIHN0cmluZ3MuXG4gIGEgPSBhICsgXCJcIiwgYiA9IGIgKyBcIlwiO1xuXG4gIC8vIEludGVycG9sYXRlIHBhaXJzIG9mIG51bWJlcnMgaW4gYSAmIGIuXG4gIHdoaWxlICgoYW0gPSByZUEuZXhlYyhhKSlcbiAgICAgICYmIChibSA9IHJlQi5leGVjKGIpKSkge1xuICAgIGlmICgoYnMgPSBibS5pbmRleCkgPiBiaSkgeyAvLyBhIHN0cmluZyBwcmVjZWRlcyB0aGUgbmV4dCBudW1iZXIgaW4gYlxuICAgICAgYnMgPSBiLnNsaWNlKGJpLCBicyk7XG4gICAgICBpZiAoc1tpXSkgc1tpXSArPSBiczsgLy8gY29hbGVzY2Ugd2l0aCBwcmV2aW91cyBzdHJpbmdcbiAgICAgIGVsc2Ugc1srK2ldID0gYnM7XG4gICAgfVxuICAgIGlmICgoYW0gPSBhbVswXSkgPT09IChibSA9IGJtWzBdKSkgeyAvLyBudW1iZXJzIGluIGEgJiBiIG1hdGNoXG4gICAgICBpZiAoc1tpXSkgc1tpXSArPSBibTsgLy8gY29hbGVzY2Ugd2l0aCBwcmV2aW91cyBzdHJpbmdcbiAgICAgIGVsc2Ugc1srK2ldID0gYm07XG4gICAgfSBlbHNlIHsgLy8gaW50ZXJwb2xhdGUgbm9uLW1hdGNoaW5nIG51bWJlcnNcbiAgICAgIHNbKytpXSA9IG51bGw7XG4gICAgICBxLnB1c2goe2k6IGksIHg6IG51bWJlcihhbSwgYm0pfSk7XG4gICAgfVxuICAgIGJpID0gcmVCLmxhc3RJbmRleDtcbiAgfVxuXG4gIC8vIEFkZCByZW1haW5zIG9mIGIuXG4gIGlmIChiaSA8IGIubGVuZ3RoKSB7XG4gICAgYnMgPSBiLnNsaWNlKGJpKTtcbiAgICBpZiAoc1tpXSkgc1tpXSArPSBiczsgLy8gY29hbGVzY2Ugd2l0aCBwcmV2aW91cyBzdHJpbmdcbiAgICBlbHNlIHNbKytpXSA9IGJzO1xuICB9XG5cbiAgLy8gU3BlY2lhbCBvcHRpbWl6YXRpb24gZm9yIG9ubHkgYSBzaW5nbGUgbWF0Y2guXG4gIC8vIE90aGVyd2lzZSwgaW50ZXJwb2xhdGUgZWFjaCBvZiB0aGUgbnVtYmVycyBhbmQgcmVqb2luIHRoZSBzdHJpbmcuXG4gIHJldHVybiBzLmxlbmd0aCA8IDIgPyAocVswXVxuICAgICAgPyBvbmUocVswXS54KVxuICAgICAgOiB6ZXJvKGIpKVxuICAgICAgOiAoYiA9IHEubGVuZ3RoLCBmdW5jdGlvbih0KSB7XG4gICAgICAgICAgZm9yICh2YXIgaSA9IDAsIG87IGkgPCBiOyArK2kpIHNbKG8gPSBxW2ldKS5pXSA9IG8ueCh0KTtcbiAgICAgICAgICByZXR1cm4gcy5qb2luKFwiXCIpO1xuICAgICAgICB9KTtcbn1cbiIsInZhciBkZWdyZWVzID0gMTgwIC8gTWF0aC5QSTtcblxuZXhwb3J0IHZhciBpZGVudGl0eSA9IHtcbiAgdHJhbnNsYXRlWDogMCxcbiAgdHJhbnNsYXRlWTogMCxcbiAgcm90YXRlOiAwLFxuICBza2V3WDogMCxcbiAgc2NhbGVYOiAxLFxuICBzY2FsZVk6IDFcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGEsIGIsIGMsIGQsIGUsIGYpIHtcbiAgdmFyIHNjYWxlWCwgc2NhbGVZLCBza2V3WDtcbiAgaWYgKHNjYWxlWCA9IE1hdGguc3FydChhICogYSArIGIgKiBiKSkgYSAvPSBzY2FsZVgsIGIgLz0gc2NhbGVYO1xuICBpZiAoc2tld1ggPSBhICogYyArIGIgKiBkKSBjIC09IGEgKiBza2V3WCwgZCAtPSBiICogc2tld1g7XG4gIGlmIChzY2FsZVkgPSBNYXRoLnNxcnQoYyAqIGMgKyBkICogZCkpIGMgLz0gc2NhbGVZLCBkIC89IHNjYWxlWSwgc2tld1ggLz0gc2NhbGVZO1xuICBpZiAoYSAqIGQgPCBiICogYykgYSA9IC1hLCBiID0gLWIsIHNrZXdYID0gLXNrZXdYLCBzY2FsZVggPSAtc2NhbGVYO1xuICByZXR1cm4ge1xuICAgIHRyYW5zbGF0ZVg6IGUsXG4gICAgdHJhbnNsYXRlWTogZixcbiAgICByb3RhdGU6IE1hdGguYXRhbjIoYiwgYSkgKiBkZWdyZWVzLFxuICAgIHNrZXdYOiBNYXRoLmF0YW4oc2tld1gpICogZGVncmVlcyxcbiAgICBzY2FsZVg6IHNjYWxlWCxcbiAgICBzY2FsZVk6IHNjYWxlWVxuICB9O1xufVxuIiwiaW1wb3J0IGRlY29tcG9zZSwge2lkZW50aXR5fSBmcm9tIFwiLi9kZWNvbXBvc2UuanNcIjtcblxudmFyIHN2Z05vZGU7XG5cbi8qIGVzbGludC1kaXNhYmxlIG5vLXVuZGVmICovXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VDc3ModmFsdWUpIHtcbiAgY29uc3QgbSA9IG5ldyAodHlwZW9mIERPTU1hdHJpeCA9PT0gXCJmdW5jdGlvblwiID8gRE9NTWF0cml4IDogV2ViS2l0Q1NTTWF0cml4KSh2YWx1ZSArIFwiXCIpO1xuICByZXR1cm4gbS5pc0lkZW50aXR5ID8gaWRlbnRpdHkgOiBkZWNvbXBvc2UobS5hLCBtLmIsIG0uYywgbS5kLCBtLmUsIG0uZik7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZVN2Zyh2YWx1ZSkge1xuICBpZiAodmFsdWUgPT0gbnVsbCkgcmV0dXJuIGlkZW50aXR5O1xuICBpZiAoIXN2Z05vZGUpIHN2Z05vZGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCBcImdcIik7XG4gIHN2Z05vZGUuc2V0QXR0cmlidXRlKFwidHJhbnNmb3JtXCIsIHZhbHVlKTtcbiAgaWYgKCEodmFsdWUgPSBzdmdOb2RlLnRyYW5zZm9ybS5iYXNlVmFsLmNvbnNvbGlkYXRlKCkpKSByZXR1cm4gaWRlbnRpdHk7XG4gIHZhbHVlID0gdmFsdWUubWF0cml4O1xuICByZXR1cm4gZGVjb21wb3NlKHZhbHVlLmEsIHZhbHVlLmIsIHZhbHVlLmMsIHZhbHVlLmQsIHZhbHVlLmUsIHZhbHVlLmYpO1xufVxuIiwiaW1wb3J0IG51bWJlciBmcm9tIFwiLi4vbnVtYmVyLmpzXCI7XG5pbXBvcnQge3BhcnNlQ3NzLCBwYXJzZVN2Z30gZnJvbSBcIi4vcGFyc2UuanNcIjtcblxuZnVuY3Rpb24gaW50ZXJwb2xhdGVUcmFuc2Zvcm0ocGFyc2UsIHB4Q29tbWEsIHB4UGFyZW4sIGRlZ1BhcmVuKSB7XG5cbiAgZnVuY3Rpb24gcG9wKHMpIHtcbiAgICByZXR1cm4gcy5sZW5ndGggPyBzLnBvcCgpICsgXCIgXCIgOiBcIlwiO1xuICB9XG5cbiAgZnVuY3Rpb24gdHJhbnNsYXRlKHhhLCB5YSwgeGIsIHliLCBzLCBxKSB7XG4gICAgaWYgKHhhICE9PSB4YiB8fCB5YSAhPT0geWIpIHtcbiAgICAgIHZhciBpID0gcy5wdXNoKFwidHJhbnNsYXRlKFwiLCBudWxsLCBweENvbW1hLCBudWxsLCBweFBhcmVuKTtcbiAgICAgIHEucHVzaCh7aTogaSAtIDQsIHg6IG51bWJlcih4YSwgeGIpfSwge2k6IGkgLSAyLCB4OiBudW1iZXIoeWEsIHliKX0pO1xuICAgIH0gZWxzZSBpZiAoeGIgfHwgeWIpIHtcbiAgICAgIHMucHVzaChcInRyYW5zbGF0ZShcIiArIHhiICsgcHhDb21tYSArIHliICsgcHhQYXJlbik7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gcm90YXRlKGEsIGIsIHMsIHEpIHtcbiAgICBpZiAoYSAhPT0gYikge1xuICAgICAgaWYgKGEgLSBiID4gMTgwKSBiICs9IDM2MDsgZWxzZSBpZiAoYiAtIGEgPiAxODApIGEgKz0gMzYwOyAvLyBzaG9ydGVzdCBwYXRoXG4gICAgICBxLnB1c2goe2k6IHMucHVzaChwb3AocykgKyBcInJvdGF0ZShcIiwgbnVsbCwgZGVnUGFyZW4pIC0gMiwgeDogbnVtYmVyKGEsIGIpfSk7XG4gICAgfSBlbHNlIGlmIChiKSB7XG4gICAgICBzLnB1c2gocG9wKHMpICsgXCJyb3RhdGUoXCIgKyBiICsgZGVnUGFyZW4pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHNrZXdYKGEsIGIsIHMsIHEpIHtcbiAgICBpZiAoYSAhPT0gYikge1xuICAgICAgcS5wdXNoKHtpOiBzLnB1c2gocG9wKHMpICsgXCJza2V3WChcIiwgbnVsbCwgZGVnUGFyZW4pIC0gMiwgeDogbnVtYmVyKGEsIGIpfSk7XG4gICAgfSBlbHNlIGlmIChiKSB7XG4gICAgICBzLnB1c2gocG9wKHMpICsgXCJza2V3WChcIiArIGIgKyBkZWdQYXJlbik7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gc2NhbGUoeGEsIHlhLCB4YiwgeWIsIHMsIHEpIHtcbiAgICBpZiAoeGEgIT09IHhiIHx8IHlhICE9PSB5Yikge1xuICAgICAgdmFyIGkgPSBzLnB1c2gocG9wKHMpICsgXCJzY2FsZShcIiwgbnVsbCwgXCIsXCIsIG51bGwsIFwiKVwiKTtcbiAgICAgIHEucHVzaCh7aTogaSAtIDQsIHg6IG51bWJlcih4YSwgeGIpfSwge2k6IGkgLSAyLCB4OiBudW1iZXIoeWEsIHliKX0pO1xuICAgIH0gZWxzZSBpZiAoeGIgIT09IDEgfHwgeWIgIT09IDEpIHtcbiAgICAgIHMucHVzaChwb3AocykgKyBcInNjYWxlKFwiICsgeGIgKyBcIixcIiArIHliICsgXCIpXCIpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbihhLCBiKSB7XG4gICAgdmFyIHMgPSBbXSwgLy8gc3RyaW5nIGNvbnN0YW50cyBhbmQgcGxhY2Vob2xkZXJzXG4gICAgICAgIHEgPSBbXTsgLy8gbnVtYmVyIGludGVycG9sYXRvcnNcbiAgICBhID0gcGFyc2UoYSksIGIgPSBwYXJzZShiKTtcbiAgICB0cmFuc2xhdGUoYS50cmFuc2xhdGVYLCBhLnRyYW5zbGF0ZVksIGIudHJhbnNsYXRlWCwgYi50cmFuc2xhdGVZLCBzLCBxKTtcbiAgICByb3RhdGUoYS5yb3RhdGUsIGIucm90YXRlLCBzLCBxKTtcbiAgICBza2V3WChhLnNrZXdYLCBiLnNrZXdYLCBzLCBxKTtcbiAgICBzY2FsZShhLnNjYWxlWCwgYS5zY2FsZVksIGIuc2NhbGVYLCBiLnNjYWxlWSwgcywgcSk7XG4gICAgYSA9IGIgPSBudWxsOyAvLyBnY1xuICAgIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgICB2YXIgaSA9IC0xLCBuID0gcS5sZW5ndGgsIG87XG4gICAgICB3aGlsZSAoKytpIDwgbikgc1sobyA9IHFbaV0pLmldID0gby54KHQpO1xuICAgICAgcmV0dXJuIHMuam9pbihcIlwiKTtcbiAgICB9O1xuICB9O1xufVxuXG5leHBvcnQgdmFyIGludGVycG9sYXRlVHJhbnNmb3JtQ3NzID0gaW50ZXJwb2xhdGVUcmFuc2Zvcm0ocGFyc2VDc3MsIFwicHgsIFwiLCBcInB4KVwiLCBcImRlZylcIik7XG5leHBvcnQgdmFyIGludGVycG9sYXRlVHJhbnNmb3JtU3ZnID0gaW50ZXJwb2xhdGVUcmFuc2Zvcm0ocGFyc2VTdmcsIFwiLCBcIiwgXCIpXCIsIFwiKVwiKTtcbiIsInZhciBmcmFtZSA9IDAsIC8vIGlzIGFuIGFuaW1hdGlvbiBmcmFtZSBwZW5kaW5nP1xuICAgIHRpbWVvdXQgPSAwLCAvLyBpcyBhIHRpbWVvdXQgcGVuZGluZz9cbiAgICBpbnRlcnZhbCA9IDAsIC8vIGFyZSBhbnkgdGltZXJzIGFjdGl2ZT9cbiAgICBwb2tlRGVsYXkgPSAxMDAwLCAvLyBob3cgZnJlcXVlbnRseSB3ZSBjaGVjayBmb3IgY2xvY2sgc2tld1xuICAgIHRhc2tIZWFkLFxuICAgIHRhc2tUYWlsLFxuICAgIGNsb2NrTGFzdCA9IDAsXG4gICAgY2xvY2tOb3cgPSAwLFxuICAgIGNsb2NrU2tldyA9IDAsXG4gICAgY2xvY2sgPSB0eXBlb2YgcGVyZm9ybWFuY2UgPT09IFwib2JqZWN0XCIgJiYgcGVyZm9ybWFuY2Uubm93ID8gcGVyZm9ybWFuY2UgOiBEYXRlLFxuICAgIHNldEZyYW1lID0gdHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIiAmJiB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lID8gd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZS5iaW5kKHdpbmRvdykgOiBmdW5jdGlvbihmKSB7IHNldFRpbWVvdXQoZiwgMTcpOyB9O1xuXG5leHBvcnQgZnVuY3Rpb24gbm93KCkge1xuICByZXR1cm4gY2xvY2tOb3cgfHwgKHNldEZyYW1lKGNsZWFyTm93KSwgY2xvY2tOb3cgPSBjbG9jay5ub3coKSArIGNsb2NrU2tldyk7XG59XG5cbmZ1bmN0aW9uIGNsZWFyTm93KCkge1xuICBjbG9ja05vdyA9IDA7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBUaW1lcigpIHtcbiAgdGhpcy5fY2FsbCA9XG4gIHRoaXMuX3RpbWUgPVxuICB0aGlzLl9uZXh0ID0gbnVsbDtcbn1cblxuVGltZXIucHJvdG90eXBlID0gdGltZXIucHJvdG90eXBlID0ge1xuICBjb25zdHJ1Y3RvcjogVGltZXIsXG4gIHJlc3RhcnQ6IGZ1bmN0aW9uKGNhbGxiYWNrLCBkZWxheSwgdGltZSkge1xuICAgIGlmICh0eXBlb2YgY2FsbGJhY2sgIT09IFwiZnVuY3Rpb25cIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcImNhbGxiYWNrIGlzIG5vdCBhIGZ1bmN0aW9uXCIpO1xuICAgIHRpbWUgPSAodGltZSA9PSBudWxsID8gbm93KCkgOiArdGltZSkgKyAoZGVsYXkgPT0gbnVsbCA/IDAgOiArZGVsYXkpO1xuICAgIGlmICghdGhpcy5fbmV4dCAmJiB0YXNrVGFpbCAhPT0gdGhpcykge1xuICAgICAgaWYgKHRhc2tUYWlsKSB0YXNrVGFpbC5fbmV4dCA9IHRoaXM7XG4gICAgICBlbHNlIHRhc2tIZWFkID0gdGhpcztcbiAgICAgIHRhc2tUYWlsID0gdGhpcztcbiAgICB9XG4gICAgdGhpcy5fY2FsbCA9IGNhbGxiYWNrO1xuICAgIHRoaXMuX3RpbWUgPSB0aW1lO1xuICAgIHNsZWVwKCk7XG4gIH0sXG4gIHN0b3A6IGZ1bmN0aW9uKCkge1xuICAgIGlmICh0aGlzLl9jYWxsKSB7XG4gICAgICB0aGlzLl9jYWxsID0gbnVsbDtcbiAgICAgIHRoaXMuX3RpbWUgPSBJbmZpbml0eTtcbiAgICAgIHNsZWVwKCk7XG4gICAgfVxuICB9XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gdGltZXIoY2FsbGJhY2ssIGRlbGF5LCB0aW1lKSB7XG4gIHZhciB0ID0gbmV3IFRpbWVyO1xuICB0LnJlc3RhcnQoY2FsbGJhY2ssIGRlbGF5LCB0aW1lKTtcbiAgcmV0dXJuIHQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0aW1lckZsdXNoKCkge1xuICBub3coKTsgLy8gR2V0IHRoZSBjdXJyZW50IHRpbWUsIGlmIG5vdCBhbHJlYWR5IHNldC5cbiAgKytmcmFtZTsgLy8gUHJldGVuZCB3ZeKAmXZlIHNldCBhbiBhbGFybSwgaWYgd2UgaGF2ZW7igJl0IGFscmVhZHkuXG4gIHZhciB0ID0gdGFza0hlYWQsIGU7XG4gIHdoaWxlICh0KSB7XG4gICAgaWYgKChlID0gY2xvY2tOb3cgLSB0Ll90aW1lKSA+PSAwKSB0Ll9jYWxsLmNhbGwodW5kZWZpbmVkLCBlKTtcbiAgICB0ID0gdC5fbmV4dDtcbiAgfVxuICAtLWZyYW1lO1xufVxuXG5mdW5jdGlvbiB3YWtlKCkge1xuICBjbG9ja05vdyA9IChjbG9ja0xhc3QgPSBjbG9jay5ub3coKSkgKyBjbG9ja1NrZXc7XG4gIGZyYW1lID0gdGltZW91dCA9IDA7XG4gIHRyeSB7XG4gICAgdGltZXJGbHVzaCgpO1xuICB9IGZpbmFsbHkge1xuICAgIGZyYW1lID0gMDtcbiAgICBuYXAoKTtcbiAgICBjbG9ja05vdyA9IDA7XG4gIH1cbn1cblxuZnVuY3Rpb24gcG9rZSgpIHtcbiAgdmFyIG5vdyA9IGNsb2NrLm5vdygpLCBkZWxheSA9IG5vdyAtIGNsb2NrTGFzdDtcbiAgaWYgKGRlbGF5ID4gcG9rZURlbGF5KSBjbG9ja1NrZXcgLT0gZGVsYXksIGNsb2NrTGFzdCA9IG5vdztcbn1cblxuZnVuY3Rpb24gbmFwKCkge1xuICB2YXIgdDAsIHQxID0gdGFza0hlYWQsIHQyLCB0aW1lID0gSW5maW5pdHk7XG4gIHdoaWxlICh0MSkge1xuICAgIGlmICh0MS5fY2FsbCkge1xuICAgICAgaWYgKHRpbWUgPiB0MS5fdGltZSkgdGltZSA9IHQxLl90aW1lO1xuICAgICAgdDAgPSB0MSwgdDEgPSB0MS5fbmV4dDtcbiAgICB9IGVsc2Uge1xuICAgICAgdDIgPSB0MS5fbmV4dCwgdDEuX25leHQgPSBudWxsO1xuICAgICAgdDEgPSB0MCA/IHQwLl9uZXh0ID0gdDIgOiB0YXNrSGVhZCA9IHQyO1xuICAgIH1cbiAgfVxuICB0YXNrVGFpbCA9IHQwO1xuICBzbGVlcCh0aW1lKTtcbn1cblxuZnVuY3Rpb24gc2xlZXAodGltZSkge1xuICBpZiAoZnJhbWUpIHJldHVybjsgLy8gU29vbmVzdCBhbGFybSBhbHJlYWR5IHNldCwgb3Igd2lsbCBiZS5cbiAgaWYgKHRpbWVvdXQpIHRpbWVvdXQgPSBjbGVhclRpbWVvdXQodGltZW91dCk7XG4gIHZhciBkZWxheSA9IHRpbWUgLSBjbG9ja05vdzsgLy8gU3RyaWN0bHkgbGVzcyB0aGFuIGlmIHdlIHJlY29tcHV0ZWQgY2xvY2tOb3cuXG4gIGlmIChkZWxheSA+IDI0KSB7XG4gICAgaWYgKHRpbWUgPCBJbmZpbml0eSkgdGltZW91dCA9IHNldFRpbWVvdXQod2FrZSwgdGltZSAtIGNsb2NrLm5vdygpIC0gY2xvY2tTa2V3KTtcbiAgICBpZiAoaW50ZXJ2YWwpIGludGVydmFsID0gY2xlYXJJbnRlcnZhbChpbnRlcnZhbCk7XG4gIH0gZWxzZSB7XG4gICAgaWYgKCFpbnRlcnZhbCkgY2xvY2tMYXN0ID0gY2xvY2subm93KCksIGludGVydmFsID0gc2V0SW50ZXJ2YWwocG9rZSwgcG9rZURlbGF5KTtcbiAgICBmcmFtZSA9IDEsIHNldEZyYW1lKHdha2UpO1xuICB9XG59XG4iLCJpbXBvcnQge1RpbWVyfSBmcm9tIFwiLi90aW1lci5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihjYWxsYmFjaywgZGVsYXksIHRpbWUpIHtcbiAgdmFyIHQgPSBuZXcgVGltZXI7XG4gIGRlbGF5ID0gZGVsYXkgPT0gbnVsbCA/IDAgOiArZGVsYXk7XG4gIHQucmVzdGFydChlbGFwc2VkID0+IHtcbiAgICB0LnN0b3AoKTtcbiAgICBjYWxsYmFjayhlbGFwc2VkICsgZGVsYXkpO1xuICB9LCBkZWxheSwgdGltZSk7XG4gIHJldHVybiB0O1xufVxuIiwiaW1wb3J0IHtkaXNwYXRjaH0gZnJvbSBcImQzLWRpc3BhdGNoXCI7XG5pbXBvcnQge3RpbWVyLCB0aW1lb3V0fSBmcm9tIFwiZDMtdGltZXJcIjtcblxudmFyIGVtcHR5T24gPSBkaXNwYXRjaChcInN0YXJ0XCIsIFwiZW5kXCIsIFwiY2FuY2VsXCIsIFwiaW50ZXJydXB0XCIpO1xudmFyIGVtcHR5VHdlZW4gPSBbXTtcblxuZXhwb3J0IHZhciBDUkVBVEVEID0gMDtcbmV4cG9ydCB2YXIgU0NIRURVTEVEID0gMTtcbmV4cG9ydCB2YXIgU1RBUlRJTkcgPSAyO1xuZXhwb3J0IHZhciBTVEFSVEVEID0gMztcbmV4cG9ydCB2YXIgUlVOTklORyA9IDQ7XG5leHBvcnQgdmFyIEVORElORyA9IDU7XG5leHBvcnQgdmFyIEVOREVEID0gNjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obm9kZSwgbmFtZSwgaWQsIGluZGV4LCBncm91cCwgdGltaW5nKSB7XG4gIHZhciBzY2hlZHVsZXMgPSBub2RlLl9fdHJhbnNpdGlvbjtcbiAgaWYgKCFzY2hlZHVsZXMpIG5vZGUuX190cmFuc2l0aW9uID0ge307XG4gIGVsc2UgaWYgKGlkIGluIHNjaGVkdWxlcykgcmV0dXJuO1xuICBjcmVhdGUobm9kZSwgaWQsIHtcbiAgICBuYW1lOiBuYW1lLFxuICAgIGluZGV4OiBpbmRleCwgLy8gRm9yIGNvbnRleHQgZHVyaW5nIGNhbGxiYWNrLlxuICAgIGdyb3VwOiBncm91cCwgLy8gRm9yIGNvbnRleHQgZHVyaW5nIGNhbGxiYWNrLlxuICAgIG9uOiBlbXB0eU9uLFxuICAgIHR3ZWVuOiBlbXB0eVR3ZWVuLFxuICAgIHRpbWU6IHRpbWluZy50aW1lLFxuICAgIGRlbGF5OiB0aW1pbmcuZGVsYXksXG4gICAgZHVyYXRpb246IHRpbWluZy5kdXJhdGlvbixcbiAgICBlYXNlOiB0aW1pbmcuZWFzZSxcbiAgICB0aW1lcjogbnVsbCxcbiAgICBzdGF0ZTogQ1JFQVRFRFxuICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGluaXQobm9kZSwgaWQpIHtcbiAgdmFyIHNjaGVkdWxlID0gZ2V0KG5vZGUsIGlkKTtcbiAgaWYgKHNjaGVkdWxlLnN0YXRlID4gQ1JFQVRFRCkgdGhyb3cgbmV3IEVycm9yKFwidG9vIGxhdGU7IGFscmVhZHkgc2NoZWR1bGVkXCIpO1xuICByZXR1cm4gc2NoZWR1bGU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzZXQobm9kZSwgaWQpIHtcbiAgdmFyIHNjaGVkdWxlID0gZ2V0KG5vZGUsIGlkKTtcbiAgaWYgKHNjaGVkdWxlLnN0YXRlID4gU1RBUlRFRCkgdGhyb3cgbmV3IEVycm9yKFwidG9vIGxhdGU7IGFscmVhZHkgcnVubmluZ1wiKTtcbiAgcmV0dXJuIHNjaGVkdWxlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0KG5vZGUsIGlkKSB7XG4gIHZhciBzY2hlZHVsZSA9IG5vZGUuX190cmFuc2l0aW9uO1xuICBpZiAoIXNjaGVkdWxlIHx8ICEoc2NoZWR1bGUgPSBzY2hlZHVsZVtpZF0pKSB0aHJvdyBuZXcgRXJyb3IoXCJ0cmFuc2l0aW9uIG5vdCBmb3VuZFwiKTtcbiAgcmV0dXJuIHNjaGVkdWxlO1xufVxuXG5mdW5jdGlvbiBjcmVhdGUobm9kZSwgaWQsIHNlbGYpIHtcbiAgdmFyIHNjaGVkdWxlcyA9IG5vZGUuX190cmFuc2l0aW9uLFxuICAgICAgdHdlZW47XG5cbiAgLy8gSW5pdGlhbGl6ZSB0aGUgc2VsZiB0aW1lciB3aGVuIHRoZSB0cmFuc2l0aW9uIGlzIGNyZWF0ZWQuXG4gIC8vIE5vdGUgdGhlIGFjdHVhbCBkZWxheSBpcyBub3Qga25vd24gdW50aWwgdGhlIGZpcnN0IGNhbGxiYWNrIVxuICBzY2hlZHVsZXNbaWRdID0gc2VsZjtcbiAgc2VsZi50aW1lciA9IHRpbWVyKHNjaGVkdWxlLCAwLCBzZWxmLnRpbWUpO1xuXG4gIGZ1bmN0aW9uIHNjaGVkdWxlKGVsYXBzZWQpIHtcbiAgICBzZWxmLnN0YXRlID0gU0NIRURVTEVEO1xuICAgIHNlbGYudGltZXIucmVzdGFydChzdGFydCwgc2VsZi5kZWxheSwgc2VsZi50aW1lKTtcblxuICAgIC8vIElmIHRoZSBlbGFwc2VkIGRlbGF5IGlzIGxlc3MgdGhhbiBvdXIgZmlyc3Qgc2xlZXAsIHN0YXJ0IGltbWVkaWF0ZWx5LlxuICAgIGlmIChzZWxmLmRlbGF5IDw9IGVsYXBzZWQpIHN0YXJ0KGVsYXBzZWQgLSBzZWxmLmRlbGF5KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHN0YXJ0KGVsYXBzZWQpIHtcbiAgICB2YXIgaSwgaiwgbiwgbztcblxuICAgIC8vIElmIHRoZSBzdGF0ZSBpcyBub3QgU0NIRURVTEVELCB0aGVuIHdlIHByZXZpb3VzbHkgZXJyb3JlZCBvbiBzdGFydC5cbiAgICBpZiAoc2VsZi5zdGF0ZSAhPT0gU0NIRURVTEVEKSByZXR1cm4gc3RvcCgpO1xuXG4gICAgZm9yIChpIGluIHNjaGVkdWxlcykge1xuICAgICAgbyA9IHNjaGVkdWxlc1tpXTtcbiAgICAgIGlmIChvLm5hbWUgIT09IHNlbGYubmFtZSkgY29udGludWU7XG5cbiAgICAgIC8vIFdoaWxlIHRoaXMgZWxlbWVudCBhbHJlYWR5IGhhcyBhIHN0YXJ0aW5nIHRyYW5zaXRpb24gZHVyaW5nIHRoaXMgZnJhbWUsXG4gICAgICAvLyBkZWZlciBzdGFydGluZyBhbiBpbnRlcnJ1cHRpbmcgdHJhbnNpdGlvbiB1bnRpbCB0aGF0IHRyYW5zaXRpb24gaGFzIGFcbiAgICAgIC8vIGNoYW5jZSB0byB0aWNrIChhbmQgcG9zc2libHkgZW5kKTsgc2VlIGQzL2QzLXRyYW5zaXRpb24jNTQhXG4gICAgICBpZiAoby5zdGF0ZSA9PT0gU1RBUlRFRCkgcmV0dXJuIHRpbWVvdXQoc3RhcnQpO1xuXG4gICAgICAvLyBJbnRlcnJ1cHQgdGhlIGFjdGl2ZSB0cmFuc2l0aW9uLCBpZiBhbnkuXG4gICAgICBpZiAoby5zdGF0ZSA9PT0gUlVOTklORykge1xuICAgICAgICBvLnN0YXRlID0gRU5ERUQ7XG4gICAgICAgIG8udGltZXIuc3RvcCgpO1xuICAgICAgICBvLm9uLmNhbGwoXCJpbnRlcnJ1cHRcIiwgbm9kZSwgbm9kZS5fX2RhdGFfXywgby5pbmRleCwgby5ncm91cCk7XG4gICAgICAgIGRlbGV0ZSBzY2hlZHVsZXNbaV07XG4gICAgICB9XG5cbiAgICAgIC8vIENhbmNlbCBhbnkgcHJlLWVtcHRlZCB0cmFuc2l0aW9ucy5cbiAgICAgIGVsc2UgaWYgKCtpIDwgaWQpIHtcbiAgICAgICAgby5zdGF0ZSA9IEVOREVEO1xuICAgICAgICBvLnRpbWVyLnN0b3AoKTtcbiAgICAgICAgby5vbi5jYWxsKFwiY2FuY2VsXCIsIG5vZGUsIG5vZGUuX19kYXRhX18sIG8uaW5kZXgsIG8uZ3JvdXApO1xuICAgICAgICBkZWxldGUgc2NoZWR1bGVzW2ldO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIERlZmVyIHRoZSBmaXJzdCB0aWNrIHRvIGVuZCBvZiB0aGUgY3VycmVudCBmcmFtZTsgc2VlIGQzL2QzIzE1NzYuXG4gICAgLy8gTm90ZSB0aGUgdHJhbnNpdGlvbiBtYXkgYmUgY2FuY2VsZWQgYWZ0ZXIgc3RhcnQgYW5kIGJlZm9yZSB0aGUgZmlyc3QgdGljayFcbiAgICAvLyBOb3RlIHRoaXMgbXVzdCBiZSBzY2hlZHVsZWQgYmVmb3JlIHRoZSBzdGFydCBldmVudDsgc2VlIGQzL2QzLXRyYW5zaXRpb24jMTYhXG4gICAgLy8gQXNzdW1pbmcgdGhpcyBpcyBzdWNjZXNzZnVsLCBzdWJzZXF1ZW50IGNhbGxiYWNrcyBnbyBzdHJhaWdodCB0byB0aWNrLlxuICAgIHRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICBpZiAoc2VsZi5zdGF0ZSA9PT0gU1RBUlRFRCkge1xuICAgICAgICBzZWxmLnN0YXRlID0gUlVOTklORztcbiAgICAgICAgc2VsZi50aW1lci5yZXN0YXJ0KHRpY2ssIHNlbGYuZGVsYXksIHNlbGYudGltZSk7XG4gICAgICAgIHRpY2soZWxhcHNlZCk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICAvLyBEaXNwYXRjaCB0aGUgc3RhcnQgZXZlbnQuXG4gICAgLy8gTm90ZSB0aGlzIG11c3QgYmUgZG9uZSBiZWZvcmUgdGhlIHR3ZWVuIGFyZSBpbml0aWFsaXplZC5cbiAgICBzZWxmLnN0YXRlID0gU1RBUlRJTkc7XG4gICAgc2VsZi5vbi5jYWxsKFwic3RhcnRcIiwgbm9kZSwgbm9kZS5fX2RhdGFfXywgc2VsZi5pbmRleCwgc2VsZi5ncm91cCk7XG4gICAgaWYgKHNlbGYuc3RhdGUgIT09IFNUQVJUSU5HKSByZXR1cm47IC8vIGludGVycnVwdGVkXG4gICAgc2VsZi5zdGF0ZSA9IFNUQVJURUQ7XG5cbiAgICAvLyBJbml0aWFsaXplIHRoZSB0d2VlbiwgZGVsZXRpbmcgbnVsbCB0d2Vlbi5cbiAgICB0d2VlbiA9IG5ldyBBcnJheShuID0gc2VsZi50d2Vlbi5sZW5ndGgpO1xuICAgIGZvciAoaSA9IDAsIGogPSAtMTsgaSA8IG47ICsraSkge1xuICAgICAgaWYgKG8gPSBzZWxmLnR3ZWVuW2ldLnZhbHVlLmNhbGwobm9kZSwgbm9kZS5fX2RhdGFfXywgc2VsZi5pbmRleCwgc2VsZi5ncm91cCkpIHtcbiAgICAgICAgdHdlZW5bKytqXSA9IG87XG4gICAgICB9XG4gICAgfVxuICAgIHR3ZWVuLmxlbmd0aCA9IGogKyAxO1xuICB9XG5cbiAgZnVuY3Rpb24gdGljayhlbGFwc2VkKSB7XG4gICAgdmFyIHQgPSBlbGFwc2VkIDwgc2VsZi5kdXJhdGlvbiA/IHNlbGYuZWFzZS5jYWxsKG51bGwsIGVsYXBzZWQgLyBzZWxmLmR1cmF0aW9uKSA6IChzZWxmLnRpbWVyLnJlc3RhcnQoc3RvcCksIHNlbGYuc3RhdGUgPSBFTkRJTkcsIDEpLFxuICAgICAgICBpID0gLTEsXG4gICAgICAgIG4gPSB0d2Vlbi5sZW5ndGg7XG5cbiAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgdHdlZW5baV0uY2FsbChub2RlLCB0KTtcbiAgICB9XG5cbiAgICAvLyBEaXNwYXRjaCB0aGUgZW5kIGV2ZW50LlxuICAgIGlmIChzZWxmLnN0YXRlID09PSBFTkRJTkcpIHtcbiAgICAgIHNlbGYub24uY2FsbChcImVuZFwiLCBub2RlLCBub2RlLl9fZGF0YV9fLCBzZWxmLmluZGV4LCBzZWxmLmdyb3VwKTtcbiAgICAgIHN0b3AoKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBzdG9wKCkge1xuICAgIHNlbGYuc3RhdGUgPSBFTkRFRDtcbiAgICBzZWxmLnRpbWVyLnN0b3AoKTtcbiAgICBkZWxldGUgc2NoZWR1bGVzW2lkXTtcbiAgICBmb3IgKHZhciBpIGluIHNjaGVkdWxlcykgcmV0dXJuOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXG4gICAgZGVsZXRlIG5vZGUuX190cmFuc2l0aW9uO1xuICB9XG59XG4iLCJpbXBvcnQge1NUQVJUSU5HLCBFTkRJTkcsIEVOREVEfSBmcm9tIFwiLi90cmFuc2l0aW9uL3NjaGVkdWxlLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5vZGUsIG5hbWUpIHtcbiAgdmFyIHNjaGVkdWxlcyA9IG5vZGUuX190cmFuc2l0aW9uLFxuICAgICAgc2NoZWR1bGUsXG4gICAgICBhY3RpdmUsXG4gICAgICBlbXB0eSA9IHRydWUsXG4gICAgICBpO1xuXG4gIGlmICghc2NoZWR1bGVzKSByZXR1cm47XG5cbiAgbmFtZSA9IG5hbWUgPT0gbnVsbCA/IG51bGwgOiBuYW1lICsgXCJcIjtcblxuICBmb3IgKGkgaW4gc2NoZWR1bGVzKSB7XG4gICAgaWYgKChzY2hlZHVsZSA9IHNjaGVkdWxlc1tpXSkubmFtZSAhPT0gbmFtZSkgeyBlbXB0eSA9IGZhbHNlOyBjb250aW51ZTsgfVxuICAgIGFjdGl2ZSA9IHNjaGVkdWxlLnN0YXRlID4gU1RBUlRJTkcgJiYgc2NoZWR1bGUuc3RhdGUgPCBFTkRJTkc7XG4gICAgc2NoZWR1bGUuc3RhdGUgPSBFTkRFRDtcbiAgICBzY2hlZHVsZS50aW1lci5zdG9wKCk7XG4gICAgc2NoZWR1bGUub24uY2FsbChhY3RpdmUgPyBcImludGVycnVwdFwiIDogXCJjYW5jZWxcIiwgbm9kZSwgbm9kZS5fX2RhdGFfXywgc2NoZWR1bGUuaW5kZXgsIHNjaGVkdWxlLmdyb3VwKTtcbiAgICBkZWxldGUgc2NoZWR1bGVzW2ldO1xuICB9XG5cbiAgaWYgKGVtcHR5KSBkZWxldGUgbm9kZS5fX3RyYW5zaXRpb247XG59XG4iLCJpbXBvcnQgaW50ZXJydXB0IGZyb20gXCIuLi9pbnRlcnJ1cHQuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obmFtZSkge1xuICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCkge1xuICAgIGludGVycnVwdCh0aGlzLCBuYW1lKTtcbiAgfSk7XG59XG4iLCJpbXBvcnQge2dldCwgc2V0fSBmcm9tIFwiLi9zY2hlZHVsZS5qc1wiO1xuXG5mdW5jdGlvbiB0d2VlblJlbW92ZShpZCwgbmFtZSkge1xuICB2YXIgdHdlZW4wLCB0d2VlbjE7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgc2NoZWR1bGUgPSBzZXQodGhpcywgaWQpLFxuICAgICAgICB0d2VlbiA9IHNjaGVkdWxlLnR3ZWVuO1xuXG4gICAgLy8gSWYgdGhpcyBub2RlIHNoYXJlZCB0d2VlbiB3aXRoIHRoZSBwcmV2aW91cyBub2RlLFxuICAgIC8vIGp1c3QgYXNzaWduIHRoZSB1cGRhdGVkIHNoYXJlZCB0d2VlbiBhbmQgd2XigJlyZSBkb25lIVxuICAgIC8vIE90aGVyd2lzZSwgY29weS1vbi13cml0ZS5cbiAgICBpZiAodHdlZW4gIT09IHR3ZWVuMCkge1xuICAgICAgdHdlZW4xID0gdHdlZW4wID0gdHdlZW47XG4gICAgICBmb3IgKHZhciBpID0gMCwgbiA9IHR3ZWVuMS5sZW5ndGg7IGkgPCBuOyArK2kpIHtcbiAgICAgICAgaWYgKHR3ZWVuMVtpXS5uYW1lID09PSBuYW1lKSB7XG4gICAgICAgICAgdHdlZW4xID0gdHdlZW4xLnNsaWNlKCk7XG4gICAgICAgICAgdHdlZW4xLnNwbGljZShpLCAxKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHNjaGVkdWxlLnR3ZWVuID0gdHdlZW4xO1xuICB9O1xufVxuXG5mdW5jdGlvbiB0d2VlbkZ1bmN0aW9uKGlkLCBuYW1lLCB2YWx1ZSkge1xuICB2YXIgdHdlZW4wLCB0d2VlbjE7XG4gIGlmICh0eXBlb2YgdmFsdWUgIT09IFwiZnVuY3Rpb25cIikgdGhyb3cgbmV3IEVycm9yO1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHNjaGVkdWxlID0gc2V0KHRoaXMsIGlkKSxcbiAgICAgICAgdHdlZW4gPSBzY2hlZHVsZS50d2VlbjtcblxuICAgIC8vIElmIHRoaXMgbm9kZSBzaGFyZWQgdHdlZW4gd2l0aCB0aGUgcHJldmlvdXMgbm9kZSxcbiAgICAvLyBqdXN0IGFzc2lnbiB0aGUgdXBkYXRlZCBzaGFyZWQgdHdlZW4gYW5kIHdl4oCZcmUgZG9uZSFcbiAgICAvLyBPdGhlcndpc2UsIGNvcHktb24td3JpdGUuXG4gICAgaWYgKHR3ZWVuICE9PSB0d2VlbjApIHtcbiAgICAgIHR3ZWVuMSA9ICh0d2VlbjAgPSB0d2Vlbikuc2xpY2UoKTtcbiAgICAgIGZvciAodmFyIHQgPSB7bmFtZTogbmFtZSwgdmFsdWU6IHZhbHVlfSwgaSA9IDAsIG4gPSB0d2VlbjEubGVuZ3RoOyBpIDwgbjsgKytpKSB7XG4gICAgICAgIGlmICh0d2VlbjFbaV0ubmFtZSA9PT0gbmFtZSkge1xuICAgICAgICAgIHR3ZWVuMVtpXSA9IHQ7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChpID09PSBuKSB0d2VlbjEucHVzaCh0KTtcbiAgICB9XG5cbiAgICBzY2hlZHVsZS50d2VlbiA9IHR3ZWVuMTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obmFtZSwgdmFsdWUpIHtcbiAgdmFyIGlkID0gdGhpcy5faWQ7XG5cbiAgbmFtZSArPSBcIlwiO1xuXG4gIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMikge1xuICAgIHZhciB0d2VlbiA9IGdldCh0aGlzLm5vZGUoKSwgaWQpLnR3ZWVuO1xuICAgIGZvciAodmFyIGkgPSAwLCBuID0gdHdlZW4ubGVuZ3RoLCB0OyBpIDwgbjsgKytpKSB7XG4gICAgICBpZiAoKHQgPSB0d2VlbltpXSkubmFtZSA9PT0gbmFtZSkge1xuICAgICAgICByZXR1cm4gdC52YWx1ZTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICByZXR1cm4gdGhpcy5lYWNoKCh2YWx1ZSA9PSBudWxsID8gdHdlZW5SZW1vdmUgOiB0d2VlbkZ1bmN0aW9uKShpZCwgbmFtZSwgdmFsdWUpKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHR3ZWVuVmFsdWUodHJhbnNpdGlvbiwgbmFtZSwgdmFsdWUpIHtcbiAgdmFyIGlkID0gdHJhbnNpdGlvbi5faWQ7XG5cbiAgdHJhbnNpdGlvbi5lYWNoKGZ1bmN0aW9uKCkge1xuICAgIHZhciBzY2hlZHVsZSA9IHNldCh0aGlzLCBpZCk7XG4gICAgKHNjaGVkdWxlLnZhbHVlIHx8IChzY2hlZHVsZS52YWx1ZSA9IHt9KSlbbmFtZV0gPSB2YWx1ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICB9KTtcblxuICByZXR1cm4gZnVuY3Rpb24obm9kZSkge1xuICAgIHJldHVybiBnZXQobm9kZSwgaWQpLnZhbHVlW25hbWVdO1xuICB9O1xufVxuIiwiaW1wb3J0IHtjb2xvcn0gZnJvbSBcImQzLWNvbG9yXCI7XG5pbXBvcnQge2ludGVycG9sYXRlTnVtYmVyLCBpbnRlcnBvbGF0ZVJnYiwgaW50ZXJwb2xhdGVTdHJpbmd9IGZyb20gXCJkMy1pbnRlcnBvbGF0ZVwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihhLCBiKSB7XG4gIHZhciBjO1xuICByZXR1cm4gKHR5cGVvZiBiID09PSBcIm51bWJlclwiID8gaW50ZXJwb2xhdGVOdW1iZXJcbiAgICAgIDogYiBpbnN0YW5jZW9mIGNvbG9yID8gaW50ZXJwb2xhdGVSZ2JcbiAgICAgIDogKGMgPSBjb2xvcihiKSkgPyAoYiA9IGMsIGludGVycG9sYXRlUmdiKVxuICAgICAgOiBpbnRlcnBvbGF0ZVN0cmluZykoYSwgYik7XG59XG4iLCJpbXBvcnQge2ludGVycG9sYXRlVHJhbnNmb3JtU3ZnIGFzIGludGVycG9sYXRlVHJhbnNmb3JtfSBmcm9tIFwiZDMtaW50ZXJwb2xhdGVcIjtcbmltcG9ydCB7bmFtZXNwYWNlfSBmcm9tIFwiZDMtc2VsZWN0aW9uXCI7XG5pbXBvcnQge3R3ZWVuVmFsdWV9IGZyb20gXCIuL3R3ZWVuLmpzXCI7XG5pbXBvcnQgaW50ZXJwb2xhdGUgZnJvbSBcIi4vaW50ZXJwb2xhdGUuanNcIjtcblxuZnVuY3Rpb24gYXR0clJlbW92ZShuYW1lKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLnJlbW92ZUF0dHJpYnV0ZShuYW1lKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYXR0clJlbW92ZU5TKGZ1bGxuYW1lKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLnJlbW92ZUF0dHJpYnV0ZU5TKGZ1bGxuYW1lLnNwYWNlLCBmdWxsbmFtZS5sb2NhbCk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGF0dHJDb25zdGFudChuYW1lLCBpbnRlcnBvbGF0ZSwgdmFsdWUxKSB7XG4gIHZhciBzdHJpbmcwMCxcbiAgICAgIHN0cmluZzEgPSB2YWx1ZTEgKyBcIlwiLFxuICAgICAgaW50ZXJwb2xhdGUwO1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHN0cmluZzAgPSB0aGlzLmdldEF0dHJpYnV0ZShuYW1lKTtcbiAgICByZXR1cm4gc3RyaW5nMCA9PT0gc3RyaW5nMSA/IG51bGxcbiAgICAgICAgOiBzdHJpbmcwID09PSBzdHJpbmcwMCA/IGludGVycG9sYXRlMFxuICAgICAgICA6IGludGVycG9sYXRlMCA9IGludGVycG9sYXRlKHN0cmluZzAwID0gc3RyaW5nMCwgdmFsdWUxKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYXR0ckNvbnN0YW50TlMoZnVsbG5hbWUsIGludGVycG9sYXRlLCB2YWx1ZTEpIHtcbiAgdmFyIHN0cmluZzAwLFxuICAgICAgc3RyaW5nMSA9IHZhbHVlMSArIFwiXCIsXG4gICAgICBpbnRlcnBvbGF0ZTA7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgc3RyaW5nMCA9IHRoaXMuZ2V0QXR0cmlidXRlTlMoZnVsbG5hbWUuc3BhY2UsIGZ1bGxuYW1lLmxvY2FsKTtcbiAgICByZXR1cm4gc3RyaW5nMCA9PT0gc3RyaW5nMSA/IG51bGxcbiAgICAgICAgOiBzdHJpbmcwID09PSBzdHJpbmcwMCA/IGludGVycG9sYXRlMFxuICAgICAgICA6IGludGVycG9sYXRlMCA9IGludGVycG9sYXRlKHN0cmluZzAwID0gc3RyaW5nMCwgdmFsdWUxKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYXR0ckZ1bmN0aW9uKG5hbWUsIGludGVycG9sYXRlLCB2YWx1ZSkge1xuICB2YXIgc3RyaW5nMDAsXG4gICAgICBzdHJpbmcxMCxcbiAgICAgIGludGVycG9sYXRlMDtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciBzdHJpbmcwLCB2YWx1ZTEgPSB2YWx1ZSh0aGlzKSwgc3RyaW5nMTtcbiAgICBpZiAodmFsdWUxID09IG51bGwpIHJldHVybiB2b2lkIHRoaXMucmVtb3ZlQXR0cmlidXRlKG5hbWUpO1xuICAgIHN0cmluZzAgPSB0aGlzLmdldEF0dHJpYnV0ZShuYW1lKTtcbiAgICBzdHJpbmcxID0gdmFsdWUxICsgXCJcIjtcbiAgICByZXR1cm4gc3RyaW5nMCA9PT0gc3RyaW5nMSA/IG51bGxcbiAgICAgICAgOiBzdHJpbmcwID09PSBzdHJpbmcwMCAmJiBzdHJpbmcxID09PSBzdHJpbmcxMCA/IGludGVycG9sYXRlMFxuICAgICAgICA6IChzdHJpbmcxMCA9IHN0cmluZzEsIGludGVycG9sYXRlMCA9IGludGVycG9sYXRlKHN0cmluZzAwID0gc3RyaW5nMCwgdmFsdWUxKSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGF0dHJGdW5jdGlvbk5TKGZ1bGxuYW1lLCBpbnRlcnBvbGF0ZSwgdmFsdWUpIHtcbiAgdmFyIHN0cmluZzAwLFxuICAgICAgc3RyaW5nMTAsXG4gICAgICBpbnRlcnBvbGF0ZTA7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgc3RyaW5nMCwgdmFsdWUxID0gdmFsdWUodGhpcyksIHN0cmluZzE7XG4gICAgaWYgKHZhbHVlMSA9PSBudWxsKSByZXR1cm4gdm9pZCB0aGlzLnJlbW92ZUF0dHJpYnV0ZU5TKGZ1bGxuYW1lLnNwYWNlLCBmdWxsbmFtZS5sb2NhbCk7XG4gICAgc3RyaW5nMCA9IHRoaXMuZ2V0QXR0cmlidXRlTlMoZnVsbG5hbWUuc3BhY2UsIGZ1bGxuYW1lLmxvY2FsKTtcbiAgICBzdHJpbmcxID0gdmFsdWUxICsgXCJcIjtcbiAgICByZXR1cm4gc3RyaW5nMCA9PT0gc3RyaW5nMSA/IG51bGxcbiAgICAgICAgOiBzdHJpbmcwID09PSBzdHJpbmcwMCAmJiBzdHJpbmcxID09PSBzdHJpbmcxMCA/IGludGVycG9sYXRlMFxuICAgICAgICA6IChzdHJpbmcxMCA9IHN0cmluZzEsIGludGVycG9sYXRlMCA9IGludGVycG9sYXRlKHN0cmluZzAwID0gc3RyaW5nMCwgdmFsdWUxKSk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5hbWUsIHZhbHVlKSB7XG4gIHZhciBmdWxsbmFtZSA9IG5hbWVzcGFjZShuYW1lKSwgaSA9IGZ1bGxuYW1lID09PSBcInRyYW5zZm9ybVwiID8gaW50ZXJwb2xhdGVUcmFuc2Zvcm0gOiBpbnRlcnBvbGF0ZTtcbiAgcmV0dXJuIHRoaXMuYXR0clR3ZWVuKG5hbWUsIHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiXG4gICAgICA/IChmdWxsbmFtZS5sb2NhbCA/IGF0dHJGdW5jdGlvbk5TIDogYXR0ckZ1bmN0aW9uKShmdWxsbmFtZSwgaSwgdHdlZW5WYWx1ZSh0aGlzLCBcImF0dHIuXCIgKyBuYW1lLCB2YWx1ZSkpXG4gICAgICA6IHZhbHVlID09IG51bGwgPyAoZnVsbG5hbWUubG9jYWwgPyBhdHRyUmVtb3ZlTlMgOiBhdHRyUmVtb3ZlKShmdWxsbmFtZSlcbiAgICAgIDogKGZ1bGxuYW1lLmxvY2FsID8gYXR0ckNvbnN0YW50TlMgOiBhdHRyQ29uc3RhbnQpKGZ1bGxuYW1lLCBpLCB2YWx1ZSkpO1xufVxuIiwiaW1wb3J0IHtuYW1lc3BhY2V9IGZyb20gXCJkMy1zZWxlY3Rpb25cIjtcblxuZnVuY3Rpb24gYXR0ckludGVycG9sYXRlKG5hbWUsIGkpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICB0aGlzLnNldEF0dHJpYnV0ZShuYW1lLCBpLmNhbGwodGhpcywgdCkpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBhdHRySW50ZXJwb2xhdGVOUyhmdWxsbmFtZSwgaSkge1xuICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgIHRoaXMuc2V0QXR0cmlidXRlTlMoZnVsbG5hbWUuc3BhY2UsIGZ1bGxuYW1lLmxvY2FsLCBpLmNhbGwodGhpcywgdCkpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBhdHRyVHdlZW5OUyhmdWxsbmFtZSwgdmFsdWUpIHtcbiAgdmFyIHQwLCBpMDtcbiAgZnVuY3Rpb24gdHdlZW4oKSB7XG4gICAgdmFyIGkgPSB2YWx1ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIGlmIChpICE9PSBpMCkgdDAgPSAoaTAgPSBpKSAmJiBhdHRySW50ZXJwb2xhdGVOUyhmdWxsbmFtZSwgaSk7XG4gICAgcmV0dXJuIHQwO1xuICB9XG4gIHR3ZWVuLl92YWx1ZSA9IHZhbHVlO1xuICByZXR1cm4gdHdlZW47XG59XG5cbmZ1bmN0aW9uIGF0dHJUd2VlbihuYW1lLCB2YWx1ZSkge1xuICB2YXIgdDAsIGkwO1xuICBmdW5jdGlvbiB0d2VlbigpIHtcbiAgICB2YXIgaSA9IHZhbHVlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgaWYgKGkgIT09IGkwKSB0MCA9IChpMCA9IGkpICYmIGF0dHJJbnRlcnBvbGF0ZShuYW1lLCBpKTtcbiAgICByZXR1cm4gdDA7XG4gIH1cbiAgdHdlZW4uX3ZhbHVlID0gdmFsdWU7XG4gIHJldHVybiB0d2Vlbjtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obmFtZSwgdmFsdWUpIHtcbiAgdmFyIGtleSA9IFwiYXR0ci5cIiArIG5hbWU7XG4gIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMikgcmV0dXJuIChrZXkgPSB0aGlzLnR3ZWVuKGtleSkpICYmIGtleS5fdmFsdWU7XG4gIGlmICh2YWx1ZSA9PSBudWxsKSByZXR1cm4gdGhpcy50d2VlbihrZXksIG51bGwpO1xuICBpZiAodHlwZW9mIHZhbHVlICE9PSBcImZ1bmN0aW9uXCIpIHRocm93IG5ldyBFcnJvcjtcbiAgdmFyIGZ1bGxuYW1lID0gbmFtZXNwYWNlKG5hbWUpO1xuICByZXR1cm4gdGhpcy50d2VlbihrZXksIChmdWxsbmFtZS5sb2NhbCA/IGF0dHJUd2Vlbk5TIDogYXR0clR3ZWVuKShmdWxsbmFtZSwgdmFsdWUpKTtcbn1cbiIsImltcG9ydCB7Z2V0LCBpbml0fSBmcm9tIFwiLi9zY2hlZHVsZS5qc1wiO1xuXG5mdW5jdGlvbiBkZWxheUZ1bmN0aW9uKGlkLCB2YWx1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgaW5pdCh0aGlzLCBpZCkuZGVsYXkgPSArdmFsdWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gZGVsYXlDb25zdGFudChpZCwgdmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlID0gK3ZhbHVlLCBmdW5jdGlvbigpIHtcbiAgICBpbml0KHRoaXMsIGlkKS5kZWxheSA9IHZhbHVlO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih2YWx1ZSkge1xuICB2YXIgaWQgPSB0aGlzLl9pZDtcblxuICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aFxuICAgICAgPyB0aGlzLmVhY2goKHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiXG4gICAgICAgICAgPyBkZWxheUZ1bmN0aW9uXG4gICAgICAgICAgOiBkZWxheUNvbnN0YW50KShpZCwgdmFsdWUpKVxuICAgICAgOiBnZXQodGhpcy5ub2RlKCksIGlkKS5kZWxheTtcbn1cbiIsImltcG9ydCB7Z2V0LCBzZXR9IGZyb20gXCIuL3NjaGVkdWxlLmpzXCI7XG5cbmZ1bmN0aW9uIGR1cmF0aW9uRnVuY3Rpb24oaWQsIHZhbHVlKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICBzZXQodGhpcywgaWQpLmR1cmF0aW9uID0gK3ZhbHVlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGR1cmF0aW9uQ29uc3RhbnQoaWQsIHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSA9ICt2YWx1ZSwgZnVuY3Rpb24oKSB7XG4gICAgc2V0KHRoaXMsIGlkKS5kdXJhdGlvbiA9IHZhbHVlO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih2YWx1ZSkge1xuICB2YXIgaWQgPSB0aGlzLl9pZDtcblxuICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aFxuICAgICAgPyB0aGlzLmVhY2goKHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiXG4gICAgICAgICAgPyBkdXJhdGlvbkZ1bmN0aW9uXG4gICAgICAgICAgOiBkdXJhdGlvbkNvbnN0YW50KShpZCwgdmFsdWUpKVxuICAgICAgOiBnZXQodGhpcy5ub2RlKCksIGlkKS5kdXJhdGlvbjtcbn1cbiIsImltcG9ydCB7Z2V0LCBzZXR9IGZyb20gXCIuL3NjaGVkdWxlLmpzXCI7XG5cbmZ1bmN0aW9uIGVhc2VDb25zdGFudChpZCwgdmFsdWUpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gXCJmdW5jdGlvblwiKSB0aHJvdyBuZXcgRXJyb3I7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICBzZXQodGhpcywgaWQpLmVhc2UgPSB2YWx1ZTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWUpIHtcbiAgdmFyIGlkID0gdGhpcy5faWQ7XG5cbiAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGhcbiAgICAgID8gdGhpcy5lYWNoKGVhc2VDb25zdGFudChpZCwgdmFsdWUpKVxuICAgICAgOiBnZXQodGhpcy5ub2RlKCksIGlkKS5lYXNlO1xufVxuIiwiaW1wb3J0IHtzZXR9IGZyb20gXCIuL3NjaGVkdWxlLmpzXCI7XG5cbmZ1bmN0aW9uIGVhc2VWYXJ5aW5nKGlkLCB2YWx1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHYgPSB2YWx1ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIGlmICh0eXBlb2YgdiAhPT0gXCJmdW5jdGlvblwiKSB0aHJvdyBuZXcgRXJyb3I7XG4gICAgc2V0KHRoaXMsIGlkKS5lYXNlID0gdjtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWUpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gXCJmdW5jdGlvblwiKSB0aHJvdyBuZXcgRXJyb3I7XG4gIHJldHVybiB0aGlzLmVhY2goZWFzZVZhcnlpbmcodGhpcy5faWQsIHZhbHVlKSk7XG59XG4iLCJpbXBvcnQge21hdGNoZXJ9IGZyb20gXCJkMy1zZWxlY3Rpb25cIjtcbmltcG9ydCB7VHJhbnNpdGlvbn0gZnJvbSBcIi4vaW5kZXguanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obWF0Y2gpIHtcbiAgaWYgKHR5cGVvZiBtYXRjaCAhPT0gXCJmdW5jdGlvblwiKSBtYXRjaCA9IG1hdGNoZXIobWF0Y2gpO1xuXG4gIGZvciAodmFyIGdyb3VwcyA9IHRoaXMuX2dyb3VwcywgbSA9IGdyb3Vwcy5sZW5ndGgsIHN1Ymdyb3VwcyA9IG5ldyBBcnJheShtKSwgaiA9IDA7IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHZhciBncm91cCA9IGdyb3Vwc1tqXSwgbiA9IGdyb3VwLmxlbmd0aCwgc3ViZ3JvdXAgPSBzdWJncm91cHNbal0gPSBbXSwgbm9kZSwgaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmICgobm9kZSA9IGdyb3VwW2ldKSAmJiBtYXRjaC5jYWxsKG5vZGUsIG5vZGUuX19kYXRhX18sIGksIGdyb3VwKSkge1xuICAgICAgICBzdWJncm91cC5wdXNoKG5vZGUpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBuZXcgVHJhbnNpdGlvbihzdWJncm91cHMsIHRoaXMuX3BhcmVudHMsIHRoaXMuX25hbWUsIHRoaXMuX2lkKTtcbn1cbiIsImltcG9ydCB7VHJhbnNpdGlvbn0gZnJvbSBcIi4vaW5kZXguanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odHJhbnNpdGlvbikge1xuICBpZiAodHJhbnNpdGlvbi5faWQgIT09IHRoaXMuX2lkKSB0aHJvdyBuZXcgRXJyb3I7XG5cbiAgZm9yICh2YXIgZ3JvdXBzMCA9IHRoaXMuX2dyb3VwcywgZ3JvdXBzMSA9IHRyYW5zaXRpb24uX2dyb3VwcywgbTAgPSBncm91cHMwLmxlbmd0aCwgbTEgPSBncm91cHMxLmxlbmd0aCwgbSA9IE1hdGgubWluKG0wLCBtMSksIG1lcmdlcyA9IG5ldyBBcnJheShtMCksIGogPSAwOyBqIDwgbTsgKytqKSB7XG4gICAgZm9yICh2YXIgZ3JvdXAwID0gZ3JvdXBzMFtqXSwgZ3JvdXAxID0gZ3JvdXBzMVtqXSwgbiA9IGdyb3VwMC5sZW5ndGgsIG1lcmdlID0gbWVyZ2VzW2pdID0gbmV3IEFycmF5KG4pLCBub2RlLCBpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgaWYgKG5vZGUgPSBncm91cDBbaV0gfHwgZ3JvdXAxW2ldKSB7XG4gICAgICAgIG1lcmdlW2ldID0gbm9kZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBmb3IgKDsgaiA8IG0wOyArK2opIHtcbiAgICBtZXJnZXNbal0gPSBncm91cHMwW2pdO1xuICB9XG5cbiAgcmV0dXJuIG5ldyBUcmFuc2l0aW9uKG1lcmdlcywgdGhpcy5fcGFyZW50cywgdGhpcy5fbmFtZSwgdGhpcy5faWQpO1xufVxuIiwiaW1wb3J0IHtnZXQsIHNldCwgaW5pdH0gZnJvbSBcIi4vc2NoZWR1bGUuanNcIjtcblxuZnVuY3Rpb24gc3RhcnQobmFtZSkge1xuICByZXR1cm4gKG5hbWUgKyBcIlwiKS50cmltKCkuc3BsaXQoL158XFxzKy8pLmV2ZXJ5KGZ1bmN0aW9uKHQpIHtcbiAgICB2YXIgaSA9IHQuaW5kZXhPZihcIi5cIik7XG4gICAgaWYgKGkgPj0gMCkgdCA9IHQuc2xpY2UoMCwgaSk7XG4gICAgcmV0dXJuICF0IHx8IHQgPT09IFwic3RhcnRcIjtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIG9uRnVuY3Rpb24oaWQsIG5hbWUsIGxpc3RlbmVyKSB7XG4gIHZhciBvbjAsIG9uMSwgc2l0ID0gc3RhcnQobmFtZSkgPyBpbml0IDogc2V0O1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHNjaGVkdWxlID0gc2l0KHRoaXMsIGlkKSxcbiAgICAgICAgb24gPSBzY2hlZHVsZS5vbjtcblxuICAgIC8vIElmIHRoaXMgbm9kZSBzaGFyZWQgYSBkaXNwYXRjaCB3aXRoIHRoZSBwcmV2aW91cyBub2RlLFxuICAgIC8vIGp1c3QgYXNzaWduIHRoZSB1cGRhdGVkIHNoYXJlZCBkaXNwYXRjaCBhbmQgd2XigJlyZSBkb25lIVxuICAgIC8vIE90aGVyd2lzZSwgY29weS1vbi13cml0ZS5cbiAgICBpZiAob24gIT09IG9uMCkgKG9uMSA9IChvbjAgPSBvbikuY29weSgpKS5vbihuYW1lLCBsaXN0ZW5lcik7XG5cbiAgICBzY2hlZHVsZS5vbiA9IG9uMTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obmFtZSwgbGlzdGVuZXIpIHtcbiAgdmFyIGlkID0gdGhpcy5faWQ7XG5cbiAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPCAyXG4gICAgICA/IGdldCh0aGlzLm5vZGUoKSwgaWQpLm9uLm9uKG5hbWUpXG4gICAgICA6IHRoaXMuZWFjaChvbkZ1bmN0aW9uKGlkLCBuYW1lLCBsaXN0ZW5lcikpO1xufVxuIiwiZnVuY3Rpb24gcmVtb3ZlRnVuY3Rpb24oaWQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciBwYXJlbnQgPSB0aGlzLnBhcmVudE5vZGU7XG4gICAgZm9yICh2YXIgaSBpbiB0aGlzLl9fdHJhbnNpdGlvbikgaWYgKCtpICE9PSBpZCkgcmV0dXJuO1xuICAgIGlmIChwYXJlbnQpIHBhcmVudC5yZW1vdmVDaGlsZCh0aGlzKTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiB0aGlzLm9uKFwiZW5kLnJlbW92ZVwiLCByZW1vdmVGdW5jdGlvbih0aGlzLl9pZCkpO1xufVxuIiwiaW1wb3J0IHtzZWxlY3Rvcn0gZnJvbSBcImQzLXNlbGVjdGlvblwiO1xuaW1wb3J0IHtUcmFuc2l0aW9ufSBmcm9tIFwiLi9pbmRleC5qc1wiO1xuaW1wb3J0IHNjaGVkdWxlLCB7Z2V0fSBmcm9tIFwiLi9zY2hlZHVsZS5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzZWxlY3QpIHtcbiAgdmFyIG5hbWUgPSB0aGlzLl9uYW1lLFxuICAgICAgaWQgPSB0aGlzLl9pZDtcblxuICBpZiAodHlwZW9mIHNlbGVjdCAhPT0gXCJmdW5jdGlvblwiKSBzZWxlY3QgPSBzZWxlY3RvcihzZWxlY3QpO1xuXG4gIGZvciAodmFyIGdyb3VwcyA9IHRoaXMuX2dyb3VwcywgbSA9IGdyb3Vwcy5sZW5ndGgsIHN1Ymdyb3VwcyA9IG5ldyBBcnJheShtKSwgaiA9IDA7IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHZhciBncm91cCA9IGdyb3Vwc1tqXSwgbiA9IGdyb3VwLmxlbmd0aCwgc3ViZ3JvdXAgPSBzdWJncm91cHNbal0gPSBuZXcgQXJyYXkobiksIG5vZGUsIHN1Ym5vZGUsIGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICBpZiAoKG5vZGUgPSBncm91cFtpXSkgJiYgKHN1Ym5vZGUgPSBzZWxlY3QuY2FsbChub2RlLCBub2RlLl9fZGF0YV9fLCBpLCBncm91cCkpKSB7XG4gICAgICAgIGlmIChcIl9fZGF0YV9fXCIgaW4gbm9kZSkgc3Vibm9kZS5fX2RhdGFfXyA9IG5vZGUuX19kYXRhX187XG4gICAgICAgIHN1Ymdyb3VwW2ldID0gc3Vibm9kZTtcbiAgICAgICAgc2NoZWR1bGUoc3ViZ3JvdXBbaV0sIG5hbWUsIGlkLCBpLCBzdWJncm91cCwgZ2V0KG5vZGUsIGlkKSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG5ldyBUcmFuc2l0aW9uKHN1Ymdyb3VwcywgdGhpcy5fcGFyZW50cywgbmFtZSwgaWQpO1xufVxuIiwiaW1wb3J0IHtzZWxlY3RvckFsbH0gZnJvbSBcImQzLXNlbGVjdGlvblwiO1xuaW1wb3J0IHtUcmFuc2l0aW9ufSBmcm9tIFwiLi9pbmRleC5qc1wiO1xuaW1wb3J0IHNjaGVkdWxlLCB7Z2V0fSBmcm9tIFwiLi9zY2hlZHVsZS5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzZWxlY3QpIHtcbiAgdmFyIG5hbWUgPSB0aGlzLl9uYW1lLFxuICAgICAgaWQgPSB0aGlzLl9pZDtcblxuICBpZiAodHlwZW9mIHNlbGVjdCAhPT0gXCJmdW5jdGlvblwiKSBzZWxlY3QgPSBzZWxlY3RvckFsbChzZWxlY3QpO1xuXG4gIGZvciAodmFyIGdyb3VwcyA9IHRoaXMuX2dyb3VwcywgbSA9IGdyb3Vwcy5sZW5ndGgsIHN1Ymdyb3VwcyA9IFtdLCBwYXJlbnRzID0gW10sIGogPSAwOyBqIDwgbTsgKytqKSB7XG4gICAgZm9yICh2YXIgZ3JvdXAgPSBncm91cHNbal0sIG4gPSBncm91cC5sZW5ndGgsIG5vZGUsIGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICBpZiAobm9kZSA9IGdyb3VwW2ldKSB7XG4gICAgICAgIGZvciAodmFyIGNoaWxkcmVuID0gc2VsZWN0LmNhbGwobm9kZSwgbm9kZS5fX2RhdGFfXywgaSwgZ3JvdXApLCBjaGlsZCwgaW5oZXJpdCA9IGdldChub2RlLCBpZCksIGsgPSAwLCBsID0gY2hpbGRyZW4ubGVuZ3RoOyBrIDwgbDsgKytrKSB7XG4gICAgICAgICAgaWYgKGNoaWxkID0gY2hpbGRyZW5ba10pIHtcbiAgICAgICAgICAgIHNjaGVkdWxlKGNoaWxkLCBuYW1lLCBpZCwgaywgY2hpbGRyZW4sIGluaGVyaXQpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBzdWJncm91cHMucHVzaChjaGlsZHJlbik7XG4gICAgICAgIHBhcmVudHMucHVzaChub2RlKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gbmV3IFRyYW5zaXRpb24oc3ViZ3JvdXBzLCBwYXJlbnRzLCBuYW1lLCBpZCk7XG59XG4iLCJpbXBvcnQge3NlbGVjdGlvbn0gZnJvbSBcImQzLXNlbGVjdGlvblwiO1xuXG52YXIgU2VsZWN0aW9uID0gc2VsZWN0aW9uLnByb3RvdHlwZS5jb25zdHJ1Y3RvcjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiBuZXcgU2VsZWN0aW9uKHRoaXMuX2dyb3VwcywgdGhpcy5fcGFyZW50cyk7XG59XG4iLCJpbXBvcnQge2ludGVycG9sYXRlVHJhbnNmb3JtQ3NzIGFzIGludGVycG9sYXRlVHJhbnNmb3JtfSBmcm9tIFwiZDMtaW50ZXJwb2xhdGVcIjtcbmltcG9ydCB7c3R5bGV9IGZyb20gXCJkMy1zZWxlY3Rpb25cIjtcbmltcG9ydCB7c2V0fSBmcm9tIFwiLi9zY2hlZHVsZS5qc1wiO1xuaW1wb3J0IHt0d2VlblZhbHVlfSBmcm9tIFwiLi90d2Vlbi5qc1wiO1xuaW1wb3J0IGludGVycG9sYXRlIGZyb20gXCIuL2ludGVycG9sYXRlLmpzXCI7XG5cbmZ1bmN0aW9uIHN0eWxlTnVsbChuYW1lLCBpbnRlcnBvbGF0ZSkge1xuICB2YXIgc3RyaW5nMDAsXG4gICAgICBzdHJpbmcxMCxcbiAgICAgIGludGVycG9sYXRlMDtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciBzdHJpbmcwID0gc3R5bGUodGhpcywgbmFtZSksXG4gICAgICAgIHN0cmluZzEgPSAodGhpcy5zdHlsZS5yZW1vdmVQcm9wZXJ0eShuYW1lKSwgc3R5bGUodGhpcywgbmFtZSkpO1xuICAgIHJldHVybiBzdHJpbmcwID09PSBzdHJpbmcxID8gbnVsbFxuICAgICAgICA6IHN0cmluZzAgPT09IHN0cmluZzAwICYmIHN0cmluZzEgPT09IHN0cmluZzEwID8gaW50ZXJwb2xhdGUwXG4gICAgICAgIDogaW50ZXJwb2xhdGUwID0gaW50ZXJwb2xhdGUoc3RyaW5nMDAgPSBzdHJpbmcwLCBzdHJpbmcxMCA9IHN0cmluZzEpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBzdHlsZVJlbW92ZShuYW1lKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLnN0eWxlLnJlbW92ZVByb3BlcnR5KG5hbWUpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBzdHlsZUNvbnN0YW50KG5hbWUsIGludGVycG9sYXRlLCB2YWx1ZTEpIHtcbiAgdmFyIHN0cmluZzAwLFxuICAgICAgc3RyaW5nMSA9IHZhbHVlMSArIFwiXCIsXG4gICAgICBpbnRlcnBvbGF0ZTA7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgc3RyaW5nMCA9IHN0eWxlKHRoaXMsIG5hbWUpO1xuICAgIHJldHVybiBzdHJpbmcwID09PSBzdHJpbmcxID8gbnVsbFxuICAgICAgICA6IHN0cmluZzAgPT09IHN0cmluZzAwID8gaW50ZXJwb2xhdGUwXG4gICAgICAgIDogaW50ZXJwb2xhdGUwID0gaW50ZXJwb2xhdGUoc3RyaW5nMDAgPSBzdHJpbmcwLCB2YWx1ZTEpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBzdHlsZUZ1bmN0aW9uKG5hbWUsIGludGVycG9sYXRlLCB2YWx1ZSkge1xuICB2YXIgc3RyaW5nMDAsXG4gICAgICBzdHJpbmcxMCxcbiAgICAgIGludGVycG9sYXRlMDtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciBzdHJpbmcwID0gc3R5bGUodGhpcywgbmFtZSksXG4gICAgICAgIHZhbHVlMSA9IHZhbHVlKHRoaXMpLFxuICAgICAgICBzdHJpbmcxID0gdmFsdWUxICsgXCJcIjtcbiAgICBpZiAodmFsdWUxID09IG51bGwpIHN0cmluZzEgPSB2YWx1ZTEgPSAodGhpcy5zdHlsZS5yZW1vdmVQcm9wZXJ0eShuYW1lKSwgc3R5bGUodGhpcywgbmFtZSkpO1xuICAgIHJldHVybiBzdHJpbmcwID09PSBzdHJpbmcxID8gbnVsbFxuICAgICAgICA6IHN0cmluZzAgPT09IHN0cmluZzAwICYmIHN0cmluZzEgPT09IHN0cmluZzEwID8gaW50ZXJwb2xhdGUwXG4gICAgICAgIDogKHN0cmluZzEwID0gc3RyaW5nMSwgaW50ZXJwb2xhdGUwID0gaW50ZXJwb2xhdGUoc3RyaW5nMDAgPSBzdHJpbmcwLCB2YWx1ZTEpKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gc3R5bGVNYXliZVJlbW92ZShpZCwgbmFtZSkge1xuICB2YXIgb24wLCBvbjEsIGxpc3RlbmVyMCwga2V5ID0gXCJzdHlsZS5cIiArIG5hbWUsIGV2ZW50ID0gXCJlbmQuXCIgKyBrZXksIHJlbW92ZTtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciBzY2hlZHVsZSA9IHNldCh0aGlzLCBpZCksXG4gICAgICAgIG9uID0gc2NoZWR1bGUub24sXG4gICAgICAgIGxpc3RlbmVyID0gc2NoZWR1bGUudmFsdWVba2V5XSA9PSBudWxsID8gcmVtb3ZlIHx8IChyZW1vdmUgPSBzdHlsZVJlbW92ZShuYW1lKSkgOiB1bmRlZmluZWQ7XG5cbiAgICAvLyBJZiB0aGlzIG5vZGUgc2hhcmVkIGEgZGlzcGF0Y2ggd2l0aCB0aGUgcHJldmlvdXMgbm9kZSxcbiAgICAvLyBqdXN0IGFzc2lnbiB0aGUgdXBkYXRlZCBzaGFyZWQgZGlzcGF0Y2ggYW5kIHdl4oCZcmUgZG9uZSFcbiAgICAvLyBPdGhlcndpc2UsIGNvcHktb24td3JpdGUuXG4gICAgaWYgKG9uICE9PSBvbjAgfHwgbGlzdGVuZXIwICE9PSBsaXN0ZW5lcikgKG9uMSA9IChvbjAgPSBvbikuY29weSgpKS5vbihldmVudCwgbGlzdGVuZXIwID0gbGlzdGVuZXIpO1xuXG4gICAgc2NoZWR1bGUub24gPSBvbjE7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5hbWUsIHZhbHVlLCBwcmlvcml0eSkge1xuICB2YXIgaSA9IChuYW1lICs9IFwiXCIpID09PSBcInRyYW5zZm9ybVwiID8gaW50ZXJwb2xhdGVUcmFuc2Zvcm0gOiBpbnRlcnBvbGF0ZTtcbiAgcmV0dXJuIHZhbHVlID09IG51bGwgPyB0aGlzXG4gICAgICAuc3R5bGVUd2VlbihuYW1lLCBzdHlsZU51bGwobmFtZSwgaSkpXG4gICAgICAub24oXCJlbmQuc3R5bGUuXCIgKyBuYW1lLCBzdHlsZVJlbW92ZShuYW1lKSlcbiAgICA6IHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiID8gdGhpc1xuICAgICAgLnN0eWxlVHdlZW4obmFtZSwgc3R5bGVGdW5jdGlvbihuYW1lLCBpLCB0d2VlblZhbHVlKHRoaXMsIFwic3R5bGUuXCIgKyBuYW1lLCB2YWx1ZSkpKVxuICAgICAgLmVhY2goc3R5bGVNYXliZVJlbW92ZSh0aGlzLl9pZCwgbmFtZSkpXG4gICAgOiB0aGlzXG4gICAgICAuc3R5bGVUd2VlbihuYW1lLCBzdHlsZUNvbnN0YW50KG5hbWUsIGksIHZhbHVlKSwgcHJpb3JpdHkpXG4gICAgICAub24oXCJlbmQuc3R5bGUuXCIgKyBuYW1lLCBudWxsKTtcbn1cbiIsImZ1bmN0aW9uIHN0eWxlSW50ZXJwb2xhdGUobmFtZSwgaSwgcHJpb3JpdHkpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICB0aGlzLnN0eWxlLnNldFByb3BlcnR5KG5hbWUsIGkuY2FsbCh0aGlzLCB0KSwgcHJpb3JpdHkpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBzdHlsZVR3ZWVuKG5hbWUsIHZhbHVlLCBwcmlvcml0eSkge1xuICB2YXIgdCwgaTA7XG4gIGZ1bmN0aW9uIHR3ZWVuKCkge1xuICAgIHZhciBpID0gdmFsdWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICBpZiAoaSAhPT0gaTApIHQgPSAoaTAgPSBpKSAmJiBzdHlsZUludGVycG9sYXRlKG5hbWUsIGksIHByaW9yaXR5KTtcbiAgICByZXR1cm4gdDtcbiAgfVxuICB0d2Vlbi5fdmFsdWUgPSB2YWx1ZTtcbiAgcmV0dXJuIHR3ZWVuO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihuYW1lLCB2YWx1ZSwgcHJpb3JpdHkpIHtcbiAgdmFyIGtleSA9IFwic3R5bGUuXCIgKyAobmFtZSArPSBcIlwiKTtcbiAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyKSByZXR1cm4gKGtleSA9IHRoaXMudHdlZW4oa2V5KSkgJiYga2V5Ll92YWx1ZTtcbiAgaWYgKHZhbHVlID09IG51bGwpIHJldHVybiB0aGlzLnR3ZWVuKGtleSwgbnVsbCk7XG4gIGlmICh0eXBlb2YgdmFsdWUgIT09IFwiZnVuY3Rpb25cIikgdGhyb3cgbmV3IEVycm9yO1xuICByZXR1cm4gdGhpcy50d2VlbihrZXksIHN0eWxlVHdlZW4obmFtZSwgdmFsdWUsIHByaW9yaXR5ID09IG51bGwgPyBcIlwiIDogcHJpb3JpdHkpKTtcbn1cbiIsImltcG9ydCB7dHdlZW5WYWx1ZX0gZnJvbSBcIi4vdHdlZW4uanNcIjtcblxuZnVuY3Rpb24gdGV4dENvbnN0YW50KHZhbHVlKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLnRleHRDb250ZW50ID0gdmFsdWU7XG4gIH07XG59XG5cbmZ1bmN0aW9uIHRleHRGdW5jdGlvbih2YWx1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHZhbHVlMSA9IHZhbHVlKHRoaXMpO1xuICAgIHRoaXMudGV4dENvbnRlbnQgPSB2YWx1ZTEgPT0gbnVsbCA/IFwiXCIgOiB2YWx1ZTE7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIHJldHVybiB0aGlzLnR3ZWVuKFwidGV4dFwiLCB0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIlxuICAgICAgPyB0ZXh0RnVuY3Rpb24odHdlZW5WYWx1ZSh0aGlzLCBcInRleHRcIiwgdmFsdWUpKVxuICAgICAgOiB0ZXh0Q29uc3RhbnQodmFsdWUgPT0gbnVsbCA/IFwiXCIgOiB2YWx1ZSArIFwiXCIpKTtcbn1cbiIsImZ1bmN0aW9uIHRleHRJbnRlcnBvbGF0ZShpKSB7XG4gIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgdGhpcy50ZXh0Q29udGVudCA9IGkuY2FsbCh0aGlzLCB0KTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gdGV4dFR3ZWVuKHZhbHVlKSB7XG4gIHZhciB0MCwgaTA7XG4gIGZ1bmN0aW9uIHR3ZWVuKCkge1xuICAgIHZhciBpID0gdmFsdWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICBpZiAoaSAhPT0gaTApIHQwID0gKGkwID0gaSkgJiYgdGV4dEludGVycG9sYXRlKGkpO1xuICAgIHJldHVybiB0MDtcbiAgfVxuICB0d2Vlbi5fdmFsdWUgPSB2YWx1ZTtcbiAgcmV0dXJuIHR3ZWVuO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih2YWx1ZSkge1xuICB2YXIga2V5ID0gXCJ0ZXh0XCI7XG4gIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMSkgcmV0dXJuIChrZXkgPSB0aGlzLnR3ZWVuKGtleSkpICYmIGtleS5fdmFsdWU7XG4gIGlmICh2YWx1ZSA9PSBudWxsKSByZXR1cm4gdGhpcy50d2VlbihrZXksIG51bGwpO1xuICBpZiAodHlwZW9mIHZhbHVlICE9PSBcImZ1bmN0aW9uXCIpIHRocm93IG5ldyBFcnJvcjtcbiAgcmV0dXJuIHRoaXMudHdlZW4oa2V5LCB0ZXh0VHdlZW4odmFsdWUpKTtcbn1cbiIsImltcG9ydCB7VHJhbnNpdGlvbiwgbmV3SWR9IGZyb20gXCIuL2luZGV4LmpzXCI7XG5pbXBvcnQgc2NoZWR1bGUsIHtnZXR9IGZyb20gXCIuL3NjaGVkdWxlLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgbmFtZSA9IHRoaXMuX25hbWUsXG4gICAgICBpZDAgPSB0aGlzLl9pZCxcbiAgICAgIGlkMSA9IG5ld0lkKCk7XG5cbiAgZm9yICh2YXIgZ3JvdXBzID0gdGhpcy5fZ3JvdXBzLCBtID0gZ3JvdXBzLmxlbmd0aCwgaiA9IDA7IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHZhciBncm91cCA9IGdyb3Vwc1tqXSwgbiA9IGdyb3VwLmxlbmd0aCwgbm9kZSwgaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmIChub2RlID0gZ3JvdXBbaV0pIHtcbiAgICAgICAgdmFyIGluaGVyaXQgPSBnZXQobm9kZSwgaWQwKTtcbiAgICAgICAgc2NoZWR1bGUobm9kZSwgbmFtZSwgaWQxLCBpLCBncm91cCwge1xuICAgICAgICAgIHRpbWU6IGluaGVyaXQudGltZSArIGluaGVyaXQuZGVsYXkgKyBpbmhlcml0LmR1cmF0aW9uLFxuICAgICAgICAgIGRlbGF5OiAwLFxuICAgICAgICAgIGR1cmF0aW9uOiBpbmhlcml0LmR1cmF0aW9uLFxuICAgICAgICAgIGVhc2U6IGluaGVyaXQuZWFzZVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gbmV3IFRyYW5zaXRpb24oZ3JvdXBzLCB0aGlzLl9wYXJlbnRzLCBuYW1lLCBpZDEpO1xufVxuIiwiaW1wb3J0IHtzZXR9IGZyb20gXCIuL3NjaGVkdWxlLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgb24wLCBvbjEsIHRoYXQgPSB0aGlzLCBpZCA9IHRoYXQuX2lkLCBzaXplID0gdGhhdC5zaXplKCk7XG4gIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLCByZWplY3QpIHtcbiAgICB2YXIgY2FuY2VsID0ge3ZhbHVlOiByZWplY3R9LFxuICAgICAgICBlbmQgPSB7dmFsdWU6IGZ1bmN0aW9uKCkgeyBpZiAoLS1zaXplID09PSAwKSByZXNvbHZlKCk7IH19O1xuXG4gICAgdGhhdC5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIHNjaGVkdWxlID0gc2V0KHRoaXMsIGlkKSxcbiAgICAgICAgICBvbiA9IHNjaGVkdWxlLm9uO1xuXG4gICAgICAvLyBJZiB0aGlzIG5vZGUgc2hhcmVkIGEgZGlzcGF0Y2ggd2l0aCB0aGUgcHJldmlvdXMgbm9kZSxcbiAgICAgIC8vIGp1c3QgYXNzaWduIHRoZSB1cGRhdGVkIHNoYXJlZCBkaXNwYXRjaCBhbmQgd2XigJlyZSBkb25lIVxuICAgICAgLy8gT3RoZXJ3aXNlLCBjb3B5LW9uLXdyaXRlLlxuICAgICAgaWYgKG9uICE9PSBvbjApIHtcbiAgICAgICAgb24xID0gKG9uMCA9IG9uKS5jb3B5KCk7XG4gICAgICAgIG9uMS5fLmNhbmNlbC5wdXNoKGNhbmNlbCk7XG4gICAgICAgIG9uMS5fLmludGVycnVwdC5wdXNoKGNhbmNlbCk7XG4gICAgICAgIG9uMS5fLmVuZC5wdXNoKGVuZCk7XG4gICAgICB9XG5cbiAgICAgIHNjaGVkdWxlLm9uID0gb24xO1xuICAgIH0pO1xuXG4gICAgLy8gVGhlIHNlbGVjdGlvbiB3YXMgZW1wdHksIHJlc29sdmUgZW5kIGltbWVkaWF0ZWx5XG4gICAgaWYgKHNpemUgPT09IDApIHJlc29sdmUoKTtcbiAgfSk7XG59XG4iLCJpbXBvcnQge3NlbGVjdGlvbn0gZnJvbSBcImQzLXNlbGVjdGlvblwiO1xuaW1wb3J0IHRyYW5zaXRpb25fYXR0ciBmcm9tIFwiLi9hdHRyLmpzXCI7XG5pbXBvcnQgdHJhbnNpdGlvbl9hdHRyVHdlZW4gZnJvbSBcIi4vYXR0clR3ZWVuLmpzXCI7XG5pbXBvcnQgdHJhbnNpdGlvbl9kZWxheSBmcm9tIFwiLi9kZWxheS5qc1wiO1xuaW1wb3J0IHRyYW5zaXRpb25fZHVyYXRpb24gZnJvbSBcIi4vZHVyYXRpb24uanNcIjtcbmltcG9ydCB0cmFuc2l0aW9uX2Vhc2UgZnJvbSBcIi4vZWFzZS5qc1wiO1xuaW1wb3J0IHRyYW5zaXRpb25fZWFzZVZhcnlpbmcgZnJvbSBcIi4vZWFzZVZhcnlpbmcuanNcIjtcbmltcG9ydCB0cmFuc2l0aW9uX2ZpbHRlciBmcm9tIFwiLi9maWx0ZXIuanNcIjtcbmltcG9ydCB0cmFuc2l0aW9uX21lcmdlIGZyb20gXCIuL21lcmdlLmpzXCI7XG5pbXBvcnQgdHJhbnNpdGlvbl9vbiBmcm9tIFwiLi9vbi5qc1wiO1xuaW1wb3J0IHRyYW5zaXRpb25fcmVtb3ZlIGZyb20gXCIuL3JlbW92ZS5qc1wiO1xuaW1wb3J0IHRyYW5zaXRpb25fc2VsZWN0IGZyb20gXCIuL3NlbGVjdC5qc1wiO1xuaW1wb3J0IHRyYW5zaXRpb25fc2VsZWN0QWxsIGZyb20gXCIuL3NlbGVjdEFsbC5qc1wiO1xuaW1wb3J0IHRyYW5zaXRpb25fc2VsZWN0aW9uIGZyb20gXCIuL3NlbGVjdGlvbi5qc1wiO1xuaW1wb3J0IHRyYW5zaXRpb25fc3R5bGUgZnJvbSBcIi4vc3R5bGUuanNcIjtcbmltcG9ydCB0cmFuc2l0aW9uX3N0eWxlVHdlZW4gZnJvbSBcIi4vc3R5bGVUd2Vlbi5qc1wiO1xuaW1wb3J0IHRyYW5zaXRpb25fdGV4dCBmcm9tIFwiLi90ZXh0LmpzXCI7XG5pbXBvcnQgdHJhbnNpdGlvbl90ZXh0VHdlZW4gZnJvbSBcIi4vdGV4dFR3ZWVuLmpzXCI7XG5pbXBvcnQgdHJhbnNpdGlvbl90cmFuc2l0aW9uIGZyb20gXCIuL3RyYW5zaXRpb24uanNcIjtcbmltcG9ydCB0cmFuc2l0aW9uX3R3ZWVuIGZyb20gXCIuL3R3ZWVuLmpzXCI7XG5pbXBvcnQgdHJhbnNpdGlvbl9lbmQgZnJvbSBcIi4vZW5kLmpzXCI7XG5cbnZhciBpZCA9IDA7XG5cbmV4cG9ydCBmdW5jdGlvbiBUcmFuc2l0aW9uKGdyb3VwcywgcGFyZW50cywgbmFtZSwgaWQpIHtcbiAgdGhpcy5fZ3JvdXBzID0gZ3JvdXBzO1xuICB0aGlzLl9wYXJlbnRzID0gcGFyZW50cztcbiAgdGhpcy5fbmFtZSA9IG5hbWU7XG4gIHRoaXMuX2lkID0gaWQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHRyYW5zaXRpb24obmFtZSkge1xuICByZXR1cm4gc2VsZWN0aW9uKCkudHJhbnNpdGlvbihuYW1lKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG5ld0lkKCkge1xuICByZXR1cm4gKytpZDtcbn1cblxudmFyIHNlbGVjdGlvbl9wcm90b3R5cGUgPSBzZWxlY3Rpb24ucHJvdG90eXBlO1xuXG5UcmFuc2l0aW9uLnByb3RvdHlwZSA9IHRyYW5zaXRpb24ucHJvdG90eXBlID0ge1xuICBjb25zdHJ1Y3RvcjogVHJhbnNpdGlvbixcbiAgc2VsZWN0OiB0cmFuc2l0aW9uX3NlbGVjdCxcbiAgc2VsZWN0QWxsOiB0cmFuc2l0aW9uX3NlbGVjdEFsbCxcbiAgc2VsZWN0Q2hpbGQ6IHNlbGVjdGlvbl9wcm90b3R5cGUuc2VsZWN0Q2hpbGQsXG4gIHNlbGVjdENoaWxkcmVuOiBzZWxlY3Rpb25fcHJvdG90eXBlLnNlbGVjdENoaWxkcmVuLFxuICBmaWx0ZXI6IHRyYW5zaXRpb25fZmlsdGVyLFxuICBtZXJnZTogdHJhbnNpdGlvbl9tZXJnZSxcbiAgc2VsZWN0aW9uOiB0cmFuc2l0aW9uX3NlbGVjdGlvbixcbiAgdHJhbnNpdGlvbjogdHJhbnNpdGlvbl90cmFuc2l0aW9uLFxuICBjYWxsOiBzZWxlY3Rpb25fcHJvdG90eXBlLmNhbGwsXG4gIG5vZGVzOiBzZWxlY3Rpb25fcHJvdG90eXBlLm5vZGVzLFxuICBub2RlOiBzZWxlY3Rpb25fcHJvdG90eXBlLm5vZGUsXG4gIHNpemU6IHNlbGVjdGlvbl9wcm90b3R5cGUuc2l6ZSxcbiAgZW1wdHk6IHNlbGVjdGlvbl9wcm90b3R5cGUuZW1wdHksXG4gIGVhY2g6IHNlbGVjdGlvbl9wcm90b3R5cGUuZWFjaCxcbiAgb246IHRyYW5zaXRpb25fb24sXG4gIGF0dHI6IHRyYW5zaXRpb25fYXR0cixcbiAgYXR0clR3ZWVuOiB0cmFuc2l0aW9uX2F0dHJUd2VlbixcbiAgc3R5bGU6IHRyYW5zaXRpb25fc3R5bGUsXG4gIHN0eWxlVHdlZW46IHRyYW5zaXRpb25fc3R5bGVUd2VlbixcbiAgdGV4dDogdHJhbnNpdGlvbl90ZXh0LFxuICB0ZXh0VHdlZW46IHRyYW5zaXRpb25fdGV4dFR3ZWVuLFxuICByZW1vdmU6IHRyYW5zaXRpb25fcmVtb3ZlLFxuICB0d2VlbjogdHJhbnNpdGlvbl90d2VlbixcbiAgZGVsYXk6IHRyYW5zaXRpb25fZGVsYXksXG4gIGR1cmF0aW9uOiB0cmFuc2l0aW9uX2R1cmF0aW9uLFxuICBlYXNlOiB0cmFuc2l0aW9uX2Vhc2UsXG4gIGVhc2VWYXJ5aW5nOiB0cmFuc2l0aW9uX2Vhc2VWYXJ5aW5nLFxuICBlbmQ6IHRyYW5zaXRpb25fZW5kLFxuICBbU3ltYm9sLml0ZXJhdG9yXTogc2VsZWN0aW9uX3Byb3RvdHlwZVtTeW1ib2wuaXRlcmF0b3JdXG59O1xuIiwiZXhwb3J0IGNvbnN0IGxpbmVhciA9IHQgPT4gK3Q7XG4iLCJleHBvcnQgZnVuY3Rpb24gY3ViaWNJbih0KSB7XG4gIHJldHVybiB0ICogdCAqIHQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjdWJpY091dCh0KSB7XG4gIHJldHVybiAtLXQgKiB0ICogdCArIDE7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjdWJpY0luT3V0KHQpIHtcbiAgcmV0dXJuICgodCAqPSAyKSA8PSAxID8gdCAqIHQgKiB0IDogKHQgLT0gMikgKiB0ICogdCArIDIpIC8gMjtcbn1cbiIsImltcG9ydCB7VHJhbnNpdGlvbiwgbmV3SWR9IGZyb20gXCIuLi90cmFuc2l0aW9uL2luZGV4LmpzXCI7XG5pbXBvcnQgc2NoZWR1bGUgZnJvbSBcIi4uL3RyYW5zaXRpb24vc2NoZWR1bGUuanNcIjtcbmltcG9ydCB7ZWFzZUN1YmljSW5PdXR9IGZyb20gXCJkMy1lYXNlXCI7XG5pbXBvcnQge25vd30gZnJvbSBcImQzLXRpbWVyXCI7XG5cbnZhciBkZWZhdWx0VGltaW5nID0ge1xuICB0aW1lOiBudWxsLCAvLyBTZXQgb24gdXNlLlxuICBkZWxheTogMCxcbiAgZHVyYXRpb246IDI1MCxcbiAgZWFzZTogZWFzZUN1YmljSW5PdXRcbn07XG5cbmZ1bmN0aW9uIGluaGVyaXQobm9kZSwgaWQpIHtcbiAgdmFyIHRpbWluZztcbiAgd2hpbGUgKCEodGltaW5nID0gbm9kZS5fX3RyYW5zaXRpb24pIHx8ICEodGltaW5nID0gdGltaW5nW2lkXSkpIHtcbiAgICBpZiAoIShub2RlID0gbm9kZS5wYXJlbnROb2RlKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGB0cmFuc2l0aW9uICR7aWR9IG5vdCBmb3VuZGApO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdGltaW5nO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihuYW1lKSB7XG4gIHZhciBpZCxcbiAgICAgIHRpbWluZztcblxuICBpZiAobmFtZSBpbnN0YW5jZW9mIFRyYW5zaXRpb24pIHtcbiAgICBpZCA9IG5hbWUuX2lkLCBuYW1lID0gbmFtZS5fbmFtZTtcbiAgfSBlbHNlIHtcbiAgICBpZCA9IG5ld0lkKCksICh0aW1pbmcgPSBkZWZhdWx0VGltaW5nKS50aW1lID0gbm93KCksIG5hbWUgPSBuYW1lID09IG51bGwgPyBudWxsIDogbmFtZSArIFwiXCI7XG4gIH1cblxuICBmb3IgKHZhciBncm91cHMgPSB0aGlzLl9ncm91cHMsIG0gPSBncm91cHMubGVuZ3RoLCBqID0gMDsgaiA8IG07ICsraikge1xuICAgIGZvciAodmFyIGdyb3VwID0gZ3JvdXBzW2pdLCBuID0gZ3JvdXAubGVuZ3RoLCBub2RlLCBpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgaWYgKG5vZGUgPSBncm91cFtpXSkge1xuICAgICAgICBzY2hlZHVsZShub2RlLCBuYW1lLCBpZCwgaSwgZ3JvdXAsIHRpbWluZyB8fCBpbmhlcml0KG5vZGUsIGlkKSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG5ldyBUcmFuc2l0aW9uKGdyb3VwcywgdGhpcy5fcGFyZW50cywgbmFtZSwgaWQpO1xufVxuIiwiaW1wb3J0IHtzZWxlY3Rpb259IGZyb20gXCJkMy1zZWxlY3Rpb25cIjtcbmltcG9ydCBzZWxlY3Rpb25faW50ZXJydXB0IGZyb20gXCIuL2ludGVycnVwdC5qc1wiO1xuaW1wb3J0IHNlbGVjdGlvbl90cmFuc2l0aW9uIGZyb20gXCIuL3RyYW5zaXRpb24uanNcIjtcblxuc2VsZWN0aW9uLnByb3RvdHlwZS5pbnRlcnJ1cHQgPSBzZWxlY3Rpb25faW50ZXJydXB0O1xuc2VsZWN0aW9uLnByb3RvdHlwZS50cmFuc2l0aW9uID0gc2VsZWN0aW9uX3RyYW5zaXRpb247XG4iLCJleHBvcnQgZnVuY3Rpb24gVHJhbnNmb3JtKGssIHgsIHkpIHtcbiAgdGhpcy5rID0gaztcbiAgdGhpcy54ID0geDtcbiAgdGhpcy55ID0geTtcbn1cblxuVHJhbnNmb3JtLnByb3RvdHlwZSA9IHtcbiAgY29uc3RydWN0b3I6IFRyYW5zZm9ybSxcbiAgc2NhbGU6IGZ1bmN0aW9uKGspIHtcbiAgICByZXR1cm4gayA9PT0gMSA/IHRoaXMgOiBuZXcgVHJhbnNmb3JtKHRoaXMuayAqIGssIHRoaXMueCwgdGhpcy55KTtcbiAgfSxcbiAgdHJhbnNsYXRlOiBmdW5jdGlvbih4LCB5KSB7XG4gICAgcmV0dXJuIHggPT09IDAgJiB5ID09PSAwID8gdGhpcyA6IG5ldyBUcmFuc2Zvcm0odGhpcy5rLCB0aGlzLnggKyB0aGlzLmsgKiB4LCB0aGlzLnkgKyB0aGlzLmsgKiB5KTtcbiAgfSxcbiAgYXBwbHk6IGZ1bmN0aW9uKHBvaW50KSB7XG4gICAgcmV0dXJuIFtwb2ludFswXSAqIHRoaXMuayArIHRoaXMueCwgcG9pbnRbMV0gKiB0aGlzLmsgKyB0aGlzLnldO1xuICB9LFxuICBhcHBseVg6IGZ1bmN0aW9uKHgpIHtcbiAgICByZXR1cm4geCAqIHRoaXMuayArIHRoaXMueDtcbiAgfSxcbiAgYXBwbHlZOiBmdW5jdGlvbih5KSB7XG4gICAgcmV0dXJuIHkgKiB0aGlzLmsgKyB0aGlzLnk7XG4gIH0sXG4gIGludmVydDogZnVuY3Rpb24obG9jYXRpb24pIHtcbiAgICByZXR1cm4gWyhsb2NhdGlvblswXSAtIHRoaXMueCkgLyB0aGlzLmssIChsb2NhdGlvblsxXSAtIHRoaXMueSkgLyB0aGlzLmtdO1xuICB9LFxuICBpbnZlcnRYOiBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuICh4IC0gdGhpcy54KSAvIHRoaXMuaztcbiAgfSxcbiAgaW52ZXJ0WTogZnVuY3Rpb24oeSkge1xuICAgIHJldHVybiAoeSAtIHRoaXMueSkgLyB0aGlzLms7XG4gIH0sXG4gIHJlc2NhbGVYOiBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIHguY29weSgpLmRvbWFpbih4LnJhbmdlKCkubWFwKHRoaXMuaW52ZXJ0WCwgdGhpcykubWFwKHguaW52ZXJ0LCB4KSk7XG4gIH0sXG4gIHJlc2NhbGVZOiBmdW5jdGlvbih5KSB7XG4gICAgcmV0dXJuIHkuY29weSgpLmRvbWFpbih5LnJhbmdlKCkubWFwKHRoaXMuaW52ZXJ0WSwgdGhpcykubWFwKHkuaW52ZXJ0LCB5KSk7XG4gIH0sXG4gIHRvU3RyaW5nOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gXCJ0cmFuc2xhdGUoXCIgKyB0aGlzLnggKyBcIixcIiArIHRoaXMueSArIFwiKSBzY2FsZShcIiArIHRoaXMuayArIFwiKVwiO1xuICB9XG59O1xuXG5leHBvcnQgdmFyIGlkZW50aXR5ID0gbmV3IFRyYW5zZm9ybSgxLCAwLCAwKTtcblxudHJhbnNmb3JtLnByb3RvdHlwZSA9IFRyYW5zZm9ybS5wcm90b3R5cGU7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHRyYW5zZm9ybShub2RlKSB7XG4gIHdoaWxlICghbm9kZS5fX3pvb20pIGlmICghKG5vZGUgPSBub2RlLnBhcmVudE5vZGUpKSByZXR1cm4gaWRlbnRpdHk7XG4gIHJldHVybiBub2RlLl9fem9vbTtcbn1cbiIsImV4cG9ydCBjb25zdCBzdmducyA9IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIjtcblxuZXhwb3J0IGNvbnN0IHF1ZXJ5U2VsZWN0b3IgPSA8VCBleHRlbmRzIEVsZW1lbnQ+KFxuICBzZWxlY3Rvcjogc3RyaW5nLFxuICB0eXBlPzogbmV3ICgpID0+IFRcbik6IFQgPT4ge1xuICBjb25zdCBlbHQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yKTtcbiAgaWYgKGVsdCA9PT0gbnVsbCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIHNlbGVjdG9yIFwiICsgc2VsZWN0b3IpO1xuICB9XG4gIGlmICh0eXBlICE9PSB1bmRlZmluZWQgJiYgIShlbHQgaW5zdGFuY2VvZiB0eXBlKSkge1xuICAgIHRocm93IG5ldyBFcnJvcihgU2VsZWN0b3IgJHtzZWxlY3Rvcn0gbm90IG9mIHR5cGUgJHt0eXBlfWApO1xuICB9XG4gIHJldHVybiBlbHQgYXMgVDtcbn07XG4iLCJpbXBvcnQgeyBxdWVyeVNlbGVjdG9yIH0gZnJvbSBcIi4uL21pc2NcIjtcbmltcG9ydCB7IFNWR1Rvb2wgfSBmcm9tIFwiLi4vU1ZHVG9vbFwiO1xuXG5leHBvcnQgY29uc3QgZml0dHMgPSAodDogU1ZHVG9vbCkgPT4ge1xuICBjb25zdCBiaWdUYXJnZXQxID0gcXVlcnlTZWxlY3RvcihcInN2Zy5maXR0cyBnLmJpZy10YXJnZXQxXCIsIFNWR0dFbGVtZW50KTtcbiAgdC5jcmVhdGVDaXJjbGUoYmlnVGFyZ2V0MSwgNDAsIDUwLCAzNSk7XG4gIHQuY3JlYXRlQ2lyY2xlKGJpZ1RhcmdldDEsIDQwLCA1MCwgMjUpO1xuICB0LmNyZWF0ZUNpcmNsZShiaWdUYXJnZXQxLCA0MCwgNTAsIDE1KTtcbiAgdC5jcmVhdGVDaXJjbGUoYmlnVGFyZ2V0MSwgNDAsIDUwLCA1KTtcbiAgY29uc3QgYmlnVGFyZ2V0MiA9IHF1ZXJ5U2VsZWN0b3IoXCJzdmcuZml0dHMgZy5iaWctdGFyZ2V0MlwiLCBTVkdHRWxlbWVudCk7XG4gIHQuY3JlYXRlQ2lyY2xlKGJpZ1RhcmdldDIsIDQwLCA1MCwgMzUpO1xuICB0LmNyZWF0ZUNpcmNsZShiaWdUYXJnZXQyLCA0MCwgNTAsIDI1KTtcbiAgdC5jcmVhdGVDaXJjbGUoYmlnVGFyZ2V0MiwgNDAsIDUwLCAxNSk7XG4gIHQuY3JlYXRlQ2lyY2xlKGJpZ1RhcmdldDIsIDQwLCA1MCwgNSk7XG4gIGNvbnN0IHNtYWxsVGFyZ2V0ID0gcXVlcnlTZWxlY3RvcihcInN2Zy5maXR0cyBnLnNtYWxsLXRhcmdldFwiLCBTVkdHRWxlbWVudCk7XG4gIHQuY3JlYXRlQ2lyY2xlKHNtYWxsVGFyZ2V0LCA0MCwgNTAsIDUpO1xufTtcbiIsImltcG9ydCB7IHF1ZXJ5U2VsZWN0b3IgfSBmcm9tIFwiLi4vbWlzY1wiO1xuaW1wb3J0IHsgU1ZHVG9vbCB9IGZyb20gXCIuLi9TVkdUb29sXCI7XG5cbmV4cG9ydCBjb25zdCBwdXJwb3NlID0gKHQ6IFNWR1Rvb2wpID0+IHtcbiAgY29uc3QgYmlnVGFyZ2V0MSA9IHF1ZXJ5U2VsZWN0b3IoXCJzdmcucHVycG9zZSBnLnRhcmdldFwiLCBTVkdHRWxlbWVudCk7XG4gIHQuY3JlYXRlQ2lyY2xlKGJpZ1RhcmdldDEsIDE1MCwgNTAsIDQwKTtcbiAgdC5jcmVhdGVDaXJjbGUoYmlnVGFyZ2V0MSwgMTUwLCA1MCwgMzApO1xuICB0LmNyZWF0ZUNpcmNsZShiaWdUYXJnZXQxLCAxNTAsIDUwLCAyMCk7XG4gIHQuY3JlYXRlQ2lyY2xlKGJpZ1RhcmdldDEsIDE1MCwgNTAsIDEwKTtcbiAgdC5jcmVhdGVDaXJjbGUoYmlnVGFyZ2V0MSwgMTUwLCA1MCwgMSk7XG59O1xuIiwiaW1wb3J0IHsgcXVlcnlTZWxlY3RvciB9IGZyb20gXCIuLi9taXNjXCI7XG5pbXBvcnQgeyBTVkdUb29sIH0gZnJvbSBcIi4uL1NWR1Rvb2xcIjtcblxuZXhwb3J0IGNvbnN0IGhpY2sgPSAodDogU1ZHVG9vbCkgPT4ge1xuICBjb25zdCBnMSA9IHF1ZXJ5U2VsZWN0b3IoXCJzdmcuaGljayBnLmNob2ljZS0wMVwiLCBTVkdHRWxlbWVudCk7XG4gIHQuY3JlYXRlRm9ybShcbiAgICBnMSxcbiAgICBcInBvbHlnb25cIixcbiAgICB7IHBvaW50czogXCIwLDAgMCwwIDAsMCAwLDBcIiB9LFxuICAgIHsgcG9pbnRzOiBcIjAsMCAwLDQwIDQwLDQwXCIgfSxcbiAgICB7XG4gICAgICBkdXJhdGlvbjogMzAwLFxuICAgICAgZGVsYXk6IHQuZ2V0RGVsYXkoKSxcbiAgICB9XG4gICk7XG4gIGNvbnN0IGcyID0gcXVlcnlTZWxlY3RvcihcInN2Zy5oaWNrIGcuY2hvaWNlLTAyXCIsIFNWR0dFbGVtZW50KTtcbiAgdC5jcmVhdGVGb3JtKFxuICAgIGcyLFxuICAgIFwicG9seWdvblwiLFxuICAgIHsgcG9pbnRzOiBcIjAsMCAwLDAgMCwwIDAsMFwiIH0sXG4gICAgeyBwb2ludHM6IFwiMCwwIDAsNDAgNDAsNDAgNDAsMFwiIH0sXG4gICAge1xuICAgICAgZHVyYXRpb246IDMwMCxcbiAgICAgIGRlbGF5OiB0LmdldERlbGF5KCksXG4gICAgfVxuICApO1xuICBjb25zdCBnMyA9IHF1ZXJ5U2VsZWN0b3IoXCJzdmcuaGljayBnLmNob2ljZS0wM1wiLCBTVkdHRWxlbWVudCk7XG4gIHQuY3JlYXRlRm9ybShcbiAgICBnMyxcbiAgICBcInBvbHlnb25cIixcbiAgICB7IHBvaW50czogXCIwLDAgMCwwIDAsMCAwLDBcIiB9LFxuICAgIHsgcG9pbnRzOiBcIjAsNDAgNDAsNDAgNDAsMFwiIH0sXG4gICAge1xuICAgICAgZHVyYXRpb246IDMwMCxcbiAgICAgIGRlbGF5OiB0LmdldERlbGF5KCksXG4gICAgfVxuICApO1xuICBjb25zdCBnNCA9IHF1ZXJ5U2VsZWN0b3IoXCJzdmcuaGljayBnLmNob2ljZS0wNFwiLCBTVkdHRWxlbWVudCk7XG4gIHQuY3JlYXRlRm9ybShcbiAgICBnNCxcbiAgICBcInBvbHlnb25cIixcbiAgICB7IHBvaW50czogXCIwLDAgMCwwIDAsMCAwLDBcIiB9LFxuICAgIHsgcG9pbnRzOiBcIjAsMCAyMCw0MCA0MCwwXCIgfSxcbiAgICB7XG4gICAgICBkdXJhdGlvbjogMzAwLFxuICAgICAgZGVsYXk6IHQuZ2V0RGVsYXkoKSxcbiAgICB9XG4gICk7XG4gIGNvbnN0IGc1ID0gcXVlcnlTZWxlY3RvcihcInN2Zy5oaWNrIGcuY2hvaWNlLTA1XCIsIFNWR0dFbGVtZW50KTtcbiAgdC5jcmVhdGVGb3JtKFxuICAgIGc1LFxuICAgIFwicG9seWdvblwiLFxuICAgIHsgcG9pbnRzOiBcIjAsMCAwLDAgMCwwIDAsMFwiIH0sXG4gICAgeyBwb2ludHM6IFwiMCwwIDAsNDAgNDAsMjBcIiB9LFxuICAgIHtcbiAgICAgIGR1cmF0aW9uOiAzMDAsXG4gICAgICBkZWxheTogdC5nZXREZWxheSgpLFxuICAgIH1cbiAgKTtcbiAgY29uc3QgZzYgPSBxdWVyeVNlbGVjdG9yKFwic3ZnLmhpY2sgZy5jaG9pY2UtMDZcIiwgU1ZHR0VsZW1lbnQpO1xuICB0LmNyZWF0ZUZvcm0oXG4gICAgZzYsXG4gICAgXCJwb2x5Z29uXCIsXG4gICAgeyBwb2ludHM6IFwiMCwwIDAsMCAwLDAgMCwwXCIgfSxcbiAgICB7IHBvaW50czogXCIwLDQwIDQwLDQwIDIwLDBcIiB9LFxuICAgIHtcbiAgICAgIGR1cmF0aW9uOiAzMDAsXG4gICAgICBkZWxheTogdC5nZXREZWxheSgpLFxuICAgIH1cbiAgKTtcbn07XG4iLCJpbXBvcnQgeyBxdWVyeVNlbGVjdG9yIH0gZnJvbSBcIi4uL21pc2NcIjtcbmltcG9ydCB7IFNWR1Rvb2wgfSBmcm9tIFwiLi4vU1ZHVG9vbFwiO1xuXG5leHBvcnQgY29uc3QgamFrb2IgPSAodDogU1ZHVG9vbCkgPT4ge1xuICBjb25zdCBhcHAxID0gcXVlcnlTZWxlY3RvcihcInN2Zy5qYWtvYiBnLmFwcC0xXCIsIFNWR0dFbGVtZW50KTtcbiAgdC5jcmVhdGVDaXJjbGUoYXBwMSwgNDAsIDUwLCAzNSk7XG4gIGNvbnN0IGFwcDIgPSBxdWVyeVNlbGVjdG9yKFwic3ZnLmpha29iIGcuYXBwLTJcIiwgU1ZHR0VsZW1lbnQpO1xuICB0LmNyZWF0ZUNpcmNsZShhcHAyLCA0MCwgNTAsIDM1KTtcbiAgY29uc3QgeW91ckFwcCA9IHF1ZXJ5U2VsZWN0b3IoXCJzdmcuamFrb2IgZy55b3VyLWFwcFwiLCBTVkdHRWxlbWVudCk7XG4gIHQuY3JlYXRlQ2lyY2xlKHlvdXJBcHAsIDQwLCA1MCwgMzUpO1xufTtcbiIsImltcG9ydCB7IHF1ZXJ5U2VsZWN0b3IgfSBmcm9tIFwiLi4vbWlzY1wiO1xuaW1wb3J0IHsgU1ZHVG9vbCB9IGZyb20gXCIuLi9TVkdUb29sXCI7XG5cbmV4cG9ydCBjb25zdCBncmFkaWVudCA9ICh0OiBTVkdUb29sKSA9PiB7XG4gIGNvbnN0IGcgPSBxdWVyeVNlbGVjdG9yKFwic3ZnLmdyYWRpZW50IGdcIiwgU1ZHR0VsZW1lbnQpO1xuICB0LmNyZWF0ZVJlY3QoZywgNSwgMzAsIDQwLCA0MCwgMSk7XG4gIHQuY3JlYXRlUmVjdChnLCA1MCwgMzAsIDQwLCA0MCwgMik7XG4gIHQuY3JlYXRlUmVjdChnLCA5NSwgMzAsIDQwLCA0MCwgMyk7XG4gIHQuY3JlYXRlUmVjdChnLCAxNDAsIDMwLCA0MCwgNDAsIDQpO1xuICB0LmNyZWF0ZVJlY3QoZywgMTg1LCAzMCwgNDAsIDQwLCA1KTtcbiAgdC5jcmVhdGVSZWN0KGcsIDIzMCwgMzAsIDQwLCA0MCwgNik7XG59O1xuIiwiaW1wb3J0IHsgcXVlcnlTZWxlY3RvciB9IGZyb20gXCIuLi9taXNjXCI7XG5pbXBvcnQgeyBTVkdUb29sIH0gZnJvbSBcIi4uL1NWR1Rvb2xcIjtcblxuZXhwb3J0IGNvbnN0IGdlc3RhbHQgPSAodDogU1ZHVG9vbCkgPT4ge1xuICBjb25zdCBnID0gcXVlcnlTZWxlY3RvcihcInN2Zy5nZXN0YWx0IGdcIiwgU1ZHR0VsZW1lbnQpO1xuICBmb3IgKGxldCB4ID0gMDsgeCA8IDU7IHgrKykge1xuICAgIGZvciAobGV0IHkgPSAwOyB5IDwgNDsgeSsrKSB7XG4gICAgICB0LmNyZWF0ZUNpcmNsZShnLCB4ICogMjAgKyAxMDAsIHkgKiAyMCArIDIwLCA1LCB7XG4gICAgICAgIGNsYXNzOiBcImZ1bGxcIixcbiAgICAgICAgZGVsYXk6IDAsXG4gICAgICAgIGR1cmF0aW9uOiAzMDAsXG4gICAgICB9KTtcbiAgICB9XG4gIH1cbn07XG4iLCJpbXBvcnQgeyBxdWVyeVNlbGVjdG9yIH0gZnJvbSBcIi4uL21pc2NcIjtcbmltcG9ydCB7IFNWR1Rvb2wgfSBmcm9tIFwiLi4vU1ZHVG9vbFwiO1xuXG5leHBvcnQgY29uc3QgcHJveGltaXR5ID0gKHQ6IFNWR1Rvb2wpID0+IHtcbiAgY29uc3QgZyA9IHF1ZXJ5U2VsZWN0b3IoXCJzdmcucHJveGltaXR5IGdcIiwgU1ZHR0VsZW1lbnQpO1xuICBmb3IgKGxldCB4ID0gMDsgeCA8IDU7IHgrKykge1xuICAgIGZvciAobGV0IHkgPSAwOyB5IDwgNDsgeSsrKSB7XG4gICAgICBjb25zdCBvZmZzZXQgPSB4ID4gMSAmJiB5IDwgMiA/IDggOiAwO1xuICAgICAgdC5jcmVhdGVDaXJjbGUoZywgeCAqIDIwICsgMTAwICsgb2Zmc2V0LCB5ICogMjAgKyAyMCAtIG9mZnNldCwgNSwge1xuICAgICAgICBjbGFzczogXCJmdWxsXCIsXG4gICAgICAgIGRlbGF5OiAwLFxuICAgICAgICBkdXJhdGlvbjogMzAwLFxuICAgICAgfSk7XG4gICAgfVxuICB9XG59O1xuIiwiaW1wb3J0IHsgcXVlcnlTZWxlY3RvciB9IGZyb20gXCIuLi9taXNjXCI7XG5pbXBvcnQgeyBTVkdUb29sIH0gZnJvbSBcIi4uL1NWR1Rvb2xcIjtcblxuZXhwb3J0IGNvbnN0IHNpbWlsYXJpdHkgPSAodDogU1ZHVG9vbCkgPT4ge1xuICBjb25zdCBnID0gcXVlcnlTZWxlY3RvcihcInN2Zy5zaW1pbGFyaXR5IGdcIiwgU1ZHR0VsZW1lbnQpO1xuICBmb3IgKGxldCB4ID0gMDsgeCA8IDU7IHgrKykge1xuICAgIGZvciAobGV0IHkgPSAwOyB5IDwgNDsgeSsrKSB7XG4gICAgICBjb25zdCBteUNsYXNzID0geCA+IDEgJiYgeSA8IDIgPyBcInh4eFwiIDogXCJmdWxsXCI7XG4gICAgICB0LmNyZWF0ZUNpcmNsZShnLCB4ICogMjAgKyAxMDAsIHkgKiAyMCArIDIwLCA1LCB7XG4gICAgICAgIGNsYXNzOiBteUNsYXNzLFxuICAgICAgICBkZWxheTogMCxcbiAgICAgICAgZHVyYXRpb246IDMwMCxcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxufTtcbiIsImltcG9ydCB7IHF1ZXJ5U2VsZWN0b3IgfSBmcm9tIFwiLi4vbWlzY1wiO1xuaW1wb3J0IHsgU1ZHVG9vbCB9IGZyb20gXCIuLi9TVkdUb29sXCI7XG5cbmV4cG9ydCBjb25zdCBjb21tb25SZWdpb24gPSAodDogU1ZHVG9vbCkgPT4ge1xuICBjb25zdCBnID0gcXVlcnlTZWxlY3RvcihcInN2Zy5jb21tb25SZWdpb24gZ1wiLCBTVkdHRWxlbWVudCk7XG4gIHQuY3JlYXRlUmVjdChnLCAxMDAgKyAzMiwgMTIsIDU3LCAzNywgMik7XG4gIGZvciAobGV0IHggPSAwOyB4IDwgNTsgeCsrKSB7XG4gICAgZm9yIChsZXQgeSA9IDA7IHkgPCA0OyB5KyspIHtcbiAgICAgIHQuY3JlYXRlQ2lyY2xlKGcsIHggKiAyMCArIDEwMCwgeSAqIDIwICsgMjAsIDUsIHtcbiAgICAgICAgY2xhc3M6IFwiZnVsbFwiLFxuICAgICAgICBkZWxheTogMCxcbiAgICAgICAgZHVyYXRpb246IDMwMCxcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxufTtcbiIsImltcG9ydCB7IHF1ZXJ5U2VsZWN0b3IgfSBmcm9tIFwiLi4vbWlzY1wiO1xuaW1wb3J0IHsgU1ZHVG9vbCB9IGZyb20gXCIuLi9TVkdUb29sXCI7XG5cbmV4cG9ydCBjb25zdCBzaW1wbGljaXR5ID0gKHQ6IFNWR1Rvb2wpID0+IHtcbiAgY29uc3QgZyA9IHF1ZXJ5U2VsZWN0b3IoXCJzdmcuc2ltcGxpY2l0eSBnXCIsIFNWR0dFbGVtZW50KTtcbiAgdC5jcmVhdGVSZWN0KGcsIDEwMCArIDMyLCAxMiwgNTcsIDM3LCAyKTtcbiAgdC5jcmVhdGVSZWN0KGcsIDEwMCAtIDgsIDEyLCA5NywgNzcsIDIpO1xufTtcbiIsImltcG9ydCB7IHF1ZXJ5U2VsZWN0b3IgfSBmcm9tIFwiLi4vbWlzY1wiO1xuaW1wb3J0IHsgU1ZHVG9vbCB9IGZyb20gXCIuLi9TVkdUb29sXCI7XG5cbmV4cG9ydCBjb25zdCBtaWxsZXIgPSAodDogU1ZHVG9vbCkgPT4ge1xuICBjb25zdCBnID0gcXVlcnlTZWxlY3RvcihcInN2Zy5taWxsZXIgZ1wiLCBTVkdHRWxlbWVudCk7XG4gIHQuY3JlYXRlQ2lyY2xlKGcsIDEzMCwgMjAsIDUsIHsgY2xhc3M6IFwiZnVsbFwiIH0pO1xuICB0LmNyZWF0ZUNpcmNsZShnLCAxNTAsIDIwLCA1LCB7IGNsYXNzOiBcImZ1bGxcIiB9KTtcbiAgdC5jcmVhdGVDaXJjbGUoZywgMTcwLCAyMCwgNSwgeyBjbGFzczogXCJmdWxsXCIgfSk7XG4gIHQuY3JlYXRlQ2lyY2xlKGcsIDE3MCwgNDAsIDUsIHsgY2xhc3M6IFwiZnVsbFwiIH0pO1xuICB0LmNyZWF0ZUNpcmNsZShnLCAxNzAsIDYwLCA1LCB7IGNsYXNzOiBcImZ1bGxcIiB9KTtcbiAgdC5jcmVhdGVDaXJjbGUoZywgMTcwLCA4MCwgNSwgeyBjbGFzczogXCJmdWxsXCIgfSk7XG59O1xuIiwiaW1wb3J0IHsgcXVlcnlTZWxlY3RvciB9IGZyb20gXCIuLi9taXNjXCI7XG5pbXBvcnQgeyBTVkdUb29sIH0gZnJvbSBcIi4uL1NWR1Rvb2xcIjtcblxuZXhwb3J0IGNvbnN0IHRlc2xlciA9ICh0OiBTVkdUb29sKSA9PiB7XG4gIGNvbnN0IGcgPSBxdWVyeVNlbGVjdG9yKFwic3ZnLnRlc2xlciBnXCIsIFNWR0dFbGVtZW50KTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCA2OyBpKyspIHtcbiAgICB0LmNyZWF0ZUNpcmNsZShnLCAxMDAgKyBpICogMjAsIDIwLCA1LCB7XG4gICAgICBjbGFzczogaSA+PSAzID8gXCJlbXB0eVwiIDogXCJmdWxsXCIsXG4gICAgfSk7XG4gIH1cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCA2OyBpKyspIHtcbiAgICB0LmNyZWF0ZUNpcmNsZShnLCAxMDAgKyBpICogMjAsIDUwLCA1LCB7IGNsYXNzOiBpICUgMiA/IFwiZW1wdHlcIiA6IFwiZnVsbFwiIH0pO1xuICB9XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgNjsgaSsrKSB7XG4gICAgdC5jcmVhdGVDaXJjbGUoZywgMTAwICsgaSAqIDIwLCA4MCwgNSwgeyBjbGFzczogaSA8IDMgPyBcImVtcHR5XCIgOiBcImZ1bGxcIiB9KTtcbiAgfVxufTtcbiIsImltcG9ydCB7IHF1ZXJ5U2VsZWN0b3IgfSBmcm9tIFwiLi4vbWlzY1wiO1xuaW1wb3J0IHsgU1ZHVG9vbCB9IGZyb20gXCIuLi9TVkdUb29sXCI7XG5cbmV4cG9ydCBjb25zdCBwb3N0ZWwgPSAodDogU1ZHVG9vbCkgPT4ge1xuICBjb25zdCBnID0gcXVlcnlTZWxlY3RvcihcInN2Zy5wb3N0ZWwgZ1wiLCBTVkdHRWxlbWVudCk7XG4gIHQuY3JlYXRlQ2lyY2xlKGcsIDgwLCA1MCwgMzUsIHsgY2xhc3M6IFwiZnVsbFwiIH0pO1xuICB0LmNyZWF0ZUNpcmNsZShnLCAyMjAsIDUwLCAzNSwgeyBjbGFzczogXCJlbXB0eVwiIH0pO1xufTtcbiIsImltcG9ydCB7IHF1ZXJ5U2VsZWN0b3IgfSBmcm9tIFwiLi4vbWlzY1wiO1xuaW1wb3J0IHsgU1ZHVG9vbCB9IGZyb20gXCIuLi9TVkdUb29sXCI7XG5cbmV4cG9ydCBjb25zdCB6ZWlnYXJuaWsgPSAodDogU1ZHVG9vbCkgPT4ge1xuICBjb25zdCBnID0gcXVlcnlTZWxlY3RvcihcInN2Zy56ZWlnYXJuaWsgZ1wiLCBTVkdHRWxlbWVudCk7XG4gIGZvciAobGV0IGkgPSAxOyBpIDwgNTsgaSsrKSB7XG4gICAgdC5jcmVhdGVSZWN0KGcsIDUwLCBpICogMTUsIDIwMCwgMTAsIDYsIFwiZW1wdHlyZWN0XCIpO1xuICB9XG4gIHQuY3JlYXRlUmVjdChnLCA1MCwgNSAqIDE1LCAxNTAsIDEwLCA2LCBcImZ1bGxyZWN0XCIpO1xufTtcbiIsImltcG9ydCB7IHF1ZXJ5U2VsZWN0b3IgfSBmcm9tIFwiLi4vbWlzY1wiO1xuaW1wb3J0IHsgU1ZHVG9vbCB9IGZyb20gXCIuLi9TVkdUb29sXCI7XG5cbmV4cG9ydCBjb25zdCB2b25SZXN0b3JmZiA9ICh0OiBTVkdUb29sKSA9PiB7XG4gIGNvbnN0IGcgPSBxdWVyeVNlbGVjdG9yKFwic3ZnLnZvblJlc3RvcmZmIGdcIiwgU1ZHR0VsZW1lbnQpO1xuICBmb3IgKGxldCB4ID0gMDsgeCA8IDU7IHgrKykge1xuICAgIGZvciAobGV0IHkgPSAwOyB5IDwgNDsgeSsrKSB7XG4gICAgICBjb25zdCBteUNsYXNzID0geCA9PT0gMiAmJiB5ID09PSAyID8gXCJ4eHhcIiA6IFwiZnVsbFwiO1xuICAgICAgdC5jcmVhdGVDaXJjbGUoZywgeCAqIDIwICsgMTAwLCB5ICogMjAgKyAyMCwgNSwge1xuICAgICAgICBjbGFzczogbXlDbGFzcyxcbiAgICAgICAgZGVsYXk6IDAsXG4gICAgICAgIGR1cmF0aW9uOiAzMDAsXG4gICAgICB9KTtcbiAgICB9XG4gIH1cbn07XG4iLCJpbXBvcnQgeyBxdWVyeVNlbGVjdG9yIH0gZnJvbSBcIi4uL21pc2NcIjtcbmltcG9ydCB7IFNWR1Rvb2wgfSBmcm9tIFwiLi4vU1ZHVG9vbFwiO1xuXG5jb25zdCBwb2ludHMgPVxuICBcIjIwLDEwLCAyMCwyMCAxMCwzMCwgMjAsNDAgMjAsNTAsIDEwLDUwIDEwLDYwIDIwLDYwIDIwLDcwIDIwLDgwIDEwLDkwXCI7XG5cbmV4cG9ydCBjb25zdCBzeW1ldHJpZSA9ICh0OiBTVkdUb29sKSA9PiB7XG4gIGNvbnN0IGcgPSBxdWVyeVNlbGVjdG9yKFwiLnN5bWV0cmllIHN2ZyBnXCIsIFNWR0dFbGVtZW50KTtcbiAgZy5pbm5lckhUTUwgPSBgXG48ZyBjbGFzcz1cInAxXCIgdHJhbnNmb3JtPVwidHJhbnNsYXRlKDYwKVwiPjwvZz5cbjxnIGNsYXNzPVwicDJcIiB0cmFuc2Zvcm09XCJ0cmFuc2xhdGUoODApXCI+PC9nPlxuPGcgY2xhc3M9XCJwM1wiIHRyYW5zZm9ybT1cInRyYW5zbGF0ZSgxODApXCI+PC9nPlxuPGcgY2xhc3M9XCJwNFwiIHRyYW5zZm9ybT1cInRyYW5zbGF0ZSgyMzApIHNjYWxlKC0xLCAxKVwiPjwvZz5cbmA7XG5cbiAgY29uc3QgZzEgPSBxdWVyeVNlbGVjdG9yKFwiLnN5bWV0cmllIHN2ZyBnLnAxXCIsIFNWR0dFbGVtZW50KTtcbiAgdC5jcmVhdGVQb2x5bGluZShnMSwgcG9pbnRzLCBcImVtcHR5XCIpO1xuICBjb25zdCBnMiA9IHF1ZXJ5U2VsZWN0b3IoXCIuc3ltZXRyaWUgc3ZnIGcucDJcIiwgU1ZHR0VsZW1lbnQpO1xuICB0LmNyZWF0ZVBvbHlsaW5lKGcyLCBwb2ludHMsIFwiZW1wdHlcIik7XG5cbiAgY29uc3QgZzMgPSBxdWVyeVNlbGVjdG9yKFwiLnN5bWV0cmllIHN2ZyBnLnAzXCIsIFNWR0dFbGVtZW50KTtcbiAgdC5jcmVhdGVQb2x5bGluZShnMywgcG9pbnRzLCBcImVtcHR5XCIpO1xuICBjb25zdCBnNCA9IHF1ZXJ5U2VsZWN0b3IoXCIuc3ltZXRyaWUgc3ZnIGcucDRcIiwgU1ZHR0VsZW1lbnQpO1xuICB0LmNyZWF0ZVBvbHlsaW5lKGc0LCBwb2ludHMsIFwiZW1wdHlcIik7XG59O1xuIiwiaW1wb3J0IHsgU1ZHVG9vbCB9IGZyb20gXCIuL1NWR1Rvb2xcIjtcbmltcG9ydCB7IGZpdHRzIH0gZnJvbSBcIi4vc3Zncy9maXR0c1wiO1xuaW1wb3J0IHsgcHVycG9zZSB9IGZyb20gXCIuL3N2Z3MvcHVycG9zZVwiO1xuaW1wb3J0IHsgaGljayB9IGZyb20gXCIuL3N2Z3MvaGlja1wiO1xuaW1wb3J0IHsgamFrb2IgfSBmcm9tIFwiLi9zdmdzL2pha29iXCI7XG5pbXBvcnQgeyBncmFkaWVudCB9IGZyb20gXCIuL3N2Z3MvZ3JhZGllbnRcIjtcbmltcG9ydCB7IGdlc3RhbHQgfSBmcm9tIFwiLi9zdmdzL2dlc3RhbHRcIjtcbmltcG9ydCB7IHByb3hpbWl0eSB9IGZyb20gXCIuL3N2Z3MvcHJveGltaXR5XCI7XG5pbXBvcnQgeyBzaW1pbGFyaXR5IH0gZnJvbSBcIi4vc3Zncy9zaW1pbGFyaXR5XCI7XG5pbXBvcnQgeyBjb21tb25SZWdpb24gfSBmcm9tIFwiLi9zdmdzL2NvbW1vblJlZ2lvblwiO1xuaW1wb3J0IHsgc2ltcGxpY2l0eSB9IGZyb20gXCIuL3N2Z3Mvc2ltcGxpY2l0eVwiO1xuaW1wb3J0IHsgbWlsbGVyIH0gZnJvbSBcIi4vc3Zncy9taWxsZXJcIjtcbmltcG9ydCB7IHRlc2xlciB9IGZyb20gXCIuL3N2Z3MvdGVzbGVyXCI7XG5pbXBvcnQgeyBwb3N0ZWwgfSBmcm9tIFwiLi9zdmdzL3Bvc3RlbFwiO1xuaW1wb3J0IHsgemVpZ2FybmlrIH0gZnJvbSBcIi4vc3Zncy96ZWlnYXJuaWtcIjtcbmltcG9ydCB7IHZvblJlc3RvcmZmIH0gZnJvbSBcIi4vc3Zncy92b25SZXN0b3JmZlwiO1xuaW1wb3J0IHsgc3ltZXRyaWUgfSBmcm9tIFwiLi9zdmdzL3N5bWV0cmllXCI7XG5pbXBvcnQgeyBzZXJpYWxQb3NpdGlvbiB9IGZyb20gXCIuL3N2Z3Mvc2VyaWFsUG9zaXRpb25cIjtcbmltcG9ydCB7IHBhcmV0byB9IGZyb20gXCIuL3N2Z3MvcGFyZXRvXCI7XG5pbXBvcnQgeyBwZWFrRW5kIH0gZnJvbSBcIi4vc3Zncy9wZWFrRW5kXCI7XG5cbmV4cG9ydCBjb25zdCBjb25maWc6IHsgW2tleTogc3RyaW5nXTogKCh0OiBTVkdUb29sKSA9PiB2b2lkKVtdIH0gPSB7XG4gIGZpdHRzOiBbZml0dHNdLFxuICBwdXJwb3NlOiBbcHVycG9zZV0sXG4gIGhpY2s6IFtoaWNrXSxcbiAgamFrb2I6IFtqYWtvYl0sXG4gIGdyYWRpZW50OiBbZ3JhZGllbnRdLFxuICBnZXN0YWx0OiBbZ2VzdGFsdF0sXG4gIHByb3hpbWl0eTogW3Byb3hpbWl0eV0sXG4gIHNpbWlsYXJpdHk6IFtzaW1pbGFyaXR5XSxcbiAgY29tbW9uUmVnaW9uOiBbY29tbW9uUmVnaW9uXSxcbiAgc2ltcGxpY2l0eTogW3NpbXBsaWNpdHldLFxuICBtaWxsZXI6IFttaWxsZXJdLFxuICB0ZXNsZXI6IFt0ZXNsZXJdLFxuICBwb3N0ZWw6IFtwb3N0ZWxdLFxuICB6ZWlnYXJuaWs6IFt6ZWlnYXJuaWtdLFxuICB2b25SZXN0b3JmZjogW3ZvblJlc3RvcmZmXSxcbiAgc3ltZXRyaWU6IFtzeW1ldHJpZV0sXG4gIHNlcmlhbFBvc2l0aW9uOiBbc2VyaWFsUG9zaXRpb25dLFxuICBwYXJldG86IFtwYXJldG9dLFxuICBwZWFrRW5kOiBbcGVha0VuZF0sXG59O1xuXG5jb25zdCBzZXQgPSBuZXcgU2V0PCh0OiBTVkdUb29sKSA9PiB2b2lkPigpO1xuZm9yIChjb25zdCB2YWx1ZXMgb2YgT2JqZWN0LnZhbHVlcyhjb25maWcpKSB7XG4gIGZvciAoY29uc3QgdmFsdWUgb2YgdmFsdWVzKSB7XG4gICAgc2V0LmFkZCh2YWx1ZSk7XG4gIH1cbn1cbmV4cG9ydCBjb25zdCBhbGwgPSBbLi4uc2V0XTtcbiIsImltcG9ydCB7IHF1ZXJ5U2VsZWN0b3IgfSBmcm9tIFwiLi4vbWlzY1wiO1xuaW1wb3J0IHsgU1ZHVG9vbCB9IGZyb20gXCIuLi9TVkdUb29sXCI7XG5cbmV4cG9ydCBjb25zdCBzZXJpYWxQb3NpdGlvbiA9ICh0OiBTVkdUb29sKSA9PiB7XG4gIGNvbnN0IGcgPSBxdWVyeVNlbGVjdG9yKFwiLnNlcmlhbFBvc2l0aW9uIHN2ZyBnXCIsIFNWR0dFbGVtZW50KTtcbiAgZm9yIChsZXQgeCA9IDA7IHggPCA3OyB4KyspIHtcbiAgICBjb25zdCBjc3NDbGFzcyA9IHggPT09IDAgfHwgeCA9PT0gNiA/IFwiZnVsbFwiIDogXCJlbXB0eVwiO1xuICAgIHQuY3JlYXRlQ2lyY2xlKGcsIHggKiA0MCArIDMwLCA1MCwgMjAsIHtcbiAgICAgIGNsYXNzOiBjc3NDbGFzcyxcbiAgICAgIGRlbGF5OiAwLFxuICAgICAgZHVyYXRpb246IDMwMCxcbiAgICB9KTtcbiAgfVxufTtcbiIsImltcG9ydCB7IHF1ZXJ5U2VsZWN0b3IgfSBmcm9tIFwiLi4vbWlzY1wiO1xuaW1wb3J0IHsgU1ZHVG9vbCB9IGZyb20gXCIuLi9TVkdUb29sXCI7XG5cbmV4cG9ydCBjb25zdCBwYXJldG8gPSAodDogU1ZHVG9vbCkgPT4ge1xuICBjb25zdCBnID0gcXVlcnlTZWxlY3RvcihcIi5wYXJldG8gc3ZnIGdcIiwgU1ZHR0VsZW1lbnQpO1xuICB0LmNyZWF0ZVJlY3QoZywgNTAsIDQwLCA1MCwgMjAsIDYsIFwiZW1wdHlcIik7XG4gIHQuY3JlYXRlUmVjdChnLCAxNTAsIDEwLCAxMDAsIDgwLCA2LCBcImVtcHR5XCIpO1xufTtcbiIsImltcG9ydCB7IHF1ZXJ5U2VsZWN0b3IgfSBmcm9tIFwiLi4vbWlzY1wiO1xuaW1wb3J0IHsgU1ZHVG9vbCB9IGZyb20gXCIuLi9TVkdUb29sXCI7XG5cbmV4cG9ydCBjb25zdCBwZWFrRW5kID0gKHQ6IFNWR1Rvb2wpID0+IHtcbiAgY29uc3QgZyA9IHF1ZXJ5U2VsZWN0b3IoXCIucGVha0VuZCBzdmcgZ1wiLCBTVkdHRWxlbWVudCk7XG4gIGZvciAobGV0IHggPSAwOyB4IDwgNTsgeCsrKSB7XG4gICAgZm9yIChsZXQgeSA9IDA7IHkgPCA0OyB5KyspIHtcbiAgICAgIGNvbnN0IGNzc0NsYXNzID1cbiAgICAgICAgKHggPT09IDEgJiYgeSA9PT0gMSkgfHwgKHggPT09IDQgJiYgeSA9PT0gMykgPyBcImVtcHR5XCIgOiBcImZ1bGxcIjtcbiAgICAgIHQuY3JlYXRlQ2lyY2xlKGcsIHggKiAyMCArIDEwMCwgeSAqIDIwICsgMjAsIDUsIHtcbiAgICAgICAgY2xhc3M6IGNzc0NsYXNzLFxuICAgICAgfSk7XG4gICAgfVxuICB9XG59O1xuIiwiaW1wb3J0ICogYXMgZDMgZnJvbSBcImQzXCI7XG5pbXBvcnQgeyBUcmFuc2l0aW9uT3B0aW9ucyB9IGZyb20gXCIuL2ludGVyZmFjZXMvVHJhbnNpdGlvbk9wdGlvbnNcIjtcbmltcG9ydCB7IGNvbmZpZywgYWxsIH0gZnJvbSBcIi4vc3ZnQ29uZmlnXCI7XG5cbmV4cG9ydCBjbGFzcyBTVkdUb29sIHtcbiAgZGVsYXlDb3VudGVyID0gMDtcbiAgZGVsYXlJbmNyZW1lbnQgPSAxMDA7XG4gIHVzZVRyYW5zaXRpb24gPSBmYWxzZTtcblxuICBzdmdOYW1lOiBzdHJpbmcgfCB1bmRlZmluZWQgPSB1bmRlZmluZWQ7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuaW5pdFN2Z05hbWUoKTtcbiAgfVxuXG4gIGluaXRTdmdOYW1lKCkge1xuICAgIGNvbnN0IHV4bGF3SW1hZ2VOYW1lID0gKHdpbmRvdyBhcyBhbnkpW1widXhsYXdJbWFnZU5hbWVcIl07XG4gICAgY29uc3QgdXhsYXdDbGFzc05hbWUgPSAod2luZG93IGFzIGFueSlbXCJ1eGxhd0NsYXNzTmFtZVwiXTtcbiAgICBjb25zdCBzdmdOYW1lID1cbiAgICAgIHV4bGF3SW1hZ2VOYW1lID09PSBcImRlZmF1bHRcIiA/IHV4bGF3Q2xhc3NOYW1lIDogdXhsYXdJbWFnZU5hbWU7XG4gICAgaWYgKHN2Z05hbWUpIHtcbiAgICAgIHRoaXMuc3ZnTmFtZSA9IHN2Z05hbWU7XG4gICAgICB0aGlzLnVzZVRyYW5zaXRpb24gPSB0cnVlO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLnVzZVRyYW5zaXRpb24gPSBmYWxzZTtcbiAgfVxuXG4gIGluaXRTdmcoKSB7XG4gICAgY29uc3QgbGlzdCA9IHRoaXMuc3ZnTmFtZSA/IGNvbmZpZ1t0aGlzLnN2Z05hbWVdIDogYWxsO1xuICAgIGlmIChsaXN0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgZm9yIChjb25zdCBmIG9mIGxpc3QpIHtcbiAgICAgIGYodGhpcyk7XG4gICAgfVxuICB9XG5cbiAgZ2V0RGVsYXkoKSB7XG4gICAgdGhpcy5kZWxheUNvdW50ZXIgKz0gdGhpcy5kZWxheUluY3JlbWVudDtcbiAgICByZXR1cm4gdGhpcy5kZWxheUNvdW50ZXI7XG4gIH1cblxuICBjcmVhdGVDaXJjbGUoXG4gICAgZ3JvdXA6IFNWR0dFbGVtZW50LFxuICAgIGN4OiBudW1iZXIsXG4gICAgY3k6IG51bWJlcixcbiAgICByOiBudW1iZXIsXG4gICAgb3B0aW9ucz86IFBhcnRpYWw8VHJhbnNpdGlvbk9wdGlvbnM+XG4gICkge1xuICAgIGNvbnN0IG9wdHMgPSB7XG4gICAgICBkdXJhdGlvbjogMzAwLFxuICAgICAgZGVsYXk6IHRoaXMuZ2V0RGVsYXkoKSxcbiAgICAgIC4uLm9wdGlvbnMsXG4gICAgfTtcbiAgICByZXR1cm4gdGhpcy5jcmVhdGVGb3JtKFxuICAgICAgZ3JvdXAsXG4gICAgICBcImNpcmNsZVwiLFxuICAgICAge1xuICAgICAgICBjeCxcbiAgICAgICAgY3ksXG4gICAgICAgIHI6IDAsXG4gICAgICB9LFxuICAgICAgeyByIH0sXG4gICAgICBvcHRzXG4gICAgKTtcbiAgfVxuXG4gIGNyZWF0ZVBvbHlnb24oZ3JvdXA6IFNWR0dFbGVtZW50LCBwb2ludHM6IHN0cmluZykge1xuICAgIHJldHVybiB0aGlzLmNyZWF0ZUZvcm0oXG4gICAgICBncm91cCxcbiAgICAgIFwicG9seWdvblwiLFxuICAgICAgeyBwb2ludHM6IFwiXCIgfSxcbiAgICAgIHsgcG9pbnRzOiBwb2ludHMgfSxcbiAgICAgIHtcbiAgICAgICAgZHVyYXRpb246IDMwMCxcbiAgICAgICAgZGVsYXk6IHRoaXMuZ2V0RGVsYXkoKSxcbiAgICAgIH1cbiAgICApO1xuICB9XG5cbiAgY3JlYXRlUG9seWxpbmUoZ3JvdXA6IFNWR0dFbGVtZW50LCBwb2ludHM6IHN0cmluZywgY3NzQ2xhc3MgPSBcImZ1bGxcIikge1xuICAgIHJldHVybiB0aGlzLmNyZWF0ZUZvcm0oXG4gICAgICBncm91cCxcbiAgICAgIFwicG9seWxpbmVcIixcbiAgICAgIHsgcG9pbnRzOiBcIlwiIH0sXG4gICAgICB7IHBvaW50czogcG9pbnRzIH0sXG4gICAgICB7XG4gICAgICAgIGR1cmF0aW9uOiAzMDAsXG4gICAgICAgIGRlbGF5OiB0aGlzLmdldERlbGF5KCksXG4gICAgICAgIGNsYXNzOiBjc3NDbGFzcyxcbiAgICAgIH1cbiAgICApO1xuICB9XG5cbiAgY3JlYXRlUmVjdChcbiAgICBncm91cDogU1ZHR0VsZW1lbnQsXG4gICAgeDogbnVtYmVyLFxuICAgIHk6IG51bWJlcixcbiAgICB3aWR0aDogbnVtYmVyLFxuICAgIGhlaWdodDogbnVtYmVyLFxuICAgIGludGVuc2l0eSA9IDYsXG4gICAgY3NzQ2xhc3MgPSBcImVtcHR5XCJcbiAgKSB7XG4gICAgcmV0dXJuIHRoaXMuY3JlYXRlRm9ybShcbiAgICAgIGdyb3VwLFxuICAgICAgXCJyZWN0XCIsXG4gICAgICB7IHgsIHksIHdpZHRoLCBoZWlnaHQ6IDAsIG9wYWNpdHk6IGludGVuc2l0eSAqICgxLjAgLyA2KSB9LFxuICAgICAgeyBoZWlnaHQ6IGhlaWdodCB9LFxuICAgICAge1xuICAgICAgICBkdXJhdGlvbjogMzAwLFxuICAgICAgICBkZWxheTogdGhpcy5nZXREZWxheSgpLFxuICAgICAgICBjbGFzczogY3NzQ2xhc3MsXG4gICAgICB9XG4gICAgKTtcbiAgfVxuXG4gIGNyZWF0ZUZvcm0gPSA8VCBleHRlbmRzIHsgW2tleTogc3RyaW5nXTogbnVtYmVyIHwgc3RyaW5nIH0+KFxuICAgIGNvbnRhaW5lcjogU1ZHR0VsZW1lbnQsXG4gICAgZWx0TmFtZTogc3RyaW5nLFxuICAgIGluaXRpYWxBdHRyaWJ1dGVzOiBULFxuICAgIGZpbmFsQXR0cmlidXRlczogUGFydGlhbDxUPixcbiAgICBvcHRpb25zPzogUGFydGlhbDxUcmFuc2l0aW9uT3B0aW9ucz5cbiAgKSA9PiB7XG4gICAgY29uc3Qgb3B0czogVHJhbnNpdGlvbk9wdGlvbnMgPSB7XG4gICAgICBkdXJhdGlvbjogMjAwMCxcbiAgICAgIGRlbGF5OiAxMDAwLFxuICAgICAgY2xhc3M6IFwiXCIsXG4gICAgICAuLi5vcHRpb25zLFxuICAgIH07XG4gICAgaWYgKCF0aGlzLnVzZVRyYW5zaXRpb24pIHtcbiAgICAgIG9wdHMuZGVsYXkgPSAwO1xuICAgICAgb3B0cy5kdXJhdGlvbiA9IDA7XG4gICAgfVxuICAgIGNvbnN0IGVsdCA9IGQzLnNlbGVjdChjb250YWluZXIpLmFwcGVuZChlbHROYW1lKTtcblxuICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKGluaXRpYWxBdHRyaWJ1dGVzKSkge1xuICAgICAgZWx0LmF0dHIoa2V5LCB2YWx1ZSk7XG4gICAgfVxuICAgIGlmIChvcHRzLmNsYXNzKSB7XG4gICAgICBlbHQuYXR0cihcImNsYXNzXCIsIG9wdHMuY2xhc3MpO1xuICAgIH1cblxuICAgIGNvbnN0IHQgPSBlbHRcbiAgICAgIC50cmFuc2l0aW9uKClcbiAgICAgIC5kdXJhdGlvbihvcHRzLmR1cmF0aW9uKVxuICAgICAgLmRlbGF5KG9wdHMuZGVsYXkpXG4gICAgICAuZWFzZShkMy5lYXNlTGluZWFyKTtcblxuICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKGZpbmFsQXR0cmlidXRlcykpIHtcbiAgICAgIHQuYXR0cihrZXksIHZhbHVlKTtcbiAgICB9XG4gIH07XG59XG4iLCJpbXBvcnQgeyBxdWVyeVNlbGVjdG9yIH0gZnJvbSBcIi4vbWlzY1wiO1xuXG5leHBvcnQgY29uc3QgaW5pdFRoZW1lID0gKCkgPT4ge1xuICBoYW5kbGVEYXJrVGhlbWUoKTtcblxuICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc3R5bGUuc2V0UHJvcGVydHkoXG4gICAgXCItLXByaW1hcnktY29sb3JcIixcbiAgICBcImhzbCgxMjAsIDEwMCUsIDI1JSlcIlxuICApO1xuICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc3R5bGUuc2V0UHJvcGVydHkoXG4gICAgXCItLWZpbGwtY29sb3JcIixcbiAgICBcImhzbGEoMTIwLCAwJSwgMjUlLCAwLjEpXCJcbiAgKTtcblxuICBoYW5kbGVVZ2x5VGhlbWUoKTtcbn07XG5cbmNvbnN0IGhhbmRsZURhcmtUaGVtZSA9ICgpID0+IHtcbiAgY29uc3QgaXNEYXJrID1cbiAgICB3aW5kb3cubWF0Y2hNZWRpYSAmJlxuICAgIHdpbmRvdy5tYXRjaE1lZGlhKFwiKHByZWZlcnMtY29sb3Itc2NoZW1lOiBkYXJrKVwiKS5tYXRjaGVzO1xuXG4gIGNvbnN0IGNsID0gZG9jdW1lbnQuYm9keS5jbGFzc0xpc3Q7XG4gIGlzRGFyayA/IGNsLmFkZChcImRhcmtcIikgOiBjbC5hZGQoXCJsaWdodFwiKTtcblxuICB3aW5kb3dcbiAgICAubWF0Y2hNZWRpYShcIihwcmVmZXJzLWNvbG9yLXNjaGVtZTogZGFyaylcIilcbiAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNoYW5nZVwiLCAoZSkgPT4ge1xuICAgICAgY29uc3QgY29sb3JTY2hlbWUgPSBlLm1hdGNoZXMgPyBcImRhcmtcIiA6IFwibGlnaHRcIjtcbiAgICAgIGNvbnNvbGUubG9nKFwiY29sb3JTY2hlbWU6IFwiLCBjb2xvclNjaGVtZSk7XG5cbiAgICAgIGNsLnJlbW92ZShcImRhcmtcIik7XG4gICAgICBjbC5yZW1vdmUoXCJsaWdodFwiKTtcbiAgICAgIGlmIChjb2xvclNjaGVtZSA9PT0gXCJkYXJrXCIpIHtcbiAgICAgICAgY2wuYWRkKFwiZGFya1wiKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNsLmFkZChcImxpZ2h0XCIpO1xuICAgICAgfVxuICAgIH0pO1xufTtcblxuKHdpbmRvdyBhcyBhbnkpLnRvZ2dsZVVnbHlUaGVtZSA9ICgpID0+IHtcbiAgbGV0IHRoZW1lTmFtZSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwidGhlbWVcIik7XG4gIHRoZW1lTmFtZSA9IHRoZW1lTmFtZSAhPT0gXCJ1Z2x5XCIgPyBcInVnbHlcIiA6IFwiZGVmYXVsdFwiO1xuICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcInRoZW1lXCIsIHRoZW1lTmFtZSk7XG5cbiAgY29uc29sZS5sb2coXCJ1cGRhdGUgdGhlbWUgdG8gXCIgKyB0aGVtZU5hbWUpO1xuICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5yZW1vdmUoXCJ1Z2x5XCIpO1xuICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5yZW1vdmUoXCJkZWZhdWx0XCIpO1xuXG4gIGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LmFkZCh0aGVtZU5hbWUpO1xuXG4gIHVwZGF0ZUJ1dHRvblRoZW1lKCk7XG59O1xuXG5jb25zdCBoYW5kbGVVZ2x5VGhlbWUgPSAoKSA9PiB7XG4gIGxldCB0aGVtZU5hbWUgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcInRoZW1lXCIpO1xuICB0aGVtZU5hbWUgPSB0aGVtZU5hbWUgIT09IFwidWdseVwiID8gXCJkZWZhdWx0XCIgOiBcInVnbHlcIjtcbiAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QuYWRkKHRoZW1lTmFtZSk7XG5cbiAgdXBkYXRlQnV0dG9uVGhlbWUoKTtcbn07XG5cbmNvbnN0IHVwZGF0ZUJ1dHRvblRoZW1lID0gKCkgPT4ge1xuICBsZXQgdGhlbWVOYW1lID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJ0aGVtZVwiKTtcbiAgY29uc3QgbGFiZWwgPVxuICAgIHRoZW1lTmFtZSA9PT0gXCJ1Z2x5XCIgPyBcIlJlbWV0dHJlIGwnZXN0aMOpdGlxdWVcIiA6IFwiRW5sZXZlciBsJ2VzdGjDqXRpcXVlXCI7XG4gIGNvbnN0IGJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJidXR0b24udG9nZ2xlLXRoZW1lXCIpO1xuICBpZiAoYnV0dG9uKSB7XG4gICAgYnV0dG9uLmlubmVySFRNTCA9IGxhYmVsO1xuICB9XG5cbiAgY29uc3QgZGl2ID0gcXVlcnlTZWxlY3RvcihcImhlYWRlciBkaXYudWdseS10aGVtZVwiKTtcblxuICBkaXYuaW5uZXJIVE1MID1cbiAgICB0aGVtZU5hbWUgIT09IFwidWdseVwiXG4gICAgICA/IFwiXCJcbiAgICAgIDogYFxuPGJ1dHRvbiBvbkNsaWNrPVwid2luZG93LnRvZ2dsZVVnbHlUaGVtZSgpXCI+IFxuICBSZW1ldHRyZSBsJ2VzdGjDqXRpcXVlXG48L2J1dHRvbj5cbiAgICBgO1xufTtcbiIsImltcG9ydCBcIi4vc2Nzcy9zdHlsZXMuc2Nzc1wiO1xuaW1wb3J0IHsgU1ZHVG9vbCB9IGZyb20gXCIuL1NWR1Rvb2xcIjtcblxuaW1wb3J0IHsgaW5pdFRoZW1lIH0gZnJvbSBcIi4vdGhlbWVcIjtcblxuaW5pdFRoZW1lKCk7XG5cbmNvbnN0IHN2Z1Rvb2wgPSBuZXcgU1ZHVG9vbCgpO1xuc3ZnVG9vbC5pbml0U3ZnKCk7XG4iXSwibmFtZXMiOlsibm9vcCIsImRpc3BhdGNoIiwiaSIsIm4iLCJfIiwidCIsIkRpc3BhdGNoIiwicGFyc2VUeXBlbmFtZXMiLCJ0eXBlbmFtZXMiLCJ0eXBlcyIsIm5hbWUiLCJ0eXBlbmFtZSIsImNhbGxiYWNrIiwiVCIsImdldCIsInNldCIsImNvcHkiLCJ0eXBlIiwidGhhdCIsImFyZ3MiLCJjIiwieGh0bWwiLCJuYW1lc3BhY2VzIiwibmFtZXNwYWNlIiwicHJlZml4IiwiY3JlYXRvckluaGVyaXQiLCJkb2N1bWVudCIsInVyaSIsImNyZWF0b3JGaXhlZCIsImZ1bGxuYW1lIiwiY3JlYXRvciIsIm5vbmUiLCJzZWxlY3RvciIsInNlbGVjdGlvbl9zZWxlY3QiLCJzZWxlY3QiLCJncm91cHMiLCJtIiwic3ViZ3JvdXBzIiwiaiIsImdyb3VwIiwic3ViZ3JvdXAiLCJub2RlIiwic3Vibm9kZSIsIlNlbGVjdGlvbiIsImFycmF5IiwieCIsImVtcHR5Iiwic2VsZWN0b3JBbGwiLCJhcnJheUFsbCIsInNlbGVjdGlvbl9zZWxlY3RBbGwiLCJwYXJlbnRzIiwibWF0Y2hlciIsImNoaWxkTWF0Y2hlciIsImZpbmQiLCJjaGlsZEZpbmQiLCJtYXRjaCIsImNoaWxkRmlyc3QiLCJzZWxlY3Rpb25fc2VsZWN0Q2hpbGQiLCJmaWx0ZXIiLCJjaGlsZHJlbiIsImNoaWxkcmVuRmlsdGVyIiwic2VsZWN0aW9uX3NlbGVjdENoaWxkcmVuIiwic2VsZWN0aW9uX2ZpbHRlciIsInNwYXJzZSIsInVwZGF0ZSIsInNlbGVjdGlvbl9lbnRlciIsIkVudGVyTm9kZSIsInBhcmVudCIsImRhdHVtIiwiY2hpbGQiLCJuZXh0IiwiY29uc3RhbnQkMSIsImJpbmRJbmRleCIsImVudGVyIiwiZXhpdCIsImRhdGEiLCJncm91cExlbmd0aCIsImRhdGFMZW5ndGgiLCJiaW5kS2V5Iiwia2V5Iiwibm9kZUJ5S2V5VmFsdWUiLCJrZXlWYWx1ZXMiLCJrZXlWYWx1ZSIsInNlbGVjdGlvbl9kYXRhIiwidmFsdWUiLCJiaW5kIiwiY29uc3RhbnQiLCJhcnJheWxpa2UiLCJlbnRlckdyb3VwIiwidXBkYXRlR3JvdXAiLCJleGl0R3JvdXAiLCJpMCIsImkxIiwicHJldmlvdXMiLCJzZWxlY3Rpb25fZXhpdCIsInNlbGVjdGlvbl9qb2luIiwib25lbnRlciIsIm9udXBkYXRlIiwib25leGl0Iiwic2VsZWN0aW9uX21lcmdlIiwiY29udGV4dCIsInNlbGVjdGlvbiIsImdyb3VwczAiLCJncm91cHMxIiwibTAiLCJtMSIsIm1lcmdlcyIsImdyb3VwMCIsImdyb3VwMSIsIm1lcmdlIiwic2VsZWN0aW9uX29yZGVyIiwic2VsZWN0aW9uX3NvcnQiLCJjb21wYXJlIiwiYXNjZW5kaW5nIiwiY29tcGFyZU5vZGUiLCJhIiwiYiIsInNvcnRncm91cHMiLCJzb3J0Z3JvdXAiLCJzZWxlY3Rpb25fY2FsbCIsInNlbGVjdGlvbl9ub2RlcyIsInNlbGVjdGlvbl9ub2RlIiwic2VsZWN0aW9uX3NpemUiLCJzaXplIiwic2VsZWN0aW9uX2VtcHR5Iiwic2VsZWN0aW9uX2VhY2giLCJhdHRyUmVtb3ZlIiwiYXR0clJlbW92ZU5TIiwiYXR0ckNvbnN0YW50IiwiYXR0ckNvbnN0YW50TlMiLCJhdHRyRnVuY3Rpb24iLCJ2IiwiYXR0ckZ1bmN0aW9uTlMiLCJzZWxlY3Rpb25fYXR0ciIsImRlZmF1bHRWaWV3Iiwic3R5bGVSZW1vdmUiLCJzdHlsZUNvbnN0YW50IiwicHJpb3JpdHkiLCJzdHlsZUZ1bmN0aW9uIiwic2VsZWN0aW9uX3N0eWxlIiwic3R5bGVWYWx1ZSIsInByb3BlcnR5UmVtb3ZlIiwicHJvcGVydHlDb25zdGFudCIsInByb3BlcnR5RnVuY3Rpb24iLCJzZWxlY3Rpb25fcHJvcGVydHkiLCJjbGFzc0FycmF5Iiwic3RyaW5nIiwiY2xhc3NMaXN0IiwiQ2xhc3NMaXN0IiwiY2xhc3NlZEFkZCIsIm5hbWVzIiwibGlzdCIsImNsYXNzZWRSZW1vdmUiLCJjbGFzc2VkVHJ1ZSIsImNsYXNzZWRGYWxzZSIsImNsYXNzZWRGdW5jdGlvbiIsInNlbGVjdGlvbl9jbGFzc2VkIiwidGV4dFJlbW92ZSIsInRleHRDb25zdGFudCIsInRleHRGdW5jdGlvbiIsInNlbGVjdGlvbl90ZXh0IiwiaHRtbFJlbW92ZSIsImh0bWxDb25zdGFudCIsImh0bWxGdW5jdGlvbiIsInNlbGVjdGlvbl9odG1sIiwicmFpc2UiLCJzZWxlY3Rpb25fcmFpc2UiLCJsb3dlciIsInNlbGVjdGlvbl9sb3dlciIsInNlbGVjdGlvbl9hcHBlbmQiLCJjcmVhdGUiLCJjb25zdGFudE51bGwiLCJzZWxlY3Rpb25faW5zZXJ0IiwiYmVmb3JlIiwicmVtb3ZlIiwic2VsZWN0aW9uX3JlbW92ZSIsInNlbGVjdGlvbl9jbG9uZVNoYWxsb3ciLCJjbG9uZSIsInNlbGVjdGlvbl9jbG9uZURlZXAiLCJzZWxlY3Rpb25fY2xvbmUiLCJkZWVwIiwic2VsZWN0aW9uX2RhdHVtIiwiY29udGV4dExpc3RlbmVyIiwibGlzdGVuZXIiLCJldmVudCIsIm9uUmVtb3ZlIiwib24iLCJvbkFkZCIsIm9wdGlvbnMiLCJvIiwic2VsZWN0aW9uX29uIiwiZGlzcGF0Y2hFdmVudCIsInBhcmFtcyIsIndpbmRvdyIsImRpc3BhdGNoQ29uc3RhbnQiLCJkaXNwYXRjaEZ1bmN0aW9uIiwic2VsZWN0aW9uX2Rpc3BhdGNoIiwic2VsZWN0aW9uX2l0ZXJhdG9yIiwicm9vdCIsInNlbGVjdGlvbl9zZWxlY3Rpb24iLCJkZWZpbmUiLCJjb25zdHJ1Y3RvciIsImZhY3RvcnkiLCJwcm90b3R5cGUiLCJleHRlbmQiLCJkZWZpbml0aW9uIiwiQ29sb3IiLCJkYXJrZXIiLCJicmlnaHRlciIsInJlSSIsInJlTiIsInJlUCIsInJlSGV4IiwicmVSZ2JJbnRlZ2VyIiwicmVSZ2JQZXJjZW50IiwicmVSZ2JhSW50ZWdlciIsInJlUmdiYVBlcmNlbnQiLCJyZUhzbFBlcmNlbnQiLCJyZUhzbGFQZXJjZW50IiwibmFtZWQiLCJjb2xvciIsImNoYW5uZWxzIiwiY29sb3JfZm9ybWF0SGV4IiwiY29sb3JfZm9ybWF0SGV4OCIsImNvbG9yX2Zvcm1hdEhzbCIsImNvbG9yX2Zvcm1hdFJnYiIsImhzbENvbnZlcnQiLCJmb3JtYXQiLCJsIiwicmdibiIsIlJnYiIsInJnYmEiLCJoc2xhIiwiciIsImciLCJyZ2JDb252ZXJ0IiwicmdiIiwib3BhY2l0eSIsImsiLCJjbGFtcGkiLCJjbGFtcGEiLCJyZ2JfZm9ybWF0SGV4IiwicmdiX2Zvcm1hdEhleDgiLCJyZ2JfZm9ybWF0UmdiIiwiaGV4IiwiaCIsInMiLCJIc2wiLCJtaW4iLCJtYXgiLCJoc2wiLCJtMiIsImhzbDJyZ2IiLCJjbGFtcGgiLCJjbGFtcHQiLCJsaW5lYXIiLCJkIiwiZXhwb25lbnRpYWwiLCJ5IiwiZ2FtbWEiLCJub2dhbW1hIiwiaW50ZXJwb2xhdGVSZ2IiLCJyZ2JHYW1tYSIsInN0YXJ0IiwiZW5kIiwiY29sb3JSZ2IiLCJpbnRlcnBvbGF0ZU51bWJlciIsInJlQSIsInJlQiIsInplcm8iLCJvbmUiLCJpbnRlcnBvbGF0ZVN0cmluZyIsImJpIiwiYW0iLCJibSIsImJzIiwicSIsIm51bWJlciIsImRlZ3JlZXMiLCJpZGVudGl0eSIsImRlY29tcG9zZSIsImUiLCJmIiwic2NhbGVYIiwic2NhbGVZIiwic2tld1giLCJzdmdOb2RlIiwicGFyc2VDc3MiLCJwYXJzZVN2ZyIsImludGVycG9sYXRlVHJhbnNmb3JtIiwicGFyc2UiLCJweENvbW1hIiwicHhQYXJlbiIsImRlZ1BhcmVuIiwicG9wIiwidHJhbnNsYXRlIiwieGEiLCJ5YSIsInhiIiwieWIiLCJyb3RhdGUiLCJzY2FsZSIsImludGVycG9sYXRlVHJhbnNmb3JtQ3NzIiwiaW50ZXJwb2xhdGVUcmFuc2Zvcm1TdmciLCJmcmFtZSIsInRpbWVvdXQiLCJpbnRlcnZhbCIsInBva2VEZWxheSIsInRhc2tIZWFkIiwidGFza1RhaWwiLCJjbG9ja0xhc3QiLCJjbG9ja05vdyIsImNsb2NrU2tldyIsImNsb2NrIiwic2V0RnJhbWUiLCJub3ciLCJjbGVhck5vdyIsIlRpbWVyIiwidGltZXIiLCJkZWxheSIsInRpbWUiLCJzbGVlcCIsInRpbWVyRmx1c2giLCJ3YWtlIiwibmFwIiwicG9rZSIsInQwIiwidDEiLCJ0MiIsImVsYXBzZWQiLCJlbXB0eU9uIiwiZW1wdHlUd2VlbiIsIkNSRUFURUQiLCJTQ0hFRFVMRUQiLCJTVEFSVElORyIsIlNUQVJURUQiLCJSVU5OSU5HIiwiRU5ESU5HIiwiRU5ERUQiLCJzY2hlZHVsZSIsImlkIiwiaW5kZXgiLCJ0aW1pbmciLCJzY2hlZHVsZXMiLCJpbml0Iiwic2VsZiIsInR3ZWVuIiwic3RvcCIsInRpY2siLCJpbnRlcnJ1cHQiLCJhY3RpdmUiLCJzZWxlY3Rpb25faW50ZXJydXB0IiwidHdlZW5SZW1vdmUiLCJ0d2VlbjAiLCJ0d2VlbjEiLCJ0d2VlbkZ1bmN0aW9uIiwidHJhbnNpdGlvbl90d2VlbiIsInR3ZWVuVmFsdWUiLCJ0cmFuc2l0aW9uIiwiaW50ZXJwb2xhdGUiLCJ2YWx1ZTEiLCJzdHJpbmcwMCIsInN0cmluZzEiLCJpbnRlcnBvbGF0ZTAiLCJzdHJpbmcwIiwic3RyaW5nMTAiLCJ0cmFuc2l0aW9uX2F0dHIiLCJhdHRySW50ZXJwb2xhdGUiLCJhdHRySW50ZXJwb2xhdGVOUyIsImF0dHJUd2Vlbk5TIiwiYXR0clR3ZWVuIiwidHJhbnNpdGlvbl9hdHRyVHdlZW4iLCJkZWxheUZ1bmN0aW9uIiwiZGVsYXlDb25zdGFudCIsInRyYW5zaXRpb25fZGVsYXkiLCJkdXJhdGlvbkZ1bmN0aW9uIiwiZHVyYXRpb25Db25zdGFudCIsInRyYW5zaXRpb25fZHVyYXRpb24iLCJlYXNlQ29uc3RhbnQiLCJ0cmFuc2l0aW9uX2Vhc2UiLCJlYXNlVmFyeWluZyIsInRyYW5zaXRpb25fZWFzZVZhcnlpbmciLCJ0cmFuc2l0aW9uX2ZpbHRlciIsIlRyYW5zaXRpb24iLCJ0cmFuc2l0aW9uX21lcmdlIiwib25GdW5jdGlvbiIsIm9uMCIsIm9uMSIsInNpdCIsInRyYW5zaXRpb25fb24iLCJyZW1vdmVGdW5jdGlvbiIsInRyYW5zaXRpb25fcmVtb3ZlIiwidHJhbnNpdGlvbl9zZWxlY3QiLCJ0cmFuc2l0aW9uX3NlbGVjdEFsbCIsImluaGVyaXQiLCJ0cmFuc2l0aW9uX3NlbGVjdGlvbiIsInN0eWxlTnVsbCIsInN0eWxlIiwic3R5bGVNYXliZVJlbW92ZSIsImxpc3RlbmVyMCIsInRyYW5zaXRpb25fc3R5bGUiLCJzdHlsZUludGVycG9sYXRlIiwic3R5bGVUd2VlbiIsInRyYW5zaXRpb25fc3R5bGVUd2VlbiIsInRyYW5zaXRpb25fdGV4dCIsInRleHRJbnRlcnBvbGF0ZSIsInRleHRUd2VlbiIsInRyYW5zaXRpb25fdGV4dFR3ZWVuIiwidHJhbnNpdGlvbl90cmFuc2l0aW9uIiwiaWQwIiwiaWQxIiwibmV3SWQiLCJ0cmFuc2l0aW9uX2VuZCIsInJlc29sdmUiLCJyZWplY3QiLCJjYW5jZWwiLCJzZWxlY3Rpb25fcHJvdG90eXBlIiwiY3ViaWNJbk91dCIsImRlZmF1bHRUaW1pbmciLCJlYXNlQ3ViaWNJbk91dCIsInNlbGVjdGlvbl90cmFuc2l0aW9uIiwiVHJhbnNmb3JtIiwicG9pbnQiLCJsb2NhdGlvbiIsInF1ZXJ5U2VsZWN0b3IiLCJlbHQiLCJmaXR0cyIsImJpZ1RhcmdldDEiLCJiaWdUYXJnZXQyIiwic21hbGxUYXJnZXQiLCJwdXJwb3NlIiwiaGljayIsImcxIiwiZzIiLCJnMyIsImc0IiwiZzUiLCJnNiIsImpha29iIiwiYXBwMSIsImFwcDIiLCJ5b3VyQXBwIiwiZ3JhZGllbnQiLCJnZXN0YWx0IiwicHJveGltaXR5Iiwib2Zmc2V0Iiwic2ltaWxhcml0eSIsIm15Q2xhc3MiLCJjb21tb25SZWdpb24iLCJzaW1wbGljaXR5IiwibWlsbGVyIiwidGVzbGVyIiwicG9zdGVsIiwiemVpZ2FybmlrIiwidm9uUmVzdG9yZmYiLCJwb2ludHMiLCJjb25maWciLCJjc3NDbGFzcyIsInZhbHVlcyIsImFsbCIsIlNWR1Rvb2wiLCJfX3B1YmxpY0ZpZWxkIiwiY29udGFpbmVyIiwiZWx0TmFtZSIsImluaXRpYWxBdHRyaWJ1dGVzIiwiZmluYWxBdHRyaWJ1dGVzIiwib3B0cyIsImQzLnNlbGVjdCIsImQzLmVhc2VMaW5lYXIiLCJ1eGxhd0ltYWdlTmFtZSIsInV4bGF3Q2xhc3NOYW1lIiwic3ZnTmFtZSIsImN4IiwiY3kiLCJ3aWR0aCIsImhlaWdodCIsImludGVuc2l0eSIsImluaXRUaGVtZSIsImhhbmRsZURhcmtUaGVtZSIsImhhbmRsZVVnbHlUaGVtZSIsImlzRGFyayIsImNsIiwiY29sb3JTY2hlbWUiLCJ0aGVtZU5hbWUiLCJ1cGRhdGVCdXR0b25UaGVtZSIsImxhYmVsIiwiYnV0dG9uIiwiZGl2Il0sIm1hcHBpbmdzIjoia1JBQUEsSUFBSUEsRUFBTyxDQUFDLE1BQU8sSUFBTSxDQUFBLENBQUUsRUFFM0IsU0FBU0MsR0FBVyxDQUNsQixRQUFTQyxFQUFJLEVBQUdDLEVBQUksVUFBVSxPQUFRQyxFQUFJLENBQUEsRUFBSUMsRUFBR0gsRUFBSUMsRUFBRyxFQUFFRCxFQUFHLENBQzNELEdBQUksRUFBRUcsRUFBSSxVQUFVSCxDQUFDLEVBQUksS0FBUUcsS0FBS0QsR0FBTSxRQUFRLEtBQUtDLENBQUMsRUFB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
