(function(E){typeof define=="function"&&define.amd?define(E):E()})(function(){"use strict";var ts=Object.defineProperty;var es=(E,S,k)=>S in E?ts(E,S,{enumerable:!0,configurable:!0,writable:!0,value:k}):E[S]=k;var D=(E,S,k)=>(es(E,typeof S!="symbol"?S+"":S,k),k);const E="";var S={value:()=>{}};function k(){for(var t=0,e=arguments.length,n={},r;t<e;++t){if(!(r=arguments[t]+"")||r in n||/[\s.]/.test(r))throw new Error("illegal type: "+r);n[r]=[]}return new K(n)}function K(t){this._=t}function me(t,e){return t.trim().split(/^|\s+/).map(function(n){var r="",i=n.indexOf(".");if(i>=0&&(r=n.slice(i+1),n=n.slice(0,i)),n&&!e.hasOwnProperty(n))throw new Error("unknown type: "+n);return{type:n,name:r}})}K.prototype=k.prototype={constructor:K,on:function(t,e){var n=this._,r=me(t+"",n),i,s=-1,o=r.length;if(arguments.length<2){for(;++s<o;)if((i=(t=r[s]).type)&&(i=_e(n[i],t.name)))return i;return}if(e!=null&&typeof e!="function")throw new Error("invalid callback: "+e);for(;++s<o;)if(i=(t=r[s]).type)n[i]=Nt(n[i],t.name,e);else if(e==null)for(i in n)n[i]=Nt(n[i],t.name,null);return this},copy:function(){var t={},e=this._;for(var n in e)t[n]=e[n].slice();return new K(t)},call:function(t,e){if((i=arguments.length-2)>0)for(var n=new Array(i),r=0,i,s;r<i;++r)n[r]=arguments[r+2];if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(s=this._[t],r=0,i=s.length;r<i;++r)s[r].value.apply(e,n)},apply:function(t,e,n){if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(var r=this._[t],i=0,s=r.length;i<s;++i)r[i].value.apply(e,n)}};function _e(t,e){for(var n=0,r=t.length,i;n<r;++n)if((i=t[n]).name===e)return i.value}function Nt(t,e,n){for(var r=0,i=t.length;r<i;++r)if(t[r].name===e){t[r]=S,t=t.slice(0,r).concat(t.slice(r+1));break}return n!=null&&t.push({name:e,value:n}),t}var ft="http://www.w3.org/1999/xhtml";const kt={svg:"http://www.w3.org/2000/svg",xhtml:ft,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};function W(t){var e=t+="",n=e.indexOf(":");return n>=0&&(e=t.slice(0,n))!=="xmlns"&&(t=t.slice(n+1)),kt.hasOwnProperty(e)?{space:kt[e],local:t}:t}function ve(t){return function(){var e=this.ownerDocument,n=this.namespaceURI;return n===ft&&e.documentElement.namespaceURI===ft?e.createElement(t):e.createElementNS(n,t)}}function we(t){return function(){return this.ownerDocument.createElementNS(t.space,t.local)}}function At(t){var e=W(t);return(e.local?we:ve)(e)}function xe(){}function ht(t){return t==null?xe:function(){return this.querySelector(t)}}function be(t){typeof t!="function"&&(t=ht(t));for(var e=this._groups,n=e.length,r=new Array(n),i=0;i<n;++i)for(var s=e[i],o=s.length,a=r[i]=new Array(o),l,c,u=0;u<o;++u)(l=s[u])&&(c=t.call(l,l.__data__,u,s))&&("__data__"in l&&(c.__data__=l.__data__),a[u]=c);return new _(r,this._parents)}function Ee(t){return t==null?[]:Array.isArray(t)?t:Array.from(t)}function Se(){return[]}function $t(t){return t==null?Se:function(){return this.querySelectorAll(t)}}function Ce(t){return function(){return Ee(t.apply(this,arguments))}}function Ne(t){typeof t=="function"?t=Ce(t):t=$t(t);for(var e=this._groups,n=e.length,r=[],i=[],s=0;s<n;++s)for(var o=e[s],a=o.length,l,c=0;c<a;++c)(l=o[c])&&(r.push(t.call(l,l.__data__,c,o)),i.push(l));return new _(r,i)}function Gt(t){return function(){return this.matches(t)}}function Rt(t){return function(e){return e.matches(t)}}var ke=Array.prototype.find;function Ae(t){return function(){return ke.call(this.children,t)}}function $e(){return this.firstElementChild}function Ge(t){return this.select(t==null?$e:Ae(typeof t=="function"?t:Rt(t)))}var Re=Array.prototype.filter;function Te(){return Array.from(this.children)}function Ve(t){return function(){return Re.call(this.children,t)}}function Me(t){return this.selectAll(t==null?Te:Ve(typeof t=="function"?t:Rt(t)))}function Fe(t){typeof t!="function"&&(t=Gt(t));for(var e=this._groups,n=e.length,r=new Array(n),i=0;i<n;++i)for(var s=e[i],o=s.length,a=r[i]=[],l,c=0;c<o;++c)(l=s[c])&&t.call(l,l.__data__,c,s)&&a.push(l);return new _(r,this._parents)}function Tt(t){return new Array(t.length)}function De(){return new _(this._enter||this._groups.map(Tt),this._parents)}function J(t,e){this.ownerDocument=t.ownerDocument,this.namespaceURI=t.namespaceURI,this._next=null,this._parent=t,this.__data__=e}J.prototype={constructor:J,appendChild:function(t){return this._parent.insertBefore(t,this._next)},insertBefore:function(t,e){return this._parent.insertBefore(t,e)},querySelector:function(t){return this._parent.querySelector(t)},querySelectorAll:function(t){return this._parent.querySelectorAll(t)}};function Ie(t){return function(){return t}}function Pe(t,e,n,r,i,s){for(var o=0,a,l=e.length,c=s.length;o<c;++o)(a=e[o])?(a.__data__=s[o],r[o]=a):n[o]=new J(t,s[o]);for(;o<l;++o)(a=e[o])&&(i[o]=a)}function He(t,e,n,r,i,s,o){var a,l,c=new Map,u=e.length,f=s.length,h=new Array(u),g;for(a=0;a<u;++a)(l=e[a])&&(h[a]=g=o.call(l,l.__data__,a,e)+"",c.has(g)?i[a]=l:c.set(g,l));for(a=0;a<f;++a)g=o.call(t,s[a],a,s)+"",(l=c.get(g))?(r[a]=l,l.__data__=s[a],c.delete(g)):n[a]=new J(t,s[a]);for(a=0;a<u;++a)(l=e[a])&&c.get(h[a])===l&&(i[a]=l)}function qe(t){return t.__data__}function Xe(t,e){if(!arguments.length)return Array.from(this,qe);var n=e?He:Pe,r=this._parents,i=this._groups;typeof t!="function"&&(t=Ie(t));for(var s=i.length,o=new Array(s),a=new Array(s),l=new Array(s),c=0;c<s;++c){var u=r[c],f=i[c],h=f.length,g=Oe(t.call(u,u&&u.__data__,c,r)),d=g.length,y=a[c]=new Array(d),T=o[c]=new Array(d),ji=l[c]=new Array(h);n(u,f,y,T,ji,g,e);for(var U=0,ut=0,de,ye;U<d;++U)if(de=y[U]){for(U>=ut&&(ut=U+1);!(ye=T[ut])&&++ut<d;);de._next=ye||null}}return o=new _(o,r),o._enter=a,o._exit=l,o}function Oe(t){return typeof t=="object"&&"length"in t?t:Array.from(t)}function Le(){return new _(this._exit||this._groups.map(Tt),this._parents)}function Ye(t,e,n){var r=this.enter(),i=this,s=this.exit();return typeof t=="function"?(r=t(r),r&&(r=r.selection())):r=r.append(t+""),e!=null&&(i=e(i),i&&(i=i.selection())),n==null?s.remove():n(s),r&&i?r.merge(i).order():i}function ze(t){for(var e=t.selection?t.selection():t,n=this._groups,r=e._groups,i=n.length,s=r.length,o=Math.min(i,s),a=new Array(i),l=0;l<o;++l)for(var c=n[l],u=r[l],f=c.length,h=a[l]=new Array(f),g,d=0;d<f;++d)(g=c[d]||u[d])&&(h[d]=g);for(;l<i;++l)a[l]=n[l];return new _(a,this._parents)}function Be(){for(var t=this._groups,e=-1,n=t.length;++e<n;)for(var r=t[e],i=r.length-1,s=r[i],o;--i>=0;)(o=r[i])&&(s&&o.compareDocumentPosition(s)^4&&s.parentNode.insertBefore(o,s),s=o);return this}function Ue(t){t||(t=Ke);function e(f,h){return f&&h?t(f.__data__,h.__data__):!f-!h}for(var n=this._groups,r=n.length,i=new Array(r),s=0;s<r;++s){for(var o=n[s],a=o.length,l=i[s]=new Array(a),c,u=0;u<a;++u)(c=o[u])&&(l[u]=c);l.sort(e)}return new _(i,this._parents).order()}function Ke(t,e){return t<e?-1:t>e?1:t>=e?0:NaN}function We(){var t=arguments[0];return arguments[0]=this,t.apply(null,arguments),this}function Je(){return Array.from(this)}function Qe(){for(var t=this._groups,e=0,n=t.length;e<n;++e)for(var r=t[e],i=0,s=r.length;i<s;++i){var o=r[i];if(o)return o}return null}function Ze(){let t=0;for(const e of this)++t;return t}function je(){return!this.node()}function tn(t){for(var e=this._groups,n=0,r=e.length;n<r;++n)for(var i=e[n],s=0,o=i.length,a;s<o;++s)(a=i[s])&&t.call(a,a.__data__,s,i);return this}function en(t){return function(){this.removeAttribute(t)}}function nn(t){return function(){this.removeAttributeNS(t.space,t.local)}}function rn(t,e){return function(){this.setAttribute(t,e)}}function sn(t,e){return function(){this.setAttributeNS(t.space,t.local,e)}}function on(t,e){return function(){var n=e.apply(this,arguments);n==null?this.removeAttribute(t):this.setAttribute(t,n)}}function an(t,e){return function(){var n=e.apply(this,arguments);n==null?this.removeAttributeNS(t.space,t.local):this.setAttributeNS(t.space,t.local,n)}}function ln(t,e){var n=W(t);if(arguments.length<2){var r=this.node();return n.local?r.getAttributeNS(n.space,n.local):r.getAttribute(n)}return this.each((e==null?n.local?nn:en:typeof e=="function"?n.local?an:on:n.local?sn:rn)(n,e))}function Vt(t){return t.ownerDocument&&t.ownerDocument.defaultView||t.document&&t||t.defaultView}function cn(t){return function(){this.style.removeProperty(t)}}function un(t,e,n){return function(){this.style.setProperty(t,e,n)}}function fn(t,e,n){return function(){var r=e.apply(this,arguments);r==null?this.style.removeProperty(t):this.style.setProperty(t,r,n)}}function hn(t,e,n){return arguments.length>1?this.each((e==null?cn:typeof e=="function"?fn:un)(t,e,n??"")):V(this.node(),t)}function V(t,e){return t.style.getPropertyValue(e)||Vt(t).getComputedStyle(t,null).getPropertyValue(e)}function gn(t){return function(){delete this[t]}}function pn(t,e){return function(){this[t]=e}}function dn(t,e){return function(){var n=e.apply(this,arguments);n==null?delete this[t]:this[t]=n}}function yn(t,e){return arguments.length>1?this.each((e==null?gn:typeof e=="function"?dn:pn)(t,e)):this.node()[t]}function Mt(t){return t.trim().split(/^|\s+/)}function gt(t){return t.classList||new Ft(t)}function Ft(t){this._node=t,this._names=Mt(t.getAttribute("class")||"")}Ft.prototype={add:function(t){var e=this._names.indexOf(t);e<0&&(this._names.push(t),this._node.setAttribute("class",this._names.join(" ")))},remove:function(t){var e=this._names.indexOf(t);e>=0&&(this._names.splice(e,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(t){return this._names.indexOf(t)>=0}};function Dt(t,e){for(var n=gt(t),r=-1,i=e.length;++r<i;)n.add(e[r])}function It(t,e){for(var n=gt(t),r=-1,i=e.length;++r<i;)n.remove(e[r])}function mn(t){return function(){Dt(this,t)}}function _n(t){return function(){It(this,t)}}function vn(t,e){return function(){(e.apply(this,arguments)?Dt:It)(this,t)}}function wn(t,e){var n=Mt(t+"");if(arguments.length<2){for(var r=gt(this.node()),i=-1,s=n.length;++i<s;)if(!r.contains(n[i]))return!1;return!0}return this.each((typeof e=="function"?vn:e?mn:_n)(n,e))}function xn(){this.textContent=""}function bn(t){return function(){this.textContent=t}}function En(t){return function(){var e=t.apply(this,arguments);this.textContent=e??""}}function Sn(t){return arguments.length?this.each(t==null?xn:(typeof t=="function"?En:bn)(t)):this.node().textContent}function Cn(){this.innerHTML=""}function Nn(t){return function(){this.innerHTML=t}}function kn(t){return function(){var e=t.apply(this,arguments);this.innerHTML=e??""}}function An(t){return arguments.length?this.each(t==null?Cn:(typeof t=="function"?kn:Nn)(t)):this.node().innerHTML}function $n(){this.nextSibling&&this.parentNode.appendChild(this)}function Gn(){return this.each($n)}function Rn(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function Tn(){return this.each(Rn)}function Vn(t){var e=typeof t=="function"?t:At(t);return this.select(function(){return this.appendChild(e.apply(this,arguments))})}function Mn(){return null}function Fn(t,e){var n=typeof t=="function"?t:At(t),r=e==null?Mn:typeof e=="function"?e:ht(e);return this.select(function(){return this.insertBefore(n.apply(this,arguments),r.apply(this,arguments)||null)})}function Dn(){var t=this.parentNode;t&&t.removeChild(this)}function In(){return this.each(Dn)}function Pn(){var t=this.cloneNode(!1),e=this.parentNode;return e?e.insertBefore(t,this.nextSibling):t}function Hn(){var t=this.cloneNode(!0),e=this.parentNode;return e?e.insertBefore(t,this.nextSibling):t}function qn(t){return this.select(t?Hn:Pn)}function Xn(t){return arguments.length?this.property("__data__",t):this.node().__data__}function On(t){return function(e){t.call(this,e,this.__data__)}}function Ln(t){return t.trim().split(/^|\s+/).map(function(e){var n="",r=e.indexOf(".");return r>=0&&(n=e.slice(r+1),e=e.slice(0,r)),{type:e,name:n}})}function Yn(t){return function(){var e=this.__on;if(e){for(var n=0,r=-1,i=e.length,s;n<i;++n)s=e[n],(!t.type||s.type===t.type)&&s.name===t.name?this.removeEventListener(s.type,s.listener,s.options):e[++r]=s;++r?e.length=r:delete this.__on}}}function zn(t,e,n){return function(){var r=this.__on,i,s=On(e);if(r){for(var o=0,a=r.length;o<a;++o)if((i=r[o]).type===t.type&&i.name===t.name){this.removeEventListener(i.type,i.listener,i.options),this.addEventListener(i.type,i.listener=s,i.options=n),i.value=e;return}}this.addEventListener(t.type,s,n),i={type:t.type,name:t.name,value:e,listener:s,options:n},r?r.push(i):this.__on=[i]}}function Bn(t,e,n){var r=Ln(t+""),i,s=r.length,o;if(arguments.length<2){var a=this.node().__on;if(a){for(var l=0,c=a.length,u;l<c;++l)for(i=0,u=a[l];i<s;++i)if((o=r[i]).type===u.type&&o.name===u.name)return u.value}return}for(a=e?zn:Yn,i=0;i<s;++i)this.each(a(r[i],e,n));return this}function Pt(t,e,n){var r=Vt(t),i=r.CustomEvent;typeof i=="function"?i=new i(e,n):(i=r.document.createEvent("Event"),n?(i.initEvent(e,n.bubbles,n.cancelable),i.detail=n.detail):i.initEvent(e,!1,!1)),t.dispatchEvent(i)}function Un(t,e){return function(){return Pt(this,t,e)}}function Kn(t,e){return function(){return Pt(this,t,e.apply(this,arguments))}}function Wn(t,e){return this.each((typeof e=="function"?Kn:Un)(t,e))}function*Jn(){for(var t=this._groups,e=0,n=t.length;e<n;++e)for(var r=t[e],i=0,s=r.length,o;i<s;++i)(o=r[i])&&(yield o)}var Ht=[null];function _(t,e){this._groups=t,this._parents=e}function I(){return new _([[document.documentElement]],Ht)}function Qn(){return this}_.prototype=I.prototype={constructor:_,select:be,selectAll:Ne,selectChild:Ge,selectChildren:Me,filter:Fe,data:Xe,enter:De,exit:Le,join:Ye,merge:ze,selection:Qn,order:Be,sort:Ue,call:We,nodes:Je,node:Qe,size:Ze,empty:je,each:tn,attr:ln,style:hn,property:yn,classed:wn,text:Sn,html:An,raise:Gn,lower:Tn,append:Vn,insert:Fn,remove:In,clone:qn,datum:Xn,on:Bn,dispatch:Wn,[Symbol.iterator]:Jn};function Zn(t){return typeof t=="string"?new _([[document.querySelector(t)]],[document.documentElement]):new _([[t]],Ht)}function pt(t,e,n){t.prototype=e.prototype=n,n.constructor=t}function qt(t,e){var n=Object.create(t.prototype);for(var r in e)n[r]=e[r];return n}function P(){}var H=.7,Q=1/H,M="\\s*([+-]?\\d+)\\s*",q="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*",x="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*",jn=/^#([0-9a-f]{3,8})$/,tr=new RegExp(`^rgb\\(${M},${M},${M}\\)$`),er=new RegExp(`^rgb\\(${x},${x},${x}\\)$`),nr=new RegExp(`^rgba\\(${M},${M},${M},${q}\\)$`),rr=new RegExp(`^rgba\\(${x},${x},${x},${q}\\)$`),ir=new RegExp(`^hsl\\(${q},${x},${x}\\)$`),sr=new RegExp(`^hsla\\(${q},${x},${x},${q}\\)$`),Xt={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};pt(P,X,{copy(t){return Object.assign(new this.constructor,this,t)},displayable(){return this.rgb().displayable()},hex:Ot,formatHex:Ot,formatHex8:or,formatHsl:ar,formatRgb:Lt,toString:Lt});function Ot(){return this.rgb().formatHex()}function or(){return this.rgb().formatHex8()}function ar(){return Kt(this).formatHsl()}function Lt(){return this.rgb().formatRgb()}function X(t){var e,n;return t=(t+"").trim().toLowerCase(),(e=jn.exec(t))?(n=e[1].length,e=parseInt(e[1],16),n===6?Yt(e):n===3?new m(e>>8&15|e>>4&240,e>>4&15|e&240,(e&15)<<4|e&15,1):n===8?Z(e>>24&255,e>>16&255,e>>8&255,(e&255)/255):n===4?Z(e>>12&15|e>>8&240,e>>8&15|e>>4&240,e>>4&15|e&240,((e&15)<<4|e&15)/255):null):(e=tr.exec(t))?new m(e[1],e[2],e[3],1):(e=er.exec(t))?new m(e[1]*255/100,e[2]*255/100,e[3]*255/100,1):(e=nr.exec(t))?Z(e[1],e[2],e[3],e[4]):(e=rr.exec(t))?Z(e[1]*255/100,e[2]*255/100,e[3]*255/100,e[4]):(e=ir.exec(t))?Ut(e[1],e[2]/100,e[3]/100,1):(e=sr.exec(t))?Ut(e[1],e[2]/100,e[3]/100,e[4]):Xt.hasOwnProperty(t)?Yt(Xt[t]):t==="transparent"?new m(NaN,NaN,NaN,0):null}function Yt(t){return new m(t>>16&255,t>>8&255,t&255,1)}function Z(t,e,n,r){return r<=0&&(t=e=n=NaN),new m(t,e,n,r)}function lr(t){return t instanceof P||(t=X(t)),t?(t=t.rgb(),new m(t.r,t.g,t.b,t.opacity)):new m}function dt(t,e,n,r){return arguments.length===1?lr(t):new m(t,e,n,r??1)}function m(t,e,n,r){this.r=+t,this.g=+e,this.b=+n,this.opacity=+r}pt(m,dt,qt(P,{brighter(t){return t=t==null?Q:Math.pow(Q,t),new m(this.r*t,this.g*t,this.b*t,this.opacity)},darker(t){return t=t==null?H:Math.pow(H,t),new m(this.r*t,this.g*t,this.b*t,this.opacity)},rgb(){return this},clamp(){return new m($(this.r),$(this.g),$(this.b),j(this.opacity))},displayable(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:zt,formatHex:zt,formatHex8:cr,formatRgb:Bt,toString:Bt}));function zt(){return`#${G(this.r)}${G(this.g)}${G(this.b)}`}function cr(){return`#${G(this.r)}${G(this.g)}${G(this.b)}${G((isNaN(this.opacity)?1:this.opacity)*255)}`}function Bt(){const t=j(this.opacity);return`${t===1?"rgb(":"rgba("}${$(this.r)}, ${$(this.g)}, ${$(this.b)}${t===1?")":`, ${t})`}`}function j(t){return isNaN(t)?1:Math.max(0,Math.min(1,t))}function $(t){return Math.max(0,Math.min(255,Math.round(t)||0))}function G(t){return t=$(t),(t<16?"0":"")+t.toString(16)}function Ut(t,e,n,r){return r<=0?t=e=n=NaN:n<=0||n>=1?t=e=NaN:e<=0&&(t=NaN),new v(t,e,n,r)}function Kt(t){if(t instanceof v)return new v(t.h,t.s,t.l,t.opacity);if(t instanceof P||(t=X(t)),!t)return new v;if(t instanceof v)return t;t=t.rgb();var e=t.r/255,n=t.g/255,r=t.b/255,i=Math.min(e,n,r),s=Math.max(e,n,r),o=NaN,a=s-i,l=(s+i)/2;return a?(e===s?o=(n-r)/a+(n<r)*6:n===s?o=(r-e)/a+2:o=(e-n)/a+4,a/=l<.5?s+i:2-s-i,o*=60):a=l>0&&l<1?0:o,new v(o,a,l,t.opacity)}function ur(t,e,n,r){return arguments.length===1?Kt(t):new v(t,e,n,r??1)}function v(t,e,n,r){this.h=+t,this.s=+e,this.l=+n,this.opacity=+r}pt(v,ur,qt(P,{brighter(t){return t=t==null?Q:Math.pow(Q,t),new v(this.h,this.s,this.l*t,this.opacity)},darker(t){return t=t==null?H:Math.pow(H,t),new v(this.h,this.s,this.l*t,this.opacity)},rgb(){var t=this.h%360+(this.h<0)*360,e=isNaN(t)||isNaN(this.s)?0:this.s,n=this.l,r=n+(n<.5?n:1-n)*e,i=2*n-r;return new m(yt(t>=240?t-240:t+120,i,r),yt(t,i,r),yt(t<120?t+240:t-120,i,r),this.opacity)},clamp(){return new v(Wt(this.h),tt(this.s),tt(this.l),j(this.opacity))},displayable(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl(){const t=j(this.opacity);return`${t===1?"hsl(":"hsla("}${Wt(this.h)}, ${tt(this.s)*100}%, ${tt(this.l)*100}%${t===1?")":`, ${t})`}`}}));function Wt(t){return t=(t||0)%360,t<0?t+360:t}function tt(t){return Math.max(0,Math.min(1,t||0))}function yt(t,e,n){return(t<60?e+(n-e)*t/60:t<180?n:t<240?e+(n-e)*(240-t)/60:e)*255}const Jt=t=>()=>t;function fr(t,e){return function(n){return t+n*e}}function hr(t,e,n){return t=Math.pow(t,n),e=Math.pow(e,n)-t,n=1/n,function(r){return Math.pow(t+r*e,n)}}function gr(t){return(t=+t)==1?Qt:function(e,n){return n-e?hr(e,n,t):Jt(isNaN(e)?n:e)}}function Qt(t,e){var n=e-t;return n?fr(t,n):Jt(isNaN(t)?e:t)}const Zt=function t(e){var n=gr(e);function r(i,s){var o=n((i=dt(i)).r,(s=dt(s)).r),a=n(i.g,s.g),l=n(i.b,s.b),c=Qt(i.opacity,s.opacity);return function(u){return i.r=o(u),i.g=a(u),i.b=l(u),i.opacity=c(u),i+""}}return r.gamma=t,r}(1);function A(t,e){return t=+t,e=+e,function(n){return t*(1-n)+e*n}}var mt=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,_t=new RegExp(mt.source,"g");function pr(t){return function(){return t}}function dr(t){return function(e){return t(e)+""}}function yr(t,e){var n=mt.lastIndex=_t.lastIndex=0,r,i,s,o=-1,a=[],l=[];for(t=t+"",e=e+"";(r=mt.exec(t))&&(i=_t.exec(e));)(s=i.index)>n&&(s=e.slice(n,s),a[o]?a[o]+=s:a[++o]=s),(r=r[0])===(i=i[0])?a[o]?a[o]+=i:a[++o]=i:(a[++o]=null,l.push({i:o,x:A(r,i)})),n=_t.lastIndex;return n<e.length&&(s=e.slice(n),a[o]?a[o]+=s:a[++o]=s),a.length<2?l[0]?dr(l[0].x):pr(e):(e=l.length,function(c){for(var u=0,f;u<e;++u)a[(f=l[u]).i]=f.x(c);return a.join("")})}var jt=180/Math.PI,vt={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1};function te(t,e,n,r,i,s){var o,a,l;return(o=Math.sqrt(t*t+e*e))&&(t/=o,e/=o),(l=t*n+e*r)&&(n-=t*l,r-=e*l),(a=Math.sqrt(n*n+r*r))&&(n/=a,r/=a,l/=a),t*r<e*n&&(t=-t,e=-e,l=-l,o=-o),{translateX:i,translateY:s,rotate:Math.atan2(e,t)*jt,skewX:Math.atan(l)*jt,scaleX:o,scaleY:a}}var et;function mr(t){const e=new(typeof DOMMatrix=="function"?DOMMatrix:WebKitCSSMatrix)(t+"");return e.isIdentity?vt:te(e.a,e.b,e.c,e.d,e.e,e.f)}function _r(t){return t==null||(et||(et=document.createElementNS("http://www.w3.org/2000/svg","g")),et.setAttribute("transform",t),!(t=et.transform.baseVal.consolidate()))?vt:(t=t.matrix,te(t.a,t.b,t.c,t.d,t.e,t.f))}function ee(t,e,n,r){function i(c){return c.length?c.pop()+" ":""}function s(c,u,f,h,g,d){if(c!==f||u!==h){var y=g.push("translate(",null,e,null,n);d.push({i:y-4,x:A(c,f)},{i:y-2,x:A(u,h)})}else(f||h)&&g.push("translate("+f+e+h+n)}function o(c,u,f,h){c!==u?(c-u>180?u+=360:u-c>180&&(c+=360),h.push({i:f.push(i(f)+"rotate(",null,r)-2,x:A(c,u)})):u&&f.push(i(f)+"rotate("+u+r)}function a(c,u,f,h){c!==u?h.push({i:f.push(i(f)+"skewX(",null,r)-2,x:A(c,u)}):u&&f.push(i(f)+"skewX("+u+r)}function l(c,u,f,h,g,d){if(c!==f||u!==h){var y=g.push(i(g)+"scale(",null,",",null,")");d.push({i:y-4,x:A(c,f)},{i:y-2,x:A(u,h)})}else(f!==1||h!==1)&&g.push(i(g)+"scale("+f+","+h+")")}return function(c,u){var f=[],h=[];return c=t(c),u=t(u),s(c.translateX,c.translateY,u.translateX,u.translateY,f,h),o(c.rotate,u.rotate,f,h),a(c.skewX,u.skewX,f,h),l(c.scaleX,c.scaleY,u.scaleX,u.scaleY,f,h),c=u=null,function(g){for(var d=-1,y=h.length,T;++d<y;)f[(T=h[d]).i]=T.x(g);return f.join("")}}}var vr=ee(mr,"px, ","px)","deg)"),wr=ee(_r,", ",")",")"),F=0,O=0,L=0,ne=1e3,nt,Y,rt=0,R=0,it=0,z=typeof performance=="object"&&performance.now?performance:Date,re=typeof window=="object"&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(t){setTimeout(t,17)};function wt(){return R||(re(xr),R=z.now()+it)}function xr(){R=0}function st(){this._call=this._time=this._next=null}st.prototype=ie.prototype={constructor:st,restart:function(t,e,n){if(typeof t!="function")throw new TypeError("callback is not a function");n=(n==null?wt():+n)+(e==null?0:+e),!this._next&&Y!==this&&(Y?Y._next=this:nt=this,Y=this),this._call=t,this._time=n,xt()},stop:function(){this._call&&(this._call=null,this._time=1/0,xt())}};function ie(t,e,n){var r=new st;return r.restart(t,e,n),r}function br(){wt(),++F;for(var t=nt,e;t;)(e=R-t._time)>=0&&t._call.call(void 0,e),t=t._next;--F}function se(){R=(rt=z.now())+it,F=O=0;try{br()}finally{F=0,Sr(),R=0}}function Er(){var t=z.now(),e=t-rt;e>ne&&(it-=e,rt=t)}function Sr(){for(var t,e=nt,n,r=1/0;e;)e._call?(r>e._time&&(r=e._time),t=e,e=e._next):(n=e._next,e._next=null,e=t?t._next=n:nt=n);Y=t,xt(r)}function xt(t){if(!F){O&&(O=clearTimeout(O));var e=t-R;e>24?(t<1/0&&(O=setTimeout(se,t-z.now()-it)),L&&(L=clearInterval(L))):(L||(rt=z.now(),L=setInterval(Er,ne)),F=1,re(se))}}function oe(t,e,n){var r=new st;return e=e==null?0:+e,r.restart(i=>{r.stop(),t(i+e)},e,n),r}var Cr=k("start","end","cancel","interrupt"),Nr=[],ae=0,le=1,bt=2,ot=3,ce=4,Et=5,at=6;function lt(t,e,n,r,i,s){var o=t.__transition;if(!o)t.__transition={};else if(n in o)return;kr(t,n,{name:e,index:r,group:i,on:Cr,tween:Nr,time:s.time,delay:s.delay,duration:s.duration,ease:s.ease,timer:null,state:ae})}function St(t,e){var n=w(t,e);if(n.state>ae)throw new Error("too late; already scheduled");return n}function b(t,e){var n=w(t,e);if(n.state>ot)throw new Error("too late; already running");return n}function w(t,e){var n=t.__transition;if(!n||!(n=n[e]))throw new Error("transition not found");return n}function kr(t,e,n){var r=t.__transition,i;r[e]=n,n.timer=ie(s,0,n.time);function s(c){n.state=le,n.timer.restart(o,n.delay,n.time),n.delay<=c&&o(c-n.delay)}function o(c){var u,f,h,g;if(n.state!==le)return l();for(u in r)if(g=r[u],g.name===n.name){if(g.state===ot)return oe(o);g.state===ce?(g.state=at,g.timer.stop(),g.on.call("interrupt",t,t.__data__,g.index,g.group),delete r[u]):+u<e&&(g.state=at,g.timer.stop(),g.on.call("cancel",t,t.__data__,g.index,g.group),delete r[u])}if(oe(function(){n.state===ot&&(n.state=ce,n.timer.restart(a,n.delay,n.time),a(c))}),n.state=bt,n.on.call("start",t,t.__data__,n.index,n.group),n.state===bt){for(n.state=ot,i=new Array(h=n.tween.length),u=0,f=-1;u<h;++u)(g=n.tween[u].value.call(t,t.__data__,n.index,n.group))&&(i[++f]=g);i.length=f+1}}function a(c){for(var u=c<n.duration?n.ease.call(null,c/n.duration):(n.timer.restart(l),n.state=Et,1),f=-1,h=i.length;++f<h;)i[f].call(t,u);n.state===Et&&(n.on.call("end",t,t.__data__,n.index,n.group),l())}function l(){n.state=at,n.timer.stop(),delete r[e];for(var c in r)return;delete t.__transition}}function Ar(t,e){var n=t.__transition,r,i,s=!0,o;if(n){e=e==null?null:e+"";for(o in n){if((r=n[o]).name!==e){s=!1;continue}i=r.state>bt&&r.state<Et,r.state=at,r.timer.stop(),r.on.call(i?"interrupt":"cancel",t,t.__data__,r.index,r.group),delete n[o]}s&&delete t.__transition}}function $r(t){return this.each(function(){Ar(this,t)})}function Gr(t,e){var n,r;return function(){var i=b(this,t),s=i.tween;if(s!==n){r=n=s;for(var o=0,a=r.length;o<a;++o)if(r[o].name===e){r=r.slice(),r.splice(o,1);break}}i.tween=r}}function Rr(t,e,n){var r,i;if(typeof n!="function")throw new Error;return function(){var s=b(this,t),o=s.tween;if(o!==r){i=(r=o).slice();for(var a={name:e,value:n},l=0,c=i.length;l<c;++l)if(i[l].name===e){i[l]=a;break}l===c&&i.push(a)}s.tween=i}}function Tr(t,e){var n=this._id;if(t+="",arguments.length<2){for(var r=w(this.node(),n).tween,i=0,s=r.length,o;i<s;++i)if((o=r[i]).name===t)return o.value;return null}return this.each((e==null?Gr:Rr)(n,t,e))}function Ct(t,e,n){var r=t._id;return t.each(function(){var i=b(this,r);(i.value||(i.value={}))[e]=n.apply(this,arguments)}),function(i){return w(i,r).value[e]}}function ue(t,e){var n;return(typeof e=="number"?A:e instanceof X?Zt:(n=X(e))?(e=n,Zt):yr)(t,e)}function Vr(t){return function(){this.removeAttribute(t)}}function Mr(t){return function(){this.removeAttributeNS(t.space,t.local)}}function Fr(t,e,n){var r,i=n+"",s;return function(){var o=this.getAttribute(t);return o===i?null:o===r?s:s=e(r=o,n)}}function Dr(t,e,n){var r,i=n+"",s;return function(){var o=this.getAttributeNS(t.space,t.local);return o===i?null:o===r?s:s=e(r=o,n)}}function Ir(t,e,n){var r,i,s;return function(){var o,a=n(this),l;return a==null?void this.removeAttribute(t):(o=this.getAttribute(t),l=a+"",o===l?null:o===r&&l===i?s:(i=l,s=e(r=o,a)))}}function Pr(t,e,n){var r,i,s;return function(){var o,a=n(this),l;return a==null?void this.removeAttributeNS(t.space,t.local):(o=this.getAttributeNS(t.space,t.local),l=a+"",o===l?null:o===r&&l===i?s:(i=l,s=e(r=o,a)))}}function Hr(t,e){var n=W(t),r=n==="transform"?wr:ue;return this.attrTween(t,typeof e=="function"?(n.local?Pr:Ir)(n,r,Ct(this,"attr."+t,e)):e==null?(n.local?Mr:Vr)(n):(n.local?Dr:Fr)(n,r,e))}function qr(t,e){return function(n){this.setAttribute(t,e.call(this,n))}}function Xr(t,e){return function(n){this.setAttributeNS(t.space,t.local,e.call(this,n))}}function Or(t,e){var n,r;function i(){var s=e.apply(this,arguments);return s!==r&&(n=(r=s)&&Xr(t,s)),n}return i._value=e,i}function Lr(t,e){var n,r;function i(){var s=e.apply(this,arguments);return s!==r&&(n=(r=s)&&qr(t,s)),n}return i._value=e,i}function Yr(t,e){var n="attr."+t;if(arguments.length<2)return(n=this.tween(n))&&n._value;if(e==null)return this.tween(n,null);if(typeof e!="function")throw new Error;var r=W(t);return this.tween(n,(r.local?Or:Lr)(r,e))}function zr(t,e){return function(){St(this,t).delay=+e.apply(this,arguments)}}function Br(t,e){return e=+e,function(){St(this,t).delay=e}}function Ur(t){var e=this._id;return arguments.length?this.each((typeof t=="function"?zr:Br)(e,t)):w(this.node(),e).delay}function Kr(t,e){return function(){b(this,t).duration=+e.apply(this,arguments)}}function Wr(t,e){return e=+e,function(){b(this,t).duration=e}}function Jr(t){var e=this._id;return arguments.length?this.each((typeof t=="function"?Kr:Wr)(e,t)):w(this.node(),e).duration}function Qr(t,e){if(typeof e!="function")throw new Error;return function(){b(this,t).ease=e}}function Zr(t){var e=this._id;return arguments.length?this.each(Qr(e,t)):w(this.node(),e).ease}function jr(t,e){return function(){var n=e.apply(this,arguments);if(typeof n!="function")throw new Error;b(this,t).ease=n}}function ti(t){if(typeof t!="function")throw new Error;return this.each(jr(this._id,t))}function ei(t){typeof t!="function"&&(t=Gt(t));for(var e=this._groups,n=e.length,r=new Array(n),i=0;i<n;++i)for(var s=e[i],o=s.length,a=r[i]=[],l,c=0;c<o;++c)(l=s[c])&&t.call(l,l.__data__,c,s)&&a.push(l);return new C(r,this._parents,this._name,this._id)}function ni(t){if(t._id!==this._id)throw new Error;for(var e=this._groups,n=t._groups,r=e.length,i=n.length,s=Math.min(r,i),o=new Array(r),a=0;a<s;++a)for(var l=e[a],c=n[a],u=l.length,f=o[a]=new Array(u),h,g=0;g<u;++g)(h=l[g]||c[g])&&(f[g]=h);for(;a<r;++a)o[a]=e[a];return new C(o,this._parents,this._name,this._id)}function ri(t){return(t+"").trim().split(/^|\s+/).every(function(e){var n=e.indexOf(".");return n>=0&&(e=e.slice(0,n)),!e||e==="start"})}function ii(t,e,n){var r,i,s=ri(e)?St:b;return function(){var o=s(this,t),a=o.on;a!==r&&(i=(r=a).copy()).on(e,n),o.on=i}}function si(t,e){var n=this._id;return arguments.length<2?w(this.node(),n).on.on(t):this.each(ii(n,t,e))}function oi(t){return function(){var e=this.parentNode;for(var n in this.__transition)if(+n!==t)return;e&&e.removeChild(this)}}function ai(){return this.on("end.remove",oi(this._id))}function li(t){var e=this._name,n=this._id;typeof t!="function"&&(t=ht(t));for(var r=this._groups,i=r.length,s=new Array(i),o=0;o<i;++o)for(var a=r[o],l=a.length,c=s[o]=new Array(l),u,f,h=0;h<l;++h)(u=a[h])&&(f=t.call(u,u.__data__,h,a))&&("__data__"in u&&(f.__data__=u.__data__),c[h]=f,lt(c[h],e,n,h,c,w(u,n)));return new C(s,this._parents,e,n)}function ci(t){var e=this._name,n=this._id;typeof t!="function"&&(t=$t(t));for(var r=this._groups,i=r.length,s=[],o=[],a=0;a<i;++a)for(var l=r[a],c=l.length,u,f=0;f<c;++f)if(u=l[f]){for(var h=t.call(u,u.__data__,f,l),g,d=w(u,n),y=0,T=h.length;y<T;++y)(g=h[y])&&lt(g,e,n,y,h,d);s.push(h),o.push(u)}return new C(s,o,e,n)}var ui=I.prototype.constructor;function fi(){return new ui(this._groups,this._parents)}function hi(t,e){var n,r,i;return function(){var s=V(this,t),o=(this.style.removeProperty(t),V(this,t));return s===o?null:s===n&&o===r?i:i=e(n=s,r=o)}}function fe(t){return function(){this.style.removeProperty(t)}}function gi(t,e,n){var r,i=n+"",s;return function(){var o=V(this,t);return o===i?null:o===r?s:s=e(r=o,n)}}function pi(t,e,n){var r,i,s;return function(){var o=V(this,t),a=n(this),l=a+"";return a==null&&(l=a=(this.style.removeProperty(t),V(this,t))),o===l?null:o===r&&l===i?s:(i=l,s=e(r=o,a))}}function di(t,e){var n,r,i,s="style."+e,o="end."+s,a;return function(){var l=b(this,t),c=l.on,u=l.value[s]==null?a||(a=fe(e)):void 0;(c!==n||i!==u)&&(r=(n=c).copy()).on(o,i=u),l.on=r}}function yi(t,e,n){var r=(t+="")=="transform"?vr:ue;return e==null?this.styleTween(t,hi(t,r)).on("end.style."+t,fe(t)):typeof e=="function"?this.styleTween(t,pi(t,r,Ct(this,"style."+t,e))).each(di(this._id,t)):this.styleTween(t,gi(t,r,e),n).on("end.style."+t,null)}function mi(t,e,n){return function(r){this.style.setProperty(t,e.call(this,r),n)}}function _i(t,e,n){var r,i;function s(){var o=e.apply(this,arguments);return o!==i&&(r=(i=o)&&mi(t,o,n)),r}return s._value=e,s}function vi(t,e,n){var r="style."+(t+="");if(arguments.length<2)return(r=this.tween(r))&&r._value;if(e==null)return this.tween(r,null);if(typeof e!="function")throw new Error;return this.tween(r,_i(t,e,n??""))}function wi(t){return function(){this.textContent=t}}function xi(t){return function(){var e=t(this);this.textContent=e??""}}function bi(t){return this.tween("text",typeof t=="function"?xi(Ct(this,"text",t)):wi(t==null?"":t+""))}function Ei(t){return function(e){this.textContent=t.call(this,e)}}function Si(t){var e,n;function r(){var i=t.apply(this,arguments);return i!==n&&(e=(n=i)&&Ei(i)),e}return r._value=t,r}function Ci(t){var e="text";if(arguments.length<1)return(e=this.tween(e))&&e._value;if(t==null)return this.tween(e,null);if(typeof t!="function")throw new Error;return this.tween(e,Si(t))}function Ni(){for(var t=this._name,e=this._id,n=he(),r=this._groups,i=r.length,s=0;s<i;++s)for(var o=r[s],a=o.length,l,c=0;c<a;++c)if(l=o[c]){var u=w(l,e);lt(l,t,n,c,o,{time:u.time+u.delay+u.duration,delay:0,duration:u.duration,ease:u.ease})}return new C(r,this._parents,t,n)}function ki(){var t,e,n=this,r=n._id,i=n.size();return new Promise(function(s,o){var a={value:o},l={value:function(){--i===0&&s()}};n.each(function(){var c=b(this,r),u=c.on;u!==t&&(e=(t=u).copy(),e._.cancel.push(a),e._.interrupt.push(a),e._.end.push(l)),c.on=e}),i===0&&s()})}var Ai=0;function C(t,e,n,r){this._groups=t,this._parents=e,this._name=n,this._id=r}function he(){return++Ai}var N=I.prototype;C.prototype={constructor:C,select:li,selectAll:ci,selectChild:N.selectChild,selectChildren:N.selectChildren,filter:ei,merge:ni,selection:fi,transition:Ni,call:N.call,nodes:N.nodes,node:N.node,size:N.size,empty:N.empty,each:N.each,on:si,attr:Hr,attrTween:Yr,style:yi,styleTween:vi,text:bi,textTween:Ci,remove:ai,tween:Tr,delay:Ur,duration:Jr,ease:Zr,easeVarying:ti,end:ki,[Symbol.iterator]:N[Symbol.iterator]};const $i=t=>+t;function Gi(t){return((t*=2)<=1?t*t*t:(t-=2)*t*t+2)/2}var Ri={time:null,delay:0,duration:250,ease:Gi};function Ti(t,e){for(var n;!(n=t.__transition)||!(n=n[e]);)if(!(t=t.parentNode))throw new Error(`transition ${e} not found`);return n}function Vi(t){var e,n;t instanceof C?(e=t._id,t=t._name):(e=he(),(n=Ri).time=wt(),t=t==null?null:t+"");for(var r=this._groups,i=r.length,s=0;s<i;++s)for(var o=r[s],a=o.length,l,c=0;c<a;++c)(l=o[c])&&lt(l,t,e,c,o,n||Ti(l,e));return new C(r,this._parents,t,e)}I.prototype.interrupt=$r,I.prototype.transition=Vi;function B(t,e,n){this.k=t,this.x=e,this.y=n}B.prototype={constructor:B,scale:function(t){return t===1?this:new B(this.k*t,this.x,this.y)},translate:function(t,e){return t===0&e===0?this:new B(this.k,this.x+this.k*t,this.y+this.k*e)},apply:function(t){return[t[0]*this.k+this.x,t[1]*this.k+this.y]},applyX:function(t){return t*this.k+this.x},applyY:function(t){return t*this.k+this.y},invert:function(t){return[(t[0]-this.x)/this.k,(t[1]-this.y)/this.k]},invertX:function(t){return(t-this.x)/this.k},invertY:function(t){return(t-this.y)/this.k},rescaleX:function(t){return t.copy().domain(t.range().map(this.invertX,this).map(t.invert,t))},rescaleY:function(t){return t.copy().domain(t.range().map(this.invertY,this).map(t.invert,t))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}},B.prototype;const p=(t,e)=>{const n=document.querySelector(t);if(n===null)throw new Error("Cannot find selector "+t);if(e!==void 0&&!(n instanceof e))throw new Error(`Selector ${t} not of type ${e}`);return n},Mi=t=>{const e=p("svg.fitts g.big-target1",SVGGElement);t.createCircle(e,40,50,35),t.createCircle(e,40,50,25),t.createCircle(e,40,50,15),t.createCircle(e,40,50,5);const n=p("svg.fitts g.big-target2",SVGGElement);t.createCircle(n,40,50,35),t.createCircle(n,40,50,25),t.createCircle(n,40,50,15),t.createCircle(n,40,50,5);const r=p("svg.fitts g.small-target",SVGGElement);t.createCircle(r,40,50,5)},Fi=t=>{const e=p("svg.purpose g.target",SVGGElement);t.createCircle(e,150,50,40),t.createCircle(e,150,50,30),t.createCircle(e,150,50,20),t.createCircle(e,150,50,10),t.createCircle(e,150,50,1)},Di=t=>{const e=p("svg.hick g.choice-01",SVGGElement);t.createForm(e,"polygon",{points:"0,0 0,0 0,0 0,0"},{points:"0,0 0,40 40,40"},{duration:300,delay:t.getDelay()});const n=p("svg.hick g.choice-02",SVGGElement);t.createForm(n,"polygon",{points:"0,0 0,0 0,0 0,0"},{points:"0,0 0,40 40,40 40,0"},{duration:300,delay:t.getDelay()});const r=p("svg.hick g.choice-03",SVGGElement);t.createForm(r,"polygon",{points:"0,0 0,0 0,0 0,0"},{points:"0,40 40,40 40,0"},{duration:300,delay:t.getDelay()});const i=p("svg.hick g.choice-04",SVGGElement);t.createForm(i,"polygon",{points:"0,0 0,0 0,0 0,0"},{points:"0,0 20,40 40,0"},{duration:300,delay:t.getDelay()});const s=p("svg.hick g.choice-05",SVGGElement);t.createForm(s,"polygon",{points:"0,0 0,0 0,0 0,0"},{points:"0,0 0,40 40,20"},{duration:300,delay:t.getDelay()});const o=p("svg.hick g.choice-06",SVGGElement);t.createForm(o,"polygon",{points:"0,0 0,0 0,0 0,0"},{points:"0,40 40,40 20,0"},{duration:300,delay:t.getDelay()})},Ii=t=>{const e=p("svg.jakob g.app-1",SVGGElement);t.createCircle(e,40,50,35);const n=p("svg.jakob g.app-2",SVGGElement);t.createCircle(n,40,50,35);const r=p("svg.jakob g.your-app",SVGGElement);t.createCircle(r,40,50,35)},Pi=t=>{const e=p("svg.gradient g",SVGGElement);t.createRect(e,5,30,40,40,1),t.createRect(e,50,30,40,40,2),t.createRect(e,95,30,40,40,3),t.createRect(e,140,30,40,40,4),t.createRect(e,185,30,40,40,5),t.createRect(e,230,30,40,40,6)},Hi=t=>{const e=p("svg.gestalt g",SVGGElement);for(let n=0;n<5;n++)for(let r=0;r<4;r++)t.createCircle(e,n*20+100,r*20+20,5,{class:"full",delay:0,duration:300})},qi=t=>{const e=p("svg.proximity g",SVGGElement);for(let n=0;n<5;n++)for(let r=0;r<4;r++){const i=n>1&&r<2?8:0;t.createCircle(e,n*20+100+i,r*20+20-i,5,{class:"full",delay:0,duration:300})}},Xi=t=>{const e=p("svg.similarity g",SVGGElement);for(let n=0;n<5;n++)for(let r=0;r<4;r++){const i=n>1&&r<2?"xxx":"full";t.createCircle(e,n*20+100,r*20+20,5,{class:i,delay:0,duration:300})}},Oi=t=>{const e=p("svg.commonRegion g",SVGGElement);t.createRect(e,100+32,12,57,37,2);for(let n=0;n<5;n++)for(let r=0;r<4;r++)t.createCircle(e,n*20+100,r*20+20,5,{class:"full",delay:0,duration:300})},Li=t=>{const e=p("svg.simplicity g",SVGGElement);t.createRect(e,100+32,12,57,37,2),t.createRect(e,100-8,12,97,77,2)},Yi=t=>{const e=p("svg.miller g",SVGGElement);t.createCircle(e,130,20,5,{class:"full"}),t.createCircle(e,150,20,5,{class:"full"}),t.createCircle(e,170,20,5,{class:"full"}),t.createCircle(e,170,40,5,{class:"full"}),t.createCircle(e,170,60,5,{class:"full"}),t.createCircle(e,170,80,5,{class:"full"})},zi=t=>{const e=p("svg.tesler g",SVGGElement);for(let n=0;n<6;n++)t.createCircle(e,100+n*20,20,5,{class:n>=3?"empty":"full"});for(let n=0;n<6;n++)t.createCircle(e,100+n*20,50,5,{class:n%2?"empty":"full"});for(let n=0;n<6;n++)t.createCircle(e,100+n*20,80,5,{class:n<3?"empty":"full"})},Bi=t=>{const e=p("svg.postel g",SVGGElement);t.createCircle(e,80,50,35,{class:"full"}),t.createCircle(e,220,50,35,{class:"empty"})},Ui=t=>{const e=p("svg.zeigarnik g",SVGGElement);for(let n=1;n<5;n++)t.createRect(e,50,n*15,200,10,6,"emptyrect");t.createRect(e,50,5*15,150,10,6,"fullrect")},Ki=t=>{const e=p("svg.vonRestorff g",SVGGElement);for(let n=0;n<5;n++)for(let r=0;r<4;r++){const i=n===2&&r===2?"xxx":"full";t.createCircle(e,n*20+100,r*20+20,5,{class:i,delay:0,duration:300})}},ct="20,10, 20,20 10,30, 20,40 20,50, 10,50 10,60 20,60 20,70 20,80 10,90",ge={fitts:[Mi],purpose:[Fi],hick:[Di],jakob:[Ii],gradient:[Pi],gestalt:[Hi],proximity:[qi],similarity:[Xi],commonRegion:[Oi],simplicity:[Li],miller:[Yi],tesler:[zi],postel:[Bi],zeigarnik:[Ui],vonRestorff:[Ki],symetrie:[t=>{const e=p(".symetrie svg g",SVGGElement);e.innerHTML=`
<g class="p1" transform="translate(60)"></g>
<g class="p2" transform="translate(80)"></g>
<g class="p3" transform="translate(180)"></g>
<g class="p4" transform="translate(230) scale(-1, 1)"></g>
`;const n=p(".symetrie svg g.p1",SVGGElement);t.createPolyline(n,ct,"empty");const r=p(".symetrie svg g.p2",SVGGElement);t.createPolyline(r,ct,"empty");const i=p(".symetrie svg g.p3",SVGGElement);t.createPolyline(i,ct,"empty");const s=p(".symetrie svg g.p4",SVGGElement);t.createPolyline(s,ct,"empty")}],serialPosition:[t=>{const e=p(".serialPosition svg g",SVGGElement);for(let n=0;n<7;n++){const r=n===0||n===6?"full":"empty";t.createCircle(e,n*40+30,50,20,{class:r,delay:0,duration:300})}}],pareto:[t=>{const e=p(".pareto svg g",SVGGElement);t.createRect(e,50,40,50,20,6,"empty"),t.createRect(e,150,10,100,80,6,"empty")}],peakEnd:[t=>{const e=p(".peakEnd svg g",SVGGElement);for(let n=0;n<5;n++)for(let r=0;r<4;r++){const i=n===1&&r===1||n===4&&r===3?"empty":"full";t.createCircle(e,n*20+100,r*20+20,5,{class:i})}}]},pe=new Set;for(const t of Object.values(ge))for(const e of t)pe.add(e);const Wi=[...pe];class Ji{constructor(){D(this,"delayCounter",0);D(this,"delayIncrement",100);D(this,"useTransition",!1);D(this,"svgName");D(this,"createForm",(e,n,r,i,s)=>{const o={duration:2e3,delay:1e3,class:"",...s};this.useTransition||(o.delay=0,o.duration=0);const a=Zn(e).append(n);for(const[c,u]of Object.entries(r))a.attr(c,u);o.class&&a.attr("class",o.class);const l=a.transition().duration(o.duration).delay(o.delay).ease($i);for(const[c,u]of Object.entries(i))l.attr(c,u)});this.initSvgName()}initSvgName(){const e=window.uxlawImageName,n=window.uxlawClassName,r=e==="default"?n:e;if(r){this.svgName=r,this.useTransition=!0;return}this.useTransition=!1}initSvg(){const e=this.svgName?ge[this.svgName]:Wi;if(e!==void 0)for(const n of e)n(this)}getDelay(){return this.delayCounter+=this.delayIncrement,this.delayCounter}createCircle(e,n,r,i,s){const o={duration:300,delay:this.getDelay(),...s};return this.createForm(e,"circle",{cx:n,cy:r,r:0},{r:i},o)}createPolygon(e,n){return this.createForm(e,"polygon",{points:""},{points:n},{duration:300,delay:this.getDelay()})}createPolyline(e,n,r="full"){return this.createForm(e,"polyline",{points:""},{points:n},{duration:300,delay:this.getDelay(),class:r})}createRect(e,n,r,i,s,o=6,a="empty"){return this.createForm(e,"rect",{x:n,y:r,width:i,height:0,opacity:o*(1/6)},{height:s},{duration:300,delay:this.getDelay(),class:a})}}const Qi=()=>{Zi(),document.documentElement.style.setProperty("--primary-color","hsl(120, 100%, 25%)"),document.documentElement.style.setProperty("--fill-color","hsla(120, 0%, 25%, 0.1)")},Zi=()=>{const t=window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches,e=document.body.classList;t?e.add("dark"):e.add("light"),window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change",n=>{const r=n.matches?"dark":"light";console.log("colorScheme: ",r),e.remove("dark"),e.remove("light"),r==="dark"?e.add("dark"):e.add("light")})};Qi(),new Ji().initSvg()});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
